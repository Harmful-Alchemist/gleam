v8-version,12,7,224,12,0
v8-platform,linux,linux
shared-library,/home/harm/.cargo/bin/deno,0x64950903d000,0x64950e6aa000,0
shared-library,/usr/lib/x86_64-linux-gnu/libc.so.6,0x7d8294c00000,0x7d8294db0000,0
shared-library,/usr/lib/x86_64-linux-gnu/libm.so.6,0x7d8294e30000,0x7d8294ebf000,0
shared-library,/usr/lib/x86_64-linux-gnu/libgcc_s.so.1,0x7d8294f19000,0x7d8294f40000,0
shared-library,/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2,0x7d8294f64000,0x7d8294f90000,0
shared-library,[vdso],0x7ffe50f10000,0x7ffe50f12000,0
shared-library-end
profiler,begin,1000
tick,0x7d8294c98d61,412,0,0x0,6
new,CodeRange,0x64956d800000,0
new,MemoryChunk,0x2c3700000000,262144
new,MemoryChunk,0x2c3700040000,262144
new,MemoryChunk,0x2c3700080000,262144
new,MemoryChunk,0x2c37000c0000,262144
new,MemoryChunk,0x2c3700100000,262144
new,MemoryChunk,0x2c3700140000,262144
new,MemoryChunk,0x2c3700180000,262144
heap-capacity,1048512
heap-available,1493618560
new,MemoryChunk,0x2c37001c0000,262144
tick,0x7d8294d25c1b,1431,0,0x0,6
new,MemoryChunk,0x2c3700200000,262144
new,MemoryChunk,0x2c3700240000,262144
tick,0x64950d5172a3,2511,0,0x0,6
new,MemoryChunk,0x2c3700280000,262144
tick,0x64950d5165fc,3580,0,0x0,6
new,MemoryChunk,0x2c37002c0000,262144
new,MemoryChunk,0x2c3700300000,262144
new,MemoryChunk,0x2c3700340000,262144
tick,0x64950d51662a,4725,0,0x0,6
new,MemoryChunk,0x2c3700380000,262144
tick,0x7d8294d250bb,5710,0,0x0,6
code-creation,Builtin,2,5716,0x64950d825000,1472,DeoptimizationEntry_Eager
code-creation,Builtin,2,5721,0x64950d825600,1476,DeoptimizationEntry_Lazy
code-creation,Builtin,2,5724,0x64950d825c00,2716,RecordWriteSaveFP
code-creation,Builtin,2,5726,0x64950d8266c0,1176,RecordWriteIgnoreFP
code-creation,Builtin,2,5728,0x64950d826b80,332,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,5730,0x64950d826d00,116,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,5732,0x64950d826d80,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,5734,0x64950d826dc0,16,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,5737,0x64950d826e00,16,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,5739,0x64950d826e40,268,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5741,0x64950d826f80,312,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5744,0x64950d8270c0,352,CallFunction_ReceiverIsAny
code-creation,Builtin,2,5746,0x64950d827240,116,CallBoundFunction
code-creation,Builtin,2,5748,0x64950d8272c0,992,CallWrappedFunction
code-creation,Builtin,2,5750,0x64950d8276c0,176,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5752,0x64950d827780,176,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5755,0x64950d827840,176,Call_ReceiverIsAny
code-creation,Builtin,2,5757,0x64950d827900,1040,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5759,0x64950d827d40,968,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,5762,0x64950d828140,1064,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5765,0x64950d828580,1056,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,5767,0x64950d8289c0,1064,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,5769,0x64950d828e00,1056,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,5772,0x64950d829240,960,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,5774,0x64950d829640,960,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,5777,0x64950d829a40,960,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,5779,0x64950d829e40,752,CallProxy
code-creation,Builtin,2,5781,0x64950d82a140,124,CallVarargs
code-creation,Builtin,2,5783,0x64950d82a1c0,1164,CallWithSpread
code-creation,Builtin,2,5785,0x64950d82a680,2128,CallWithSpread_Baseline
code-creation,Builtin,2,5787,0x64950d82af00,2164,CallWithSpread_WithFeedback
code-creation,Builtin,2,5789,0x64950d82b780,1128,CallWithArrayLike
code-creation,Builtin,2,5791,0x64950d82bc00,2120,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,5793,0x64950d82c480,124,CallForwardVarargs
code-creation,Builtin,2,5795,0x64950d82c500,124,CallFunctionForwardVarargs
code-creation,Builtin,2,5802,0x64950d82c580,484,CallFunctionTemplate_Generic
code-creation,Builtin,2,5804,0x64950d82c780,156,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,5807,0x64950d82c840,416,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,5809,0x64950d82ca00,476,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,5812,0x64950d82cc00,32,ConstructFunction
code-creation,Builtin,2,5814,0x64950d82cc40,116,ConstructBoundFunction
code-creation,Builtin,2,5816,0x64950d82ccc0,28,ConstructedNonConstructable
code-creation,Builtin,2,5818,0x64950d82cd00,108,Construct
code-creation,Builtin,2,5820,0x64950d82cd80,124,ConstructVarargs
code-creation,Builtin,2,5822,0x64950d82ce00,1192,ConstructWithSpread
code-creation,Builtin,2,5824,0x64950d82d2c0,2016,ConstructWithSpread_Baseline
code-creation,Builtin,2,5826,0x64950d82dac0,2016,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,5829,0x64950d82e2c0,1212,ConstructWithArrayLike
code-creation,Builtin,2,5831,0x64950d82e780,164,ConstructForwardVarargs
code-creation,Builtin,2,5833,0x64950d82e840,80,ConstructForwardAllArgs
code-creation,Builtin,2,5835,0x64950d82e8c0,772,ConstructForwardAllArgs_Baseline
code-creation,Builtin,2,5837,0x64950d82ec00,764,ConstructForwardAllArgs_WithFeedback
code-creation,Builtin,2,5840,0x64950d82ef00,164,ConstructFunctionForwardVarargs
code-creation,Builtin,2,5842,0x64950d82efc0,864,Construct_Baseline
code-creation,Builtin,2,5844,0x64950d82f340,876,Construct_WithFeedback
code-creation,Builtin,2,5846,0x64950d82f6c0,412,JSConstructStubGeneric
code-creation,Builtin,2,5848,0x64950d82f880,304,JSBuiltinsConstructStub
code-creation,Builtin,2,5850,0x64950d82f9c0,920,FastNewObject
code-creation,Builtin,2,5852,0x64950d82fd80,364,FastNewClosure
code-creation,Builtin,2,5854,0x64950d82ff00,780,ConstructProxy
code-creation,Builtin,2,5856,0x64950d830240,228,JSEntry
code-creation,Builtin,2,5858,0x64950d830340,228,JSConstructEntry
code-creation,Builtin,2,5860,0x64950d830440,228,JSRunMicrotasksEntry
code-creation,Builtin,2,5862,0x64950d830540,100,JSEntryTrampoline
code-creation,Builtin,2,5864,0x64950d8305c0,100,JSConstructEntryTrampoline
code-creation,Builtin,2,5866,0x64950d830640,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,5868,0x64950d830780,1424,StringFromCodePointAt
code-creation,Builtin,2,5870,0x64950d830d40,940,StringEqual
code-creation,Builtin,2,5872,0x64950d831100,388,StringGreaterThan
code-creation,Builtin,2,5874,0x64950d8312c0,388,StringGreaterThanOrEqual
code-creation,Builtin,2,5876,0x64950d831480,388,StringLessThan
code-creation,Builtin,2,5878,0x64950d831640,388,StringLessThanOrEqual
code-creation,Builtin,2,5880,0x64950d831800,380,StringCompare
code-creation,Builtin,2,5882,0x64950d831980,3624,StringSubstring
code-creation,Builtin,2,5884,0x64950d8327c0,108,OrderedHashTableHealIndex
code-creation,Builtin,2,5886,0x64950d832840,872,InterpreterEntryTrampoline
code-creation,Builtin,2,5889,0x64950d832bc0,884,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,5891,0x64950d832f40,80,InterpreterForwardAllArgsThenConstruct
code-creation,Builtin,2,5894,0x64950d832fc0,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,5896,0x64950d833040,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,5898,0x64950d8330c0,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,5901,0x64950d833140,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,5903,0x64950d8331c0,672,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,5906,0x64950d833480,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,5908,0x64950d833500,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,5911,0x64950d833580,92,InterpreterEnterAtBytecode
code-creation,Builtin,2,5913,0x64950d833600,228,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,5916,0x64950d833700,100,InterpreterOnStackReplacement
code-creation,Builtin,2,5918,0x64950d833780,392,BaselineOutOfLinePrologue
code-creation,Builtin,2,5920,0x64950d833940,20,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,5924,0x64950d833980,104,BaselineOnStackReplacement
code-creation,Builtin,2,5926,0x64950d833a00,72,BaselineLeaveFrame
code-creation,Builtin,2,5928,0x64950d833a80,232,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,5931,0x64950d833b80,240,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,5933,0x64950d833c80,200,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,5936,0x64950d833d80,36,MaglevOnStackReplacement
code-creation,Builtin,2,5938,0x64950d833dc0,32,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,5941,0x64950d833e00,32,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,5943,0x64950d833e40,252,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,5946,0x64950d833f40,1044,CompileLazy
code-creation,Builtin,2,5948,0x64950d834380,80,CompileLazyDeoptimizedCode
code-creation,Builtin,2,5950,0x64950d834400,228,InstantiateAsmJs
code-creation,Builtin,2,5952,0x64950d834500,32,NotifyDeoptimized
code-creation,Builtin,2,5954,0x64950d834540,48,ContinueToCodeStubBuiltin
code-creation,Builtin,2,5956,0x64950d834580,56,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,5959,0x64950d8345c0,48,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,5961,0x64950d834600,56,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,5963,0x64950d834640,312,CallApiCallbackGeneric
code-creation,Builtin,2,5965,0x64950d834780,276,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,5968,0x64950d8348c0,300,CallApiCallbackOptimized
code-creation,Builtin,2,5970,0x64950d834a00,292,CallApiGetter
code-creation,Builtin,2,5972,0x64950d834b40,36,HandleApiCallOrConstruct
code-creation,Builtin,2,5974,0x64950d834b80,12,HandleApiConstruct
code-creation,Builtin,2,5976,0x64950d834bc0,12,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,5978,0x64950d834c00,12,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,5981,0x64950d834c40,52,AllocateInYoungGeneration
code-creation,Builtin,2,5983,0x64950d834c80,52,AllocateInOldGeneration
code-creation,Builtin,2,5985,0x64950d834cc0,52,WasmAllocateInYoungGeneration
code-creation,Builtin,2,5987,0x64950d834d00,52,WasmAllocateInOldGeneration
code-creation,Builtin,2,5989,0x64950d834d40,136,NewHeapNumber
code-creation,Builtin,2,5991,0x64950d834e00,660,CopyFastSmiOrObjectElements
code-creation,Builtin,2,5993,0x64950d8350c0,548,GrowFastDoubleElements
code-creation,Builtin,2,5996,0x64950d835300,492,GrowFastSmiOrObjectElements
code-creation,Builtin,2,5998,0x64950d835500,468,DebugBreakTrampoline
code-creation,Builtin,2,6000,0x64950d835700,244,RestartFrameTrampoline
code-creation,Builtin,2,6002,0x64950d835800,192,ToNumber
code-creation,Builtin,2,6004,0x64950d835900,80,ToBigInt
code-creation,Builtin,2,6005,0x64950d835980,288,ToNumber_Baseline
code-creation,Builtin,2,6007,0x64950d835ac0,344,ToNumeric_Baseline
code-creation,Builtin,2,6009,0x64950d835c40,104,PlainPrimitiveToNumber
code-creation,Builtin,2,6012,0x64950d835cc0,228,ToNumberConvertBigInt
code-creation,Builtin,2,6014,0x64950d835dc0,60,ToBigIntConvertNumber
code-creation,Builtin,2,6016,0x64950d835e00,188,Typeof
code-creation,Builtin,2,6018,0x64950d835ec0,444,Typeof_Baseline
code-creation,Builtin,2,6020,0x64950d836080,104,BigIntToI64
code-creation,Builtin,2,6021,0x64950d836100,4,BigIntToI32Pair
code-creation,Builtin,2,6023,0x64950d836140,200,I64ToBigInt
code-creation,Builtin,2,6025,0x64950d836240,4,I32PairToBigInt
code-creation,Builtin,2,6027,0x64950d836280,128,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,6029,0x64950d836340,348,MathCeilContinuation
code-creation,Builtin,2,6031,0x64950d8364c0,352,MathFloorContinuation
code-creation,Builtin,2,6033,0x64950d836640,400,MathRoundContinuation
code-creation,Builtin,2,6036,0x64950d836800,4088,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,6038,0x64950d837800,25060,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,6040,0x64950d83da00,14604,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,6042,0x64950d841340,740,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,6044,0x64950d841640,76,LoadIC_FunctionPrototype
code-creation,Builtin,2,6048,0x64950d8416c0,8,LoadIC_StringLength
code-creation,Builtin,2,6050,0x64950d841700,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,6052,0x64950d841740,4296,LoadIC_NoFeedback
code-creation,Builtin,2,6054,0x64950d842840,32,StoreGlobalIC_Slow
code-creation,Builtin,2,6056,0x64950d842880,8960,StoreIC_NoFeedback
code-creation,Builtin,2,6058,0x64950d844bc0,4804,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,6060,0x64950d845ec0,208,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,6063,0x64950d845fc0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,6065,0x64950d846040,272,KeyedStoreIC_SloppyArguments_InBounds
code-creation,Builtin,2,6067,0x64950d846180,272,KeyedStoreIC_SloppyArguments_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,6070,0x64950d8462c0,272,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,6073,0x64950d846400,272,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,6076,0x64950d846540,18440,StoreFastElementIC_InBounds
code-creation,Builtin,2,6078,0x64950d84ad80,12136,StoreFastElementIC_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,6081,0x64950d84dd00,17376,StoreFastElementIC_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,6083,0x64950d852100,7896,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,6086,0x64950d854000,9516,ElementsTransitionAndStore_InBounds
code-creation,Builtin,2,6088,0x64950d856540,22328,ElementsTransitionAndStore_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,6091,0x64950d85bc80,9516,ElementsTransitionAndStore_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,6094,0x64950d85e1c0,13408,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,6097,0x64950d861640,1240,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,6099,0x64950d861b40,180,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,6101,0x64950d861c00,68,HasIndexedInterceptorIC
code-creation,Builtin,2,6103,0x64950d861c80,164,EnqueueMicrotask
code-creation,Builtin,2,6105,0x64950d861d40,8,RunMicrotasksTrampoline
code-creation,Builtin,2,6108,0x64950d861d80,3684,RunMicrotasks
code-creation,Builtin,2,6109,0x64950d862c00,3640,HasProperty
code-creation,Builtin,2,6111,0x64950d863a40,1504,DeleteProperty
code-creation,Builtin,2,6113,0x64950d864040,2644,CopyDataProperties
code-creation,Builtin,2,6115,0x64950d864ac0,11536,SetDataProperties
code-creation,Builtin,2,6117,0x64950d867800,3716,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,6120,0x64950d8686c0,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,6123,0x64950d868700,28,Abort
code-creation,Builtin,2,6124,0x64950d868740,28,AbortCSADcheck
code-creation,Builtin,2,6126,0x64950d868780,12,EmptyFunction
code-creation,Builtin,2,6128,0x64950d8687c0,12,Illegal
code-creation,Builtin,2,6130,0x64950d868800,12,StrictPoisonPillThrower
code-creation,Builtin,2,6132,0x64950d868840,12,UnsupportedThrower
code-creation,Builtin,2,6134,0x64950d868880,60,ReturnReceiver
code-creation,Builtin,2,6136,0x64950d8688c0,36,ArrayConstructor
code-creation,Builtin,2,6138,0x64950d868900,356,ArrayConstructorImpl
code-creation,Builtin,2,6140,0x64950d868a80,200,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,6143,0x64950d868b80,200,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,6146,0x64950d868c80,160,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,6148,0x64950d868d40,160,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,6151,0x64950d868e00,160,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,6154,0x64950d868ec0,160,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,6157,0x64950d868f80,176,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,6160,0x64950d869040,176,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,6163,0x64950d869100,940,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,6167,0x64950d8694c0,896,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,6170,0x64950d869880,860,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,6173,0x64950d869c00,816,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,6176,0x64950d869f40,860,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,6179,0x64950d86a2c0,816,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,6182,0x64950d86a600,936,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,6185,0x64950d86a9c0,892,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,6188,0x64950d86ad40,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,6190,0x64950d86ad80,12,ArrayConcat
code-creation,Builtin,2,6192,0x64950d86adc0,12,ArrayPrototypeFill
code-creation,Builtin,2,6194,0x64950d86ae00,1892,ArrayIncludesSmi
code-creation,Builtin,2,6196,0x64950d86b580,1828,ArrayIncludesSmiOrObject
code-creation,Builtin,2,6198,0x64950d86bcc0,380,ArrayIncludesPackedDoubles
code-creation,Builtin,2,6200,0x64950d86be40,436,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,6202,0x64950d86c000,588,ArrayIncludes
code-creation,Builtin,2,6204,0x64950d86c280,1680,ArrayIndexOfSmi
code-creation,Builtin,2,6206,0x64950d86c940,1680,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,6208,0x64950d86d000,252,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,6211,0x64950d86d100,252,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,6213,0x64950d86d200,588,ArrayIndexOf
code-creation,Builtin,2,6215,0x64950d86d480,12,ArrayPop
code-creation,Builtin,2,6216,0x64950d86d4c0,580,ArrayPrototypePop
code-creation,Builtin,2,6218,0x64950d86d740,12,ArrayPush
code-creation,Builtin,2,6220,0x64950d86d780,3104,ArrayPrototypePush
code-creation,Builtin,2,6222,0x64950d86e3c0,12,ArrayShift
code-creation,Builtin,2,6224,0x64950d86e400,12,ArrayUnshift
code-creation,Builtin,2,6226,0x64950d86e440,1292,CloneFastJSArray
code-creation,Builtin,2,6228,0x64950d86e980,2876,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,6230,0x64950d86f4c0,1312,ExtractFastJSArray
code-creation,Builtin,2,6232,0x64950d86fa00,120,CreateArrayFromSlowBoilerplate
code-creation,Builtin,2,6234,0x64950d86fa80,120,CreateObjectFromSlowBoilerplate
code-creation,Builtin,2,6237,0x64950d86fb00,2352,CreateArrayFromSlowBoilerplateHelper
code-creation,Builtin,2,6239,0x64950d870440,3388,CreateObjectFromSlowBoilerplateHelper
code-creation,Builtin,2,6242,0x64950d871180,244,ArrayPrototypeEntries
code-creation,Builtin,2,6244,0x64950d871280,244,ArrayPrototypeKeys
code-creation,Builtin,2,6246,0x64950d871380,244,ArrayPrototypeValues
code-creation,Builtin,2,6248,0x64950d871480,4600,ArrayIteratorPrototypeNext
code-creation,Builtin,2,6250,0x64950d872680,12,ArrayBufferConstructor
code-creation,Builtin,2,6252,0x64950d8726c0,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,6255,0x64950d872700,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,6257,0x64950d872740,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,6259,0x64950d872780,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,6261,0x64950d8727c0,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,6264,0x64950d872800,1208,AsyncFunctionEnter
code-creation,Builtin,2,6266,0x64950d872cc0,44,AsyncFunctionReject
code-creation,Builtin,2,6268,0x64950d872d00,36,AsyncFunctionResolve
code-creation,Builtin,2,6270,0x64950d872d40,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,6272,0x64950d872d80,1832,AsyncFunctionAwait
code-creation,Builtin,2,6274,0x64950d8734c0,112,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,6277,0x64950d873540,112,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,6279,0x64950d8735c0,12,BigIntConstructor
code-creation,Builtin,2,6281,0x64950d873600,12,BigIntAsUintN
code-creation,Builtin,2,6283,0x64950d873640,12,BigIntAsIntN
code-creation,Builtin,2,6285,0x64950d873680,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,6288,0x64950d8736c0,12,BigIntPrototypeToString
code-creation,Builtin,2,6290,0x64950d873700,12,BigIntPrototypeValueOf
code-creation,Builtin,2,6293,0x64950d873740,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,6295,0x64950d873780,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,6297,0x64950d8737c0,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,6300,0x64950d873800,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,6302,0x64950d873840,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,6304,0x64950d873880,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,6307,0x64950d8738c0,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,6309,0x64950d873900,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,6311,0x64950d873940,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,6313,0x64950d873980,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,6316,0x64950d8739c0,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,6318,0x64950d873a00,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,6320,0x64950d873a40,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,6323,0x64950d873a80,12,CallSitePrototypeGetThis
code-creation,Builtin,2,6325,0x64950d873ac0,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,6327,0x64950d873b00,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,6329,0x64950d873b40,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,6332,0x64950d873b80,12,CallSitePrototypeIsEval
code-creation,Builtin,2,6334,0x64950d873bc0,12,CallSitePrototypeIsNative
code-creation,Builtin,2,6336,0x64950d873c00,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,6338,0x64950d873c40,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,6340,0x64950d873c80,12,CallSitePrototypeToString
code-creation,Builtin,2,6342,0x64950d873cc0,12,ConsoleDebug
code-creation,Builtin,2,6344,0x64950d873d00,12,ConsoleError
code-creation,Builtin,2,6346,0x64950d873d40,12,ConsoleInfo
code-creation,Builtin,2,6348,0x64950d873d80,12,ConsoleLog
code-creation,Builtin,2,6350,0x64950d873dc0,12,ConsoleWarn
code-creation,Builtin,2,6352,0x64950d873e00,12,ConsoleDir
code-creation,Builtin,2,6353,0x64950d873e40,12,ConsoleDirXml
code-creation,Builtin,2,6355,0x64950d873e80,12,ConsoleTable
code-creation,Builtin,2,6357,0x64950d873ec0,12,ConsoleTrace
code-creation,Builtin,2,6359,0x64950d873f00,12,ConsoleGroup
code-creation,Builtin,2,6361,0x64950d873f40,12,ConsoleGroupCollapsed
code-creation,Builtin,2,6363,0x64950d873f80,12,ConsoleGroupEnd
code-creation,Builtin,2,6365,0x64950d873fc0,12,ConsoleClear
code-creation,Builtin,2,6367,0x64950d874000,12,ConsoleCount
code-creation,Builtin,2,6369,0x64950d874040,12,ConsoleCountReset
code-creation,Builtin,2,6371,0x64950d874080,12,ConsoleAssert
code-creation,Builtin,2,6372,0x64950d8740c0,12,ConsoleProfile
code-creation,Builtin,2,6374,0x64950d874100,12,ConsoleProfileEnd
code-creation,Builtin,2,6376,0x64950d874140,12,ConsoleTime
code-creation,Builtin,2,6378,0x64950d874180,12,ConsoleTimeLog
code-creation,Builtin,2,6380,0x64950d8741c0,12,ConsoleTimeEnd
code-creation,Builtin,2,6382,0x64950d874200,12,ConsoleTimeStamp
code-creation,Builtin,2,6384,0x64950d874240,12,ConsoleContext
code-creation,Builtin,2,6386,0x64950d874280,12,DataViewConstructor
code-creation,Builtin,2,6388,0x64950d8742c0,12,DateConstructor
code-creation,Builtin,2,6390,0x64950d874300,212,DatePrototypeGetDate
code-creation,Builtin,2,6392,0x64950d874400,212,DatePrototypeGetDay
code-creation,Builtin,2,6394,0x64950d874500,212,DatePrototypeGetFullYear
code-creation,Builtin,2,6396,0x64950d874600,212,DatePrototypeGetHours
code-creation,Builtin,2,6398,0x64950d874700,192,DatePrototypeGetMilliseconds
code-creation,Builtin,2,6400,0x64950d874800,212,DatePrototypeGetMinutes
code-creation,Builtin,2,6402,0x64950d874900,212,DatePrototypeGetMonth
code-creation,Builtin,2,6405,0x64950d874a00,212,DatePrototypeGetSeconds
code-creation,Builtin,2,6407,0x64950d874b00,124,DatePrototypeGetTime
code-creation,Builtin,2,6410,0x64950d874b80,192,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,6412,0x64950d874c80,192,DatePrototypeGetUTCDate
code-creation,Builtin,2,6414,0x64950d874d80,192,DatePrototypeGetUTCDay
code-creation,Builtin,2,6417,0x64950d874e80,192,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,6419,0x64950d874f80,192,DatePrototypeGetUTCHours
code-creation,Builtin,2,6421,0x64950d875080,192,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,6423,0x64950d875180,192,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,6425,0x64950d875280,192,DatePrototypeGetUTCMonth
code-creation,Builtin,2,6427,0x64950d875380,192,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,6430,0x64950d875480,124,DatePrototypeValueOf
code-creation,Builtin,2,6432,0x64950d875500,424,DatePrototypeToPrimitive
code-creation,Builtin,2,6434,0x64950d8756c0,12,DatePrototypeGetYear
code-creation,Builtin,2,6436,0x64950d875700,12,DatePrototypeSetYear
code-creation,Builtin,2,6438,0x64950d875740,12,DateNow
code-creation,Builtin,2,6440,0x64950d875780,12,DateParse
code-creation,Builtin,2,6442,0x64950d8757c0,12,DatePrototypeSetDate
code-creation,Builtin,2,6444,0x64950d875800,12,DatePrototypeSetFullYear
code-creation,Builtin,2,6446,0x64950d875840,12,DatePrototypeSetHours
code-creation,Builtin,2,6448,0x64950d875880,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,6450,0x64950d8758c0,12,DatePrototypeSetMinutes
code-creation,Builtin,2,6452,0x64950d875900,12,DatePrototypeSetMonth
code-creation,Builtin,2,6454,0x64950d875940,12,DatePrototypeSetSeconds
code-creation,Builtin,2,6456,0x64950d875980,12,DatePrototypeSetTime
code-creation,Builtin,2,6458,0x64950d8759c0,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,6460,0x64950d875a00,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,6463,0x64950d875a40,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,6465,0x64950d875a80,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,6467,0x64950d875ac0,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,6469,0x64950d875b00,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,6471,0x64950d875b40,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,6473,0x64950d875b80,12,DatePrototypeToDateString
code-creation,Builtin,2,6476,0x64950d875bc0,12,DatePrototypeToISOString
code-creation,Builtin,2,6478,0x64950d875c00,12,DatePrototypeToUTCString
code-creation,Builtin,2,6480,0x64950d875c40,12,DatePrototypeToString
code-creation,Builtin,2,6482,0x64950d875c80,12,DatePrototypeToTimeString
code-creation,Builtin,2,6484,0x64950d875cc0,12,DatePrototypeToJson
code-creation,Builtin,2,6486,0x64950d875d00,12,DateUTC
code-creation,Builtin,2,6488,0x64950d875d40,12,DisposableStackConstructor
code-creation,Builtin,2,6490,0x64950d875d80,12,DisposableStackPrototypeUse
code-creation,Builtin,2,6492,0x64950d875dc0,12,DisposableStackPrototypeDispose
code-creation,Builtin,2,6495,0x64950d875e00,12,DisposableStackPrototypeGetDisposed
code-creation,Builtin,2,6497,0x64950d875e40,12,DisposableStackPrototypeAdopt
code-creation,Builtin,2,6499,0x64950d875e80,12,DisposableStackPrototypeDefer
code-creation,Builtin,2,6501,0x64950d875ec0,12,DisposableStackPrototypeMove
code-creation,Builtin,2,6504,0x64950d875f00,12,ErrorConstructor
code-creation,Builtin,2,6506,0x64950d875f40,12,ErrorCaptureStackTrace
code-creation,Builtin,2,6508,0x64950d875f80,12,ErrorPrototypeToString
code-creation,Builtin,2,6510,0x64950d875fc0,12,FunctionConstructor
code-creation,Builtin,2,6512,0x64950d876000,80,FunctionPrototypeApply
code-creation,Builtin,2,6514,0x64950d876080,12,FunctionPrototypeBind
code-creation,Builtin,2,6516,0x64950d8760c0,12,WebAssemblyFunctionPrototypeBind
code-creation,Builtin,2,6518,0x64950d876100,36,FunctionPrototypeCall
code-creation,Builtin,2,6520,0x64950d876140,12,FunctionPrototypeToString
code-creation,Builtin,2,6522,0x64950d876180,244,CreateIterResultObject
code-creation,Builtin,2,6525,0x64950d876280,1092,CreateGeneratorObject
code-creation,Builtin,2,6527,0x64950d876700,12,GeneratorFunctionConstructor
code-creation,Builtin,2,6529,0x64950d876740,368,GeneratorPrototypeNext
code-creation,Builtin,2,6531,0x64950d8768c0,364,GeneratorPrototypeReturn
code-creation,Builtin,2,6535,0x64950d876a40,364,GeneratorPrototypeThrow
code-creation,Builtin,2,6537,0x64950d876bc0,12,AsyncFunctionConstructor
code-creation,Builtin,2,6539,0x64950d876c00,468,SuspendGeneratorBaseline
code-creation,Builtin,2,6541,0x64950d876e00,108,ResumeGeneratorBaseline
code-creation,Builtin,2,6543,0x64950d876e80,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,6546,0x64950d876ec0,84,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,6549,0x64950d876f40,12,GlobalDecodeURI
code-creation,Builtin,2,6551,0x64950d876f80,12,GlobalDecodeURIComponent
code-creation,Builtin,2,6553,0x64950d876fc0,12,GlobalEncodeURI
code-creation,Builtin,2,6555,0x64950d877000,12,GlobalEncodeURIComponent
code-creation,Builtin,2,6557,0x64950d877040,12,GlobalEscape
code-creation,Builtin,2,6559,0x64950d877080,12,GlobalUnescape
code-creation,Builtin,2,6561,0x64950d8770c0,12,GlobalEval
code-creation,Builtin,2,6562,0x64950d877100,176,GlobalIsFinite
code-creation,Builtin,2,6564,0x64950d8771c0,168,GlobalIsNaN
code-creation,Builtin,2,6566,0x64950d877280,12,JsonParse
code-creation,Builtin,2,6568,0x64950d8772c0,12,JsonStringify
code-creation,Builtin,2,6570,0x64950d877300,12,JsonRawJson
code-creation,Builtin,2,6572,0x64950d877340,12,JsonIsRawJson
code-creation,Builtin,2,6574,0x64950d877380,4680,LoadIC
code-creation,Builtin,2,6575,0x64950d878600,4304,LoadIC_Megamorphic
code-creation,Builtin,2,6577,0x64950d879700,4504,LoadIC_Noninlined
code-creation,Builtin,2,6579,0x64950d87a8c0,48,LoadICTrampoline
code-creation,Builtin,2,6581,0x64950d87a900,24,LoadICBaseline
code-creation,Builtin,2,6583,0x64950d87a940,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,6585,0x64950d87a980,9488,LoadSuperIC
code-creation,Builtin,2,6587,0x64950d87cec0,24,LoadSuperICBaseline
code-creation,Builtin,2,6589,0x64950d87cf00,9172,KeyedLoadIC
code-creation,Builtin,2,6591,0x64950d87f300,9676,EnumeratedKeyedLoadIC
code-creation,Builtin,2,6593,0x64950d881900,16916,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,6595,0x64950d885b40,48,KeyedLoadICTrampoline
code-creation,Builtin,2,6597,0x64950d885b80,24,KeyedLoadICBaseline
code-creation,Builtin,2,6600,0x64950d885bc0,28,EnumeratedKeyedLoadICBaseline
code-creation,Builtin,2,6602,0x64950d885c00,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,6604,0x64950d885c40,5972,StoreGlobalIC
code-creation,Builtin,2,6606,0x64950d8873c0,48,StoreGlobalICTrampoline
code-creation,Builtin,2,6608,0x64950d887400,24,StoreGlobalICBaseline
code-creation,Builtin,2,6610,0x64950d887440,6512,StoreIC
code-creation,Builtin,2,6612,0x64950d888dc0,6268,StoreIC_Megamorphic
code-creation,Builtin,2,6614,0x64950d88a640,48,StoreICTrampoline
code-creation,Builtin,2,6616,0x64950d88a680,48,StoreICTrampoline_Megamorphic
code-creation,Builtin,2,6618,0x64950d88a6c0,24,StoreICBaseline
code-creation,Builtin,2,6620,0x64950d88a700,6304,DefineNamedOwnIC
code-creation,Builtin,2,6622,0x64950d88bfc0,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,6624,0x64950d88c000,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,6627,0x64950d88c040,7212,KeyedStoreIC
code-creation,Builtin,2,6629,0x64950d88dc80,48,KeyedStoreICTrampoline
code-creation,Builtin,2,6631,0x64950d88dcc0,48,KeyedStoreICTrampoline_Megamorphic
code-creation,Builtin,2,6633,0x64950d88dd00,24,KeyedStoreICBaseline
code-creation,Builtin,2,6635,0x64950d88dd40,6816,DefineKeyedOwnIC
code-creation,Builtin,2,6637,0x64950d88f800,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,6639,0x64950d88f840,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,6641,0x64950d88f880,348,StoreInArrayLiteralIC
code-creation,Builtin,2,6643,0x64950d88fa00,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,6646,0x64950d88fa40,192,LookupContextTrampoline
code-creation,Builtin,2,6648,0x64950d88fb40,200,LookupContextBaseline
code-creation,Builtin,2,6650,0x64950d88fc40,192,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,6652,0x64950d88fd40,200,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,6655,0x64950d88fe40,2976,LoadGlobalIC
code-creation,Builtin,2,6658,0x64950d890a00,2952,LoadGlobalICInsideTypeof
code-creation,Builtin,2,6660,0x64950d8915c0,48,LoadGlobalICTrampoline
code-creation,Builtin,2,6662,0x64950d891600,24,LoadGlobalICBaseline
code-creation,Builtin,2,6664,0x64950d891640,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,6666,0x64950d891680,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,6669,0x64950d8916c0,184,LookupGlobalIC
code-creation,Builtin,2,6671,0x64950d891780,220,LookupGlobalICTrampoline
code-creation,Builtin,2,6673,0x64950d891880,196,LookupGlobalICBaseline
code-creation,Builtin,2,6675,0x64950d891980,184,LookupGlobalICInsideTypeof
code-creation,Builtin,2,6677,0x64950d891a40,220,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,6680,0x64950d891b40,196,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,6682,0x64950d891c40,3368,CloneObjectIC
code-creation,Builtin,2,6684,0x64950d892980,24,CloneObjectICBaseline
code-creation,Builtin,2,6686,0x64950d8929c0,2872,CloneObjectIC_Slow
code-creation,Builtin,2,6688,0x64950d893500,3308,KeyedHasIC
code-creation,Builtin,2,6690,0x64950d894200,24,KeyedHasICBaseline
code-creation,Builtin,2,6692,0x64950d894240,3640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,6694,0x64950d895080,1924,IterableToList
code-creation,Builtin,2,6696,0x64950d895840,1728,IterableToFixedArray
code-creation,Builtin,2,6698,0x64950d895f40,792,IterableToListWithSymbolLookup
code-creation,Builtin,2,6700,0x64950d896280,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,6703,0x64950d8962c0,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,6705,0x64950d896340,112,IterableToListConvertHoles
code-creation,Builtin,2,6707,0x64950d8963c0,1368,IterableToFixedArrayForWasm
code-creation,Builtin,2,6709,0x64950d896940,1840,StringListFromIterable
code-creation,Builtin,2,6711,0x64950d897080,1412,FindOrderedHashMapEntry
code-creation,Builtin,2,6713,0x64950d897640,4936,MapConstructor
code-creation,Builtin,2,6715,0x64950d8989c0,2072,MapPrototypeSet
code-creation,Builtin,2,6717,0x64950d899200,1664,MapPrototypeDelete
code-creation,Builtin,2,6719,0x64950d8998c0,208,MapPrototypeGet
code-creation,Builtin,2,6721,0x64950d8999c0,168,MapPrototypeHas
code-creation,Builtin,2,6723,0x64950d899a80,12,MapPrototypeClear
code-creation,Builtin,2,6725,0x64950d899ac0,284,MapPrototypeEntries
code-creation,Builtin,2,6727,0x64950d899c00,144,MapPrototypeGetSize
code-creation,Builtin,2,6729,0x64950d899cc0,560,MapPrototypeForEach
code-creation,Builtin,2,6731,0x64950d899f00,284,MapPrototypeKeys
code-creation,Builtin,2,6733,0x64950d89a040,284,MapPrototypeValues
code-creation,Builtin,2,6735,0x64950d89a180,924,MapIteratorPrototypeNext
code-creation,Builtin,2,6737,0x64950d89a540,1324,MapIteratorToList
code-creation,Builtin,2,6739,0x64950d89aa80,12,NumberPrototypeToExponential
code-creation,Builtin,2,6741,0x64950d89aac0,12,NumberPrototypeToFixed
code-creation,Builtin,2,6743,0x64950d89ab00,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,6746,0x64950d89ab40,12,NumberPrototypeToPrecision
code-creation,Builtin,2,6748,0x64950d89ab80,348,SameValue
code-creation,Builtin,2,6750,0x64950d89ad00,184,SameValueNumbersOnly
code-creation,Builtin,2,6752,0x64950d89adc0,1380,Add_Baseline
code-creation,Builtin,2,6754,0x64950d89b340,1096,AddSmi_Baseline
code-creation,Builtin,2,6756,0x64950d89b7c0,1248,Subtract_Baseline
code-creation,Builtin,2,6758,0x64950d89bcc0,992,SubtractSmi_Baseline
code-creation,Builtin,2,6760,0x64950d89c0c0,1444,Multiply_Baseline
code-creation,Builtin,2,6762,0x64950d89c680,1180,MultiplySmi_Baseline
code-creation,Builtin,2,6764,0x64950d89cb40,1400,Divide_Baseline
code-creation,Builtin,2,6766,0x64950d89d0c0,1176,DivideSmi_Baseline
code-creation,Builtin,2,6768,0x64950d89d580,1444,Modulus_Baseline
code-creation,Builtin,2,6770,0x64950d89db40,1172,ModulusSmi_Baseline
code-creation,Builtin,2,6772,0x64950d89e000,744,Exponentiate_Baseline
code-creation,Builtin,2,6774,0x64950d89e300,644,ExponentiateSmi_Baseline
code-creation,Builtin,2,6776,0x64950d89e5c0,1680,BitwiseAnd_Baseline
code-creation,Builtin,2,6779,0x64950d89ec80,520,BitwiseAndSmi_Baseline
code-creation,Builtin,2,6781,0x64950d89eec0,1680,BitwiseOr_Baseline
code-creation,Builtin,2,6788,0x64950d89f580,520,BitwiseOrSmi_Baseline
code-creation,Builtin,2,6790,0x64950d89f7c0,1680,BitwiseXor_Baseline
code-creation,Builtin,2,6792,0x64950d89fe80,520,BitwiseXorSmi_Baseline
code-creation,Builtin,2,6794,0x64950d8a00c0,1196,ShiftLeft_Baseline
code-creation,Builtin,2,6796,0x64950d8a0580,656,ShiftLeftSmi_Baseline
code-creation,Builtin,2,6798,0x64950d8a0840,1196,ShiftRight_Baseline
code-creation,Builtin,2,6800,0x64950d8a0d00,528,ShiftRightSmi_Baseline
code-creation,Builtin,2,6802,0x64950d8a0f40,1136,ShiftRightLogical_Baseline
code-creation,Builtin,2,6804,0x64950d8a13c0,664,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,6807,0x64950d8a1680,1300,Add_WithFeedback
code-creation,Builtin,2,6810,0x64950d8a1bc0,1192,Subtract_WithFeedback
code-creation,Builtin,2,6820,0x64950d8a2080,1384,Multiply_WithFeedback
code-creation,Builtin,2,6823,0x64950d8a2600,1372,Divide_WithFeedback
code-creation,Builtin,2,6825,0x64950d8a2b80,1404,Modulus_WithFeedback
code-creation,Builtin,2,6827,0x64950d8a3100,704,Exponentiate_WithFeedback
code-creation,Builtin,2,6830,0x64950d8a3400,1600,BitwiseAnd_WithFeedback
code-creation,Builtin,2,6832,0x64950d8a3a80,1600,BitwiseOr_WithFeedback
code-creation,Builtin,2,6835,0x64950d8a4100,1600,BitwiseXor_WithFeedback
code-creation,Builtin,2,6838,0x64950d8a4780,1124,ShiftLeft_WithFeedback
code-creation,Builtin,2,6840,0x64950d8a4c00,1124,ShiftRight_WithFeedback
code-creation,Builtin,2,6843,0x64950d8a5080,1064,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,6846,0x64950d8a54c0,1952,Equal_Baseline
code-creation,Builtin,2,6848,0x64950d8a5c80,1076,StrictEqual_Baseline
code-creation,Builtin,2,6850,0x64950d8a60c0,1396,LessThan_Baseline
code-creation,Builtin,2,6853,0x64950d8a6640,1396,GreaterThan_Baseline
code-creation,Builtin,2,6855,0x64950d8a6bc0,1396,LessThanOrEqual_Baseline
code-creation,Builtin,2,6858,0x64950d8a7140,1396,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,6860,0x64950d8a76c0,1904,Equal_WithFeedback
code-creation,Builtin,2,6863,0x64950d8a7e40,1080,StrictEqual_WithFeedback
code-creation,Builtin,2,6866,0x64950d8a8280,1380,LessThan_WithFeedback
code-creation,Builtin,2,6868,0x64950d8a8800,1380,GreaterThan_WithFeedback
code-creation,Builtin,2,6871,0x64950d8a8d80,1380,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,6873,0x64950d8a9300,1380,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,6876,0x64950d8a9880,508,BitwiseNot_Baseline
code-creation,Builtin,2,6879,0x64950d8a9a80,532,Decrement_Baseline
code-creation,Builtin,2,6881,0x64950d8a9cc0,532,Increment_Baseline
code-creation,Builtin,2,6884,0x64950d8a9f00,556,Negate_Baseline
code-creation,Builtin,2,6886,0x64950d8aa140,492,BitwiseNot_WithFeedback
code-creation,Builtin,2,6889,0x64950d8aa340,524,Decrement_WithFeedback
code-creation,Builtin,2,6891,0x64950d8aa580,520,Increment_WithFeedback
code-creation,Builtin,2,6894,0x64950d8aa7c0,552,Negate_WithFeedback
code-creation,Builtin,2,6896,0x64950d8aaa00,272,ObjectAssign
code-creation,Builtin,2,6899,0x64950d8aab40,988,ObjectCreate
code-creation,Builtin,2,6901,0x64950d8aaf40,12,ObjectDefineGetter
code-creation,Builtin,2,6904,0x64950d8aaf80,12,ObjectDefineProperties
code-creation,Builtin,2,6906,0x64950d8aafc0,12,ObjectDefineProperty
code-creation,Builtin,2,6909,0x64950d8ab000,12,ObjectDefineSetter
code-creation,Builtin,2,6911,0x64950d8ab040,1588,ObjectEntries
code-creation,Builtin,2,6914,0x64950d8ab680,12,ObjectFreeze
code-creation,Builtin,2,6916,0x64950d8ab6c0,5084,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,6919,0x64950d8acac0,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,6922,0x64950d8acb00,968,ObjectGetOwnPropertyNames
code-creation,Builtin,2,6924,0x64950d8acf00,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,6927,0x64950d8acf40,164,ObjectHasOwn
code-creation,Builtin,2,6929,0x64950d8ad000,400,ObjectIs
code-creation,Builtin,2,6932,0x64950d8ad1c0,12,ObjectIsFrozen
code-creation,Builtin,2,6934,0x64950d8ad200,12,ObjectIsSealed
code-creation,Builtin,2,6938,0x64950d8ad240,944,ObjectKeys
code-creation,Builtin,2,6940,0x64950d8ad600,12,ObjectLookupGetter
code-creation,Builtin,2,6943,0x64950d8ad640,12,ObjectLookupSetter
code-creation,Builtin,2,6945,0x64950d8ad680,3032,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,6948,0x64950d8ae280,304,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,6951,0x64950d8ae3c0,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,6954,0x64950d8ae400,12,ObjectPrototypeGetProto
code-creation,Builtin,2,6956,0x64950d8ae440,12,ObjectPrototypeSetProto
code-creation,Builtin,2,6959,0x64950d8ae480,12,ObjectSeal
code-creation,Builtin,2,6961,0x64950d8ae4c0,1492,ObjectToString
code-creation,Builtin,2,6964,0x64950d8aeac0,1364,ObjectValues
code-creation,Builtin,2,6966,0x64950d8af040,368,OrdinaryHasInstance
code-creation,Builtin,2,6969,0x64950d8af1c0,388,InstanceOf
code-creation,Builtin,2,6971,0x64950d8af380,800,InstanceOf_WithFeedback
code-creation,Builtin,2,6974,0x64950d8af6c0,804,InstanceOf_Baseline
code-creation,Builtin,2,6976,0x64950d8afa00,304,ForInEnumerate
code-creation,Builtin,2,6979,0x64950d8afb40,124,ForInPrepare
code-creation,Builtin,2,6981,0x64950d8afbc0,3560,ForInFilter
code-creation,Builtin,2,6983,0x64950d8b09c0,56,ReflectApply
code-creation,Builtin,2,6986,0x64950d8b0a00,64,ReflectConstruct
code-creation,Builtin,2,6988,0x64950d8b0a80,12,ReflectDefineProperty
code-creation,Builtin,2,6991,0x64950d8b0ac0,12,ReflectOwnKeys
code-creation,Builtin,2,6993,0x64950d8b0b00,12,ReflectSet
code-creation,Builtin,2,6995,0x64950d8b0b40,12,RegExpCapture1Getter
code-creation,Builtin,2,6998,0x64950d8b0b80,12,RegExpCapture2Getter
code-creation,Builtin,2,7000,0x64950d8b0bc0,12,RegExpCapture3Getter
code-creation,Builtin,2,7003,0x64950d8b0c00,12,RegExpCapture4Getter
code-creation,Builtin,2,7006,0x64950d8b0c40,12,RegExpCapture5Getter
code-creation,Builtin,2,7008,0x64950d8b0c80,12,RegExpCapture6Getter
code-creation,Builtin,2,7011,0x64950d8b0cc0,12,RegExpCapture7Getter
code-creation,Builtin,2,7013,0x64950d8b0d00,12,RegExpCapture8Getter
code-creation,Builtin,2,7016,0x64950d8b0d40,12,RegExpCapture9Getter
code-creation,Builtin,2,7018,0x64950d8b0d80,2324,RegExpConstructor
code-creation,Builtin,2,7021,0x64950d8b16c0,12,RegExpInputGetter
code-creation,Builtin,2,7023,0x64950d8b1700,12,RegExpInputSetter
code-creation,Builtin,2,7025,0x64950d8b1740,12,RegExpLastMatchGetter
code-creation,Builtin,2,7028,0x64950d8b1780,12,RegExpLastParenGetter
code-creation,Builtin,2,7031,0x64950d8b17c0,12,RegExpLeftContextGetter
code-creation,Builtin,2,7033,0x64950d8b1800,900,RegExpPrototypeCompile
code-creation,Builtin,2,7036,0x64950d8b1bc0,12,RegExpPrototypeToString
code-creation,Builtin,2,7039,0x64950d8b1c00,12,RegExpRightContextGetter
code-creation,Builtin,2,7041,0x64950d8b1c40,256,RegExpExecAtom
code-creation,Builtin,2,7044,0x64950d8b1d80,1144,RegExpExecInternal
code-creation,Builtin,2,7046,0x64950d8b2200,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,7049,0x64950d8b2240,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,7051,0x64950d8b2280,1344,FindOrderedHashSetEntry
code-creation,Builtin,2,7054,0x64950d8b2800,5540,SetConstructor
code-creation,Builtin,2,7057,0x64950d8b3dc0,168,SetPrototypeHas
code-creation,Builtin,2,7059,0x64950d8b3e80,1872,SetPrototypeAdd
code-creation,Builtin,2,7061,0x64950d8b4600,1676,SetPrototypeDelete
code-creation,Builtin,2,7064,0x64950d8b4cc0,12,SetPrototypeClear
code-creation,Builtin,2,7066,0x64950d8b4d00,284,SetPrototypeEntries
code-creation,Builtin,2,7069,0x64950d8b4e40,144,SetPrototypeGetSize
code-creation,Builtin,2,7071,0x64950d8b4f00,532,SetPrototypeForEach
code-creation,Builtin,2,7074,0x64950d8b5140,284,SetPrototypeValues
code-creation,Builtin,2,7076,0x64950d8b5280,868,SetIteratorPrototypeNext
code-creation,Builtin,2,7079,0x64950d8b5600,1208,SetOrSetIteratorToList
code-creation,Builtin,2,7082,0x64950d8b5ac0,12,ShadowRealmConstructor
code-creation,Builtin,2,7084,0x64950d8b5b00,632,ShadowRealmGetWrappedValue
code-creation,Builtin,2,7087,0x64950d8b5d80,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,7091,0x64950d8b5dc0,1492,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,7094,0x64950d8b63c0,232,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,7097,0x64950d8b64c0,68,ShadowRealmImportValueRejected
code-creation,Builtin,2,7099,0x64950d8b6540,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,7102,0x64950d8b6580,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,7105,0x64950d8b65c0,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,7108,0x64950d8b6600,2124,AtomicsLoad
code-creation,Builtin,2,7110,0x64950d8b6e80,2240,AtomicsStore
code-creation,Builtin,2,7113,0x64950d8b7780,2904,AtomicsExchange
code-creation,Builtin,2,7115,0x64950d8b8300,3328,AtomicsCompareExchange
code-creation,Builtin,2,7118,0x64950d8b9040,2912,AtomicsAdd
code-creation,Builtin,2,7120,0x64950d8b9bc0,2912,AtomicsSub
code-creation,Builtin,2,7123,0x64950d8ba740,2912,AtomicsAnd
code-creation,Builtin,2,7125,0x64950d8bb2c0,2912,AtomicsOr
code-creation,Builtin,2,7127,0x64950d8bbe40,2912,AtomicsXor
code-creation,Builtin,2,7129,0x64950d8bc9c0,12,AtomicsNotify
code-creation,Builtin,2,7132,0x64950d8bca00,12,AtomicsIsLockFree
code-creation,Builtin,2,7134,0x64950d8bca40,12,AtomicsWait
code-creation,Builtin,2,7137,0x64950d8bca80,12,AtomicsWaitAsync
code-creation,Builtin,2,7139,0x64950d8bcac0,12,StringFromCodePoint
code-creation,Builtin,2,7142,0x64950d8bcb00,1572,StringFromCharCode
code-creation,Builtin,2,7144,0x64950d8bd140,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,7147,0x64950d8bd180,4800,StringPrototypeMatchAll
code-creation,Builtin,2,7150,0x64950d8be480,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,7152,0x64950d8be4c0,1304,StringPrototypeReplace
code-creation,Builtin,2,7155,0x64950d8bea00,3120,StringPrototypeSplit
code-creation,Builtin,2,7157,0x64950d8bf640,12,StringRaw
code-creation,Builtin,2,7160,0x64950d8bf680,12,SymbolConstructor
code-creation,Builtin,2,7162,0x64950d8bf6c0,12,SymbolFor
code-creation,Builtin,2,7165,0x64950d8bf700,12,SymbolKeyFor
code-creation,Builtin,2,7167,0x64950d8bf740,80,TypedArrayBaseConstructor
code-creation,Builtin,2,7169,0x64950d8bf7c0,244,TypedArrayConstructor
code-creation,Builtin,2,7172,0x64950d8bf8c0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,7175,0x64950d8bf900,848,TypedArrayPrototypeByteLength
code-creation,Builtin,2,7178,0x64950d8bfc80,356,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,7180,0x64950d8bfe00,584,TypedArrayPrototypeLength
code-creation,Builtin,2,7183,0x64950d8c0080,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,7186,0x64950d8c00c0,12,TypedArrayPrototypeFill
code-creation,Builtin,2,7188,0x64950d8c0100,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,7191,0x64950d8c0140,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,7194,0x64950d8c0180,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,7197,0x64950d8c01c0,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,7199,0x64950d8c0200,456,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,7202,0x64950d8c0400,33256,TypedArrayPrototypeMap
code-creation,Builtin,2,7205,0x64950d8c8600,236,JSToWasmWrapperAsm
code-creation,Builtin,2,7207,0x64950d8c8700,920,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,7210,0x64950d8c8ac0,60,WasmToJsWrapperAsm
code-creation,Builtin,2,7212,0x64950d8c8b00,5444,WasmToJsWrapperCSA
code-creation,Builtin,2,7215,0x64950d8ca080,28,WasmToJsWrapperInvalidSig
code-creation,Builtin,2,7218,0x64950d8ca0c0,204,WasmSuspend
code-creation,Builtin,2,7220,0x64950d8ca1c0,332,WasmResume
code-creation,Builtin,2,7222,0x64950d8ca340,352,WasmReject
code-creation,Builtin,2,7225,0x64950d8ca4c0,12,WasmTrapHandlerLandingPad
code-creation,Builtin,2,7227,0x64950d8ca500,156,WasmCompileLazy
code-creation,Builtin,2,7230,0x64950d8ca5c0,196,WasmLiftoffFrameSetup
code-creation,Builtin,2,7232,0x64950d8ca6c0,180,WasmDebugBreak
code-creation,Builtin,2,7235,0x64950d8ca780,16,WasmOnStackReplace
code-creation,Builtin,2,7237,0x64950d8ca7c0,132,WasmFloat32ToNumber
code-creation,Builtin,2,7240,0x64950d8ca880,136,WasmFloat64ToNumber
code-creation,Builtin,2,7242,0x64950d8ca940,1484,WasmFloat64ToString
code-creation,Builtin,2,7246,0x64950d8caf40,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,7249,0x64950d8caf80,12,WasmToOnHeapWasmToJsTrampoline
code-creation,Builtin,2,7252,0x64950d8cafc0,5260,WeakMapConstructor
code-creation,Builtin,2,7254,0x64950d8cc480,256,WeakMapLookupHashIndex
code-creation,Builtin,2,7257,0x64950d8cc5c0,204,WeakMapGet
code-creation,Builtin,2,7259,0x64950d8cc6c0,172,WeakMapPrototypeHas
code-creation,Builtin,2,7262,0x64950d8cc780,236,WeakMapPrototypeSet
code-creation,Builtin,2,7264,0x64950d8cc880,176,WeakMapPrototypeDelete
code-creation,Builtin,2,7267,0x64950d8cc940,3860,WeakSetConstructor
code-creation,Builtin,2,7269,0x64950d8cd880,172,WeakSetPrototypeHas
code-creation,Builtin,2,7272,0x64950d8cd940,240,WeakSetPrototypeAdd
code-creation,Builtin,2,7274,0x64950d8cda40,176,WeakSetPrototypeDelete
code-creation,Builtin,2,7277,0x64950d8cdb00,424,WeakCollectionDelete
code-creation,Builtin,2,7279,0x64950d8cdcc0,916,WeakCollectionSet
code-creation,Builtin,2,7282,0x64950d8ce080,12,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,7285,0x64950d8ce0c0,12,SharedStructTypeConstructor
code-creation,Builtin,2,7287,0x64950d8ce100,12,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,7290,0x64950d8ce140,12,SharedStructConstructor
code-creation,Builtin,2,7293,0x64950d8ce180,12,SharedArrayConstructor
code-creation,Builtin,2,7295,0x64950d8ce1c0,12,SharedArrayIsSharedArray
code-creation,Builtin,2,7298,0x64950d8ce200,12,AtomicsMutexConstructor
code-creation,Builtin,2,7300,0x64950d8ce240,12,AtomicsMutexIsMutex
code-creation,Builtin,2,7303,0x64950d8ce280,12,AtomicsMutexLock
code-creation,Builtin,2,7305,0x64950d8ce2c0,12,AtomicsMutexLockAsync
code-creation,Builtin,2,7308,0x64950d8ce300,12,AtomicsMutexLockWithTimeout
code-creation,Builtin,2,7311,0x64950d8ce340,12,AtomicsMutexTryLock
code-creation,Builtin,2,7313,0x64950d8ce380,12,AtomicsMutexAsyncUnlockResolveHandler
code-creation,Builtin,2,7316,0x64950d8ce3c0,12,AtomicsMutexAsyncUnlockRejectHandler
code-creation,Builtin,2,7319,0x64950d8ce400,12,AtomicsConditionConstructor
code-creation,Builtin,2,7322,0x64950d8ce440,12,AtomicsConditionAcquireLock
code-creation,Builtin,2,7324,0x64950d8ce480,12,AtomicsConditionIsCondition
code-creation,Builtin,2,7327,0x64950d8ce4c0,12,AtomicsConditionWait
code-creation,Builtin,2,7330,0x64950d8ce500,12,AtomicsConditionNotify
code-creation,Builtin,2,7332,0x64950d8ce540,12,AtomicsConditionWaitAsync
code-creation,Builtin,2,7335,0x64950d8ce580,328,AsyncGeneratorResolve
code-creation,Builtin,2,7337,0x64950d8ce700,116,AsyncGeneratorReject
code-creation,Builtin,2,7340,0x64950d8ce780,1880,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,7343,0x64950d8cef00,2080,AsyncGeneratorReturn
code-creation,Builtin,2,7345,0x64950d8cf740,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,7348,0x64950d8cf880,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,7351,0x64950d8cf8c0,1160,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,7353,0x64950d8cfd80,1160,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,7356,0x64950d8d0240,1160,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,7359,0x64950d8d0700,1880,AsyncGeneratorAwait
code-creation,Builtin,2,7368,0x64950d8d0e80,128,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,7372,0x64950d8d0f40,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,7376,0x64950d8d1000,128,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,7380,0x64950d8d10c0,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,7383,0x64950d8d1180,120,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,7386,0x64950d8d1200,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,7389,0x64950d8d12c0,2504,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,7392,0x64950d8d1cc0,2784,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,7395,0x64950d8d27c0,1852,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,7398,0x64950d8d2f00,216,AsyncFromSyncIteratorCloseSyncAndRethrow
code-creation,Builtin,2,7401,0x64950d8d3000,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,7405,0x64950d8d3080,168,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,7408,0x64950d8d3140,180,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,7411,0x64950d8d3200,180,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,7414,0x64950d8d32c0,168,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,7417,0x64950d8d3380,180,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,7420,0x64950d8d3440,180,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,7423,0x64950d8d3500,316,WasmCEntry
code-creation,Builtin,2,7426,0x64950d8d3640,4,DirectCEntry
code-creation,Builtin,2,7428,0x64950d8d3680,1460,StringAdd_CheckNone
code-creation,Builtin,2,7431,0x64950d8d3c40,3616,SubString
code-creation,Builtin,2,7433,0x64950d8d4a80,84,DoubleToI
code-creation,Builtin,2,7435,0x64950d8d4b00,3736,GetProperty
code-creation,Builtin,2,7438,0x64950d8d59c0,4072,GetPropertyWithReceiver
code-creation,Builtin,2,7440,0x64950d8d69c0,18900,SetProperty
code-creation,Builtin,2,7443,0x64950d8db3c0,15356,CreateDataProperty
code-creation,Builtin,2,7445,0x64950d8defc0,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,7451,0x64950d8df000,8,MemCopyUint8Uint8
code-creation,Builtin,2,7453,0x64950d8df040,8,MemMove
code-creation,Builtin,2,7455,0x64950d8df080,216,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,7458,0x64950d8df180,3088,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,7461,0x64950d8dfdc0,12,IsTraceCategoryEnabled
code-creation,Builtin,2,7464,0x64950d8dfe00,12,Trace
code-creation,Builtin,2,7466,0x64950d8dfe40,12,FinalizationRegistryUnregister
code-creation,Builtin,2,7469,0x64950d8dfe80,372,AsyncModuleEvaluate
code-creation,Builtin,2,7471,0x64950d8e0000,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,7474,0x64950d8e0040,12,CallAsyncModuleRejected
code-creation,Builtin,2,7477,0x64950d8e0080,12,TemporalNowTimeZone
code-creation,Builtin,2,7479,0x64950d8e00c0,12,TemporalNowInstant
code-creation,Builtin,2,7482,0x64950d8e0100,12,TemporalNowPlainDateTime
code-creation,Builtin,2,7484,0x64950d8e0140,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,7487,0x64950d8e0180,12,TemporalNowZonedDateTime
code-creation,Builtin,2,7490,0x64950d8e01c0,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,7492,0x64950d8e0200,12,TemporalNowPlainDate
code-creation,Builtin,2,7495,0x64950d8e0240,12,TemporalNowPlainDateISO
code-creation,Builtin,2,7498,0x64950d8e0280,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,7500,0x64950d8e02c0,12,TemporalPlainDateConstructor
code-creation,Builtin,2,7503,0x64950d8e0300,12,TemporalPlainDateFrom
code-creation,Builtin,2,7505,0x64950d8e0340,12,TemporalPlainDateCompare
code-creation,Builtin,2,7508,0x64950d8e0380,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,7511,0x64950d8e03c0,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,7514,0x64950d8e0400,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,7516,0x64950d8e0440,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,7519,0x64950d8e0480,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,7522,0x64950d8e04c0,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,7525,0x64950d8e0500,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,7528,0x64950d8e0540,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,7530,0x64950d8e0580,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,7533,0x64950d8e05c0,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,7536,0x64950d8e0600,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,7539,0x64950d8e0640,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,7542,0x64950d8e0680,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,7545,0x64950d8e06c0,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,7548,0x64950d8e0700,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,7551,0x64950d8e0740,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,7555,0x64950d8e0780,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,7558,0x64950d8e07c0,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,7561,0x64950d8e0800,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,7564,0x64950d8e0840,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,7567,0x64950d8e0880,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,7570,0x64950d8e08c0,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,7572,0x64950d8e0900,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,7575,0x64950d8e0940,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,7578,0x64950d8e0980,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,7581,0x64950d8e09c0,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,7584,0x64950d8e0a00,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,7587,0x64950d8e0a40,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,7590,0x64950d8e0a80,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,7593,0x64950d8e0ac0,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,7596,0x64950d8e0b00,12,TemporalPlainTimeFrom
code-creation,Builtin,2,7598,0x64950d8e0b40,12,TemporalPlainTimeCompare
code-creation,Builtin,2,7601,0x64950d8e0b80,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,7606,0x64950d8e0bc0,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,7609,0x64950d8e0c00,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,7611,0x64950d8e0c40,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,7614,0x64950d8e0c80,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,7617,0x64950d8e0cc0,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,7620,0x64950d8e0d00,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,7623,0x64950d8e0d40,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,7626,0x64950d8e0d80,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,7629,0x64950d8e0dc0,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,7631,0x64950d8e0e00,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,7634,0x64950d8e0e40,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,7637,0x64950d8e0e80,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,7640,0x64950d8e0ec0,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,7642,0x64950d8e0f00,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,7645,0x64950d8e0f40,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,7648,0x64950d8e0f80,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,7651,0x64950d8e0fc0,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,7654,0x64950d8e1000,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,7657,0x64950d8e1040,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,7660,0x64950d8e1080,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,7663,0x64950d8e10c0,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,7666,0x64950d8e1100,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,7668,0x64950d8e1140,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,7671,0x64950d8e1180,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,7674,0x64950d8e11c0,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,7677,0x64950d8e1200,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,7680,0x64950d8e1240,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,7683,0x64950d8e1280,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,7685,0x64950d8e12c0,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,7688,0x64950d8e1300,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,7691,0x64950d8e1340,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,7694,0x64950d8e1380,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,7697,0x64950d8e13c0,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,7702,0x64950d8e1400,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,7705,0x64950d8e1440,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,7708,0x64950d8e1480,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,7711,0x64950d8e14c0,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,7714,0x64950d8e1500,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,7717,0x64950d8e1540,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,7720,0x64950d8e1580,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,7723,0x64950d8e15c0,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,7726,0x64950d8e1600,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,7729,0x64950d8e1640,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,7732,0x64950d8e1680,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,7735,0x64950d8e16c0,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,7738,0x64950d8e1700,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,7741,0x64950d8e1740,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,7744,0x64950d8e1780,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,7747,0x64950d8e17c0,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,7750,0x64950d8e1800,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,7753,0x64950d8e1840,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,7755,0x64950d8e1880,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,7758,0x64950d8e18c0,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,7761,0x64950d8e1900,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,7764,0x64950d8e1940,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,7767,0x64950d8e1980,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,7770,0x64950d8e19c0,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,7773,0x64950d8e1a00,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,7776,0x64950d8e1a40,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,7779,0x64950d8e1a80,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,7782,0x64950d8e1ac0,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,7785,0x64950d8e1b00,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,7788,0x64950d8e1b40,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,7791,0x64950d8e1b80,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,7794,0x64950d8e1bc0,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,7797,0x64950d8e1c00,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,7800,0x64950d8e1c40,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,7803,0x64950d8e1c80,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,7805,0x64950d8e1cc0,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,7808,0x64950d8e1d00,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,7811,0x64950d8e1d40,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,7814,0x64950d8e1d80,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,7817,0x64950d8e1dc0,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,7820,0x64950d8e1e00,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,7823,0x64950d8e1e40,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,7826,0x64950d8e1e80,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,7829,0x64950d8e1ec0,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,7832,0x64950d8e1f00,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,7835,0x64950d8e1f40,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,7838,0x64950d8e1f80,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,7842,0x64950d8e1fc0,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,7845,0x64950d8e2000,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,7848,0x64950d8e2040,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,7851,0x64950d8e2080,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,7854,0x64950d8e20c0,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,7857,0x64950d8e2100,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,7861,0x64950d8e2140,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,7866,0x64950d8e2180,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,7869,0x64950d8e21c0,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,7872,0x64950d8e2200,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,7875,0x64950d8e2240,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,7879,0x64950d8e2280,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,7881,0x64950d8e22c0,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,7884,0x64950d8e2300,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,7887,0x64950d8e2340,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,7890,0x64950d8e2380,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,7893,0x64950d8e23c0,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,7896,0x64950d8e2400,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,7899,0x64950d8e2440,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,7902,0x64950d8e2480,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,7905,0x64950d8e24c0,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,7908,0x64950d8e2500,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,7911,0x64950d8e2540,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,7914,0x64950d8e2580,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,7917,0x64950d8e25c0,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,7920,0x64950d8e2600,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,7923,0x64950d8e2640,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,7926,0x64950d8e2680,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,7929,0x64950d8e26c0,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,7932,0x64950d8e2700,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,7935,0x64950d8e2740,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,7937,0x64950d8e2780,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,7941,0x64950d8e27c0,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,7944,0x64950d8e2800,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,7947,0x64950d8e2840,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,7950,0x64950d8e2880,12,TemporalDurationConstructor
code-creation,Builtin,2,7953,0x64950d8e28c0,12,TemporalDurationFrom
code-creation,Builtin,2,7955,0x64950d8e2900,12,TemporalDurationCompare
code-creation,Builtin,2,7958,0x64950d8e2940,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,7961,0x64950d8e2980,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,7963,0x64950d8e29c0,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,7966,0x64950d8e2a00,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,7969,0x64950d8e2a40,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,7972,0x64950d8e2a80,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,7974,0x64950d8e2ac0,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,7977,0x64950d8e2b00,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,7980,0x64950d8e2b40,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,7983,0x64950d8e2b80,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,7987,0x64950d8e2bc0,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,7990,0x64950d8e2c00,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,7993,0x64950d8e2c40,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,7996,0x64950d8e2c80,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,7998,0x64950d8e2cc0,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,8001,0x64950d8e2d00,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,8004,0x64950d8e2d40,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,8007,0x64950d8e2d80,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,8010,0x64950d8e2dc0,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,8012,0x64950d8e2e00,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,8015,0x64950d8e2e40,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,8018,0x64950d8e2e80,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,8021,0x64950d8e2ec0,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,8024,0x64950d8e2f00,12,TemporalInstantConstructor
code-creation,Builtin,2,8026,0x64950d8e2f40,12,TemporalInstantFrom
code-creation,Builtin,2,8029,0x64950d8e2f80,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,8032,0x64950d8e2fc0,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,8035,0x64950d8e3000,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,8038,0x64950d8e3040,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,8040,0x64950d8e3080,12,TemporalInstantCompare
code-creation,Builtin,2,8043,0x64950d8e30c0,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,8046,0x64950d8e3100,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,8049,0x64950d8e3140,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,8052,0x64950d8e3180,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,8055,0x64950d8e31c0,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,8058,0x64950d8e3200,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,8060,0x64950d8e3240,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,8063,0x64950d8e3280,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,8066,0x64950d8e32c0,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,8069,0x64950d8e3300,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,8071,0x64950d8e3340,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,8074,0x64950d8e3380,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,8077,0x64950d8e33c0,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,8080,0x64950d8e3400,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,8083,0x64950d8e3440,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,8086,0x64950d8e3480,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,8089,0x64950d8e34c0,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,8092,0x64950d8e3500,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,8094,0x64950d8e3540,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,8097,0x64950d8e3580,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,8100,0x64950d8e35c0,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,8103,0x64950d8e3600,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,8106,0x64950d8e3640,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,8109,0x64950d8e3680,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,8112,0x64950d8e36c0,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,8115,0x64950d8e3700,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,8118,0x64950d8e3740,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,8121,0x64950d8e3780,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,8124,0x64950d8e37c0,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,8126,0x64950d8e3800,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,8129,0x64950d8e3840,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,8134,0x64950d8e3880,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,8137,0x64950d8e38c0,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,8140,0x64950d8e3900,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,8143,0x64950d8e3940,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,8146,0x64950d8e3980,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,8149,0x64950d8e39c0,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,8152,0x64950d8e3a00,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,8155,0x64950d8e3a40,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,8158,0x64950d8e3a80,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,8160,0x64950d8e3ac0,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,8163,0x64950d8e3b00,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,8166,0x64950d8e3b40,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,8169,0x64950d8e3b80,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,8172,0x64950d8e3bc0,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,8175,0x64950d8e3c00,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,8178,0x64950d8e3c40,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,8181,0x64950d8e3c80,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,8183,0x64950d8e3cc0,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,8186,0x64950d8e3d00,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,8189,0x64950d8e3d40,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,8192,0x64950d8e3d80,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,8195,0x64950d8e3dc0,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,8198,0x64950d8e3e00,12,TemporalTimeZoneFrom
code-creation,Builtin,2,8201,0x64950d8e3e40,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,8203,0x64950d8e3e80,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,8206,0x64950d8e3ec0,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,8210,0x64950d8e3f00,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,8213,0x64950d8e3f40,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,8216,0x64950d8e3f80,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,8219,0x64950d8e3fc0,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,8222,0x64950d8e4000,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,8225,0x64950d8e4040,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,8228,0x64950d8e4080,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,8231,0x64950d8e40c0,12,TemporalCalendarConstructor
code-creation,Builtin,2,8233,0x64950d8e4100,12,TemporalCalendarFrom
code-creation,Builtin,2,8236,0x64950d8e4140,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,8238,0x64950d8e4180,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,8241,0x64950d8e41c0,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,8245,0x64950d8e4200,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,8248,0x64950d8e4240,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,8250,0x64950d8e4280,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,8253,0x64950d8e42c0,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,8256,0x64950d8e4300,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,8259,0x64950d8e4340,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,8262,0x64950d8e4380,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,8264,0x64950d8e43c0,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,8267,0x64950d8e4400,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,8270,0x64950d8e4440,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,8273,0x64950d8e4480,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,8277,0x64950d8e44c0,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,8280,0x64950d8e4500,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,8282,0x64950d8e4540,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,8285,0x64950d8e4580,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,8288,0x64950d8e45c0,3920,TemporalCalendarPrototypeFields
code-creation,Builtin,2,8291,0x64950d8e5540,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,8294,0x64950d8e5580,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,8297,0x64950d8e55c0,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,8299,0x64950d8e5600,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,8302,0x64950d8e5640,1888,StringFixedArrayFromIterable
code-creation,Builtin,2,8305,0x64950d8e5dc0,1888,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,8308,0x64950d8e6540,252,AggregateErrorConstructor
code-creation,Builtin,2,8311,0x64950d8e6640,896,ArrayPrototypeAt
code-creation,Builtin,2,8313,0x64950d8e6a00,588,ArrayPrototypeConcat
code-creation,Builtin,2,8316,0x64950d8e6c80,5160,ArrayPrototypeCopyWithin
code-creation,Builtin,2,8319,0x64950d8e80c0,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,8322,0x64950d8e81c0,588,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,8324,0x64950d8e8440,4288,ArrayEveryLoopContinuation
code-creation,Builtin,2,8327,0x64950d8e9540,1592,ArrayEvery
code-creation,Builtin,2,8329,0x64950d8e9b80,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,8332,0x64950d8e9cc0,904,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,8335,0x64950d8ea080,4616,ArrayFilterLoopContinuation
code-creation,Builtin,2,8338,0x64950d8eb2c0,4796,ArrayFilter
code-creation,Builtin,2,8340,0x64950d8ec580,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,8343,0x64950d8ec680,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,8346,0x64950d8ec6c0,324,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,8349,0x64950d8ec840,544,ArrayFindLoopContinuation
code-creation,Builtin,2,8352,0x64950d8eca80,1564,ArrayPrototypeFind
code-creation,Builtin,2,8354,0x64950d8ed0c0,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,8357,0x64950d8ed1c0,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,8360,0x64950d8ed200,324,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,8364,0x64950d8ed380,536,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,8366,0x64950d8ed5c0,1552,ArrayPrototypeFindIndex
code-creation,Builtin,2,8369,0x64950d8edc00,472,ArrayFindLastLoopContinuation
code-creation,Builtin,2,8372,0x64950d8ede00,1756,ArrayPrototypeFindLast
code-creation,Builtin,2,8374,0x64950d8ee500,468,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,8377,0x64950d8ee700,1744,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,8380,0x64950d8eee00,3188,FlattenIntoArrayWithoutMapFn
code-creation,Builtin,2,8383,0x64950d8efa80,3216,FlattenIntoArrayWithMapFn
code-creation,Builtin,2,8385,0x64950d8f0740,812,ArrayPrototypeFlat
code-creation,Builtin,2,8388,0x64950d8f0a80,776,ArrayPrototypeFlatMap
code-creation,Builtin,2,8390,0x64950d8f0dc0,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,8393,0x64950d8f0ec0,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,8396,0x64950d8f0fc0,4216,ArrayForEachLoopContinuation
code-creation,Builtin,2,8399,0x64950d8f2040,1412,ArrayForEach
code-creation,Builtin,2,8401,0x64950d8f2600,7072,ArrayFromAsyncIterableOnFulfilled
code-creation,Builtin,2,8404,0x64950d8f41c0,7076,ArrayFromAsyncIterableOnRejected
code-creation,Builtin,2,8407,0x64950d8f5d80,3644,ArrayFromAsyncArrayLikeOnFulfilled
code-creation,Builtin,2,8410,0x64950d8f6bc0,3772,ArrayFromAsyncArrayLikeOnRejected
code-creation,Builtin,2,8413,0x64950d8f7a80,17312,ArrayFromAsync
code-creation,Builtin,2,8415,0x64950d8fbe40,4836,ArrayFrom
code-creation,Builtin,2,8417,0x64950d8fd140,168,ArrayIsArray
code-creation,Builtin,2,8421,0x64950d8fd200,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,8424,0x64950d8fd3c0,48,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,8427,0x64950d8fd400,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,8430,0x64950d8fd4c0,200,ConvertToLocaleString
code-creation,Builtin,2,8432,0x64950d8fd5c0,816,JoinStackPush
code-creation,Builtin,2,8435,0x64950d8fd900,316,JoinStackPop
code-creation,Builtin,2,8437,0x64950d8fda40,9484,ArrayPrototypeJoin
code-creation,Builtin,2,8440,0x64950d8fff80,5976,ArrayPrototypeToLocaleString
code-creation,Builtin,2,8442,0x64950d901700,240,ArrayPrototypeToString
code-creation,Builtin,2,8445,0x64950d901800,9352,TypedArrayPrototypeJoin
code-creation,Builtin,2,8448,0x64950d903cc0,5712,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,8451,0x64950d905340,4420,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,8453,0x64950d9064c0,240,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,8456,0x64950d9065c0,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,8459,0x64950d9066c0,480,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,8462,0x64950d9068c0,4208,ArrayMapLoopContinuation
code-creation,Builtin,2,8464,0x64950d907940,4136,ArrayMap
code-creation,Builtin,2,8467,0x64950d908980,1888,ArrayOf
code-creation,Builtin,2,8469,0x64950d909100,408,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,8472,0x64950d9092c0,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,8475,0x64950d9093c0,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,8478,0x64950d9094c0,4216,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,8481,0x64950d90a540,1964,ArrayReduceRight
code-creation,Builtin,2,8484,0x64950d90ad00,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,8487,0x64950d90adc0,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,8490,0x64950d90aec0,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,8493,0x64950d90afc0,4264,ArrayReduceLoopContinuation
code-creation,Builtin,2,8495,0x64950d90c080,1612,ArrayReduce
code-creation,Builtin,2,8498,0x64950d90c700,3728,ArrayPrototypeReverse
code-creation,Builtin,2,8500,0x64950d90d5c0,3984,ArrayPrototypeShift
code-creation,Builtin,2,8503,0x64950d90e580,6600,ArrayPrototypeSlice
code-creation,Builtin,2,8505,0x64950d90ff80,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,8508,0x64950d910080,556,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,8511,0x64950d9102c0,4272,ArraySomeLoopContinuation
code-creation,Builtin,2,8514,0x64950d911380,1588,ArraySome
code-creation,Builtin,2,8516,0x64950d9119c0,15272,ArrayPrototypeSplice
code-creation,Builtin,2,8518,0x64950d915580,2244,GenericArrayToReversed
code-creation,Builtin,2,8521,0x64950d915e80,2976,ArrayPrototypeToReversed
code-creation,Builtin,2,8524,0x64950d916a40,6084,ArrayTimSortIntoCopy
code-creation,Builtin,2,8526,0x64950d918240,2040,ArrayPrototypeToSorted
code-creation,Builtin,2,8529,0x64950d918a40,9436,ArrayPrototypeToSpliced
code-creation,Builtin,2,8531,0x64950d91af40,3104,ArrayPrototypeUnshift
code-creation,Builtin,2,8534,0x64950d91bb80,1496,GenericArrayWith
code-creation,Builtin,2,8536,0x64950d91c180,1192,ArrayPrototypeWith
code-creation,Builtin,2,8539,0x64950d91c640,316,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,8542,0x64950d91c780,468,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,8545,0x64950d91c980,212,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,8547,0x64950d91ca80,212,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,8550,0x64950d91cb80,316,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,8553,0x64950d91ccc0,212,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,8556,0x64950d91cdc0,104,ArrayBufferIsView
code-creation,Builtin,2,8559,0x64950d91ce40,440,ToInteger
code-creation,Builtin,2,8561,0x64950d91d000,3676,FastCreateDataProperty
code-creation,Builtin,2,8563,0x64950d91de80,1144,BooleanConstructor
code-creation,Builtin,2,8567,0x64950d91e300,220,BooleanPrototypeToString
code-creation,Builtin,2,8570,0x64950d91e400,212,BooleanPrototypeValueOf
code-creation,Builtin,2,8572,0x64950d91e500,1048,BigIntAddNoThrow
code-creation,Builtin,2,8575,0x64950d91e940,1168,BigIntAdd
code-creation,Builtin,2,8577,0x64950d91ee00,1056,BigIntSubtractNoThrow
code-creation,Builtin,2,8580,0x64950d91f240,1172,BigIntSubtract
code-creation,Builtin,2,8582,0x64950d91f700,312,BigIntMultiplyNoThrow
code-creation,Builtin,2,8585,0x64950d91f840,464,BigIntMultiply
code-creation,Builtin,2,8587,0x64950d91fa40,508,BigIntDivideNoThrow
code-creation,Builtin,2,8590,0x64950d91fc40,620,BigIntDivide
code-creation,Builtin,2,8592,0x64950d91fec0,428,BigIntModulusNoThrow
code-creation,Builtin,2,8595,0x64950d920080,536,BigIntModulus
code-creation,Builtin,2,8597,0x64950d9202c0,932,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,8600,0x64950d920680,1064,BigIntBitwiseAnd
code-creation,Builtin,2,8602,0x64950d920ac0,908,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,8605,0x64950d920e80,1020,BigIntBitwiseOr
code-creation,Builtin,2,8607,0x64950d921280,944,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,8610,0x64950d921640,1076,BigIntBitwiseXor
code-creation,Builtin,2,8612,0x64950d921a80,1288,BigIntShiftLeftNoThrow
code-creation,Builtin,2,8615,0x64950d921fc0,1436,BigIntShiftLeft
code-creation,Builtin,2,8617,0x64950d922580,1280,BigIntShiftRightNoThrow
code-creation,Builtin,2,8620,0x64950d922ac0,1428,BigIntShiftRight
code-creation,Builtin,2,8622,0x64950d923080,168,BigIntEqual
code-creation,Builtin,2,8625,0x64950d923140,208,BigIntLessThan
code-creation,Builtin,2,8627,0x64950d923240,208,BigIntGreaterThan
code-creation,Builtin,2,8630,0x64950d923340,208,BigIntLessThanOrEqual
code-creation,Builtin,2,8632,0x64950d923440,208,BigIntGreaterThanOrEqual
code-creation,Builtin,2,8635,0x64950d923540,320,BigIntUnaryMinus
code-creation,Builtin,2,8637,0x64950d9236c0,2280,ToString
code-creation,Builtin,2,8640,0x64950d923fc0,212,StringPrototypeToString
code-creation,Builtin,2,8642,0x64950d9240c0,212,StringPrototypeValueOf
code-creation,Builtin,2,8645,0x64950d9241c0,2520,StringToList
code-creation,Builtin,2,8647,0x64950d924bc0,888,StringPrototypeCharAt
code-creation,Builtin,2,8650,0x64950d924f40,776,StringPrototypeCharCodeAt
code-creation,Builtin,2,8652,0x64950d925280,1368,StringPrototypeCodePointAt
code-creation,Builtin,2,8655,0x64950d925800,452,StringPrototypeConcat
code-creation,Builtin,2,8657,0x64950d925a00,1184,StringConstructor
code-creation,Builtin,2,8660,0x64950d925ec0,2308,StringAddConvertLeft
code-creation,Builtin,2,8662,0x64950d926800,2368,StringAddConvertRight
code-creation,Builtin,2,8665,0x64950d927180,648,StringCharAt
code-creation,Builtin,2,8667,0x64950d927440,16,FastNewClosureBaseline
code-creation,Builtin,2,8670,0x64950d927480,308,FastNewFunctionContextEval
code-creation,Builtin,2,8673,0x64950d9275c0,308,FastNewFunctionContextFunction
code-creation,Builtin,2,8675,0x64950d927700,252,CreateRegExpLiteral
code-creation,Builtin,2,8678,0x64950d927800,1444,CreateShallowArrayLiteral
code-creation,Builtin,2,8681,0x64950d927dc0,492,CreateEmptyArrayLiteral
code-creation,Builtin,2,8683,0x64950d927fc0,2404,CreateShallowObjectLiteral
code-creation,Builtin,2,8686,0x64950d928940,464,ObjectConstructor
code-creation,Builtin,2,8688,0x64950d928b40,220,CreateEmptyLiteralObject
code-creation,Builtin,2,8691,0x64950d928c40,560,NumberConstructor
code-creation,Builtin,2,8694,0x64950d928e80,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,8697,0x64950d928ec0,56,StringToNumber
code-creation,Builtin,2,8699,0x64950d928f00,192,NonNumberToNumber
code-creation,Builtin,2,8702,0x64950d929000,244,NonNumberToNumeric
code-creation,Builtin,2,8704,0x64950d929100,36,ToNumeric
code-creation,Builtin,2,8706,0x64950d929140,1312,NumberToString
code-creation,Builtin,2,8709,0x64950d929680,116,ToBoolean
code-creation,Builtin,2,8712,0x64950d929700,108,ToBooleanForBaselineJump
code-creation,Builtin,2,8714,0x64950d929780,628,ToLength
code-creation,Builtin,2,8717,0x64950d929a00,1364,ToName
code-creation,Builtin,2,8719,0x64950d929f80,1008,ToObject
code-creation,Builtin,2,8723,0x64950d92a380,460,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,8725,0x64950d92a580,460,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,8728,0x64950d92a780,860,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,8731,0x64950d92ab00,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,8734,0x64950d92ab40,372,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,8736,0x64950d92acc0,372,OrdinaryToPrimitive_String
code-creation,Builtin,2,8739,0x64950d92ae40,240,FastConsoleAssert
code-creation,Builtin,2,8742,0x64950d92af40,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,8744,0x64950d92b000,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,8747,0x64950d92b300,432,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,8750,0x64950d92b4c0,868,DataViewPrototypeGetUint8
code-creation,Builtin,2,8752,0x64950d92b840,868,DataViewPrototypeGetInt8
code-creation,Builtin,2,8755,0x64950d92bbc0,948,DataViewPrototypeGetUint16
code-creation,Builtin,2,8758,0x64950d92bf80,948,DataViewPrototypeGetInt16
code-creation,Builtin,2,8760,0x64950d92c340,1096,DataViewPrototypeGetUint32
code-creation,Builtin,2,8763,0x64950d92c7c0,1092,DataViewPrototypeGetInt32
code-creation,Builtin,2,8766,0x64950d92cc40,1196,DataViewPrototypeGetFloat16
code-creation,Builtin,2,8768,0x64950d92d100,1136,DataViewPrototypeGetFloat32
code-creation,Builtin,2,8771,0x64950d92d580,1200,DataViewPrototypeGetFloat64
code-creation,Builtin,2,8774,0x64950d92da40,1240,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,8777,0x64950d92df40,1256,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,8779,0x64950d92e440,1308,DataViewPrototypeSetUint8
code-creation,Builtin,2,8782,0x64950d92e980,1308,DataViewPrototypeSetInt8
code-creation,Builtin,2,8785,0x64950d92eec0,1376,DataViewPrototypeSetUint16
code-creation,Builtin,2,8787,0x64950d92f440,1376,DataViewPrototypeSetInt16
code-creation,Builtin,2,8790,0x64950d92f9c0,1416,DataViewPrototypeSetUint32
code-creation,Builtin,2,8793,0x64950d92ff80,1416,DataViewPrototypeSetInt32
code-creation,Builtin,2,8795,0x64950d930540,1504,DataViewPrototypeSetFloat16
code-creation,Builtin,2,8798,0x64950d930b40,1384,DataViewPrototypeSetFloat32
code-creation,Builtin,2,8801,0x64950d9310c0,1440,DataViewPrototypeSetFloat64
code-creation,Builtin,2,8803,0x64950d931680,1264,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,8806,0x64950d931b80,1264,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,8808,0x64950d932080,1128,FinalizationRegistryConstructor
code-creation,Builtin,2,8811,0x64950d932500,1220,FinalizationRegistryRegister
code-creation,Builtin,2,8814,0x64950d932a00,708,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,8817,0x64950d932d00,364,FunctionPrototypeHasInstance
code-creation,Builtin,2,8819,0x64950d932e80,968,FastFunctionPrototypeBind
code-creation,Builtin,2,8822,0x64950d933280,144,IncBlockCounter
code-creation,Builtin,2,8825,0x64950d933340,240,GetTemplateObject
code-creation,Builtin,2,8827,0x64950d933440,80,ForInNext
code-creation,Builtin,2,8829,0x64950d9334c0,160,GetImportMetaObjectBaseline
code-creation,Builtin,2,8832,0x64950d933580,108,GetIteratorWithFeedback
code-creation,Builtin,2,8835,0x64950d933600,96,GetIteratorBaseline
code-creation,Builtin,2,8837,0x64950d933680,368,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,8840,0x64950d933800,1188,CallIteratorWithFeedback
code-creation,Builtin,2,8843,0x64950d933cc0,948,IteratorConstructor
code-creation,Builtin,2,8845,0x64950d934080,64,IteratorPrototypeGetToStringTag
code-creation,Builtin,2,8848,0x64950d934100,348,IteratorPrototypeSetToStringTag
code-creation,Builtin,2,8851,0x64950d934280,104,IteratorPrototypeGetConstructor
code-creation,Builtin,2,8854,0x64950d934300,348,IteratorPrototypeSetConstructor
code-creation,Builtin,2,8856,0x64950d934480,952,IteratorFrom
code-creation,Builtin,2,8859,0x64950d934840,164,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,8862,0x64950d934900,404,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,8865,0x64950d934ac0,408,IteratorHelperPrototypeNext
code-creation,Builtin,2,8907,0x64950d934c80,1376,IteratorHelperPrototypeReturn
code-creation,Builtin,2,8912,0x64950d935200,368,IteratorPrototypeMap
code-creation,Builtin,2,8917,0x64950d935380,1536,IteratorMapHelperNext
code-creation,Builtin,2,8920,0x64950d9359c0,368,IteratorPrototypeFilter
code-creation,Builtin,2,8923,0x64950d935b40,1732,IteratorFilterHelperNext
code-creation,Builtin,2,8931,0x64950d936240,492,IteratorPrototypeTake
code-creation,Builtin,2,8934,0x64950d936440,1756,IteratorTakeHelperNext
code-creation,Builtin,2,8938,0x64950d936b40,492,IteratorPrototypeDrop
code-creation,Builtin,2,8957,0x64950d936d40,1924,IteratorDropHelperNext
code-creation,Builtin,2,8961,0x64950d937500,384,IteratorPrototypeFlatMap
code-creation,Builtin,2,8965,0x64950d9376c0,2876,IteratorFlatMapHelperNext
code-creation,Builtin,2,8968,0x64950d938200,1712,IteratorPrototypeReduce
code-creation,Builtin,2,8974,0x64950d9388c0,1684,IteratorPrototypeToArray
code-creation,Builtin,2,8977,0x64950d938f80,1104,IteratorPrototypeForEach
code-creation,Builtin,2,8980,0x64950d939400,1396,IteratorPrototypeSome
code-creation,Builtin,2,8984,0x64950d939980,1396,IteratorPrototypeEvery
code-creation,Builtin,2,8988,0x64950d939f00,1400,IteratorPrototypeFind
code-creation,Builtin,2,8991,0x64950d93a480,8488,MapGroupBy
code-creation,Builtin,2,8993,0x64950d93c5c0,308,MathAbs
code-creation,Builtin,2,8995,0x64950d93c700,456,MathCeil
code-creation,Builtin,2,8998,0x64950d93c900,460,MathFloor
code-creation,Builtin,2,9000,0x64950d93cb00,508,MathRound
code-creation,Builtin,2,9003,0x64950d93cd00,456,MathTrunc
code-creation,Builtin,2,9005,0x64950d93cf00,400,MathPow
code-creation,Builtin,2,9007,0x64950d93d0c0,468,MathMax
code-creation,Builtin,2,9010,0x64950d93d2c0,468,MathMin
code-creation,Builtin,2,9012,0x64950d93d4c0,308,MathAcos
code-creation,Builtin,2,9014,0x64950d93d600,308,MathAcosh
code-creation,Builtin,2,9017,0x64950d93d740,308,MathAsin
code-creation,Builtin,2,9019,0x64950d93d880,308,MathAsinh
code-creation,Builtin,2,9021,0x64950d93d9c0,308,MathAtan
code-creation,Builtin,2,9024,0x64950d93db00,396,MathAtan2
code-creation,Builtin,2,9026,0x64950d93dcc0,308,MathAtanh
code-creation,Builtin,2,9028,0x64950d93de00,308,MathCbrt
code-creation,Builtin,2,9031,0x64950d93df40,252,MathClz32
code-creation,Builtin,2,9033,0x64950d93e040,308,MathCos
code-creation,Builtin,2,9035,0x64950d93e180,308,MathCosh
code-creation,Builtin,2,9038,0x64950d93e2c0,308,MathExp
code-creation,Builtin,2,9040,0x64950d93e400,308,MathExpm1
code-creation,Builtin,2,9042,0x64950d93e540,264,MathFround
code-creation,Builtin,2,9045,0x64950d93e680,528,MathF16round
code-creation,Builtin,2,9047,0x64950d93e8c0,384,MathImul
code-creation,Builtin,2,9050,0x64950d93ea80,308,MathLog
tick,0x7d8294d1c5ad,9052,0,0x0,9
tick,0x7d8294c86972,9056,0,0x0,9
tick,0x64950d0393c1,9058,0,0x0,9
code-creation,Builtin,2,9063,0x64950d93ebc0,308,MathLog1p
code-creation,Builtin,2,9068,0x64950d93ed00,308,MathLog10
code-creation,Builtin,2,9071,0x64950d93ee40,308,MathLog2
code-creation,Builtin,2,9074,0x64950d93ef80,308,MathSin
code-creation,Builtin,2,9077,0x64950d93f0c0,152,MathSign
code-creation,Builtin,2,9080,0x64950d93f180,308,MathSinh
code-creation,Builtin,2,9082,0x64950d93f2c0,260,MathSqrt
code-creation,Builtin,2,9083,0x64950d93f400,308,MathTan
code-creation,Builtin,2,9085,0x64950d93f540,308,MathTanh
code-creation,Builtin,2,9087,0x64950d93f680,2656,MathHypot
code-creation,Builtin,2,9089,0x64950d940100,320,MathRandom
code-creation,Builtin,2,9091,0x64950d940280,2656,NumberPrototypeToString
code-creation,Builtin,2,9093,0x64950d940d00,132,NumberIsFinite
code-creation,Builtin,2,9095,0x64950d940dc0,332,NumberIsInteger
code-creation,Builtin,2,9097,0x64950d940f40,124,NumberIsNaN
code-creation,Builtin,2,9098,0x64950d940fc0,364,NumberIsSafeInteger
code-creation,Builtin,2,9100,0x64950d941140,212,NumberPrototypeValueOf
code-creation,Builtin,2,9102,0x64950d941240,204,NumberParseFloat
code-creation,Builtin,2,9104,0x64950d941340,328,ParseInt
code-creation,Builtin,2,9106,0x64950d9414c0,84,NumberParseInt
code-creation,Builtin,2,9108,0x64950d941540,848,Add
code-creation,Builtin,2,9112,0x64950d9418c0,476,Subtract
code-creation,Builtin,2,9114,0x64950d941ac0,688,Multiply
code-creation,Builtin,2,9116,0x64950d941d80,536,Divide
code-creation,Builtin,2,9117,0x64950d941fc0,644,Modulus
code-creation,Builtin,2,9119,0x64950d942280,612,Exponentiate
code-creation,Builtin,2,9121,0x64950d942500,456,Negate
code-creation,Builtin,2,9123,0x64950d942700,280,BitwiseNot
code-creation,Builtin,2,9125,0x64950d942840,148,Decrement
code-creation,Builtin,2,9127,0x64950d942900,148,Increment
code-creation,Builtin,2,9128,0x64950d9429c0,680,ShiftLeft
code-creation,Builtin,2,9130,0x64950d942c80,680,ShiftRight
code-creation,Builtin,2,9132,0x64950d942f40,620,ShiftRightLogical
code-creation,Builtin,2,9134,0x64950d9431c0,440,BitwiseAnd
code-creation,Builtin,2,9136,0x64950d943380,440,BitwiseOr
code-creation,Builtin,2,9138,0x64950d943540,440,BitwiseXor
code-creation,Builtin,2,9140,0x64950d943700,968,LessThan
code-creation,Builtin,2,9141,0x64950d943b00,968,LessThanOrEqual
code-creation,Builtin,2,9143,0x64950d943f00,968,GreaterThan
code-creation,Builtin,2,9145,0x64950d944300,968,GreaterThanOrEqual
code-creation,Builtin,2,9147,0x64950d944700,1068,Equal
code-creation,Builtin,2,9149,0x64950d944b40,512,StrictEqual
code-creation,Builtin,2,9151,0x64950d944d80,3684,ObjectFromEntries
code-creation,Builtin,2,9153,0x64950d945c00,4352,GroupByGeneric
code-creation,Builtin,2,9155,0x64950d946d40,8988,ObjectGroupBy
code-creation,Builtin,2,9157,0x64950d949080,884,CreateObjectWithoutProperties
code-creation,Builtin,2,9159,0x64950d949400,144,ObjectIsExtensible
code-creation,Builtin,2,9161,0x64950d9494c0,148,ObjectPreventExtensions
code-creation,Builtin,2,9163,0x64950d949580,152,ObjectGetPrototypeOf
code-creation,Builtin,2,9165,0x64950d949640,288,ObjectSetPrototypeOf
code-creation,Builtin,2,9167,0x64950d949780,80,ObjectPrototypeToString
code-creation,Builtin,2,9169,0x64950d949800,100,ObjectPrototypeValueOf
code-creation,Builtin,2,9171,0x64950d949880,184,ObjectPrototypeToLocaleString
code-creation,Builtin,2,9173,0x64950d949940,1008,FulfillPromise
code-creation,Builtin,2,9175,0x64950d949d40,1160,RejectPromise
code-creation,Builtin,2,9177,0x64950d94a200,2784,NewPromiseCapability
code-creation,Builtin,2,9179,0x64950d94ad00,172,PromiseCapabilityDefaultReject
code-creation,Builtin,2,9182,0x64950d94adc0,156,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,9184,0x64950d94ae80,1248,PerformPromiseThen
code-creation,Builtin,2,9186,0x64950d94b380,724,PromiseReject
code-creation,Builtin,2,9188,0x64950d94b680,316,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,9190,0x64950d94b7c0,124,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,9193,0x64950d94b840,4620,PromiseAll
code-creation,Builtin,2,9194,0x64950d94ca80,5020,PromiseAllSettled
code-creation,Builtin,2,9196,0x64950d94de40,1080,PromiseAllResolveElementClosure
code-creation,Builtin,2,9199,0x64950d94e280,1456,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,9201,0x64950d94e840,1456,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,9204,0x64950d94ee00,1164,PromiseAnyRejectElementClosure
code-creation,Builtin,2,9206,0x64950d94f2c0,2888,PromiseAny
code-creation,Builtin,2,9208,0x64950d94fe40,3196,PromiseConstructor
code-creation,Builtin,2,9210,0x64950d950ac0,300,PromisePrototypeCatch
code-creation,Builtin,2,9212,0x64950d950c00,92,PromiseValueThunkFinally
code-creation,Builtin,2,9214,0x64950d950c80,84,PromiseThrowerFinally
code-creation,Builtin,2,9216,0x64950d950d00,1056,PromiseCatchFinally
code-creation,Builtin,2,9219,0x64950d951140,1056,PromiseThenFinally
code-creation,Builtin,2,9221,0x64950d951580,1728,PromisePrototypeFinally
code-creation,Builtin,2,9223,0x64950d951c80,1328,PromiseResolveThenableJob
code-creation,Builtin,2,9225,0x64950d9521c0,1636,PromiseRace
code-creation,Builtin,2,9227,0x64950d952840,388,PromiseFulfillReactionJob
code-creation,Builtin,2,9229,0x64950d952a00,496,PromiseRejectReactionJob
code-creation,Builtin,2,9231,0x64950d952c00,148,PromiseResolveTrampoline
code-creation,Builtin,2,9233,0x64950d952cc0,896,PromiseResolve
code-creation,Builtin,2,9236,0x64950d953080,772,ResolvePromise
code-creation,Builtin,2,9238,0x64950d9533c0,2140,PromisePrototypeThen
code-creation,Builtin,2,9240,0x64950d953c40,332,PromiseWithResolvers
code-creation,Builtin,2,9242,0x64950d953dc0,444,ProxyConstructor
code-creation,Builtin,2,9244,0x64950d953f80,2708,ProxyDeleteProperty
code-creation,Builtin,2,9246,0x64950d954a40,2996,ProxyGetProperty
code-creation,Builtin,2,9248,0x64950d955600,1088,ProxyGetPrototypeOf
code-creation,Builtin,2,9250,0x64950d955a80,2628,ProxyHasProperty
code-creation,Builtin,2,9252,0x64950d956500,832,ProxyIsExtensible
code-creation,Builtin,2,9254,0x64950d956880,868,ProxyPreventExtensions
code-creation,Builtin,2,9256,0x64950d956c00,1144,ProxyRevocable
code-creation,Builtin,2,9258,0x64950d957080,132,ProxyRevoke
code-creation,Builtin,2,9260,0x64950d957140,3212,ProxySetProperty
code-creation,Builtin,2,9262,0x64950d957e00,1376,ProxySetPrototypeOf
code-creation,Builtin,2,9264,0x64950d958380,200,ReflectIsExtensible
code-creation,Builtin,2,9266,0x64950d958480,208,ReflectPreventExtensions
code-creation,Builtin,2,9268,0x64950d958580,176,ReflectGetPrototypeOf
code-creation,Builtin,2,9270,0x64950d958640,312,ReflectSetPrototypeOf
code-creation,Builtin,2,9272,0x64950d958780,288,ReflectGet
code-creation,Builtin,2,9274,0x64950d9588c0,152,ReflectDeleteProperty
code-creation,Builtin,2,9276,0x64950d958980,148,ReflectHas
code-creation,Builtin,2,9278,0x64950d958a40,5000,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,9280,0x64950d959e00,5592,RegExpPrototypeExecSlow
code-creation,Builtin,2,9282,0x64950d95b400,5672,RegExpPrototypeExec
code-creation,Builtin,2,9284,0x64950d95ca40,2720,RegExpPrototypeMatchAll
code-creation,Builtin,2,9287,0x64950d95d500,10232,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,9289,0x64950d95fd00,9608,RegExpMatchFast
code-creation,Builtin,2,9291,0x64950d9622c0,4112,RegExpPrototypeMatch
code-creation,Builtin,2,9293,0x64950d963300,6544,RegExpReplace
code-creation,Builtin,2,9295,0x64950d964cc0,524,RegExpPrototypeReplace
code-creation,Builtin,2,9297,0x64950d964f00,1392,RegExpSearchFast
code-creation,Builtin,2,9299,0x64950d965480,1680,RegExpPrototypeSearch
code-creation,Builtin,2,9301,0x64950d965b40,216,RegExpPrototypeSourceGetter
code-creation,Builtin,2,9303,0x64950d965c40,6384,RegExpSplit
code-creation,Builtin,2,9305,0x64950d967540,468,RegExpPrototypeSplit
code-creation,Builtin,2,9307,0x64950d967740,2288,RegExpPrototypeTest
code-creation,Builtin,2,9309,0x64950d968040,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,9311,0x64950d9685c0,232,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,9313,0x64950d9686c0,236,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,9316,0x64950d9687c0,236,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,9318,0x64950d9688c0,240,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,9320,0x64950d9689c0,240,RegExpPrototypeLinearGetter
code-creation,Builtin,2,9322,0x64950d968ac0,236,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,9325,0x64950d968bc0,256,RegExpPrototypeStickyGetter
code-creation,Builtin,2,9327,0x64950d968d00,256,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,9329,0x64950d968e40,240,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,9331,0x64950d968f40,2764,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,9333,0x64950d969a40,12644,SetPrototypeDifference
code-creation,Builtin,2,9335,0x64950d96cbc0,13892,SetPrototypeIntersection
code-creation,Builtin,2,9338,0x64950d970240,3248,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,9340,0x64950d970f00,1856,SetPrototypeIsSubsetOf
code-creation,Builtin,2,9342,0x64950d971680,2428,SetPrototypeIsSupersetOf
code-creation,Builtin,2,9344,0x64950d972000,12644,SetPrototypeSymmetricDifference
code-creation,Builtin,2,9346,0x64950d975180,7916,SetPrototypeUnion
code-creation,Builtin,2,9348,0x64950d977080,1264,StringPrototypeAt
code-creation,Builtin,2,9350,0x64950d977580,3376,StringPrototypeEndsWith
code-creation,Builtin,2,9352,0x64950d9782c0,504,CreateHTML
code-creation,Builtin,2,9354,0x64950d9784c0,156,StringPrototypeAnchor
code-creation,Builtin,2,9358,0x64950d978580,124,StringPrototypeBig
code-creation,Builtin,2,9360,0x64950d978600,124,StringPrototypeBlink
code-creation,Builtin,2,9362,0x64950d978680,124,StringPrototypeBold
code-creation,Builtin,2,9364,0x64950d978700,156,StringPrototypeFontcolor
code-creation,Builtin,2,9366,0x64950d9787c0,156,StringPrototypeFontsize
code-creation,Builtin,2,9368,0x64950d978880,124,StringPrototypeFixed
code-creation,Builtin,2,9370,0x64950d978900,124,StringPrototypeItalics
code-creation,Builtin,2,9372,0x64950d978980,156,StringPrototypeLink
code-creation,Builtin,2,9374,0x64950d978a40,124,StringPrototypeSmall
code-creation,Builtin,2,9376,0x64950d978ac0,124,StringPrototypeStrike
code-creation,Builtin,2,9378,0x64950d978b40,124,StringPrototypeSub
code-creation,Builtin,2,9380,0x64950d978bc0,124,StringPrototypeSup
code-creation,Builtin,2,9382,0x64950d978c40,1032,StringPrototypeIncludes
code-creation,Builtin,2,9384,0x64950d979080,640,StringPrototypeIndexOf
code-creation,Builtin,2,9386,0x64950d979340,648,StringPrototypeIsWellFormed
code-creation,Builtin,2,9389,0x64950d979600,336,StringPrototypeIterator
code-creation,Builtin,2,9391,0x64950d979780,1840,StringIteratorPrototypeNext
code-creation,Builtin,2,9393,0x64950d979ec0,1352,StringPrototypeMatch
code-creation,Builtin,2,9395,0x64950d97a440,1352,StringPrototypeSearch
code-creation,Builtin,2,9397,0x64950d97a9c0,796,StringPrototypePadStart
code-creation,Builtin,2,9400,0x64950d97ad00,796,StringPrototypePadEnd
code-creation,Builtin,2,9402,0x64950d97b040,156,StringRepeat
code-creation,Builtin,2,9403,0x64950d97b100,396,StringPrototypeRepeat
code-creation,Builtin,2,9405,0x64950d97b2c0,13616,StringPrototypeReplaceAll
code-creation,Builtin,2,9408,0x64950d97e800,4552,StringPrototypeSlice
code-creation,Builtin,2,9410,0x64950d97fa00,3376,StringPrototypeStartsWith
code-creation,Builtin,2,9412,0x64950d980740,4336,StringPrototypeSubstr
code-creation,Builtin,2,9414,0x64950d981840,4400,StringPrototypeSubstring
code-creation,Builtin,2,9416,0x64950d982980,964,StringPrototypeToWellFormed
code-creation,Builtin,2,9418,0x64950d982d80,9048,StringPrototypeTrim
code-creation,Builtin,2,9420,0x64950d985100,8688,StringPrototypeTrimStart
code-creation,Builtin,2,9422,0x64950d987300,8136,StringPrototypeTrimEnd
code-creation,Builtin,2,9424,0x64950d989300,1304,SuppressedErrorConstructor
code-creation,Builtin,2,9427,0x64950d989840,220,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,9429,0x64950d989940,212,SymbolPrototypeToPrimitive
code-creation,Builtin,2,9431,0x64950d989a40,232,SymbolPrototypeToString
code-creation,Builtin,2,9433,0x64950d989b40,212,SymbolPrototypeValueOf
code-creation,Builtin,2,9435,0x64950d989c40,1136,TypedArrayPrototypeAt
code-creation,Builtin,2,9437,0x64950d98a0c0,10928,CreateTypedArray
code-creation,Builtin,2,9439,0x64950d98cb80,1736,TypedArrayPrototypeEvery
code-creation,Builtin,2,9441,0x64950d98d280,396,TypedArrayPrototypeEntries
code-creation,Builtin,2,9444,0x64950d98d440,4424,TypedArrayPrototypeFilter
code-creation,Builtin,2,9446,0x64950d98e5c0,1728,TypedArrayPrototypeFind
code-creation,Builtin,2,9448,0x64950d98ecc0,1728,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,9450,0x64950d98f3c0,1752,TypedArrayPrototypeFindLast
code-creation,Builtin,2,9452,0x64950d98fac0,1752,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,9455,0x64950d9901c0,1592,TypedArrayPrototypeForEach
code-creation,Builtin,2,9457,0x64950d990800,3728,TypedArrayFrom
code-creation,Builtin,2,9459,0x64950d9916c0,396,TypedArrayPrototypeKeys
code-creation,Builtin,2,9461,0x64950d991880,1328,TypedArrayOf
code-creation,Builtin,2,9463,0x64950d991dc0,1664,TypedArrayPrototypeReduce
code-creation,Builtin,2,9465,0x64950d992480,1656,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,9467,0x64950d992b00,3136,TypedArrayPrototypeSet
code-creation,Builtin,2,9469,0x64950d993780,3912,TypedArrayPrototypeSlice
code-creation,Builtin,2,9471,0x64950d994700,1728,TypedArrayPrototypeSome
code-creation,Builtin,2,9473,0x64950d994e00,960,TypedArrayMergeSort
code-creation,Builtin,2,9475,0x64950d995200,2232,TypedArrayPrototypeSort
code-creation,Builtin,2,9479,0x64950d995ac0,2856,TypedArrayPrototypeSubArray
code-creation,Builtin,2,9481,0x64950d996600,1616,TypedArrayPrototypeToReversed
code-creation,Builtin,2,9483,0x64950d996c80,3032,TypedArrayPrototypeToSorted
code-creation,Builtin,2,9485,0x64950d997880,396,TypedArrayPrototypeValues
code-creation,Builtin,2,9487,0x64950d997a40,2968,TypedArrayPrototypeWith
code-creation,Builtin,2,9490,0x64950d998600,1272,WeakRefConstructor
code-creation,Builtin,2,9492,0x64950d998b00,188,WeakRefDeref
code-creation,Builtin,2,9493,0x64950d998bc0,720,NewSloppyArgumentsElements
code-creation,Builtin,2,9496,0x64950d998ec0,352,NewStrictArgumentsElements
code-creation,Builtin,2,9498,0x64950d999040,364,NewRestArgumentsElements
code-creation,Builtin,2,9500,0x64950d9991c0,1572,FastNewSloppyArguments
code-creation,Builtin,2,9502,0x64950d999800,516,FastNewStrictArguments
code-creation,Builtin,2,9504,0x64950d999a40,616,FastNewRestArguments
code-creation,Builtin,2,9506,0x64950d999cc0,512,StoreCurrentScriptContextSlotBaseline
code-creation,Builtin,2,9509,0x64950d999f00,600,StoreScriptContextSlotBaseline
code-creation,Builtin,2,9511,0x64950d99a180,676,StringSlowFlatten
code-creation,Builtin,2,9513,0x64950d99a440,2104,StringIndexOf
code-creation,Builtin,2,9515,0x64950d99ac80,2056,TestTurbofanType
code-creation,Builtin,2,9517,0x64950d99b4c0,160,CheckTurbofanType
code-creation,Builtin,2,9519,0x64950d99b580,556,CheckTurboshaftWord32Type
code-creation,Builtin,2,9521,0x64950d99b7c0,952,CheckTurboshaftWord64Type
code-creation,Builtin,2,9523,0x64950d99bb80,1096,CheckTurboshaftFloat32Type
code-creation,Builtin,2,9525,0x64950d99c000,1028,CheckTurboshaftFloat64Type
code-creation,Builtin,2,9527,0x64950d99c440,156,DebugPrintWordPtr
code-creation,Builtin,2,9529,0x64950d99c500,160,DebugPrintFloat64
code-creation,Builtin,2,9531,0x64950d99c5c0,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,9533,0x64950d99c600,8,TestHelperPlus1
code-creation,Builtin,2,9535,0x64950d99c640,8,TestHelperPlus2
code-creation,Builtin,2,9537,0x64950d99c680,92,NewSmiBox
code-creation,Builtin,2,9539,0x64950d99c700,16,ReturnTwoValues
code-creation,Builtin,2,9541,0x64950d99c740,28,ThrowAsBuiltin
code-creation,Builtin,2,9543,0x64950d99c780,84,TestCallNever
code-creation,Builtin,2,9545,0x64950d99c800,32,Load_FastSmiElements_0
code-creation,Builtin,2,9547,0x64950d99c840,32,Load_FastObjectElements_0
code-creation,Builtin,2,9549,0x64950d99c880,140,Load_FastDoubleElements_0
code-creation,Builtin,2,9551,0x64950d99c940,28,Store_FastSmiElements_0
code-creation,Builtin,2,9553,0x64950d99c980,100,Store_FastObjectElements_0
code-creation,Builtin,2,9555,0x64950d99ca00,48,Store_FastDoubleElements_0
code-creation,Builtin,2,9558,0x64950d99ca40,40,Delete_FastSmiElements_0
code-creation,Builtin,2,9560,0x64950d99ca80,40,Delete_FastObjectElements_0
code-creation,Builtin,2,9562,0x64950d99cac0,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,9564,0x64950d99cb00,200,SortCompareDefault
code-creation,Builtin,2,9566,0x64950d99cc00,92,SortCompareUserFn
code-creation,Builtin,2,9568,0x64950d99cc80,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,9571,0x64950d99ccc0,376,Copy
code-creation,Builtin,2,9572,0x64950d99ce40,5932,MergeAt
code-creation,Builtin,2,9574,0x64950d99e580,896,GallopLeft
code-creation,Builtin,2,9576,0x64950d99e940,968,GallopRight
code-creation,Builtin,2,9578,0x64950d99ed40,4116,ArrayTimSort
code-creation,Builtin,2,9580,0x64950d99fd80,2020,ArrayPrototypeSort
code-creation,Builtin,2,9582,0x64950d9a0580,4212,StringFastLocaleCompare
code-creation,Builtin,2,9584,0x64950d9a1600,60,JSToJSWrapperInvalidSig
code-creation,Builtin,2,9586,0x64950d9a1640,3068,JSToJSWrapper
code-creation,Builtin,2,9588,0x64950d9a2240,3420,JSToWasmWrapper
code-creation,Builtin,2,9591,0x64950d9a2fc0,3584,WasmPromisingWithSuspender
code-creation,Builtin,2,9593,0x64950d9a3e00,3456,WasmPromising
code-creation,Builtin,2,9595,0x64950d9a4bc0,3300,JSToWasmHandleReturns
code-creation,Builtin,2,9597,0x64950d9a58c0,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,9599,0x64950d9a5940,76,WasmFuncRefToJS
code-creation,Builtin,2,9602,0x64950d9a59c0,120,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,9604,0x64950d9a5a40,72,WasmTaggedToFloat64
code-creation,Builtin,2,9606,0x64950d9a5ac0,80,WasmTaggedToFloat32
code-creation,Builtin,2,9608,0x64950d9a5b40,76,WasmMemoryGrow
code-creation,Builtin,2,9610,0x64950d9a5bc0,128,WasmTableInit
code-creation,Builtin,2,9612,0x64950d9a5c80,128,WasmTableCopy
code-creation,Builtin,2,9614,0x64950d9a5d40,92,WasmTableFill
code-creation,Builtin,2,9616,0x64950d9a5dc0,80,WasmTableGrow
code-creation,Builtin,2,9618,0x64950d9a5e40,76,WasmTableGet
code-creation,Builtin,2,9620,0x64950d9a5ec0,160,WasmTableSet
code-creation,Builtin,2,9622,0x64950d9a5f80,156,WasmTableGetFuncRef
code-creation,Builtin,2,9624,0x64950d9a6040,64,WasmFunctionTableGet
code-creation,Builtin,2,9626,0x64950d9a60c0,112,WasmTableSetFuncRef
code-creation,Builtin,2,9628,0x64950d9a6140,104,WasmRefFunc
code-creation,Builtin,2,9630,0x64950d9a61c0,32,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,9632,0x64950d9a6200,220,WasmAllocateZeroedFixedArray
code-creation,Builtin,2,9634,0x64950d9a6300,156,WasmAllocateFixedArray
code-creation,Builtin,2,9636,0x64950d9a63c0,44,WasmThrow
code-creation,Builtin,2,9638,0x64950d9a6400,56,WasmRethrow
code-creation,Builtin,2,9640,0x64950d9a6440,44,WasmRethrowExplicitContext
code-creation,Builtin,2,9642,0x64950d9a6480,48,WasmTriggerTierUp
code-creation,Builtin,2,9644,0x64950d9a64c0,32,WasmStackGuard
code-creation,Builtin,2,9646,0x64950d9a6500,32,WasmStackOverflow
code-creation,Builtin,2,9648,0x64950d9a6540,44,WasmTraceMemory
code-creation,Builtin,2,9650,0x64950d9a6580,32,WasmTraceEnter
code-creation,Builtin,2,9652,0x64950d9a65c0,44,WasmTraceExit
code-creation,Builtin,2,9654,0x64950d9a6600,716,WasmAllocateJSArray
code-creation,Builtin,2,9656,0x64950d9a6900,96,WasmAllocateStructWithRtt
code-creation,Builtin,2,9658,0x64950d9a6980,124,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,9661,0x64950d9a6a00,156,WasmArrayNewSegment
code-creation,Builtin,2,9663,0x64950d9a6ac0,208,WasmArrayInitSegment
code-creation,Builtin,2,9665,0x64950d9a6bc0,140,WasmArrayCopyWithChecks
code-creation,Builtin,2,9667,0x64950d9a6c80,100,WasmArrayCopy
code-creation,Builtin,2,9669,0x64950d9a6d00,104,WasmUint32ToNumber
code-creation,Builtin,2,9671,0x64950d9a6d80,136,UintPtr53ToNumber
code-creation,Builtin,2,9673,0x64950d9a6e40,188,WasmI32AtomicWait
code-creation,Builtin,2,9675,0x64950d9a6f00,104,WasmI64AtomicWait
code-creation,Builtin,2,9677,0x64950d9a6f80,1196,CallRefIC
code-creation,Builtin,2,9678,0x64950d9a7440,1160,CallIndirectIC
code-creation,Builtin,2,9680,0x64950d9a7900,1764,WasmGetOwnProperty
code-creation,Builtin,2,9682,0x64950d9a8000,100,WasmTrap
code-creation,Builtin,2,9684,0x64950d9a8080,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,9686,0x64950d9a80c0,88,WasmTrapHandlerThrowTrap
code-creation,Builtin,2,9688,0x64950d9a8140,20,WasmPropagateException
code-creation,Builtin,2,9690,0x64950d9a8180,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,9693,0x64950d9a81c0,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,9695,0x64950d9a8200,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,9697,0x64950d9a8240,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,9699,0x64950d9a8280,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,9701,0x64950d9a82c0,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,9703,0x64950d9a8300,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,9706,0x64950d9a8340,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,9708,0x64950d9a8380,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,9710,0x64950d9a83c0,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,9713,0x64950d9a8400,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,9715,0x64950d9a8440,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,9717,0x64950d9a8480,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,9719,0x64950d9a84c0,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,9721,0x64950d9a8500,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,9725,0x64950d9a8540,12,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,9727,0x64950d9a8580,292,WasmStringNewWtf8
code-creation,Builtin,2,9729,0x64950d9a86c0,168,WasmStringNewWtf8Array
code-creation,Builtin,2,9731,0x64950d9a8780,272,WasmStringNewWtf16
code-creation,Builtin,2,9733,0x64950d9a88c0,1204,WasmStringNewWtf16Array
code-creation,Builtin,2,9735,0x64950d9a8d80,148,WasmStringFromDataSegment
code-creation,Builtin,2,9738,0x64950d9a8e40,56,WasmStringAsWtf16
code-creation,Builtin,2,9740,0x64950d9a8e80,48,WasmStringConst
code-creation,Builtin,2,9742,0x64950d9a8ec0,96,WasmStringMeasureUtf8
code-creation,Builtin,2,9744,0x64950d9a8f40,96,WasmStringMeasureWtf8
code-creation,Builtin,2,9746,0x64950d9a8fc0,280,WasmStringEncodeWtf8
code-creation,Builtin,2,9748,0x64950d9a9100,136,WasmStringEncodeWtf8Array
code-creation,Builtin,2,9750,0x64950d9a91c0,48,WasmStringToUtf8Array
code-creation,Builtin,2,9752,0x64950d9a9200,236,WasmStringEncodeWtf16
code-creation,Builtin,2,9754,0x64950d9a9300,908,WasmStringEncodeWtf16Array
code-creation,Builtin,2,9756,0x64950d9a96c0,64,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,9758,0x64950d9a9740,64,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,9761,0x64950d9a97c0,48,ThrowDataViewTypeError
code-creation,Builtin,2,9763,0x64950d9a9800,48,ThrowDataViewDetachedError
code-creation,Builtin,2,9765,0x64950d9a9840,48,ThrowDataViewOutOfBounds
code-creation,Builtin,2,9767,0x64950d9a9880,24,WasmStringConcat
code-creation,Builtin,2,9769,0x64950d9a98c0,56,WasmStringEqual
code-creation,Builtin,2,9771,0x64950d9a9900,132,WasmStringIsUSVSequence
code-creation,Builtin,2,9773,0x64950d9a99c0,44,WasmStringAsWtf8
code-creation,Builtin,2,9775,0x64950d9a9a00,236,WasmStringViewWtf8Advance
code-creation,Builtin,2,9777,0x64950d9a9b00,304,WasmStringViewWtf8Encode
code-creation,Builtin,2,9779,0x64950d9a9c40,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,9781,0x64950d9a9d00,568,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,9784,0x64950d9a9f40,268,WasmStringViewWtf16Encode
code-creation,Builtin,2,9786,0x64950d9aa080,5712,WasmStringViewWtf16Slice
code-creation,Builtin,2,9788,0x64950d9ab700,92,WasmStringAsIter
code-creation,Builtin,2,9790,0x64950d9ab780,1232,WasmStringCodePointAt
code-creation,Builtin,2,9792,0x64950d9abc80,1264,WasmStringViewIterNext
code-creation,Builtin,2,9794,0x64950d9ac180,1464,WasmStringViewIterAdvance
code-creation,Builtin,2,9796,0x64950d9ac740,1464,WasmStringViewIterRewind
code-creation,Builtin,2,9798,0x64950d9acd00,4768,WasmStringViewIterSlice
code-creation,Builtin,2,9800,0x64950d9adfc0,2560,WasmIntToString
code-creation,Builtin,2,9802,0x64950d9aea00,164,WasmStringToDouble
code-creation,Builtin,2,9804,0x64950d9aeac0,84,WasmStringFromCodePoint
code-creation,Builtin,2,9806,0x64950d9aeb40,36,WasmStringHash
code-creation,Builtin,2,9808,0x64950d9aeb80,56,WasmAnyConvertExtern
code-creation,Builtin,2,9810,0x64950d9aebc0,480,WasmFastApiCallTypeCheckAndUpdateIC
code-creation,Builtin,2,9813,0x64950d9aedc0,136,WebAssemblyStringCast
code-creation,Builtin,2,9815,0x64950d9aee80,120,WebAssemblyStringTest
code-creation,Builtin,2,9817,0x64950d9aef00,420,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,9819,0x64950d9af0c0,436,WebAssemblyStringFromUtf8Array
code-creation,Builtin,2,9821,0x64950d9af280,480,WebAssemblyStringIntoUtf8Array
code-creation,Builtin,2,9824,0x64950d9af480,160,WebAssemblyStringToUtf8Array
code-creation,Builtin,2,9826,0x64950d9af540,364,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,9828,0x64950d9af6c0,320,WebAssemblyStringFromCharCode
code-creation,Builtin,2,9830,0x64950d9af840,392,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,9833,0x64950d9afa00,1504,WebAssemblyStringCodePointAt
code-creation,Builtin,2,9835,0x64950d9b0000,824,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,9837,0x64950d9b0340,140,WebAssemblyStringLength
code-creation,Builtin,2,9839,0x64950d9b0400,160,WebAssemblyStringMeasureUtf8
code-creation,Builtin,2,9841,0x64950d9b04c0,216,WebAssemblyStringConcat
code-creation,Builtin,2,9843,0x64950d9b05c0,476,WebAssemblyStringSubstring
code-creation,Builtin,2,9848,0x64950d9b07c0,408,WebAssemblyStringEquals
code-creation,Builtin,2,9850,0x64950d9b0980,216,WebAssemblyStringCompare
code-creation,Builtin,2,9852,0x64950d9b0a80,160,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,9855,0x64950d9b0b40,116,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,9857,0x64950d9b0bc0,208,LoadJoinTypedElement_Float16Elements_0
code-creation,Builtin,2,9859,0x64950d9b0cc0,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,9862,0x64950d9b0d40,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,9864,0x64950d9b0dc0,20,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,9867,0x64950d9b0e00,188,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,9869,0x64950d9b0ec0,212,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,9872,0x64950d9b0fc0,20,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,9874,0x64950d9b1000,20,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,9877,0x64950d9b1040,20,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,9879,0x64950d9b1080,20,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,9882,0x64950d9b10c0,120,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,9884,0x64950d9b1140,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,9886,0x64950d9b1180,36,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,9889,0x64950d9b11c0,36,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,9891,0x64950d9b1200,36,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,9893,0x64950d9b1240,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,9896,0x64950d9b1280,3680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,9898,0x64950d9b2100,28,Store_GenericElementsAccessor_0
code-creation,Builtin,2,9901,0x64950d9b2140,32,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,9903,0x64950d9b2180,116,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,9906,0x64950d9b2200,196,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,9908,0x64950d9b2300,560,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,9911,0x64950d9b2540,208,LoadTypedElement_Float16Elements_0
code-creation,Builtin,2,9913,0x64950d9b2640,192,StoreTypedElementNumeric_Float16Elements_0
code-creation,Builtin,2,9915,0x64950d9b2740,856,StoreTypedElementJSAny_Float16Elements_0
code-creation,Builtin,2,9918,0x64950d9b2ac0,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,9920,0x64950d9b2b40,28,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,9923,0x64950d9b2b80,536,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,9925,0x64950d9b2dc0,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,9928,0x64950d9b2e40,24,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,9930,0x64950d9b2e80,528,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,9933,0x64950d9b30c0,20,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,9935,0x64950d9b3100,20,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,9938,0x64950d9b3140,984,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,9940,0x64950d9b3540,188,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,9943,0x64950d9b3600,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,9945,0x64950d9b3640,528,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,9948,0x64950d9b3880,212,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,9950,0x64950d9b3980,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,9953,0x64950d9b39c0,528,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,9955,0x64950d9b3c00,20,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,9958,0x64950d9b3c40,20,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,9960,0x64950d9b3c80,560,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,9963,0x64950d9b3ec0,20,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,9967,0x64950d9b3f00,20,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,9969,0x64950d9b3f40,560,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,9972,0x64950d9b4180,20,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,9974,0x64950d9b41c0,20,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,9976,0x64950d9b4200,560,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,9979,0x64950d9b4440,20,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,9981,0x64950d9b4480,20,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,9984,0x64950d9b44c0,560,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,9986,0x64950d9b4700,120,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,9988,0x64950d9b4780,196,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,9991,0x64950d9b4880,560,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,9993,0x64950d9b4ac0,12,CollatorConstructor
code-creation,Builtin,2,9995,0x64950d9b4b00,12,CollatorInternalCompare
code-creation,Builtin,2,9998,0x64950d9b4b40,12,CollatorPrototypeCompare
code-creation,Builtin,2,10000,0x64950d9b4b80,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,10002,0x64950d9b4bc0,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,10004,0x64950d9b4c00,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,10006,0x64950d9b4c40,12,DatePrototypeToLocaleString
code-creation,Builtin,2,10009,0x64950d9b4c80,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,10011,0x64950d9b4cc0,12,DateTimeFormatConstructor
code-creation,Builtin,2,10013,0x64950d9b4d00,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,10015,0x64950d9b4d40,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,10017,0x64950d9b4d80,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,10020,0x64950d9b4dc0,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,10022,0x64950d9b4e00,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,10025,0x64950d9b4e40,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,10027,0x64950d9b4e80,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,10030,0x64950d9b4ec0,12,DisplayNamesConstructor
code-creation,Builtin,2,10032,0x64950d9b4f00,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,10034,0x64950d9b4f40,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,10036,0x64950d9b4f80,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,10038,0x64950d9b4fc0,12,DurationFormatConstructor
code-creation,Builtin,2,10041,0x64950d9b5000,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,10043,0x64950d9b5040,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,10045,0x64950d9b5080,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,10048,0x64950d9b50c0,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,10053,0x64950d9b5100,12,IntlGetCanonicalLocales
code-creation,Builtin,2,10056,0x64950d9b5140,12,IntlSupportedValuesOf
code-creation,Builtin,2,10058,0x64950d9b5180,12,ListFormatConstructor
code-creation,Builtin,2,10061,0x64950d9b51c0,196,ListFormatPrototypeFormat
code-creation,Builtin,2,10063,0x64950d9b52c0,196,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,10066,0x64950d9b53c0,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,10069,0x64950d9b5400,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,10072,0x64950d9b5440,12,LocaleConstructor
code-creation,Builtin,2,10074,0x64950d9b5480,12,LocalePrototypeBaseName
code-creation,Builtin,2,10077,0x64950d9b54c0,12,LocalePrototypeCalendar
code-creation,Builtin,2,10080,0x64950d9b5500,12,LocalePrototypeCalendars
code-creation,Builtin,2,10082,0x64950d9b5540,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,10085,0x64950d9b5580,12,LocalePrototypeCollation
code-creation,Builtin,2,10088,0x64950d9b55c0,12,LocalePrototypeCollations
code-creation,Builtin,2,10090,0x64950d9b5600,12,LocalePrototypeGetCalendars
code-creation,Builtin,2,10093,0x64950d9b5640,12,LocalePrototypeGetCollations
code-creation,Builtin,2,10097,0x64950d9b5680,12,LocalePrototypeGetHourCycles
code-creation,Builtin,2,10100,0x64950d9b56c0,12,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,10103,0x64950d9b5700,12,LocalePrototypeGetTimeZones
code-creation,Builtin,2,10105,0x64950d9b5740,12,LocalePrototypeGetTextInfo
code-creation,Builtin,2,10108,0x64950d9b5780,12,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,10111,0x64950d9b57c0,12,LocalePrototypeHourCycle
code-creation,Builtin,2,10113,0x64950d9b5800,12,LocalePrototypeHourCycles
code-creation,Builtin,2,10116,0x64950d9b5840,12,LocalePrototypeLanguage
code-creation,Builtin,2,10119,0x64950d9b5880,12,LocalePrototypeMaximize
code-creation,Builtin,2,10121,0x64950d9b58c0,12,LocalePrototypeMinimize
code-creation,Builtin,2,10124,0x64950d9b5900,12,LocalePrototypeNumeric
code-creation,Builtin,2,10126,0x64950d9b5940,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,10129,0x64950d9b5980,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,10132,0x64950d9b59c0,12,LocalePrototypeRegion
code-creation,Builtin,2,10134,0x64950d9b5a00,12,LocalePrototypeScript
code-creation,Builtin,2,10137,0x64950d9b5a40,12,LocalePrototypeTextInfo
code-creation,Builtin,2,10140,0x64950d9b5a80,12,LocalePrototypeTimeZones
code-creation,Builtin,2,10142,0x64950d9b5ac0,12,LocalePrototypeToString
code-creation,Builtin,2,10145,0x64950d9b5b00,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,10147,0x64950d9b5b40,12,NumberFormatConstructor
code-creation,Builtin,2,10150,0x64950d9b5b80,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,10153,0x64950d9b5bc0,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,10156,0x64950d9b5c00,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,10159,0x64950d9b5c40,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,10161,0x64950d9b5c80,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,10164,0x64950d9b5cc0,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,10167,0x64950d9b5d00,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,10170,0x64950d9b5d40,12,PluralRulesConstructor
code-creation,Builtin,2,10173,0x64950d9b5d80,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,10176,0x64950d9b5dc0,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,10178,0x64950d9b5e00,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,10181,0x64950d9b5e40,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,10184,0x64950d9b5e80,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,10187,0x64950d9b5ec0,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,10189,0x64950d9b5f00,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,10192,0x64950d9b5f40,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,10195,0x64950d9b5f80,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,10198,0x64950d9b5fc0,12,SegmenterConstructor
code-creation,Builtin,2,10201,0x64950d9b6000,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,10204,0x64950d9b6040,12,SegmenterPrototypeSegment
code-creation,Builtin,2,10206,0x64950d9b6080,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,10209,0x64950d9b60c0,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,10212,0x64950d9b6100,12,SegmentsPrototypeContaining
code-creation,Builtin,2,10215,0x64950d9b6140,12,SegmentsPrototypeIterator
code-creation,Builtin,2,10217,0x64950d9b6180,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,10220,0x64950d9b61c0,1224,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,10223,0x64950d9b66c0,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,10225,0x64950d9b6700,196,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,10228,0x64950d9b6800,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,10231,0x64950d9b6840,744,StringToLowerCaseIntl
code-creation,Builtin,2,10234,0x64950d9b6b40,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,10236,0x64950d9b6b80,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,10241,0x64950d9b6bc0,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,10243,0x64950d9b6c00,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,10246,0x64950d9b6c40,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,10249,0x64950d9b6c80,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,10252,0x64950d9b6cc0,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,10255,0x64950d9b6d00,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,10258,0x64950d9b6d40,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,10261,0x64950d9b6d80,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,10264,0x64950d9b6dc0,12,V8BreakIteratorConstructor
code-creation,Builtin,2,10266,0x64950d9b6e00,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,10269,0x64950d9b6e40,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,10272,0x64950d9b6e80,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,10275,0x64950d9b6ec0,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,10278,0x64950d9b6f00,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,10280,0x64950d9b6f40,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,10283,0x64950d9b6f80,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,10286,0x64950d9b6fc0,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,10289,0x64950d9b7000,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,10292,0x64950d9b7040,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,10294,0x64950d9b7080,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,10297,0x64950d9b70c0,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,10301,0x64950d9b7100,24,Wide
code-creation,BytecodeHandler,0,10303,0x64950d9b7140,24,ExtraWide
code-creation,BytecodeHandler,0,10306,0x64950d9b7180,100,DebugBreakWide
code-creation,BytecodeHandler,0,10308,0x64950d9b7200,100,DebugBreakExtraWide
code-creation,BytecodeHandler,0,10311,0x64950d9b7280,156,DebugBreak0
code-creation,BytecodeHandler,0,10313,0x64950d9b7340,100,DebugBreak1
code-creation,BytecodeHandler,0,10316,0x64950d9b73c0,100,DebugBreak2
code-creation,BytecodeHandler,0,10318,0x64950d9b7440,100,DebugBreak3
code-creation,BytecodeHandler,0,10320,0x64950d9b74c0,100,DebugBreak4
code-creation,BytecodeHandler,0,10323,0x64950d9b7540,100,DebugBreak5
code-creation,BytecodeHandler,0,10325,0x64950d9b75c0,100,DebugBreak6
code-creation,BytecodeHandler,0,10328,0x64950d9b7640,32,Ldar
code-creation,BytecodeHandler,0,10330,0x64950d9b7680,56,LdaZero
code-creation,BytecodeHandler,0,10332,0x64950d9b76c0,56,LdaSmi
code-creation,BytecodeHandler,0,10335,0x64950d9b7700,64,LdaUndefined
code-creation,BytecodeHandler,0,10337,0x64950d9b7780,64,LdaNull
code-creation,BytecodeHandler,0,10339,0x64950d9b7800,64,LdaTheHole
code-creation,BytecodeHandler,0,10342,0x64950d9b7880,24,LdaTrue
code-creation,BytecodeHandler,0,10344,0x64950d9b78c0,24,LdaFalse
code-creation,BytecodeHandler,0,10346,0x64950d9b7900,68,LdaConstant
code-creation,BytecodeHandler,0,10349,0x64950d9b7980,164,LdaContextSlot
code-creation,BytecodeHandler,0,10352,0x64950d9b7a40,164,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,10355,0x64950d9b7b00,80,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,10357,0x64950d9b7b80,80,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,10360,0x64950d9b7c00,32,Star
code-creation,BytecodeHandler,0,10362,0x64950d9b7c40,40,Mov
code-creation,BytecodeHandler,0,10365,0x64950d9b7c80,40,PushContext
code-creation,BytecodeHandler,0,10367,0x64950d9b7cc0,36,PopContext
code-creation,BytecodeHandler,0,10369,0x64950d9b7d00,52,TestReferenceEqual
code-creation,BytecodeHandler,0,10372,0x64950d9b7d40,60,TestUndetectable
code-creation,BytecodeHandler,0,10374,0x64950d9b7d80,44,TestNull
code-creation,BytecodeHandler,0,10377,0x64950d9b7dc0,44,TestUndefined
code-creation,BytecodeHandler,0,10379,0x64950d9b7e00,372,TestTypeOf
code-creation,BytecodeHandler,0,10381,0x64950d9b7f80,5204,LdaGlobal
code-creation,BytecodeHandler,0,10384,0x64950d9b9400,4080,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,10388,0x64950d9ba400,132,StaGlobal
code-creation,BytecodeHandler,0,10390,0x64950d9ba4c0,196,StaContextSlot
code-creation,BytecodeHandler,0,10393,0x64950d9ba5c0,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,10395,0x64950d9ba640,636,StaScriptContextSlot
code-creation,BytecodeHandler,0,10398,0x64950d9ba8c0,552,StaCurrentScriptContextSlot
code-creation,BytecodeHandler,0,10401,0x64950d9bab00,124,LdaLookupSlot
code-creation,BytecodeHandler,0,10403,0x64950d9bab80,292,LdaLookupContextSlot
code-creation,BytecodeHandler,0,10406,0x64950d9bacc0,4376,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,10408,0x64950d9bbe00,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,10411,0x64950d9bbe80,292,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,10414,0x64950d9bbfc0,4276,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,10417,0x64950d9bd080,204,StaLookupSlot
code-creation,BytecodeHandler,0,10419,0x64950d9bd180,4840,GetNamedProperty
code-creation,BytecodeHandler,0,10422,0x64950d9be480,156,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,10424,0x64950d9be540,164,GetKeyedProperty
code-creation,BytecodeHandler,0,10427,0x64950d9be600,148,GetEnumeratedKeyedProperty
code-creation,BytecodeHandler,0,10430,0x64950d9be6c0,216,LdaModuleVariable
code-creation,BytecodeHandler,0,10432,0x64950d9be7c0,336,StaModuleVariable
code-creation,BytecodeHandler,0,10435,0x64950d9be940,144,SetNamedProperty
code-creation,BytecodeHandler,0,10437,0x64950d9bea00,144,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,10440,0x64950d9beac0,132,SetKeyedProperty
code-creation,BytecodeHandler,0,10442,0x64950d9beb80,144,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,10445,0x64950d9bec40,132,StaInArrayLiteral
code-creation,BytecodeHandler,0,10448,0x64950d9bed00,164,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,10450,0x64950d9bedc0,1468,Add
code-creation,BytecodeHandler,0,10453,0x64950d9bf380,1424,Sub
code-creation,BytecodeHandler,0,10455,0x64950d9bf940,1640,Mul
code-creation,BytecodeHandler,0,10458,0x64950d9bffc0,1552,Div
code-creation,BytecodeHandler,0,10460,0x64950d9c0600,1604,Mod
code-creation,BytecodeHandler,0,10462,0x64950d9c0c80,876,Exp
code-creation,BytecodeHandler,0,10465,0x64950d9c1000,1952,BitwiseOr
code-creation,BytecodeHandler,0,10467,0x64950d9c17c0,1952,BitwiseXor
code-creation,BytecodeHandler,0,10469,0x64950d9c1f80,1952,BitwiseAnd
code-creation,BytecodeHandler,0,10472,0x64950d9c2740,1428,ShiftLeft
code-creation,BytecodeHandler,0,10474,0x64950d9c2d00,1428,ShiftRight
code-creation,BytecodeHandler,0,10477,0x64950d9c32c0,1308,ShiftRightLogical
code-creation,BytecodeHandler,0,10479,0x64950d9c3800,460,AddSmi
code-creation,BytecodeHandler,0,10481,0x64950d9c3a00,584,SubSmi
code-creation,BytecodeHandler,0,10484,0x64950d9c3c80,752,MulSmi
code-creation,BytecodeHandler,0,10486,0x64950d9c3f80,636,DivSmi
code-creation,BytecodeHandler,0,10489,0x64950d9c4200,648,ModSmi
code-creation,BytecodeHandler,0,10491,0x64950d9c44c0,608,ExpSmi
code-creation,BytecodeHandler,0,10493,0x64950d9c4740,628,BitwiseOrSmi
code-creation,BytecodeHandler,0,10496,0x64950d9c49c0,628,BitwiseXorSmi
code-creation,BytecodeHandler,0,10498,0x64950d9c4c40,628,BitwiseAndSmi
code-creation,BytecodeHandler,0,10501,0x64950d9c4ec0,792,ShiftLeftSmi
code-creation,BytecodeHandler,0,10503,0x64950d9c5200,632,ShiftRightSmi
code-creation,BytecodeHandler,0,10506,0x64950d9c5480,800,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,10509,0x64950d9c57c0,704,Inc
code-creation,BytecodeHandler,0,10511,0x64950d9c5ac0,704,Dec
code-creation,BytecodeHandler,0,10513,0x64950d9c5dc0,692,Negate
code-creation,BytecodeHandler,0,10515,0x64950d9c6080,704,BitwiseNot
code-creation,BytecodeHandler,0,10518,0x64950d9c6380,136,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,10520,0x64950d9c6440,44,LogicalNot
code-creation,BytecodeHandler,0,10523,0x64950d9c6480,592,TypeOf
code-creation,BytecodeHandler,0,10525,0x64950d9c6700,112,DeletePropertyStrict
code-creation,BytecodeHandler,0,10528,0x64950d9c6780,108,DeletePropertySloppy
code-creation,BytecodeHandler,0,10532,0x64950d9c6800,40,GetSuperConstructor
code-creation,BytecodeHandler,0,10534,0x64950d9c6840,420,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,10537,0x64950d9c6a00,1124,CallAnyReceiver
code-creation,BytecodeHandler,0,10540,0x64950d9c6e80,1124,CallProperty
code-creation,BytecodeHandler,0,10542,0x64950d9c7300,1020,CallProperty0
code-creation,BytecodeHandler,0,10545,0x64950d9c7700,1036,CallProperty1
code-creation,BytecodeHandler,0,10547,0x64950d9c7b40,1048,CallProperty2
code-creation,BytecodeHandler,0,10549,0x64950d9c7f80,1084,CallUndefinedReceiver
code-creation,BytecodeHandler,0,10552,0x64950d9c83c0,988,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,10555,0x64950d9c87c0,1052,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,10557,0x64950d9c8c00,1076,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,10560,0x64950d9c9040,1124,CallWithSpread
code-creation,BytecodeHandler,0,10562,0x64950d9c94c0,128,CallRuntime
code-creation,BytecodeHandler,0,10565,0x64950d9c9580,148,CallRuntimeForPair
code-creation,BytecodeHandler,0,10567,0x64950d9c9640,92,CallJSRuntime
code-creation,BytecodeHandler,0,10570,0x64950d9c96c0,1572,InvokeIntrinsic
code-creation,BytecodeHandler,0,10572,0x64950d9c9d00,1176,Construct
code-creation,BytecodeHandler,0,10575,0x64950d9ca1c0,464,ConstructWithSpread
code-creation,BytecodeHandler,0,10577,0x64950d9ca3c0,1004,ConstructForwardAllArgs
code-creation,BytecodeHandler,0,10580,0x64950d9ca7c0,2192,TestEqual
code-creation,BytecodeHandler,0,10582,0x64950d9cb080,1208,TestEqualStrict
code-creation,BytecodeHandler,0,10585,0x64950d9cb540,1420,TestLessThan
code-creation,BytecodeHandler,0,10587,0x64950d9cbb00,1420,TestGreaterThan
code-creation,BytecodeHandler,0,10589,0x64950d9cc0c0,1420,TestLessThanOrEqual
code-creation,BytecodeHandler,0,10592,0x64950d9cc680,1420,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,10595,0x64950d9ccc40,1036,TestInstanceOf
code-creation,BytecodeHandler,0,10597,0x64950d9cd080,120,TestIn
code-creation,BytecodeHandler,0,10599,0x64950d9cd100,92,ToName
code-creation,BytecodeHandler,0,10602,0x64950d9cd180,168,ToNumber
code-creation,BytecodeHandler,0,10604,0x64950d9cd240,188,ToNumeric
code-creation,BytecodeHandler,0,10607,0x64950d9cd300,108,ToObject
code-creation,BytecodeHandler,0,10609,0x64950d9cd380,120,ToString
code-creation,BytecodeHandler,0,10611,0x64950d9cd400,136,ToBoolean
code-creation,BytecodeHandler,0,10614,0x64950d9cd4c0,384,CreateRegExpLiteral
code-creation,BytecodeHandler,0,10616,0x64950d9cd680,1748,CreateArrayLiteral
code-creation,BytecodeHandler,0,10619,0x64950d9cdd80,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,10622,0x64950d9cde00,764,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,10624,0x64950d9ce100,2800,CreateObjectLiteral
code-creation,BytecodeHandler,0,10627,0x64950d9cec00,324,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,10629,0x64950d9ced80,136,CloneObject
code-creation,BytecodeHandler,0,10632,0x64950d9cee40,180,GetTemplateObject
code-creation,BytecodeHandler,0,10634,0x64950d9cef00,316,CreateClosure
code-creation,BytecodeHandler,0,10637,0x64950d9cf040,124,CreateBlockContext
code-creation,BytecodeHandler,0,10639,0x64950d9cf0c0,140,CreateCatchContext
code-creation,BytecodeHandler,0,10642,0x64950d9cf180,344,CreateFunctionContext
code-creation,BytecodeHandler,0,10644,0x64950d9cf300,344,CreateEvalContext
code-creation,BytecodeHandler,0,10647,0x64950d9cf480,140,CreateWithContext
code-creation,BytecodeHandler,0,10649,0x64950d9cf540,1776,CreateMappedArguments
code-creation,BytecodeHandler,0,10652,0x64950d9cfc40,588,CreateUnmappedArguments
code-creation,BytecodeHandler,0,10655,0x64950d9cfec0,680,CreateRestParameter
code-creation,BytecodeHandler,0,10657,0x64950d9d0180,1248,JumpLoop
code-creation,BytecodeHandler,0,10660,0x64950d9d0680,24,Jump
code-creation,BytecodeHandler,0,10662,0x64950d9d06c0,40,JumpConstant
code-creation,BytecodeHandler,0,10664,0x64950d9d0700,64,JumpIfNullConstant
code-creation,BytecodeHandler,0,10667,0x64950d9d0780,64,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,10671,0x64950d9d0800,64,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,10674,0x64950d9d0880,64,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,10676,0x64950d9d0900,72,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,10679,0x64950d9d0980,64,JumpIfTrueConstant
code-creation,BytecodeHandler,0,10682,0x64950d9d0a00,64,JumpIfFalseConstant
code-creation,BytecodeHandler,0,10684,0x64950d9d0a80,76,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,10687,0x64950d9d0b00,80,JumpIfForInDoneConstant
code-creation,BytecodeHandler,0,10690,0x64950d9d0b80,156,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,10692,0x64950d9d0c40,156,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,10695,0x64950d9d0d00,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,10698,0x64950d9d0dc0,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,10700,0x64950d9d0e80,48,JumpIfTrue
code-creation,BytecodeHandler,0,10703,0x64950d9d0ec0,48,JumpIfFalse
code-creation,BytecodeHandler,0,10705,0x64950d9d0f00,48,JumpIfNull
code-creation,BytecodeHandler,0,10707,0x64950d9d0f40,48,JumpIfNotNull
code-creation,BytecodeHandler,0,10710,0x64950d9d0f80,48,JumpIfUndefined
code-creation,BytecodeHandler,0,10712,0x64950d9d0fc0,48,JumpIfNotUndefined
code-creation,BytecodeHandler,0,10715,0x64950d9d1000,56,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,10717,0x64950d9d1040,60,JumpIfJSReceiver
code-creation,BytecodeHandler,0,10720,0x64950d9d1080,64,JumpIfForInDone
code-creation,BytecodeHandler,0,10722,0x64950d9d1100,92,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,10725,0x64950d9d1180,484,ForInEnumerate
code-creation,BytecodeHandler,0,10727,0x64950d9d1380,216,ForInPrepare
code-creation,BytecodeHandler,0,10730,0x64950d9d1480,220,ForInNext
code-creation,BytecodeHandler,0,10732,0x64950d9d1580,48,ForInStep
code-creation,BytecodeHandler,0,10734,0x64950d9d15c0,36,SetPendingMessage
code-creation,BytecodeHandler,0,10737,0x64950d9d1600,96,Throw
code-creation,BytecodeHandler,0,10739,0x64950d9d1680,96,ReThrow
code-creation,BytecodeHandler,0,10741,0x64950d9d1700,104,Return
code-creation,BytecodeHandler,0,10744,0x64950d9d1780,172,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,10746,0x64950d9d1840,116,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,10749,0x64950d9d18c0,116,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,10752,0x64950d9d1940,140,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,10755,0x64950d9d1a00,104,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,10757,0x64950d9d1a80,532,SuspendGenerator
code-creation,BytecodeHandler,0,10760,0x64950d9d1cc0,176,ResumeGenerator
code-creation,BytecodeHandler,0,10762,0x64950d9d1d80,132,GetIterator
code-creation,BytecodeHandler,0,10765,0x64950d9d1e40,100,Debugger
code-creation,BytecodeHandler,0,10767,0x64950d9d1ec0,116,IncBlockCounter
code-creation,BytecodeHandler,0,10769,0x64950d9d1f40,48,Abort
code-creation,BytecodeHandler,0,10772,0x64950d9d1f80,32,Star0
code-creation,BytecodeHandler,0,10774,0x64950d9d1fc0,48,Illegal
code-creation,BytecodeHandler,0,10777,0x64950d9d2000,104,DebugBreak1.Wide
code-creation,BytecodeHandler,0,10780,0x64950d9d2080,104,DebugBreak2.Wide
code-creation,BytecodeHandler,0,10782,0x64950d9d2100,104,DebugBreak3.Wide
code-creation,BytecodeHandler,0,10785,0x64950d9d2180,104,DebugBreak4.Wide
code-creation,BytecodeHandler,0,10787,0x64950d9d2200,104,DebugBreak5.Wide
code-creation,BytecodeHandler,0,10790,0x64950d9d2280,104,DebugBreak6.Wide
code-creation,BytecodeHandler,0,10792,0x64950d9d2300,32,Ldar.Wide
code-creation,BytecodeHandler,0,10794,0x64950d9d2340,28,LdaSmi.Wide
code-creation,BytecodeHandler,0,10797,0x64950d9d2380,40,LdaConstant.Wide
code-creation,BytecodeHandler,0,10799,0x64950d9d23c0,132,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,10802,0x64950d9d2480,132,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,10805,0x64950d9d2540,52,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10808,0x64950d9d2580,52,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10812,0x64950d9d25c0,32,Star.Wide
code-creation,BytecodeHandler,0,10815,0x64950d9d2600,40,Mov.Wide
code-creation,BytecodeHandler,0,10817,0x64950d9d2640,40,PushContext.Wide
code-creation,BytecodeHandler,0,10819,0x64950d9d2680,36,PopContext.Wide
code-creation,BytecodeHandler,0,10822,0x64950d9d26c0,52,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,10825,0x64950d9d2700,4184,LdaGlobal.Wide
code-creation,BytecodeHandler,0,10827,0x64950d9d3780,4120,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,10830,0x64950d9d47c0,132,StaGlobal.Wide
code-creation,BytecodeHandler,0,10833,0x64950d9d4880,196,StaContextSlot.Wide
code-creation,BytecodeHandler,0,10835,0x64950d9d4980,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,10838,0x64950d9d4a00,640,StaScriptContextSlot.Wide
code-creation,BytecodeHandler,0,10841,0x64950d9d4cc0,552,StaCurrentScriptContextSlot.Wide
code-creation,BytecodeHandler,0,10844,0x64950d9d4f00,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,10846,0x64950d9d4fc0,296,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,10849,0x64950d9d5100,4380,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,10852,0x64950d9d6240,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10855,0x64950d9d6300,296,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10858,0x64950d9d6440,4280,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,10861,0x64950d9d7500,216,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,10864,0x64950d9d7600,4856,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,10866,0x64950d9d8900,160,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,10869,0x64950d9d89c0,120,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,10872,0x64950d9d8a40,152,GetEnumeratedKeyedProperty.Wide
code-creation,BytecodeHandler,0,10875,0x64950d9d8b00,216,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,10877,0x64950d9d8c00,340,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,10880,0x64950d9d8d80,144,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,10883,0x64950d9d8e40,144,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,10885,0x64950d9d8f00,132,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,10888,0x64950d9d8fc0,148,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,10891,0x64950d9d9080,132,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,10894,0x64950d9d9140,164,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,10897,0x64950d9d9200,1432,Add.Wide
code-creation,BytecodeHandler,0,10899,0x64950d9d97c0,1388,Sub.Wide
code-creation,BytecodeHandler,0,10901,0x64950d9d9d40,1604,Mul.Wide
code-creation,BytecodeHandler,0,10904,0x64950d9da3c0,1560,Div.Wide
code-creation,BytecodeHandler,0,10906,0x64950d9daa00,1612,Mod.Wide
code-creation,BytecodeHandler,0,10908,0x64950d9db080,884,Exp.Wide
code-creation,BytecodeHandler,0,10911,0x64950d9db400,2012,BitwiseOr.Wide
code-creation,BytecodeHandler,0,10913,0x64950d9dbc00,2012,BitwiseXor.Wide
code-creation,BytecodeHandler,0,10916,0x64950d9dc400,2012,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,10918,0x64950d9dcc00,1420,ShiftLeft.Wide
code-creation,BytecodeHandler,0,10920,0x64950d9dd1c0,1420,ShiftRight.Wide
code-creation,BytecodeHandler,0,10923,0x64950d9dd780,1300,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,10926,0x64950d9ddcc0,424,AddSmi.Wide
code-creation,BytecodeHandler,0,10928,0x64950d9dde80,556,SubSmi.Wide
code-creation,BytecodeHandler,0,10930,0x64950d9de0c0,756,MulSmi.Wide
code-creation,BytecodeHandler,0,10933,0x64950d9de3c0,640,DivSmi.Wide
code-creation,BytecodeHandler,0,10935,0x64950d9de680,652,ModSmi.Wide
code-creation,BytecodeHandler,0,10938,0x64950d9de940,608,ExpSmi.Wide
code-creation,BytecodeHandler,0,10940,0x64950d9debc0,644,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,10943,0x64950d9dee80,644,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,10945,0x64950d9df140,644,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,10948,0x64950d9df400,796,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,10951,0x64950d9df740,640,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,10954,0x64950d9dfa00,804,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,10957,0x64950d9dfd40,672,Inc.Wide
code-creation,BytecodeHandler,0,10959,0x64950d9e0000,676,Dec.Wide
code-creation,BytecodeHandler,0,10962,0x64950d9e02c0,696,Negate.Wide
code-creation,BytecodeHandler,0,10964,0x64950d9e0580,696,BitwiseNot.Wide
code-creation,BytecodeHandler,0,10966,0x64950d9e0840,560,TypeOf.Wide
code-creation,BytecodeHandler,0,10969,0x64950d9e0a80,116,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,10972,0x64950d9e0b00,112,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,10974,0x64950d9e0b80,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,10977,0x64950d9e0bc0,424,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,10980,0x64950d9e0d80,1124,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,10983,0x64950d9e1200,1124,CallProperty.Wide
code-creation,BytecodeHandler,0,10985,0x64950d9e1680,1020,CallProperty0.Wide
code-creation,BytecodeHandler,0,10988,0x64950d9e1a80,1036,CallProperty1.Wide
code-creation,BytecodeHandler,0,10990,0x64950d9e1ec0,1048,CallProperty2.Wide
code-creation,BytecodeHandler,0,10993,0x64950d9e2300,1084,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,10996,0x64950d9e2740,988,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,10999,0x64950d9e2b40,1052,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,11001,0x64950d9e2f80,1076,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,11004,0x64950d9e33c0,1124,CallWithSpread.Wide
code-creation,BytecodeHandler,0,11007,0x64950d9e3840,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,11009,0x64950d9e3900,152,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,11012,0x64950d9e39c0,92,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,11015,0x64950d9e3a40,1572,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,11017,0x64950d9e4080,1192,Construct.Wide
code-creation,BytecodeHandler,0,11020,0x64950d9e4540,412,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,11022,0x64950d9e4700,1004,ConstructForwardAllArgs.Wide
code-creation,BytecodeHandler,0,11025,0x64950d9e4b00,2208,TestEqual.Wide
code-creation,BytecodeHandler,0,11028,0x64950d9e53c0,1196,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,11030,0x64950d9e5880,1452,TestLessThan.Wide
code-creation,BytecodeHandler,0,11033,0x64950d9e5e40,1452,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,11035,0x64950d9e6400,1452,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,11038,0x64950d9e69c0,1452,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,11041,0x64950d9e6f80,1040,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,11044,0x64950d9e73c0,120,TestIn.Wide
code-creation,BytecodeHandler,0,11046,0x64950d9e7440,168,ToNumber.Wide
code-creation,BytecodeHandler,0,11049,0x64950d9e7500,192,ToNumeric.Wide
code-creation,BytecodeHandler,0,11051,0x64950d9e7600,112,ToObject.Wide
code-creation,BytecodeHandler,0,11054,0x64950d9e7680,384,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,11056,0x64950d9e7840,1700,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,11059,0x64950d9e7f00,764,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,11062,0x64950d9e8200,2696,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,11065,0x64950d9e8cc0,136,CloneObject.Wide
code-creation,BytecodeHandler,0,11067,0x64950d9e8d80,140,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,11070,0x64950d9e8e40,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,11072,0x64950d9e8fc0,128,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,11075,0x64950d9e9080,144,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,11078,0x64950d9e9140,344,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,11081,0x64950d9e92c0,344,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,11083,0x64950d9e9440,144,CreateWithContext.Wide
code-creation,BytecodeHandler,0,11086,0x64950d9e9500,1264,JumpLoop.Wide
code-creation,BytecodeHandler,0,11088,0x64950d9e9a00,24,Jump.Wide
code-creation,BytecodeHandler,0,11092,0x64950d9e9a40,40,JumpConstant.Wide
code-creation,BytecodeHandler,0,11095,0x64950d9e9a80,64,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,11097,0x64950d9e9b00,64,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,11100,0x64950d9e9b80,64,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,11103,0x64950d9e9c00,64,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,11106,0x64950d9e9c80,72,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,11109,0x64950d9e9d00,64,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,11111,0x64950d9e9d80,64,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,11114,0x64950d9e9e00,76,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,11117,0x64950d9e9e80,80,JumpIfForInDoneConstant.Wide
code-creation,BytecodeHandler,0,11120,0x64950d9e9f00,156,JumpIfToBooleanTrueConstant.Wide
tick,0x7d8294c939d0,11124,0,0x0,9
tick,0x7d8294c98fc7,11128,0,0x0,9
code-creation,BytecodeHandler,0,11132,0x64950d9e9fc0,156,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,11135,0x64950d9ea080,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,11137,0x64950d9ea140,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,11140,0x64950d9ea200,48,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,11142,0x64950d9ea240,48,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,11144,0x64950d9ea280,48,JumpIfNull.Wide
code-creation,BytecodeHandler,0,11146,0x64950d9ea2c0,48,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,11148,0x64950d9ea300,48,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,11150,0x64950d9ea340,48,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,11152,0x64950d9ea380,56,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,11154,0x64950d9ea3c0,60,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,11157,0x64950d9ea400,64,JumpIfForInDone.Wide
code-creation,BytecodeHandler,0,11159,0x64950d9ea480,92,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,11161,0x64950d9ea500,488,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,11163,0x64950d9ea700,216,ForInPrepare.Wide
code-creation,BytecodeHandler,0,11165,0x64950d9ea800,220,ForInNext.Wide
code-creation,BytecodeHandler,0,11167,0x64950d9ea900,48,ForInStep.Wide
code-creation,BytecodeHandler,0,11169,0x64950d9ea940,144,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,11172,0x64950d9eaa00,140,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,11174,0x64950d9eaac0,104,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,11176,0x64950d9eab40,540,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,11178,0x64950d9ead80,176,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,11180,0x64950d9eae40,132,GetIterator.Wide
code-creation,BytecodeHandler,0,11182,0x64950d9eaf00,120,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,11185,0x64950d9eaf80,52,Abort.Wide
code-creation,BytecodeHandler,0,11187,0x64950d9eafc0,104,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,11189,0x64950d9eb040,104,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,11191,0x64950d9eb0c0,104,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,11193,0x64950d9eb140,104,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,11195,0x64950d9eb1c0,104,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,11197,0x64950d9eb240,104,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,11199,0x64950d9eb2c0,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,11201,0x64950d9eb300,24,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,11203,0x64950d9eb340,36,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,11205,0x64950d9eb380,132,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11208,0x64950d9eb440,132,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11210,0x64950d9eb500,52,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11213,0x64950d9eb540,52,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11215,0x64950d9eb580,28,Star.ExtraWide
code-creation,BytecodeHandler,0,11219,0x64950d9eb5c0,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,11221,0x64950d9eb600,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,11223,0x64950d9eb640,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,11225,0x64950d9eb680,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,11227,0x64950d9eb6c0,4176,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,11229,0x64950d9ec740,4112,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11232,0x64950d9ed780,132,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,11234,0x64950d9ed840,196,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11236,0x64950d9ed940,112,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11238,0x64950d9ed9c0,640,StaScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11241,0x64950d9edc80,552,StaCurrentScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11243,0x64950d9edec0,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,11246,0x64950d9edf80,292,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,11248,0x64950d9ee0c0,4368,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,11250,0x64950d9ef200,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11253,0x64950d9ef2c0,292,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11256,0x64950d9ef400,4268,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,11258,0x64950d9f04c0,212,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,11260,0x64950d9f05c0,4844,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,11263,0x64950d9f18c0,156,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,11265,0x64950d9f1980,120,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,11268,0x64950d9f1a00,148,GetEnumeratedKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,11270,0x64950d9f1ac0,216,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,11272,0x64950d9f1bc0,340,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,11275,0x64950d9f1d40,144,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,11277,0x64950d9f1e00,144,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,11279,0x64950d9f1ec0,128,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,11282,0x64950d9f1f80,144,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,11284,0x64950d9f2040,128,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11286,0x64950d9f2100,160,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,11289,0x64950d9f21c0,1428,Add.ExtraWide
code-creation,BytecodeHandler,0,11291,0x64950d9f2780,1384,Sub.ExtraWide
code-creation,BytecodeHandler,0,11293,0x64950d9f2d00,1592,Mul.ExtraWide
code-creation,BytecodeHandler,0,11295,0x64950d9f3340,1556,Div.ExtraWide
code-creation,BytecodeHandler,0,11297,0x64950d9f3980,1608,Mod.ExtraWide
code-creation,BytecodeHandler,0,11299,0x64950d9f4000,880,Exp.ExtraWide
code-creation,BytecodeHandler,0,11301,0x64950d9f4380,2008,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,11303,0x64950d9f4b80,2008,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,11305,0x64950d9f5380,2008,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,11307,0x64950d9f5b80,1420,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,11309,0x64950d9f6140,1420,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,11311,0x64950d9f6700,1300,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,11314,0x64950d9f6c40,424,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,11316,0x64950d9f6e00,552,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,11318,0x64950d9f7040,752,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,11320,0x64950d9f7340,636,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,11322,0x64950d9f75c0,652,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,11324,0x64950d9f7880,604,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,11326,0x64950d9f7b00,640,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,11328,0x64950d9f7dc0,640,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,11331,0x64950d9f8080,640,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,11334,0x64950d9f8340,796,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,11336,0x64950d9f8680,636,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,11338,0x64950d9f8900,804,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,11340,0x64950d9f8c40,668,Inc.ExtraWide
code-creation,BytecodeHandler,0,11342,0x64950d9f8f00,672,Dec.ExtraWide
code-creation,BytecodeHandler,0,11344,0x64950d9f91c0,692,Negate.ExtraWide
code-creation,BytecodeHandler,0,11346,0x64950d9f9480,692,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,11348,0x64950d9f9740,560,TypeOf.ExtraWide
code-creation,BytecodeHandler,0,11350,0x64950d9f9980,112,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,11353,0x64950d9f9a00,112,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,11355,0x64950d9f9a80,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,11357,0x64950d9f9ac0,420,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,11365,0x64950d9f9c80,1124,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,11369,0x64950d9fa100,1124,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,11371,0x64950d9fa580,1020,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,11373,0x64950d9fa980,1036,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,11375,0x64950d9fadc0,1044,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,11378,0x64950d9fb200,1020,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,11380,0x64950d9fb600,988,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,11382,0x64950d9fba00,1052,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,11385,0x64950d9fbe40,1068,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,11387,0x64950d9fc280,1124,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,11389,0x64950d9fc700,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,11391,0x64950d9fc7c0,148,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,11394,0x64950d9fc880,92,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,11398,0x64950d9fc900,1572,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,11400,0x64950d9fcf40,1124,Construct.ExtraWide
code-creation,BytecodeHandler,0,11409,0x64950d9fd3c0,408,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,11411,0x64950d9fd580,1004,ConstructForwardAllArgs.ExtraWide
code-creation,BytecodeHandler,0,11413,0x64950d9fd980,2208,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,11415,0x64950d9fe240,1192,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,11418,0x64950d9fe700,1452,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,11420,0x64950d9fecc0,1452,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,11422,0x64950d9ff280,1452,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,11424,0x64950d9ff840,1452,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,11427,0x64950d9ffe00,1040,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,11429,0x64950da00240,120,TestIn.ExtraWide
code-creation,BytecodeHandler,0,11431,0x64950da002c0,168,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,11433,0x64950da00380,188,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,11435,0x64950da00440,112,ToObject.ExtraWide
code-creation,BytecodeHandler,0,11437,0x64950da004c0,384,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,11440,0x64950da00680,1700,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11442,0x64950da00d40,764,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,11444,0x64950da01040,2696,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,11447,0x64950da01b00,136,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,11449,0x64950da01bc0,136,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,11451,0x64950da01c80,316,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,11454,0x64950da01dc0,128,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,11457,0x64950da01e80,140,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,11460,0x64950da01f40,344,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,11462,0x64950da020c0,344,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,11464,0x64950da02240,140,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,11467,0x64950da02300,1260,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,11469,0x64950da02800,20,Jump.ExtraWide
code-creation,BytecodeHandler,0,11471,0x64950da02840,40,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,11473,0x64950da02880,64,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11475,0x64950da02900,64,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11478,0x64950da02980,64,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,11480,0x64950da02a00,64,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,11483,0x64950da02a80,72,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,11485,0x64950da02b00,64,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,11487,0x64950da02b80,64,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,11490,0x64950da02c00,76,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,11492,0x64950da02c80,80,JumpIfForInDoneConstant.ExtraWide
code-creation,BytecodeHandler,0,11495,0x64950da02d00,156,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,11497,0x64950da02dc0,156,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,11500,0x64950da02e80,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,11502,0x64950da02f40,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,11505,0x64950da03000,44,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,11507,0x64950da03040,44,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,11509,0x64950da03080,44,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,11511,0x64950da030c0,44,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,11513,0x64950da03100,44,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,11515,0x64950da03140,44,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,11518,0x64950da03180,56,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,11520,0x64950da031c0,56,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,11522,0x64950da03200,60,JumpIfForInDone.ExtraWide
code-creation,BytecodeHandler,0,11525,0x64950da03240,88,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,11527,0x64950da032c0,488,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,11529,0x64950da034c0,212,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,11531,0x64950da035c0,216,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,11533,0x64950da036c0,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,11536,0x64950da03700,144,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,11538,0x64950da037c0,140,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,11541,0x64950da03880,104,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,11543,0x64950da03900,540,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,11545,0x64950da03b40,176,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,11548,0x64950da03c00,132,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,11550,0x64950da03cc0,120,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,11552,0x64950da03d40,52,Abort.ExtraWide
new,MemoryChunk,0x2c37003c0000,262144
tick,0x64950d51bdb2,12302,0,0x0,5
new,MemoryChunk,0x2c3700400000,262144
new,MemoryChunk,0x2c3700440000,262144
tick,0x64950d516718,13319,0,0x0,5
new,MemoryChunk,0x2c3700480000,262144
tick,0x64950d516716,14393,0,0x0,5
new,MemoryChunk,0x2c37004c0000,262144
new,MemoryChunk,0x2c3700500000,262144
tick,0x64950d517178,15413,0,0x0,5
new,MemoryChunk,0x2c3700540000,262144
tick,0x64950da35076,16577,0,0x0,5
new,MemoryChunk,0x2c3700580000,262144
code-creation,JS,9,17253,0x2c3700580040,10,setTimeOrigin ext:deno_web/15_performance.js:96:23,0x2c37001f14a4,~
script-source,28,ext:deno_web/15_performance.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { primordials } from "ext:core/mod.js";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeFind\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReverse\x2C\n  ArrayPrototypeSlice\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectHas\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { structuredClone } from "./02_structured_clone.js";\nimport { createFilteredInspectProxy } from "ext:deno_console/01_console.js";\nimport { EventTarget } from "./02_event.js";\nimport { opNow } from "./02_timers.js";\nimport { DOMException } from "./01_dom_exception.js";\n\nconst illegalConstructorKey = Symbol("illegalConstructorKey");\nlet performanceEntries = [];\nlet timeOrigin;\n\nwebidl.converters["PerformanceMarkOptions"] = webidl\n  .createDictionaryConverter(\n    "PerformanceMarkOptions"\x2C\n    [\n      {\n        key: "detail"\x2C\n        converter: webidl.converters.any\x2C\n      }\x2C\n      {\n        key: "startTime"\x2C\n        converter: webidl.converters.DOMHighResTimeStamp\x2C\n      }\x2C\n    ]\x2C\n  );\n\nwebidl.converters["DOMString or DOMHighResTimeStamp"] = (\n  V\x2C\n  prefix\x2C\n  context\x2C\n  opts\x2C\n) => {\n  if (webidl.type(V) === "Number" && V !== null) {\n    return webidl.converters.DOMHighResTimeStamp(V\x2C prefix\x2C context\x2C opts);\n  }\n  return webidl.converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n};\n\nwebidl.converters["PerformanceMeasureOptions"] = webidl\n  .createDictionaryConverter(\n    "PerformanceMeasureOptions"\x2C\n    [\n      {\n        key: "detail"\x2C\n        converter: webidl.converters.any\x2C\n      }\x2C\n      {\n        key: "start"\x2C\n        converter: webidl.converters["DOMString or DOMHighResTimeStamp"]\x2C\n      }\x2C\n      {\n        key: "duration"\x2C\n        converter: webidl.converters.DOMHighResTimeStamp\x2C\n      }\x2C\n      {\n        key: "end"\x2C\n        converter: webidl.converters["DOMString or DOMHighResTimeStamp"]\x2C\n      }\x2C\n    ]\x2C\n  );\n\nwebidl.converters["DOMString or PerformanceMeasureOptions"] = (\n  V\x2C\n  prefix\x2C\n  context\x2C\n  opts\x2C\n) => {\n  if (webidl.type(V) === "Object" && V !== null) {\n    return webidl.converters["PerformanceMeasureOptions"](\n      V\x2C\n      prefix\x2C\n      context\x2C\n      opts\x2C\n    );\n  }\n  return webidl.converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n};\n\nfunction setTimeOrigin(origin) {\n  timeOrigin = origin;\n}\n\nfunction findMostRecent(\n  name\x2C\n  type\x2C\n) {\n  return ArrayPrototypeFind(\n    ArrayPrototypeReverse(ArrayPrototypeSlice(performanceEntries))\x2C\n    (entry) => entry.name === name && entry.entryType === type\x2C\n  );\n}\n\nfunction convertMarkToTimestamp(mark) {\n  if (typeof mark === "string") {\n    const entry = findMostRecent(mark\x2C "mark");\n    if (!entry) {\n      throw new DOMException(\n        `Cannot find mark: "${mark}".`\x2C\n        "SyntaxError"\x2C\n      );\n    }\n    return entry.startTime;\n  }\n  if (mark < 0) {\n    throw new TypeError("Mark cannot be negative.");\n  }\n  return mark;\n}\n\nfunction filterByNameType(\n  name\x2C\n  type\x2C\n) {\n  return ArrayPrototypeFilter(\n    performanceEntries\x2C\n    (entry) =>\n      (name ? entry.name === name : true) &&\n      (type ? entry.entryType === type : true)\x2C\n  );\n}\n\nconst now = opNow;\n\nconst _name = Symbol("[[name]]");\nconst _entryType = Symbol("[[entryType]]");\nconst _startTime = Symbol("[[startTime]]");\nconst _duration = Symbol("[[duration]]");\nclass PerformanceEntry {\n  [_name] = "";\n  [_entryType] = "";\n  [_startTime] = 0;\n  [_duration] = 0;\n\n  get name() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_name];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_entryType];\n  }\n\n  get startTime() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_startTime];\n  }\n\n  get duration() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return this[_duration];\n  }\n\n  constructor(\n    name = null\x2C\n    entryType = null\x2C\n    startTime = null\x2C\n    duration = null\x2C\n    key = undefined\x2C\n  ) {\n    if (key !== illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n    this[webidl.brand] = webidl.brand;\n\n    this[_name] = name;\n    this[_entryType] = entryType;\n    this[_startTime] = startTime;\n    this[_duration] = duration;\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceEntryPrototype);\n    return {\n      name: this[_name]\x2C\n      entryType: this[_entryType]\x2C\n      startTime: this[_startTime]\x2C\n      duration: this[_duration]\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PerformanceEntryPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceEntry);\nconst PerformanceEntryPrototype = PerformanceEntry.prototype;\n\nconst _detail = Symbol("[[detail]]");\nclass PerformanceMark extends PerformanceEntry {\n  [_detail] = null;\n\n  get detail() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return this[_detail];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return "mark";\n  }\n\n  constructor(\n    name\x2C\n    options = { __proto__: null }\x2C\n  ) {\n    const prefix = "Failed to construct 'PerformanceMark'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    name = webidl.converters.DOMString(name\x2C prefix\x2C "Argument 1");\n\n    options = webidl.converters.PerformanceMarkOptions(\n      options\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n\n    const { detail = null\x2C startTime = now() } = options;\n\n    super(name\x2C "mark"\x2C startTime\x2C 0\x2C illegalConstructorKey);\n    this[webidl.brand] = webidl.brand;\n    if (startTime < 0) {\n      throw new TypeError("startTime cannot be negative");\n    }\n    this[_detail] = structuredClone(detail);\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceMarkPrototype);\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this.detail\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(PerformanceMarkPrototype\x2C this)\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceMark);\nconst PerformanceMarkPrototype = PerformanceMark.prototype;\nclass PerformanceMeasure extends PerformanceEntry {\n  [_detail] = null;\n\n  get detail() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return this[_detail];\n  }\n\n  get entryType() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return "measure";\n  }\n\n  constructor(\n    name = null\x2C\n    startTime = null\x2C\n    duration = null\x2C\n    detail = null\x2C\n    key = undefined\x2C\n  ) {\n    if (key !== illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n\n    super(name\x2C "measure"\x2C startTime\x2C duration\x2C key);\n    this[webidl.brand] = webidl.brand;\n    this[_detail] = structuredClone(detail);\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformanceMeasurePrototype);\n    return {\n      name: this.name\x2C\n      entryType: this.entryType\x2C\n      startTime: this.startTime\x2C\n      duration: this.duration\x2C\n      detail: this.detail\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PerformanceMeasurePrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "name"\x2C\n          "entryType"\x2C\n          "startTime"\x2C\n          "duration"\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(PerformanceMeasure);\nconst PerformanceMeasurePrototype = PerformanceMeasure.prototype;\nclass Performance extends EventTarget {\n  constructor(key = null) {\n    if (key != illegalConstructorKey) {\n      webidl.illegalConstructor();\n    }\n\n    super();\n    this[webidl.brand] = webidl.brand;\n  }\n\n  get timeOrigin() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return timeOrigin;\n  }\n\n  clearMarks(markName = undefined) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    if (markName !== undefined) {\n      markName = webidl.converters.DOMString(\n        markName\x2C\n        "Failed to execute 'clearMarks' on 'Performance'"\x2C\n        "Argument 1"\x2C\n      );\n\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => !(entry.name === markName && entry.entryType === "mark")\x2C\n      );\n    } else {\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => entry.entryType !== "mark"\x2C\n      );\n    }\n  }\n\n  clearMeasures(measureName = undefined) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    if (measureName !== undefined) {\n      measureName = webidl.converters.DOMString(\n        measureName\x2C\n        "Failed to execute 'clearMeasures' on 'Performance'"\x2C\n        "Argument 1"\x2C\n      );\n\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) =>\n          !(entry.name === measureName && entry.entryType === "measure")\x2C\n      );\n    } else {\n      performanceEntries = ArrayPrototypeFilter(\n        performanceEntries\x2C\n        (entry) => entry.entryType !== "measure"\x2C\n      );\n    }\n  }\n\n  getEntries() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return filterByNameType();\n  }\n\n  getEntriesByName(\n    name\x2C\n    type = undefined\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'getEntriesByName' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    name = webidl.converters.DOMString(name\x2C prefix\x2C "Argument 1");\n\n    if (type !== undefined) {\n      type = webidl.converters.DOMString(type\x2C prefix\x2C "Argument 2");\n    }\n\n    return filterByNameType(name\x2C type);\n  }\n\n  getEntriesByType(type) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'getEntriesByName' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    type = webidl.converters.DOMString(type\x2C prefix\x2C "Argument 1");\n\n    return filterByNameType(undefined\x2C type);\n  }\n\n  mark(\n    markName\x2C\n    markOptions = { __proto__: null }\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'mark' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    markName = webidl.converters.DOMString(markName\x2C prefix\x2C "Argument 1");\n\n    markOptions = webidl.converters.PerformanceMarkOptions(\n      markOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n\n    // 3.1.1.1 If the global object is a Window object and markName uses the\n    // same name as a read only attribute in the PerformanceTiming interface\x2C\n    // throw a SyntaxError. - not implemented\n    const entry = new PerformanceMark(markName\x2C markOptions);\n    // 3.1.1.7 Queue entry - not implemented\n    ArrayPrototypePush(performanceEntries\x2C entry);\n    return entry;\n  }\n\n  measure(\n    measureName\x2C\n    startOrMeasureOptions = { __proto__: null }\x2C\n    endMark = undefined\x2C\n  ) {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    const prefix = "Failed to execute 'measure' on 'Performance'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n\n    measureName = webidl.converters.DOMString(\n      measureName\x2C\n      prefix\x2C\n      "Argument 1"\x2C\n    );\n\n    startOrMeasureOptions = webidl.converters\n      ["DOMString or PerformanceMeasureOptions"](\n        startOrMeasureOptions\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      );\n\n    if (endMark !== undefined) {\n      endMark = webidl.converters.DOMString(endMark\x2C prefix\x2C "Argument 3");\n    }\n\n    if (\n      startOrMeasureOptions && typeof startOrMeasureOptions === "object" &&\n      ObjectKeys(startOrMeasureOptions).length > 0\n    ) {\n      if (endMark) {\n        throw new TypeError("Options cannot be passed with endMark.");\n      }\n      if (\n        !ReflectHas(startOrMeasureOptions\x2C "start") &&\n        !ReflectHas(startOrMeasureOptions\x2C "end")\n      ) {\n        throw new TypeError(\n          "A start or end mark must be supplied in options."\x2C\n        );\n      }\n      if (\n        ReflectHas(startOrMeasureOptions\x2C "start") &&\n        ReflectHas(startOrMeasureOptions\x2C "duration") &&\n        ReflectHas(startOrMeasureOptions\x2C "end")\n      ) {\n        throw new TypeError(\n          "Cannot specify start\x2C end\x2C and duration together in options."\x2C\n        );\n      }\n    }\n    let endTime;\n    if (endMark) {\n      endTime = convertMarkToTimestamp(endMark);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "end")\n    ) {\n      endTime = convertMarkToTimestamp(startOrMeasureOptions.end);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "start") &&\n      ReflectHas(startOrMeasureOptions\x2C "duration")\n    ) {\n      const start = convertMarkToTimestamp(startOrMeasureOptions.start);\n      const duration = convertMarkToTimestamp(startOrMeasureOptions.duration);\n      endTime = start + duration;\n    } else {\n      endTime = now();\n    }\n    let startTime;\n    if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "start")\n    ) {\n      startTime = convertMarkToTimestamp(startOrMeasureOptions.start);\n    } else if (\n      typeof startOrMeasureOptions === "object" &&\n      ReflectHas(startOrMeasureOptions\x2C "end") &&\n      ReflectHas(startOrMeasureOptions\x2C "duration")\n    ) {\n      const end = convertMarkToTimestamp(startOrMeasureOptions.end);\n      const duration = convertMarkToTimestamp(startOrMeasureOptions.duration);\n      startTime = end - duration;\n    } else if (typeof startOrMeasureOptions === "string") {\n      startTime = convertMarkToTimestamp(startOrMeasureOptions);\n    } else {\n      startTime = 0;\n    }\n    const entry = new PerformanceMeasure(\n      measureName\x2C\n      startTime\x2C\n      endTime - startTime\x2C\n      typeof startOrMeasureOptions === "object"\n        ? startOrMeasureOptions.detail ?? null\n        : null\x2C\n      illegalConstructorKey\x2C\n    );\n    ArrayPrototypePush(performanceEntries\x2C entry);\n    return entry;\n  }\n\n  now() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return now();\n  }\n\n  toJSON() {\n    webidl.assertBranded(this\x2C PerformancePrototype);\n    return {\n      timeOrigin: this.timeOrigin\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(PerformancePrototype\x2C this)\x2C\n        keys: ["timeOrigin"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\nwebidl.configureInterface(Performance);\nconst PerformancePrototype = Performance.prototype;\n\nwebidl.converters["Performance"] = webidl.createInterfaceConverter(\n  "Performance"\x2C\n  PerformancePrototype\x2C\n);\n\nconst performance = new Performance(illegalConstructorKey);\n\nexport {\n  Performance\x2C\n  performance\x2C\n  PerformanceEntry\x2C\n  PerformanceMark\x2C\n  PerformanceMeasure\x2C\n  setTimeOrigin\x2C\n};\n
code-source-info,0x2c3700580040,28,2326,2361,C0O2339C2O2350C9O2360,,
tick,0x7d8294c939d0,17675,0,0x0,9,0x64950db65500,0x2c37003073a5
code-creation,JS,9,17777,0x2c37005800b8,178,exposeUnstableFeaturesForWindowOrWorkerGlobalScope ext:runtime_main/js/99_main.js:545:60,0x2c3700354210,~
script-source,305,ext:runtime_main/js/99_main.js,// deno-lint-ignore-file no-deprecated-deno-api\n// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Remove Intl.v8BreakIterator because it is a non-standard API.\ndelete Intl.v8BreakIterator;\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst ops = core.ops;\nimport {\n  op_bootstrap_args\x2C\n  op_bootstrap_is_stderr_tty\x2C\n  op_bootstrap_is_stdout_tty\x2C\n  op_bootstrap_no_color\x2C\n  op_bootstrap_pid\x2C\n  op_main_module\x2C\n  op_ppid\x2C\n  op_set_format_exception_callback\x2C\n  op_snapshot_options\x2C\n  op_worker_close\x2C\n  op_worker_get_type\x2C\n  op_worker_post_message\x2C\n  op_worker_recv_message\x2C\n  op_worker_sync_fetch\x2C\n} from "ext:core/ops";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypeShift\x2C\n  DateNow\x2C\n  Error\x2C\n  ErrorPrototype\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectHasOwn\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  TypeError\x2C\n} = primordials;\nconst {\n  isNativeError\x2C\n} = core;\nimport { registerDeclarativeServer } from "ext:deno_http/00_serve.ts";\nimport * as event from "ext:deno_web/02_event.js";\nimport * as location from "ext:deno_web/12_location.js";\nimport * as version from "ext:runtime/01_version.ts";\nimport * as os from "ext:runtime/30_os.js";\nimport * as timers from "ext:deno_web/02_timers.js";\nimport {\n  customInspect\x2C\n  getDefaultInspectOptions\x2C\n  getStderrNoColor\x2C\n  inspectArgs\x2C\n  quoteString\x2C\n  setNoColorFns\x2C\n} from "ext:deno_console/01_console.js";\nimport * as performance from "ext:deno_web/15_performance.js";\nimport * as url from "ext:deno_url/00_url.js";\nimport * as fetch from "ext:deno_fetch/26_fetch.js";\nimport * as messagePort from "ext:deno_web/13_message_port.js";\nimport {\n  denoNs\x2C\n  denoNsUnstable\x2C\n  denoNsUnstableById\x2C\n  unstableIds\x2C\n} from "ext:runtime/90_deno_ns.js";\nimport { errors } from "ext:runtime/01_errors.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\nimport {\n  unstableForWindowOrWorkerGlobalScope\x2C\n  windowOrWorkerGlobalScope\x2C\n} from "ext:runtime/98_global_scope_shared.js";\nimport {\n  mainRuntimeGlobalProperties\x2C\n  memoizeLazy\x2C\n} from "ext:runtime/98_global_scope_window.js";\nimport {\n  workerRuntimeGlobalProperties\x2C\n} from "ext:runtime/98_global_scope_worker.js";\nimport { SymbolDispose\x2C SymbolMetadata } from "ext:deno_web/00_infra.js";\n// deno-lint-ignore prefer-primordials\nif (Symbol.metadata) {\n  throw "V8 supports Symbol.metadata now\x2C no need to shim it!";\n}\nObjectDefineProperties(Symbol\x2C {\n  dispose: {\n    value: SymbolDispose\x2C\n    enumerable: false\x2C\n    writable: false\x2C\n    configurable: false\x2C\n  }\x2C\n  metadata: {\n    value: SymbolMetadata\x2C\n    enumerable: false\x2C\n    writable: false\x2C\n    configurable: false\x2C\n  }\x2C\n});\n\nlet windowIsClosing = false;\nlet globalThis_;\n\nlet verboseDeprecatedApiWarning = false;\nlet deprecatedApiWarningDisabled = false;\nconst ALREADY_WARNED_DEPRECATED = new SafeSet();\n\nfunction warnOnDeprecatedApi(apiName\x2C stack\x2C ...suggestions) {\n  if (deprecatedApiWarningDisabled) {\n    return;\n  }\n\n  if (!verboseDeprecatedApiWarning) {\n    if (ALREADY_WARNED_DEPRECATED.has(apiName)) {\n      return;\n    }\n    ALREADY_WARNED_DEPRECATED.add(apiName);\n    console.error(\n      `%cwarning: %cUse of deprecated "${apiName}" API. This API will be removed in Deno 2. Run again with DENO_VERBOSE_WARNINGS=1 to get more details.`\x2C\n      "color: yellow;"\x2C\n      "font-weight: bold;"\x2C\n    );\n    return;\n  }\n\n  if (ALREADY_WARNED_DEPRECATED.has(apiName + stack)) {\n    return;\n  }\n\n  // If we haven't warned yet\x2C let's do some processing of the stack trace\n  // to make it more useful.\n  const stackLines = StringPrototypeSplit(stack\x2C "\\n");\n  ArrayPrototypeShift(stackLines);\n  while (stackLines.length > 0) {\n    // Filter out internal frames at the top of the stack - they are not useful\n    // to the user.\n    if (\n      StringPrototypeIncludes(stackLines[0]\x2C "(ext:") ||\n      StringPrototypeIncludes(stackLines[0]\x2C "(node:") ||\n      StringPrototypeIncludes(stackLines[0]\x2C "<anonymous>")\n    ) {\n      ArrayPrototypeShift(stackLines);\n    } else {\n      break;\n    }\n  }\n  // Now remove the last frame if it's coming from "ext:core" - this is most likely\n  // event loop tick or promise handler calling a user function - again not\n  // useful to the user.\n  if (\n    stackLines.length > 0 &&\n    StringPrototypeIncludes(stackLines[stackLines.length - 1]\x2C "(ext:core/")\n  ) {\n    ArrayPrototypePop(stackLines);\n  }\n\n  let isFromRemoteDependency = false;\n  const firstStackLine = stackLines[0];\n  if (firstStackLine && !StringPrototypeIncludes(firstStackLine\x2C "file:")) {\n    isFromRemoteDependency = true;\n  }\n\n  ALREADY_WARNED_DEPRECATED.add(apiName + stack);\n  console.error(\n    `%cwarning: %cUse of deprecated "${apiName}" API. This API will be removed in Deno 2.`\x2C\n    "color: yellow;"\x2C\n    "font-weight: bold;"\x2C\n  );\n\n  console.error();\n  console.error(\n    "See the Deno 1 to 2 Migration Guide for more information at https://docs.deno.com/runtime/manual/advanced/migrate_deprecations"\x2C\n  );\n  console.error();\n  if (stackLines.length > 0) {\n    console.error("Stack trace:");\n    for (let i = 0; i < stackLines.length; i++) {\n      console.error(`  ${StringPrototypeTrim(stackLines[i])}`);\n    }\n    console.error();\n  }\n\n  for (let i = 0; i < suggestions.length; i++) {\n    const suggestion = suggestions[i];\n    console.error(\n      `%chint: ${suggestion}`\x2C\n      "font-weight: bold;"\x2C\n    );\n  }\n\n  if (isFromRemoteDependency) {\n    console.error(\n      `%chint: It appears this API is used by a remote dependency. Try upgrading to the latest version of that dependency.`\x2C\n      "font-weight: bold;"\x2C\n    );\n  }\n  console.error();\n}\n\nfunction windowClose() {\n  if (!windowIsClosing) {\n    windowIsClosing = true;\n    // Push a macrotask to exit after a promise resolve.\n    // This is not perfect\x2C but should be fine for first pass.\n    PromisePrototypeThen(\n      PromiseResolve()\x2C\n      () =>\n        FunctionPrototypeCall(timers.setTimeout\x2C null\x2C () => {\n          // This should be fine\x2C since only Window/MainWorker has .close()\n          os.exit(0);\n        }\x2C 0)\x2C\n    );\n  }\n}\n\nfunction workerClose() {\n  if (isClosing) {\n    return;\n  }\n\n  isClosing = true;\n  op_worker_close();\n}\n\nfunction postMessage(message\x2C transferOrOptions = { __proto__: null }) {\n  const prefix =\n    "Failed to execute 'postMessage' on 'DedicatedWorkerGlobalScope'";\n  webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n  message = webidl.converters.any(message);\n  let options;\n  if (\n    webidl.type(transferOrOptions) === "Object" &&\n    transferOrOptions !== undefined &&\n    transferOrOptions[SymbolIterator] !== undefined\n  ) {\n    const transfer = webidl.converters["sequence<object>"](\n      transferOrOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n    options = { transfer };\n  } else {\n    options = webidl.converters.StructuredSerializeOptions(\n      transferOrOptions\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n  }\n  const { transfer } = options;\n  const data = messagePort.serializeJsMessageData(message\x2C transfer);\n  op_worker_post_message(data);\n}\n\nlet isClosing = false;\nlet globalDispatchEvent;\n\nfunction hasMessageEventListener() {\n  return event.listenerCount(globalThis\x2C "message") > 0 ||\n    messagePort.messageEventListenerCount > 0;\n}\n\nasync function pollForMessages() {\n  if (!globalDispatchEvent) {\n    globalDispatchEvent = FunctionPrototypeBind(\n      globalThis.dispatchEvent\x2C\n      globalThis\x2C\n    );\n  }\n  while (!isClosing) {\n    const recvMessage = op_worker_recv_message();\n    if (globalThis[messagePort.unrefPollForMessages] === true) {\n      core.unrefOpPromise(recvMessage);\n    }\n    const data = await recvMessage;\n    // const data = await op_worker_recv_message();\n    if (data === null) break;\n    const v = messagePort.deserializeJsMessageData(data);\n    const message = v[0];\n    const transferables = v[1];\n\n    const msgEvent = new event.MessageEvent("message"\x2C {\n      cancelable: false\x2C\n      data: message\x2C\n      ports: ArrayPrototypeFilter(\n        transferables\x2C\n        (t) =>\n          ObjectPrototypeIsPrototypeOf(messagePort.MessagePortPrototype\x2C t)\x2C\n      )\x2C\n    });\n    event.setIsTrusted(msgEvent\x2C true);\n\n    try {\n      globalDispatchEvent(msgEvent);\n    } catch (e) {\n      const errorEvent = new event.ErrorEvent("error"\x2C {\n        cancelable: true\x2C\n        message: e.message\x2C\n        lineno: e.lineNumber ? e.lineNumber + 1 : undefined\x2C\n        colno: e.columnNumber ? e.columnNumber + 1 : undefined\x2C\n        filename: e.fileName\x2C\n        error: e\x2C\n      });\n\n      event.setIsTrusted(errorEvent\x2C true);\n      globalDispatchEvent(errorEvent);\n      if (!errorEvent.defaultPrevented) {\n        throw e;\n      }\n    }\n  }\n}\n\nlet loadedMainWorkerScript = false;\n\nfunction importScripts(...urls) {\n  if (op_worker_get_type() === "module") {\n    throw new TypeError("Can't import scripts in a module worker.");\n  }\n\n  const baseUrl = location.getLocationHref();\n  const parsedUrls = ArrayPrototypeMap(urls\x2C (scriptUrl) => {\n    try {\n      return new url.URL(scriptUrl\x2C baseUrl ?? undefined).href;\n    } catch {\n      throw new DOMException(\n        "Failed to parse URL."\x2C\n        "SyntaxError"\x2C\n      );\n    }\n  });\n\n  // A classic worker's main script has looser MIME type checks than any\n  // imported scripts\x2C so we use `loadedMainWorkerScript` to distinguish them.\n  // TODO(andreubotella) Refactor worker creation so the main script isn't\n  // loaded with `importScripts()`.\n  const scripts = op_worker_sync_fetch(\n    parsedUrls\x2C\n    !loadedMainWorkerScript\x2C\n  );\n  loadedMainWorkerScript = true;\n\n  for (let i = 0; i < scripts.length; ++i) {\n    const { url\x2C script } = scripts[i];\n    const err = core.evalContext(script\x2C url)[1];\n    if (err !== null) {\n      throw err.thrown;\n    }\n  }\n}\n\nconst opArgs = memoizeLazy(() => op_bootstrap_args());\nconst opPid = memoizeLazy(() => op_bootstrap_pid());\nsetNoColorFns(\n  () => op_bootstrap_no_color() || !op_bootstrap_is_stdout_tty()\x2C\n  () => op_bootstrap_no_color() || !op_bootstrap_is_stderr_tty()\x2C\n);\n\nfunction formatException(error) {\n  if (\n    isNativeError(error) ||\n    ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C error)\n  ) {\n    return null;\n  } else if (typeof error == "string") {\n    return `Uncaught ${\n      inspectArgs([quoteString(error\x2C getDefaultInspectOptions())]\x2C {\n        colors: !getStderrNoColor()\x2C\n      })\n    }`;\n  } else {\n    return `Uncaught ${inspectArgs([error]\x2C { colors: !getStderrNoColor() })}`;\n  }\n}\n\ncore.registerErrorClass("NotFound"\x2C errors.NotFound);\ncore.registerErrorClass("PermissionDenied"\x2C errors.PermissionDenied);\ncore.registerErrorClass("ConnectionRefused"\x2C errors.ConnectionRefused);\ncore.registerErrorClass("ConnectionReset"\x2C errors.ConnectionReset);\ncore.registerErrorClass("ConnectionAborted"\x2C errors.ConnectionAborted);\ncore.registerErrorClass("NotConnected"\x2C errors.NotConnected);\ncore.registerErrorClass("AddrInUse"\x2C errors.AddrInUse);\ncore.registerErrorClass("AddrNotAvailable"\x2C errors.AddrNotAvailable);\ncore.registerErrorClass("BrokenPipe"\x2C errors.BrokenPipe);\ncore.registerErrorClass("AlreadyExists"\x2C errors.AlreadyExists);\ncore.registerErrorClass("InvalidData"\x2C errors.InvalidData);\ncore.registerErrorClass("TimedOut"\x2C errors.TimedOut);\ncore.registerErrorClass("WouldBlock"\x2C errors.WouldBlock);\ncore.registerErrorClass("WriteZero"\x2C errors.WriteZero);\ncore.registerErrorClass("UnexpectedEof"\x2C errors.UnexpectedEof);\ncore.registerErrorClass("Http"\x2C errors.Http);\ncore.registerErrorClass("Busy"\x2C errors.Busy);\ncore.registerErrorClass("NotSupported"\x2C errors.NotSupported);\ncore.registerErrorClass("FilesystemLoop"\x2C errors.FilesystemLoop);\ncore.registerErrorClass("IsADirectory"\x2C errors.IsADirectory);\ncore.registerErrorClass("NetworkUnreachable"\x2C errors.NetworkUnreachable);\ncore.registerErrorClass("NotADirectory"\x2C errors.NotADirectory);\ncore.registerErrorBuilder(\n  "DOMExceptionOperationError"\x2C\n  function DOMExceptionOperationError(msg) {\n    return new DOMException(msg\x2C "OperationError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionQuotaExceededError"\x2C\n  function DOMExceptionQuotaExceededError(msg) {\n    return new DOMException(msg\x2C "QuotaExceededError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionNotSupportedError"\x2C\n  function DOMExceptionNotSupportedError(msg) {\n    return new DOMException(msg\x2C "NotSupported");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionNetworkError"\x2C\n  function DOMExceptionNetworkError(msg) {\n    return new DOMException(msg\x2C "NetworkError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionAbortError"\x2C\n  function DOMExceptionAbortError(msg) {\n    return new DOMException(msg\x2C "AbortError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionInvalidCharacterError"\x2C\n  function DOMExceptionInvalidCharacterError(msg) {\n    return new DOMException(msg\x2C "InvalidCharacterError");\n  }\x2C\n);\ncore.registerErrorBuilder(\n  "DOMExceptionDataError"\x2C\n  function DOMExceptionDataError(msg) {\n    return new DOMException(msg\x2C "DataError");\n  }\x2C\n);\n\nfunction runtimeStart(\n  denoVersion\x2C\n  v8Version\x2C\n  tsVersion\x2C\n  target\x2C\n) {\n  core.setWasmStreamingCallback(fetch.handleWasmStreaming);\n  core.setReportExceptionCallback(event.reportException);\n  op_set_format_exception_callback(formatException);\n  version.setVersions(\n    denoVersion\x2C\n    v8Version\x2C\n    tsVersion\x2C\n  );\n  core.setBuildInfo(target);\n}\n\ncore.setUnhandledPromiseRejectionHandler(processUnhandledPromiseRejection);\ncore.setHandledPromiseRejectionHandler(processRejectionHandled);\n\n// Notification that the core received an unhandled promise rejection that is about to\n// terminate the runtime. If we can handle it\x2C attempt to do so.\nfunction processUnhandledPromiseRejection(promise\x2C reason) {\n  const rejectionEvent = new event.PromiseRejectionEvent(\n    "unhandledrejection"\x2C\n    {\n      cancelable: true\x2C\n      promise\x2C\n      reason\x2C\n    }\x2C\n  );\n\n  // Note that the handler may throw\x2C causing a recursive "error" event\n  globalThis_.dispatchEvent(rejectionEvent);\n\n  // If event was not yet prevented\x2C try handing it off to Node compat layer\n  // (if it was initialized)\n  if (\n    !rejectionEvent.defaultPrevented &&\n    typeof internals.nodeProcessUnhandledRejectionCallback !== "undefined"\n  ) {\n    internals.nodeProcessUnhandledRejectionCallback(rejectionEvent);\n  }\n\n  // If event was not prevented (or "unhandledrejection" listeners didn't\n  // throw) we will let Rust side handle it.\n  if (rejectionEvent.defaultPrevented) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction processRejectionHandled(promise\x2C reason) {\n  const rejectionHandledEvent = new event.PromiseRejectionEvent(\n    "rejectionhandled"\x2C\n    { promise\x2C reason }\x2C\n  );\n\n  // Note that the handler may throw\x2C causing a recursive "error" event\n  globalThis_.dispatchEvent(rejectionHandledEvent);\n\n  if (typeof internals.nodeProcessRejectionHandledCallback !== "undefined") {\n    internals.nodeProcessRejectionHandledCallback(rejectionHandledEvent);\n  }\n}\n\nfunction dispatchLoadEvent() {\n  globalThis_.dispatchEvent(new Event("load"));\n}\n\nfunction dispatchBeforeUnloadEvent() {\n  return globalThis_.dispatchEvent(\n    new Event("beforeunload"\x2C { cancelable: true })\x2C\n  );\n}\n\nfunction dispatchUnloadEvent() {\n  globalThis_.dispatchEvent(new Event("unload"));\n}\n\nlet hasBootstrapped = false;\n// Delete the `console` object that V8 automaticaly adds onto the global wrapper\n// object on context creation. We don't want this console object to shadow the\n// `console` object exposed by the ext/node globalThis proxy.\ndelete globalThis.console;\n// Set up global properties shared by main and worker runtime.\nObjectDefineProperties(globalThis\x2C windowOrWorkerGlobalScope);\n\n// Set up global properties shared by main and worker runtime that are exposed\n// by unstable features if those are enabled.\nfunction exposeUnstableFeaturesForWindowOrWorkerGlobalScope(options) {\n  const { unstableFlag\x2C unstableFeatures } = options;\n  if (unstableFlag) {\n    const all = ObjectValues(unstableForWindowOrWorkerGlobalScope);\n    for (let i = 0; i <= all.length; i++) {\n      const props = all[i];\n      ObjectDefineProperties(globalThis\x2C { ...props });\n    }\n  } else {\n    const featureIds = ArrayPrototypeMap(\n      ObjectKeys(\n        unstableForWindowOrWorkerGlobalScope\x2C\n      )\x2C\n      (k) => k | 0\x2C\n    );\n\n    for (let i = 0; i <= featureIds.length; i++) {\n      const featureId = featureIds[i];\n      if (ArrayPrototypeIncludes(unstableFeatures\x2C featureId)) {\n        const props = unstableForWindowOrWorkerGlobalScope[featureId];\n        ObjectDefineProperties(globalThis\x2C { ...props });\n      }\n    }\n  }\n}\n\n// NOTE(bartlomieju): remove all the ops that have already been imported using\n// "virtual op module" (`ext:core/ops`).\nconst NOT_IMPORTED_OPS = [\n  // Related to `Deno.bench()` API\n  "op_bench_now"\x2C\n  "op_dispatch_bench_event"\x2C\n  "op_register_bench"\x2C\n  "op_bench_get_origin"\x2C\n\n  // Related to `Deno.jupyter` API\n  "op_jupyter_broadcast"\x2C\n  "op_jupyter_input"\x2C\n\n  // Related to `Deno.test()` API\n  "op_test_event_step_result_failed"\x2C\n  "op_test_event_step_result_ignored"\x2C\n  "op_test_event_step_result_ok"\x2C\n  "op_test_event_step_wait"\x2C\n  "op_test_op_sanitizer_collect"\x2C\n  "op_test_op_sanitizer_finish"\x2C\n  "op_test_op_sanitizer_get_async_message"\x2C\n  "op_test_op_sanitizer_report"\x2C\n  "op_restore_test_permissions"\x2C\n  "op_register_test_step"\x2C\n  "op_register_test"\x2C\n  "op_test_get_origin"\x2C\n  "op_pledge_test_permissions"\x2C\n\n  // TODO(bartlomieju): used in various integration tests - figure out a way\n  // to not depend on them.\n  "op_set_exit_code"\x2C\n  "op_napi_open"\x2C\n  "op_npm_process_state"\x2C\n];\n\nfunction removeImportedOps() {\n  const allOpNames = ObjectKeys(ops);\n  for (let i = 0; i < allOpNames.length; i++) {\n    const opName = allOpNames[i];\n    if (!ArrayPrototypeIncludes(NOT_IMPORTED_OPS\x2C opName)) {\n      delete ops[opName];\n    }\n  }\n}\n\n// FIXME(bartlomieju): temporarily add whole `Deno.core` to\n// `Deno[Deno.internal]` namespace. It should be removed and only necessary\n// methods should be left there.\nObjectAssign(internals\x2C { core\x2C warnOnDeprecatedApi });\nconst internalSymbol = Symbol("Deno.internal");\nconst finalDenoNs = {\n  internal: internalSymbol\x2C\n  [internalSymbol]: internals\x2C\n  resources() {\n    internals.warnOnDeprecatedApi("Deno.resources()"\x2C new Error().stack);\n    return core.resources();\n  }\x2C\n  close(rid) {\n    internals.warnOnDeprecatedApi(\n      "Deno.close()"\x2C\n      new Error().stack\x2C\n      "Use `closer.close()` instead."\x2C\n    );\n    core.close(rid);\n  }\x2C\n  ...denoNs\x2C\n  // Deno.test and Deno.bench are noops here\x2C but kept for compatibility; so\n  // that they don't cause errors when used outside of `deno test`/`deno bench`\n  // contexts.\n  test: () => {}\x2C\n  bench: () => {}\x2C\n};\n\nObjectDefineProperties(finalDenoNs\x2C {\n  pid: core.propGetterOnly(opPid)\x2C\n  // `ppid` should not be memoized.\n  // https://github.com/denoland/deno/issues/23004\n  ppid: core.propGetterOnly(() => op_ppid())\x2C\n  noColor: core.propGetterOnly(() => op_bootstrap_no_color())\x2C\n  args: core.propGetterOnly(opArgs)\x2C\n  mainModule: core.propGetterOnly(() => op_main_module())\x2C\n  // TODO(kt3k): Remove this export at v2\n  // See https://github.com/denoland/deno/issues/9294\n  customInspect: {\n    get() {\n      warnOnDeprecatedApi(\n        "Deno.customInspect"\x2C\n        new Error().stack\x2C\n        'Use `Symbol.for("Deno.customInspect")` instead.'\x2C\n      );\n      return internals.future ? undefined : customInspect;\n    }\x2C\n  }\x2C\n  exitCode: {\n    get() {\n      return os.getExitCode();\n    }\x2C\n    set(value) {\n      os.setExitCode(value);\n    }\x2C\n  }\x2C\n});\n\nconst {\n  denoVersion\x2C\n  tsVersion\x2C\n  v8Version\x2C\n  target\x2C\n} = op_snapshot_options();\n\nconst executionModes = {\n  none: 0\x2C\n  worker: 1\x2C\n  run: 2\x2C\n  repl: 3\x2C\n  eval: 4\x2C\n  test: 5\x2C\n  bench: 6\x2C\n  serve: 7\x2C\n  jupyter: 8\x2C\n};\n\nfunction bootstrapMainRuntime(runtimeOptions\x2C warmup = false) {\n  if (!warmup) {\n    if (hasBootstrapped) {\n      throw new Error("Worker runtime already bootstrapped");\n    }\n\n    const {\n      0: location_\x2C\n      1: unstableFlag\x2C\n      2: unstableFeatures\x2C\n      3: inspectFlag\x2C\n      5: hasNodeModulesDir\x2C\n      6: argv0\x2C\n      7: nodeDebug\x2C\n      8: shouldDisableDeprecatedApiWarning\x2C\n      9: shouldUseVerboseDeprecatedApiWarning\x2C\n      10: future\x2C\n      11: mode\x2C\n      12: servePort\x2C\n      13: serveHost\x2C\n    } = runtimeOptions;\n\n    if (mode === executionModes.run || mode === executionModes.serve) {\n      let serve = undefined;\n      core.addMainModuleHandler((main) => {\n        if (ObjectHasOwn(main\x2C "default")) {\n          try {\n            serve = registerDeclarativeServer(main.default);\n          } catch (e) {\n            if (mode === executionModes.serve) {\n              throw e;\n            }\n          }\n        }\n\n        if (mode === executionModes.serve && !serve) {\n          console.error(\n            `%cerror: %cdeno serve requires %cexport default { fetch }%c in the main module\x2C did you mean to run \\"deno run\\"?`\x2C\n            "color: yellow;"\x2C\n            "color: inherit;"\x2C\n            "font-weight: bold;"\x2C\n            "font-weight: normal;"\x2C\n          );\n          return;\n        }\n\n        if (serve) {\n          if (mode === executionModes.run) {\n            console.error(\n              `%cwarning: %cDetected %cexport default { fetch }%c\x2C did you mean to run \\"deno serve\\"?`\x2C\n              "color: yellow;"\x2C\n              "color: inherit;"\x2C\n              "font-weight: bold;"\x2C\n              "font-weight: normal;"\x2C\n            );\n          }\n          if (mode === executionModes.serve) {\n            serve({ servePort\x2C serveHost });\n          }\n        }\n      });\n    }\n\n    // TODO(iuioiua): remove in Deno v2. This allows us to dynamically delete\n    // class properties within constructors for classes that are not defined\n    // within the Deno namespace.\n    internals.future = future;\n\n    removeImportedOps();\n\n    deprecatedApiWarningDisabled = shouldDisableDeprecatedApiWarning;\n    verboseDeprecatedApiWarning = shouldUseVerboseDeprecatedApiWarning;\n    performance.setTimeOrigin(DateNow());\n    globalThis_ = globalThis;\n\n    // Remove bootstrapping data from the global scope\n    delete globalThis.__bootstrap;\n    delete globalThis.bootstrap;\n    hasBootstrapped = true;\n\n    // If the `--location` flag isn't set\x2C make `globalThis.location` `undefined` and\n    // writable\x2C so that they can mock it themselves if they like. If the flag was\n    // set\x2C define `globalThis.location`\x2C using the provided value.\n    if (location_ == null) {\n      mainRuntimeGlobalProperties.location = {\n        writable: true\x2C\n      };\n    } else {\n      location.setLocationHref(location_);\n    }\n\n    exposeUnstableFeaturesForWindowOrWorkerGlobalScope({\n      unstableFlag\x2C\n      unstableFeatures\x2C\n    });\n    ObjectDefineProperties(globalThis\x2C mainRuntimeGlobalProperties);\n    ObjectDefineProperties(globalThis\x2C {\n      // TODO(bartlomieju): in the future we might want to change the\n      // behavior of setting `name` to actually update the process name.\n      // Empty string matches what browsers do.\n      name: core.propWritable("")\x2C\n      close: core.propWritable(windowClose)\x2C\n      closed: core.propGetterOnly(() => windowIsClosing)\x2C\n    });\n    ObjectSetPrototypeOf(globalThis\x2C Window.prototype);\n\n    if (inspectFlag) {\n      const consoleFromDeno = globalThis.console;\n      core.wrapConsole(consoleFromDeno\x2C core.v8Console);\n    }\n\n    event.defineEventHandler(globalThis\x2C "error");\n    event.defineEventHandler(globalThis\x2C "load");\n    event.defineEventHandler(globalThis\x2C "beforeunload");\n    event.defineEventHandler(globalThis\x2C "unload");\n\n    runtimeStart(\n      denoVersion\x2C\n      v8Version\x2C\n      tsVersion\x2C\n      target\x2C\n    );\n\n    // TODO(bartlomieju): deprecate --unstable\n    if (unstableFlag) {\n      ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n      // TODO(bartlomieju): this is not ideal\x2C but because we use `ObjectAssign`\n      // above any properties that are defined elsewhere using `Object.defineProperty`\n      // are lost.\n      let jupyterNs = undefined;\n      ObjectDefineProperty(finalDenoNs\x2C "jupyter"\x2C {\n        get() {\n          if (jupyterNs) {\n            return jupyterNs;\n          }\n          throw new Error(\n            "Deno.jupyter is only available in `deno jupyter` subcommand."\x2C\n          );\n        }\x2C\n        set(val) {\n          jupyterNs = val;\n        }\x2C\n      });\n    } else {\n      for (let i = 0; i <= unstableFeatures.length; i++) {\n        const id = unstableFeatures[i];\n        ObjectAssign(finalDenoNs\x2C denoNsUnstableById[id]);\n      }\n    }\n\n    if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.unsafeProto)) {\n      // Removes the `__proto__` for security reasons.\n      // https://tc39.es/ecma262/#sec-get-object.prototype.__proto__\n      delete Object.prototype.__proto__;\n    }\n\n    if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.temporal)) {\n      // Removes the `Temporal` API.\n      delete globalThis.Temporal;\n      delete globalThis.Date.prototype.toTemporalInstant;\n    }\n\n    // Setup `Deno` global - we're actually overriding already existing global\n    // `Deno` with `Deno` namespace from "./deno.ts".\n    ObjectDefineProperty(globalThis\x2C "Deno"\x2C core.propReadOnly(finalDenoNs));\n\n    if (nodeBootstrap) {\n      nodeBootstrap({\n        usesLocalNodeModulesDir: hasNodeModulesDir\x2C\n        runningOnMainThread: true\x2C\n        argv0\x2C\n        nodeDebug\x2C\n      });\n    }\n    if (future) {\n      delete globalThis.window;\n      delete Deno.Buffer;\n      delete Deno.close;\n      delete Deno.copy;\n      delete Deno.File;\n      delete Deno.fstat;\n      delete Deno.fstatSync;\n      delete Deno.ftruncate;\n      delete Deno.ftruncateSync;\n      delete Deno.flock;\n      delete Deno.flockSync;\n      delete Deno.FsFile.prototype.rid;\n      delete Deno.funlock;\n      delete Deno.funlockSync;\n      delete Deno.iter;\n      delete Deno.iterSync;\n      delete Deno.metrics;\n      delete Deno.readAll;\n      delete Deno.readAllSync;\n      delete Deno.read;\n      delete Deno.readSync;\n      delete Deno.resources;\n      delete Deno.seek;\n      delete Deno.seekSync;\n      delete Deno.shutdown;\n      delete Deno.writeAll;\n      delete Deno.writeAllSync;\n      delete Deno.write;\n      delete Deno.writeSync;\n    }\n  } else {\n    // Warmup\n  }\n}\n\nfunction bootstrapWorkerRuntime(\n  runtimeOptions\x2C\n  name\x2C\n  internalName\x2C\n  workerId\x2C\n  maybeWorkerMetadata\x2C\n  warmup = false\x2C\n) {\n  if (!warmup) {\n    if (hasBootstrapped) {\n      throw new Error("Worker runtime already bootstrapped");\n    }\n\n    const {\n      0: location_\x2C\n      1: unstableFlag\x2C\n      2: unstableFeatures\x2C\n      4: enableTestingFeaturesFlag\x2C\n      5: hasNodeModulesDir\x2C\n      6: argv0\x2C\n      7: nodeDebug\x2C\n      8: shouldDisableDeprecatedApiWarning\x2C\n      9: shouldUseVerboseDeprecatedApiWarning\x2C\n      10: future\x2C\n    } = runtimeOptions;\n\n    // TODO(iuioiua): remove in Deno v2. This allows us to dynamically delete\n    // class properties within constructors for classes that are not defined\n    // within the Deno namespace.\n    internals.future = future;\n\n    deprecatedApiWarningDisabled = shouldDisableDeprecatedApiWarning;\n    verboseDeprecatedApiWarning = shouldUseVerboseDeprecatedApiWarning;\n    performance.setTimeOrigin(DateNow());\n    globalThis_ = globalThis;\n\n    // Remove bootstrapping data from the global scope\n    delete globalThis.__bootstrap;\n    delete globalThis.bootstrap;\n    hasBootstrapped = true;\n\n    exposeUnstableFeaturesForWindowOrWorkerGlobalScope({\n      unstableFlag\x2C\n      unstableFeatures\x2C\n    });\n    ObjectDefineProperties(globalThis\x2C workerRuntimeGlobalProperties);\n    ObjectDefineProperties(globalThis\x2C {\n      name: core.propWritable(name)\x2C\n      // TODO(bartlomieju): should be readonly?\n      close: core.propNonEnumerable(workerClose)\x2C\n      postMessage: core.propWritable(postMessage)\x2C\n    });\n    if (enableTestingFeaturesFlag) {\n      ObjectDefineProperty(\n        globalThis\x2C\n        "importScripts"\x2C\n        core.propWritable(importScripts)\x2C\n      );\n    }\n    ObjectSetPrototypeOf(globalThis\x2C DedicatedWorkerGlobalScope.prototype);\n\n    const consoleFromDeno = globalThis.console;\n    core.wrapConsole(consoleFromDeno\x2C core.v8Console);\n\n    event.defineEventHandler(self\x2C "message");\n    event.defineEventHandler(self\x2C "error"\x2C undefined\x2C true);\n\n    // `Deno.exit()` is an alias to `self.close()`. Setting and exit\n    // code using an op in worker context is a no-op.\n    os.setExitHandler((_exitCode) => {\n      workerClose();\n    });\n\n    runtimeStart(\n      denoVersion\x2C\n      v8Version\x2C\n      tsVersion\x2C\n      target\x2C\n      internalName ?? name\x2C\n    );\n\n    location.setLocationHref(location_);\n\n    globalThis.pollForMessages = pollForMessages;\n    globalThis.hasMessageEventListener = hasMessageEventListener;\n\n    // TODO(bartlomieju): deprecate --unstable\n    if (unstableFlag) {\n      ObjectAssign(finalDenoNs\x2C denoNsUnstable);\n    } else {\n      for (let i = 0; i <= unstableFeatures.length; i++) {\n        const id = unstableFeatures[i];\n        ObjectAssign(finalDenoNs\x2C denoNsUnstableById[id]);\n      }\n    }\n\n    // Not available in workers\n    delete finalDenoNs.mainModule;\n\n    if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.unsafeProto)) {\n      // Removes the `__proto__` for security reasons.\n      // https://tc39.es/ecma262/#sec-get-object.prototype.__proto__\n      delete Object.prototype.__proto__;\n    }\n\n    if (!ArrayPrototypeIncludes(unstableFeatures\x2C unstableIds.temporal)) {\n      // Removes the `Temporal` API.\n      delete globalThis.Temporal;\n      delete globalThis.Date.prototype.toTemporalInstant;\n    }\n\n    // Setup `Deno` global - we're actually overriding already existing global\n    // `Deno` with `Deno` namespace from "./deno.ts".\n    ObjectDefineProperty(globalThis\x2C "Deno"\x2C core.propReadOnly(finalDenoNs));\n\n    const workerMetadata = maybeWorkerMetadata\n      ? messagePort.deserializeJsMessageData(maybeWorkerMetadata)\n      : undefined;\n\n    if (nodeBootstrap) {\n      nodeBootstrap({\n        usesLocalNodeModulesDir: hasNodeModulesDir\x2C\n        runningOnMainThread: false\x2C\n        argv0\x2C\n        workerId\x2C\n        maybeWorkerMetadata: workerMetadata\x2C\n        nodeDebug\x2C\n      });\n    }\n\n    if (future) {\n      delete Deno.Buffer;\n      delete Deno.close;\n      delete Deno.copy;\n      delete Deno.File;\n      delete Deno.fstat;\n      delete Deno.fstatSync;\n      delete Deno.ftruncate;\n      delete Deno.ftruncateSync;\n      delete Deno.flock;\n      delete Deno.flockSync;\n      delete Deno.FsFile.prototype.rid;\n      delete Deno.funlock;\n      delete Deno.funlockSync;\n      delete Deno.iter;\n      delete Deno.iterSync;\n      delete Deno.metrics;\n      delete Deno.readAll;\n      delete Deno.readAllSync;\n      delete Deno.read;\n      delete Deno.readSync;\n      delete Deno.resources;\n      delete Deno.seek;\n      delete Deno.seekSync;\n      delete Deno.shutdown;\n      delete Deno.writeAll;\n      delete Deno.writeAllSync;\n      delete Deno.write;\n      delete Deno.writeSync;\n    }\n  } else {\n    // Warmup\n    return;\n  }\n}\n\nconst nodeBootstrap = globalThis.nodeBootstrap;\ndelete globalThis.nodeBootstrap;\nconst dispatchProcessExitEvent = internals.dispatchProcessExitEvent;\ndelete internals.dispatchProcessExitEvent;\nconst dispatchProcessBeforeExitEvent = internals.dispatchProcessBeforeExitEvent;\ndelete internals.dispatchProcessBeforeExitEvent;\n\nglobalThis.bootstrap = {\n  mainRuntime: bootstrapMainRuntime\x2C\n  workerRuntime: bootstrapWorkerRuntime\x2C\n  dispatchLoadEvent\x2C\n  dispatchUnloadEvent\x2C\n  dispatchBeforeUnloadEvent\x2C\n  dispatchProcessExitEvent\x2C\n  dispatchProcessBeforeExitEvent\x2C\n};\n\nevent.setEventTargetData(globalThis);\nevent.saveGlobalThisReference(globalThis);\nevent.defineEventHandler(globalThis\x2C "unhandledrejection");\n\n// Nothing listens to this\x2C but it warms up the code paths for event dispatch\n(new event.EventTarget()).dispatchEvent(new Event("warmup"));\n\nremoveImportedOps();\n\n// Run the warmup path through node and runtime/worker bootstrap functions\nbootstrapMainRuntime(undefined\x2C true);\nbootstrapWorkerRuntime(\n  undefined\x2C\n  undefined\x2C\n  undefined\x2C\n  undefined\x2C\n  undefined\x2C\n  true\x2C\n);\nnodeBootstrap({ warmup: true });\n
code-source-info,0x2c37005800b8,305,16161,16908,C0O16183C5O16197C10O16229C14O16265C19O16278C25O16265C30O16334C32O16346C36O16339C41O16381C43O16384C47O16395C52O16418C56O16435C61O16395C66O16355C71O16321C77O16485C84O16510C87O16530C93O16510C103O16485C109O16622C111O16641C115O16627C120O16680C122O16690C126O16701C131O16705C138O16782C144O16818C148O16839C153O16862C157O16879C162O16839C167O16650C172O16609C177O16907,,
code-creation,JS,9,18634,0x2c37005801f8,6, ext:runtime_main/js/99_main.js:558:7,0x2c37005569b8,~
code-source-info,0x2c37005801f8,305,16583,16595,C0O16592C2O16592C5O16595,,
tick,0x7d8294d1c5ad,18667,0,0x0,9,0x64950db65500,0x64950d907e8f,0x2c370058011f,0x2c3700307411
code-creation,JS,9,18747,0x2c3700580260,97,runtimeStart ext:runtime_main/js/99_main.js:454:22,0x2c37003540a8,~
code-source-info,0x2c3700580260,305,13339,13672,C0O13398C6O13403C14O13434C19O13403C24O13458C28O13463C36O13496C41O13463C46O13516C55O13516C59O13569C62O13577C76O13577C81O13644C85O13649C90O13649C96O13671,,
code-creation,JS,9,18790,0x2c370058032c,10,setWasmStreamingCallback ext:core/01_core.js:719:31,0x2c37001cbec8,~
script-source,5,ext:core/01_core.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    ArrayPrototypeMap\x2C\n    ArrayPrototypePush\x2C\n    Error\x2C\n    ErrorCaptureStackTrace\x2C\n    FunctionPrototypeBind\x2C\n    ObjectAssign\x2C\n    ObjectFreeze\x2C\n    ObjectFromEntries\x2C\n    ObjectKeys\x2C\n    ObjectHasOwn\x2C\n    setQueueMicrotask\x2C\n    SafeMap\x2C\n    Set\x2C\n    StringPrototypeSlice\x2C\n    Symbol\x2C\n    SymbolFor\x2C\n    TypedArrayPrototypeGetLength\x2C\n    TypedArrayPrototypeJoin\x2C\n    TypedArrayPrototypeSlice\x2C\n    TypedArrayPrototypeGetSymbolToStringTag\x2C\n    TypeError\x2C\n  } = window.__bootstrap.primordials;\n  const {\n    ops\x2C\n    hasPromise\x2C\n    promiseIdSymbol\x2C\n    registerErrorClass\x2C\n  } = window.Deno.core;\n  const {\n    __setLeakTracingEnabled\x2C\n    __isLeakTracingEnabled\x2C\n    __initializeCoreMethods\x2C\n    __resolvePromise\x2C\n  } = window.__infra;\n  const {\n    op_abort_wasm_streaming\x2C\n    op_current_user_call_site\x2C\n    op_decode\x2C\n    op_deserialize\x2C\n    op_destructure_error\x2C\n    op_dispatch_exception\x2C\n    op_encode\x2C\n    op_encode_binary_string\x2C\n    op_eval_context\x2C\n    op_event_loop_has_more_work\x2C\n    op_get_promise_details\x2C\n    op_get_proxy_details\x2C\n    op_has_tick_scheduled\x2C\n    op_lazy_load_esm\x2C\n    op_memory_usage\x2C\n    op_op_names\x2C\n    op_print\x2C\n    op_queue_microtask\x2C\n    op_ref_op\x2C\n    op_resources\x2C\n    op_run_microtasks\x2C\n    op_serialize\x2C\n    op_add_main_module_handler\x2C\n    op_set_handled_promise_rejection_handler\x2C\n    op_set_has_tick_scheduled\x2C\n    op_set_promise_hooks\x2C\n    op_set_wasm_streaming_callback\x2C\n    op_str_byte_length\x2C\n    op_timer_cancel\x2C\n    op_timer_queue\x2C\n    op_timer_queue_system\x2C\n    op_timer_queue_immediate\x2C\n    op_timer_ref\x2C\n    op_timer_unref\x2C\n    op_unref_op\x2C\n    op_cancel_handle\x2C\n    op_leak_tracing_enable\x2C\n    op_leak_tracing_submit\x2C\n    op_leak_tracing_get_all\x2C\n    op_leak_tracing_get\x2C\n\n    op_is_any_array_buffer\x2C\n    op_is_arguments_object\x2C\n    op_is_array_buffer\x2C\n    op_is_array_buffer_view\x2C\n    op_is_async_function\x2C\n    op_is_big_int_object\x2C\n    op_is_boolean_object\x2C\n    op_is_boxed_primitive\x2C\n    op_is_data_view\x2C\n    op_is_date\x2C\n    op_is_generator_function\x2C\n    op_is_generator_object\x2C\n    op_is_map\x2C\n    op_is_map_iterator\x2C\n    op_is_module_namespace_object\x2C\n    op_is_native_error\x2C\n    op_is_number_object\x2C\n    op_is_promise\x2C\n    op_is_proxy\x2C\n    op_is_reg_exp\x2C\n    op_is_set\x2C\n    op_is_set_iterator\x2C\n    op_is_shared_array_buffer\x2C\n    op_is_string_object\x2C\n    op_is_symbol_object\x2C\n    op_is_typed_array\x2C\n    op_is_weak_map\x2C\n    op_is_weak_set\x2C\n  } = ops;\n\n  // core/infra collaborative code\n  delete window.__infra;\n\n  __initializeCoreMethods(\n    eventLoopTick\x2C\n    submitLeakTrace\x2C\n  );\n\n  function submitLeakTrace(id) {\n    const error = new Error();\n    ErrorCaptureStackTrace(error\x2C submitLeakTrace);\n    // "Error\\n".length == 6\n    op_leak_tracing_submit(0\x2C id\x2C StringPrototypeSlice(error.stack\x2C 6));\n  }\n\n  function submitTimerTrace(id) {\n    const error = new Error();\n    ErrorCaptureStackTrace(error\x2C submitTimerTrace);\n    // We submit interval and timer traces as type "Timer"\n    // "Error\\n".length == 6\n    op_leak_tracing_submit(2\x2C id\x2C StringPrototypeSlice(error.stack\x2C 6));\n  }\n\n  let unhandledPromiseRejectionHandler = () => false;\n  let timerDepth = 0;\n  let timersRunning = false;\n  const cancelledTimers = new Set();\n\n  const macrotaskCallbacks = [];\n  const nextTickCallbacks = [];\n\n  function setMacrotaskCallback(cb) {\n    ArrayPrototypePush(macrotaskCallbacks\x2C cb);\n  }\n\n  function setNextTickCallback(cb) {\n    ArrayPrototypePush(nextTickCallbacks\x2C cb);\n  }\n\n  // This function has variable number of arguments. The last argument describes\n  // if there's a "next tick" scheduled by the Node.js compat layer. Arguments\n  // before last are alternating integers and any values that describe the\n  // responses of async ops.\n  function eventLoopTick() {\n    // First respond to all pending ops.\n    for (let i = 0; i < arguments.length - 3; i += 2) {\n      const promiseId = arguments[i];\n      const res = arguments[i + 1];\n      __resolvePromise(promiseId\x2C res);\n    }\n    // Drain nextTick queue if there's a tick scheduled.\n    if (arguments[arguments.length - 1]) {\n      for (let i = 0; i < nextTickCallbacks.length; i++) {\n        nextTickCallbacks[i]();\n      }\n    } else {\n      op_run_microtasks();\n    }\n\n    // Finally drain macrotask queue.\n    for (let i = 0; i < macrotaskCallbacks.length; i++) {\n      const cb = macrotaskCallbacks[i];\n      while (true) {\n        const res = cb();\n\n        // If callback returned `undefined` then it has no work to do\x2C we don't\n        // need to perform microtask checkpoint.\n        if (res === undefined) {\n          break;\n        }\n\n        op_run_microtasks();\n        // If callback returned `true` then it has no more work to do\x2C stop\n        // calling it then.\n        if (res === true) {\n          break;\n        }\n      }\n    }\n\n    const timers = arguments[arguments.length - 2];\n    if (timers) {\n      timersRunning = true;\n      for (let i = 0; i < timers.length; i += 3) {\n        timerDepth = timers[i];\n        const id = timers[i + 1];\n        if (cancelledTimers.has(id)) {\n          continue;\n        }\n        try {\n          const f = timers[i + 2];\n          f.call(window);\n        } catch (e) {\n          reportExceptionCallback(e);\n        }\n        op_run_microtasks();\n      }\n      timersRunning = false;\n      timerDepth = 0;\n      cancelledTimers.clear();\n    }\n\n    // If we have any rejections for this tick\x2C attempt to process them\n    const rejections = arguments[arguments.length - 3];\n    if (rejections) {\n      for (let i = 0; i < rejections.length; i += 2) {\n        const handled = unhandledPromiseRejectionHandler(\n          rejections[i]\x2C\n          rejections[i + 1]\x2C\n        );\n        if (!handled) {\n          const err = rejections[i + 1];\n          op_dispatch_exception(err\x2C true);\n        }\n      }\n    }\n  }\n\n  function refOp(promiseId) {\n    if (!hasPromise(promiseId)) {\n      return;\n    }\n    op_ref_op(promiseId);\n  }\n\n  function unrefOp(promiseId) {\n    if (!hasPromise(promiseId)) {\n      return;\n    }\n    op_unref_op(promiseId);\n  }\n\n  function refOpPromise(promise) {\n    refOp(promise[promiseIdSymbol]);\n  }\n\n  function unrefOpPromise(promise) {\n    unrefOp(promise[promiseIdSymbol]);\n  }\n\n  function resources() {\n    return ObjectFromEntries(op_resources());\n  }\n\n  function metrics() {\n    // TODO(mmastrac): we should replace this with a newer API\n    return {\n      opsDispatched: 0\x2C\n      opsDispatchedSync: 0\x2C\n      opsDispatchedAsync: 0\x2C\n      opsDispatchedAsyncUnref: 0\x2C\n      opsCompleted: 0\x2C\n      opsCompletedSync: 0\x2C\n      opsCompletedAsync: 0\x2C\n      opsCompletedAsyncUnref: 0\x2C\n      bytesSentControl: 0\x2C\n      bytesSentData: 0\x2C\n      bytesReceived: 0\x2C\n      ops: {}\x2C\n    };\n  }\n\n  let reportExceptionCallback = (error) => {\n    op_dispatch_exception(error\x2C false);\n  };\n\n  // Used to report errors thrown from functions passed to `queueMicrotask()`.\n  // The callback will be passed the thrown error. For example\x2C you can use this\n  // to dispatch an error event to the global scope.\n  // In other words\x2C set the implementation for\n  // https://html.spec.whatwg.org/multipage/webappapis.html#report-the-exception\n  function setReportExceptionCallback(cb) {\n    if (cb === null || cb === undefined) {\n      reportExceptionCallback = (error) => {\n        op_dispatch_exception(error\x2C false);\n      };\n    } else {\n      if (typeof cb != "function") {\n        throw new TypeError("expected a function");\n      }\n      reportExceptionCallback = cb;\n    }\n  }\n\n  function queueMicrotask(cb) {\n    if (typeof cb != "function") {\n      throw new TypeError("expected a function");\n    }\n    return op_queue_microtask(() => {\n      try {\n        cb();\n      } catch (error) {\n        reportExceptionCallback(error);\n      }\n    });\n  }\n\n  // Some "extensions" rely on "BadResource" and "Interrupted" errors in the\n  // JS code (eg. "deno_net") so they are provided in "Deno.core" but later\n  // reexported on "Deno.errors"\n  class BadResource extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "BadResource";\n    }\n  }\n  const BadResourcePrototype = BadResource.prototype;\n\n  class Interrupted extends Error {\n    constructor(msg) {\n      super(msg);\n      this.name = "Interrupted";\n    }\n  }\n  const InterruptedPrototype = Interrupted.prototype;\n\n  registerErrorClass("BadResource"\x2C BadResource);\n  registerErrorClass("Interrupted"\x2C Interrupted);\n\n  const promiseHooks = [\n    []\x2C // init\n    []\x2C // before\n    []\x2C // after\n    []\x2C // resolve\n  ];\n\n  function setPromiseHooks(init\x2C before\x2C after\x2C resolve) {\n    const hooks = [init\x2C before\x2C after\x2C resolve];\n    for (let i = 0; i < hooks.length; i++) {\n      const hook = hooks[i];\n      // Skip if no callback was provided for this hook type.\n      if (hook == null) {\n        continue;\n      }\n      // Verify that the type of `hook` is a function.\n      if (typeof hook !== "function") {\n        throw new TypeError(`Expected function at position ${i}`);\n      }\n      // Add the hook to the list.\n      ArrayPrototypePush(promiseHooks[i]\x2C hook);\n    }\n\n    const wrappedHooks = ArrayPrototypeMap(promiseHooks\x2C (hooks) => {\n      switch (hooks.length) {\n        case 0:\n          return undefined;\n        case 1:\n          return hooks[0];\n        case 2:\n          return create2xHookWrapper(hooks[0]\x2C hooks[1]);\n        case 3:\n          return create3xHookWrapper(hooks[0]\x2C hooks[1]\x2C hooks[2]);\n        default:\n          return createHookListWrapper(hooks);\n      }\n\n      // The following functions are used to create wrapper functions that call\n      // all the hooks in a list of a certain length. The reason to use a\n      // function that creates a wrapper is to minimize the number of objects\n      // captured in the closure.\n      function create2xHookWrapper(hook1\x2C hook2) {\n        return function (promise\x2C parent) {\n          hook1(promise\x2C parent);\n          hook2(promise\x2C parent);\n        };\n      }\n      function create3xHookWrapper(hook1\x2C hook2\x2C hook3) {\n        return function (promise\x2C parent) {\n          hook1(promise\x2C parent);\n          hook2(promise\x2C parent);\n          hook3(promise\x2C parent);\n        };\n      }\n      function createHookListWrapper(hooks) {\n        return function (promise\x2C parent) {\n          for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            hook(promise\x2C parent);\n          }\n        };\n      }\n    });\n\n    op_set_promise_hooks(\n      wrappedHooks[0]\x2C\n      wrappedHooks[1]\x2C\n      wrappedHooks[2]\x2C\n      wrappedHooks[3]\x2C\n    );\n  }\n\n  const {\n    op_close: close\x2C\n    op_try_close: tryClose\x2C\n    op_read: read\x2C\n    op_read_all: readAll\x2C\n    op_write: write\x2C\n    op_write_all: writeAll\x2C\n    op_write_type_error: writeTypeError\x2C\n    op_read_sync: readSync\x2C\n    op_write_sync: writeSync\x2C\n    op_shutdown: shutdown\x2C\n    op_is_terminal: isTerminal\x2C\n  } = ops;\n\n  const callSiteRetBuf = new Uint32Array(2);\n  const callSiteRetBufU8 = new Uint8Array(callSiteRetBuf.buffer);\n\n  function currentUserCallSite() {\n    const fileName = op_current_user_call_site(callSiteRetBufU8);\n    const lineNumber = callSiteRetBuf[0];\n    const columnNumber = callSiteRetBuf[1];\n    return { fileName\x2C lineNumber\x2C columnNumber };\n  }\n\n  const hostObjectBrand = SymbolFor("Deno.core.hostObject");\n\n  // A helper function that will bind our own console implementation\n  // with default implementation of Console from V8. This will cause\n  // console messages to be piped to inspector console.\n  //\n  // We are using `Deno.core.callConsole` binding to preserve proper stack\n  // frames in inspector console. This has to be done because V8 considers\n  // the last JS stack frame as gospel for the inspector. In our case we\n  // specifically want the latest user stack frame to be the one that matters\n  // though.\n  //\n  // Inspired by:\n  // https://github.com/nodejs/node/blob/1317252dfe8824fd9cfee125d2aaa94004db2f3b/lib/internal/util/inspector.js#L39-L61\n  function wrapConsole(customConsole\x2C consoleFromV8) {\n    const callConsole = window.Deno.core.callConsole;\n\n    const keys = ObjectKeys(consoleFromV8);\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (ObjectHasOwn(customConsole\x2C key)) {\n        customConsole[key] = FunctionPrototypeBind(\n          callConsole\x2C\n          customConsole\x2C\n          consoleFromV8[key]\x2C\n          customConsole[key]\x2C\n        );\n      } else {\n        // Add additional console APIs from the inspector\n        customConsole[key] = consoleFromV8[key];\n      }\n    }\n  }\n\n  // Minimal console implementation\x2C that uses `Deno.core.print` under the hood.\n  // It's not fully fledged and is meant to make debugging slightly easier when working with\n  // only `deno_core` crate.\n  class CoreConsole {\n    log = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    debug = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    warn = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n\n    error = (...args) => {\n      op_print(`${consoleStringify(...args)}\\n`\x2C false);\n    };\n  }\n\n  const consoleStringify = (...args) => args.map(consoleStringifyArg).join(" ");\n\n  const consoleStringifyArg = (arg) => {\n    if (\n      typeof arg === "string" || typeof arg === "boolean" ||\n      typeof arg === "number" || arg === null || arg === undefined\n    ) {\n      return arg;\n    }\n    const tag = TypedArrayPrototypeGetSymbolToStringTag(arg);\n    if (op_is_typed_array(arg)) {\n      return `${tag}(${TypedArrayPrototypeGetLength(arg)}) [${\n        TypedArrayPrototypeJoin(TypedArrayPrototypeSlice(arg\x2C 0\x2C 10)\x2C "\x2C ")\n      }]`;\n    }\n    if (tag !== undefined) {\n      tag + " " + JSON.stringify(arg\x2C undefined\x2C 2);\n    } else {\n      return JSON.stringify(arg\x2C undefined\x2C 2);\n    }\n  };\n\n  const v8Console = globalThis.console;\n  const coreConsole = new CoreConsole();\n  globalThis.console = coreConsole;\n  wrapConsole(coreConsole\x2C v8Console);\n\n  function propWritable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propNonEnumerable(value) {\n    return {\n      value\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propReadOnly(value) {\n    return {\n      value\x2C\n      enumerable: true\x2C\n      writable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propGetterOnly(getter) {\n    return {\n      get: getter\x2C\n      set() {}\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propWritableLazyLoaded(getter\x2C loadFn) {\n    let valueIsSet = false;\n    let value;\n\n    return {\n      get() {\n        const loadedValue = loadFn();\n        if (valueIsSet) {\n          return value;\n        } else {\n          return getter(loadedValue);\n        }\n      }\x2C\n      set(v) {\n        loadFn();\n        valueIsSet = true;\n        value = v;\n      }\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function propNonEnumerableLazyLoaded(getter\x2C loadFn) {\n    let valueIsSet = false;\n    let value;\n\n    return {\n      get() {\n        const loadedValue = loadFn();\n        if (valueIsSet) {\n          return value;\n        } else {\n          return getter(loadedValue);\n        }\n      }\x2C\n      set(v) {\n        loadFn();\n        valueIsSet = true;\n        value = v;\n      }\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    };\n  }\n\n  function createLazyLoader(specifier) {\n    let value;\n\n    return function lazyLoad() {\n      if (!value) {\n        value = op_lazy_load_esm(specifier);\n      }\n      return value;\n    };\n  }\n\n  // Extra Deno.core.* exports\n  const core = ObjectAssign(globalThis.Deno.core\x2C {\n    internalRidSymbol: Symbol("Deno.internal.rid")\x2C\n    resources\x2C\n    metrics\x2C\n    eventLoopTick\x2C\n    BadResource\x2C\n    BadResourcePrototype\x2C\n    Interrupted\x2C\n    InterruptedPrototype\x2C\n    refOpPromise\x2C\n    unrefOpPromise\x2C\n    setReportExceptionCallback\x2C\n    setPromiseHooks\x2C\n    consoleStringify\x2C\n    close\x2C\n    tryClose\x2C\n    read\x2C\n    readAll\x2C\n    write\x2C\n    writeAll\x2C\n    writeTypeError\x2C\n    readSync\x2C\n    writeSync\x2C\n    shutdown\x2C\n    isTerminal\x2C\n    print: (msg\x2C isErr) => op_print(msg\x2C isErr)\x2C\n    setLeakTracingEnabled: (enabled) => {\n      __setLeakTracingEnabled(enabled);\n      op_leak_tracing_enable(enabled);\n    }\x2C\n    isLeakTracingEnabled: () => __isLeakTracingEnabled()\x2C\n    getAllLeakTraces: () => {\n      const traces = op_leak_tracing_get_all();\n      return new SafeMap(traces);\n    }\x2C\n    getLeakTraceForPromise: (promise) =>\n      op_leak_tracing_get(0\x2C promise[promiseIdSymbol])\x2C\n    setMacrotaskCallback\x2C\n    setNextTickCallback\x2C\n    runMicrotasks: () => op_run_microtasks()\x2C\n    hasTickScheduled: () => op_has_tick_scheduled()\x2C\n    setHasTickScheduled: (bool) => op_set_has_tick_scheduled(bool)\x2C\n    evalContext: (\n      source\x2C\n      specifier\x2C\n    ) => {\n      const [result\x2C error] = op_eval_context(source\x2C specifier);\n      if (error) {\n        const { 0: thrown\x2C 1: isNativeError\x2C 2: isCompileError } = error;\n        return [\n          result\x2C\n          {\n            thrown\x2C\n            isNativeError\x2C\n            isCompileError\x2C\n          }\x2C\n        ];\n      }\n      return [result\x2C null];\n    }\x2C\n    hostObjectBrand\x2C\n    encode: (text) => op_encode(text)\x2C\n    encodeBinaryString: (buffer) => op_encode_binary_string(buffer)\x2C\n    decode: (buffer) => op_decode(buffer)\x2C\n    serialize: (\n      value\x2C\n      options\x2C\n      errorCallback\x2C\n    ) => {\n      return op_serialize(\n        value\x2C\n        options?.hostObjects\x2C\n        options?.transferredArrayBuffers\x2C\n        options?.forStorage ?? false\x2C\n        errorCallback\x2C\n      );\n    }\x2C\n    deserialize: (buffer\x2C options) => {\n      return op_deserialize(\n        buffer\x2C\n        options?.hostObjects\x2C\n        options?.transferredArrayBuffers\x2C\n        options?.forStorage ?? false\x2C\n      );\n    }\x2C\n    getPromiseDetails: (promise) => op_get_promise_details(promise)\x2C\n    getProxyDetails: (proxy) => op_get_proxy_details(proxy)\x2C\n    isAnyArrayBuffer: (value) => op_is_any_array_buffer(value)\x2C\n    isArgumentsObject: (value) => op_is_arguments_object(value)\x2C\n    isArrayBuffer: (value) => op_is_array_buffer(value)\x2C\n    isArrayBufferView: (value) => op_is_array_buffer_view(value)\x2C\n    isAsyncFunction: (value) => op_is_async_function(value)\x2C\n    isBigIntObject: (value) => op_is_big_int_object(value)\x2C\n    isBooleanObject: (value) => op_is_boolean_object(value)\x2C\n    isBoxedPrimitive: (value) => op_is_boxed_primitive(value)\x2C\n    isDataView: (value) => op_is_data_view(value)\x2C\n    isDate: (value) => op_is_date(value)\x2C\n    isGeneratorFunction: (value) => op_is_generator_function(value)\x2C\n    isGeneratorObject: (value) => op_is_generator_object(value)\x2C\n    isMap: (value) => op_is_map(value)\x2C\n    isMapIterator: (value) => op_is_map_iterator(value)\x2C\n    isModuleNamespaceObject: (value) => op_is_module_namespace_object(value)\x2C\n    isNativeError: (value) => op_is_native_error(value)\x2C\n    isNumberObject: (value) => op_is_number_object(value)\x2C\n    isPromise: (value) => op_is_promise(value)\x2C\n    isProxy: (value) => op_is_proxy(value)\x2C\n    isRegExp: (value) => op_is_reg_exp(value)\x2C\n    isSet: (value) => op_is_set(value)\x2C\n    isSetIterator: (value) => op_is_set_iterator(value)\x2C\n    isSharedArrayBuffer: (value) => op_is_shared_array_buffer(value)\x2C\n    isStringObject: (value) => op_is_string_object(value)\x2C\n    isSymbolObject: (value) => op_is_symbol_object(value)\x2C\n    isTypedArray: (value) => op_is_typed_array(value)\x2C\n    isWeakMap: (value) => op_is_weak_map(value)\x2C\n    isWeakSet: (value) => op_is_weak_set(value)\x2C\n    memoryUsage: () => op_memory_usage()\x2C\n    setWasmStreamingCallback: (fn) => op_set_wasm_streaming_callback(fn)\x2C\n    abortWasmStreaming: (\n      rid\x2C\n      error\x2C\n    ) => op_abort_wasm_streaming(rid\x2C error)\x2C\n    destructureError: (error) => op_destructure_error(error)\x2C\n    opNames: () => op_op_names()\x2C\n    eventLoopHasMoreWork: () => op_event_loop_has_more_work()\x2C\n    byteLength: (str) => op_str_byte_length(str)\x2C\n    addMainModuleHandler: (handler) => op_add_main_module_handler(handler)\x2C\n    setHandledPromiseRejectionHandler: (handler) =>\n      op_set_handled_promise_rejection_handler(handler)\x2C\n    setUnhandledPromiseRejectionHandler: (handler) =>\n      unhandledPromiseRejectionHandler = handler\x2C\n    reportUnhandledException: (e) => op_dispatch_exception(e\x2C false)\x2C\n    reportUnhandledPromiseRejection: (e) => op_dispatch_exception(e\x2C true)\x2C\n    queueUserTimer: (depth\x2C repeat\x2C timeout\x2C task) => {\n      const id = op_timer_queue(depth\x2C repeat\x2C timeout\x2C task);\n      if (__isLeakTracingEnabled()) {\n        submitTimerTrace(id);\n      }\n      return id;\n    }\x2C\n    // TODO(mmastrac): Hook up associatedOp to tracing\n    queueSystemTimer: (_associatedOp\x2C repeat\x2C timeout\x2C task) =>\n      op_timer_queue_system(repeat\x2C timeout\x2C task)\x2C\n    queueImmediate: (task) => op_timer_queue_immediate(task)\x2C\n    cancelTimer: (id) => {\n      if (timersRunning) {\n        cancelledTimers.add(id);\n      }\n      op_timer_cancel(id);\n    }\x2C\n    refTimer: (id) => op_timer_ref(id)\x2C\n    unrefTimer: (id) => op_timer_unref(id)\x2C\n    getTimerDepth: () => timerDepth\x2C\n    currentUserCallSite\x2C\n    wrapConsole\x2C\n    v8Console\x2C\n    propReadOnly\x2C\n    propWritable\x2C\n    propNonEnumerable\x2C\n    propGetterOnly\x2C\n    propWritableLazyLoaded\x2C\n    propNonEnumerableLazyLoaded\x2C\n    createLazyLoader\x2C\n    createCancelHandle: () => op_cancel_handle()\x2C\n  });\n\n  const internals = {};\n  ObjectAssign(globalThis.__bootstrap\x2C { core\x2C internals });\n  ObjectAssign(globalThis.Deno\x2C { core });\n  ObjectFreeze(globalThis.__bootstrap.core);\n\n  // Direct bindings on `globalThis`\n  ObjectAssign(globalThis\x2C { queueMicrotask });\n  setQueueMicrotask(queueMicrotask);\n})(globalThis);\n
code-source-info,0x2c370058032c,5,19760,19802,C0O19768C5O19768C9O19802,,
code-creation,JS,9,19382,0x2c3700580388,55,setReportExceptionCallback ext:core/01_core.js:283:38,0x2c37001ca24c,~
code-source-info,0x2c3700580388,5,7276,7580,C0O7287C8O7332C15O7356C23O7444C29O7483C39O7489C44O7483C45O7541C47O7565C54O7579,,
code-creation,JS,9,19419,0x2c3700580424,47,setVersions ext:runtime/01_version.ts:9:21,0x2c370034dc4c,~
script-source,294,ext:runtime/01_version.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\nimport { primordials } from "ext:core/mod.js";\nconst { ObjectFreeze } = primordials;\nconst version = {\n  deno: ""\x2C\n  v8: ""\x2C\n  typescript: ""\n};\nfunction setVersions(denoVersion\x2C v8Version\x2C tsVersion) {\n  version.deno = denoVersion;\n  version.v8 = v8Version;\n  version.typescript = tsVersion;\n  ObjectFreeze(version);\n}\nexport { setVersions\x2C version };\n
code-source-info,0x2c3700580424,294,240,394,C0O280C8O293C12O310C18O321C22O336C28O355C32O370C37O383C41O370C46O393,,
code-creation,JS,9,19481,0x2c37005804c4,108,setBuildInfo ext:core/00_infra.js:65:24,0x2c37001c8e2c,~
script-source,4,ext:core/00_infra.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n"use strict";\n\n((window) => {\n  const {\n    Array\x2C\n    ArrayPrototypeFill\x2C\n    Error\x2C\n    ErrorCaptureStackTrace\x2C\n    MapPrototypeDelete\x2C\n    MapPrototypeGet\x2C\n    MapPrototypeHas\x2C\n    MapPrototypeSet\x2C\n    ObjectAssign\x2C\n    ObjectDefineProperty\x2C\n    ObjectFreeze\x2C\n    Promise\x2C\n    PromiseReject\x2C\n    PromiseResolve\x2C\n    PromisePrototypeThen\x2C\n    RangeError\x2C\n    ReferenceError\x2C\n    SafeMap\x2C\n    StringPrototypeSplit\x2C\n    SymbolFor\x2C\n    SyntaxError\x2C\n    TypeError\x2C\n    URIError\x2C\n  } = window.__bootstrap.primordials;\n\n  let nextPromiseId = 0;\n  const promiseMap = new SafeMap();\n  const RING_SIZE = 4 * 1024;\n  const NO_PROMISE = null; // Alias to null is faster than plain nulls\n  const promiseRing = ArrayPrototypeFill(new Array(RING_SIZE)\x2C NO_PROMISE);\n  // TODO(bartlomieju): in the future use `v8::Private` so it's not visible\n  // to users. Currently missing bindings.\n  const promiseIdSymbol = SymbolFor("Deno.core.internalPromiseId");\n\n  let isLeakTracingEnabled = false;\n  let submitLeakTrace;\n  let eventLoopTick;\n\n  function __setLeakTracingEnabled(enabled) {\n    isLeakTracingEnabled = enabled;\n  }\n\n  function __isLeakTracingEnabled() {\n    return isLeakTracingEnabled;\n  }\n\n  function __initializeCoreMethods(eventLoopTick_\x2C submitLeakTrace_) {\n    eventLoopTick = eventLoopTick_;\n    submitLeakTrace = submitLeakTrace_;\n  }\n\n  const build = {\n    target: "unknown"\x2C\n    arch: "unknown"\x2C\n    os: "unknown"\x2C\n    vendor: "unknown"\x2C\n    env: undefined\x2C\n  };\n\n  function setBuildInfo(target) {\n    const { 0: arch\x2C 1: vendor\x2C 2: os\x2C 3: env } = StringPrototypeSplit(\n      target\x2C\n      "-"\x2C\n      4\x2C\n    );\n    build.target = target;\n    build.arch = arch;\n    build.vendor = vendor;\n    build.os = os;\n    build.env = env;\n    ObjectFreeze(build);\n  }\n\n  const errorMap = {};\n  // Builtin v8 / JS errors\n  registerErrorClass("Error"\x2C Error);\n  registerErrorClass("RangeError"\x2C RangeError);\n  registerErrorClass("ReferenceError"\x2C ReferenceError);\n  registerErrorClass("SyntaxError"\x2C SyntaxError);\n  registerErrorClass("TypeError"\x2C TypeError);\n  registerErrorClass("URIError"\x2C URIError);\n\n  function buildCustomError(className\x2C message\x2C code) {\n    let error;\n    try {\n      error = errorMap[className]?.(message);\n    } catch (e) {\n      throw new Error(\n        `Unable to build custom error for "${className}"\\n  ${e.message}`\x2C\n      );\n    }\n    // Strip buildCustomError() calls from stack trace\n    if (typeof error == "object") {\n      ErrorCaptureStackTrace(error\x2C buildCustomError);\n      if (code) {\n        error.code = code;\n      }\n    }\n    return error;\n  }\n\n  function registerErrorClass(className\x2C errorClass) {\n    registerErrorBuilder(className\x2C (msg) => new errorClass(msg));\n  }\n\n  function registerErrorBuilder(className\x2C errorBuilder) {\n    if (typeof errorMap[className] !== "undefined") {\n      throw new TypeError(`Error class for "${className}" already registered`);\n    }\n    errorMap[className] = errorBuilder;\n  }\n\n  function setPromise(promiseId) {\n    const idx = promiseId % RING_SIZE;\n    // Move old promise from ring to map\n    const oldPromise = promiseRing[idx];\n    if (oldPromise !== NO_PROMISE) {\n      const oldPromiseId = promiseId - RING_SIZE;\n      MapPrototypeSet(promiseMap\x2C oldPromiseId\x2C oldPromise);\n    }\n\n    const promise = new Promise((resolve) => {\n      promiseRing[idx] = resolve;\n    });\n    const wrappedPromise = PromisePrototypeThen(\n      promise\x2C\n      unwrapOpError()\x2C\n    );\n    wrappedPromise[promiseIdSymbol] = promiseId;\n    return wrappedPromise;\n  }\n\n  function __resolvePromise(promiseId\x2C res) {\n    // Check if out of ring bounds\x2C fallback to map\n    const outOfBounds = promiseId < nextPromiseId - RING_SIZE;\n    if (outOfBounds) {\n      const promise = MapPrototypeGet(promiseMap\x2C promiseId);\n      if (!promise) {\n        throw "Missing promise in map @ " + promiseId;\n      }\n      MapPrototypeDelete(promiseMap\x2C promiseId);\n      promise(res);\n    } else {\n      // Otherwise take from ring\n      const idx = promiseId % RING_SIZE;\n      const promise = promiseRing[idx];\n      if (!promise) {\n        throw "Missing promise in ring @ " + promiseId;\n      }\n      promiseRing[idx] = NO_PROMISE;\n      promise(res);\n    }\n  }\n\n  function hasPromise(promiseId) {\n    // Check if out of ring bounds\x2C fallback to map\n    const outOfBounds = promiseId < nextPromiseId - RING_SIZE;\n    if (outOfBounds) {\n      return MapPrototypeHas(promiseMap\x2C promiseId);\n    }\n    // Otherwise check it in ring\n    const idx = promiseId % RING_SIZE;\n    return promiseRing[idx] != NO_PROMISE;\n  }\n\n  function unwrapOpError() {\n    return (res) => {\n      // .$err_class_name is a special key that should only exist on errors\n      const className = res?.$err_class_name;\n      if (!className) {\n        return res;\n      }\n\n      const errorBuilder = errorMap[className];\n      const err = errorBuilder ? errorBuilder(res.message) : new Error(\n        `Unregistered error class: "${className}"\\n  ${res.message}\\n  Classes of errors returned from ops should be registered via Deno.core.registerErrorClass().`\x2C\n      );\n      // Set .code if error was a known OS error\x2C see error_codes.rs\n      if (res.code) {\n        err.code = res.code;\n      }\n      // Strip eventLoopTick() calls from stack trace\n      ErrorCaptureStackTrace(err\x2C eventLoopTick);\n      throw err;\n    };\n  }\n\n  function setUpAsyncStub(opName\x2C originalOp) {\n    let fn;\n    // The body of this switch statement can be generated using the script above.\n    switch (originalOp.length - 1) {\n      /* BEGIN TEMPLATE setUpAsyncStub */\n      /* DO NOT MODIFY: use rebuild_async_stubs.js to regenerate */\n      case 0:\n        fn = function async_op_0() {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_0);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 1:\n        fn = function async_op_1(a) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_1);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 2:\n        fn = function async_op_2(a\x2C b) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_2);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 3:\n        fn = function async_op_3(a\x2C b\x2C c) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_3);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 4:\n        fn = function async_op_4(a\x2C b\x2C c\x2C d) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_4);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 5:\n        fn = function async_op_5(a\x2C b\x2C c\x2C d\x2C e) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_5);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 6:\n        fn = function async_op_6(a\x2C b\x2C c\x2C d\x2C e\x2C f) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_6);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 7:\n        fn = function async_op_7(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_7);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 8:\n        fn = function async_op_8(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_8);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      case 9:\n        fn = function async_op_9(a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h\x2C i) {\n          const id = nextPromiseId;\n          try {\n            const maybeResult = originalOp(id\x2C a\x2C b\x2C c\x2C d\x2C e\x2C f\x2C g\x2C h\x2C i);\n            if (maybeResult !== undefined) {\n              return PromiseResolve(maybeResult);\n            }\n          } catch (err) {\n            ErrorCaptureStackTrace(err\x2C async_op_9);\n            return PromiseReject(err);\n          }\n          if (isLeakTracingEnabled) {\n            submitLeakTrace(id);\n          }\n          nextPromiseId = (id + 1) & 0xffffffff;\n          return setPromise(id);\n        };\n        break;\n      /* END TEMPLATE */\n\n      default:\n        throw new Error(\n          `Too many arguments for async op codegen (length of ${opName} was ${\n            originalOp.length - 1\n          })`\x2C\n        );\n    }\n    ObjectDefineProperty(fn\x2C "name"\x2C {\n      value: opName\x2C\n      configurable: false\x2C\n      writable: false\x2C\n    });\n    return fn;\n  }\n\n  // Extra Deno.core.* exports\n  const core = ObjectAssign(globalThis.Deno.core\x2C {\n    build\x2C\n    setBuildInfo\x2C\n    registerErrorBuilder\x2C\n    buildCustomError\x2C\n    registerErrorClass\x2C\n    setUpAsyncStub\x2C\n    hasPromise\x2C\n    promiseIdSymbol\x2C\n  });\n\n  const infra = {\n    __resolvePromise\x2C\n    __setLeakTracingEnabled\x2C\n    __isLeakTracingEnabled\x2C\n    __initializeCoreMethods\x2C\n  };\n\n  ObjectAssign(globalThis\x2C { __infra: infra });\n  ObjectAssign(globalThis.__bootstrap\x2C { core });\n  ObjectAssign(globalThis.Deno\x2C { core });\n})(globalThis);\n
code-source-info,0x2c37005804c4,4,1566,1835,C0O1627C14O1627C22O1592C29O1601C36O1612C43O1619C47O1694C54O1707C58O1721C63O1732C67O1744C72O1757C76O1771C81O1780C85O1790C90O1800C94O1811C102O1811C107O1834,,
tick,0x7d8294c86a8e,19811,0,0x0,9,0x64950db65500,0x2c37005802ba,0x2c370030756b
code-creation,JS,9,19844,0x2c3700580594,17, ext:runtime/98_global_scope_window.js:49:10,0x2c3700352014,~
script-source,303,ext:runtime/98_global_scope_window.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport {\n  op_bootstrap_language\x2C\n  op_bootstrap_numcpus\x2C\n  op_bootstrap_user_agent\x2C\n} from "ext:core/ops";\nconst {\n  ObjectDefineProperties\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  SymbolFor\x2C\n} = primordials;\n\nimport * as location from "ext:deno_web/12_location.js";\nimport * as console from "ext:deno_console/01_console.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport * as globalInterfaces from "ext:deno_web/04_global_interfaces.js";\nimport * as webStorage from "ext:deno_webstorage/01_webstorage.js";\nimport * as prompt from "ext:runtime/41_prompt.js";\nimport { loadWebGPU } from "ext:deno_webgpu/00_init.js";\n\nclass Navigator {\n  constructor() {\n    webidl.illegalConstructor();\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      console.createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(NavigatorPrototype\x2C this)\x2C\n        keys: [\n          "hardwareConcurrency"\x2C\n          "userAgent"\x2C\n          "language"\x2C\n          "languages"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nconst navigator = webidl.createBranded(Navigator);\n\nfunction memoizeLazy(f) {\n  let v_ = null;\n  return () => {\n    if (v_ === null) {\n      v_ = f();\n    }\n    return v_;\n  };\n}\n\nconst numCpus = memoizeLazy(() => op_bootstrap_numcpus());\nconst userAgent = memoizeLazy(() => op_bootstrap_user_agent());\nconst language = memoizeLazy(() => op_bootstrap_language());\n\nObjectDefineProperties(Navigator.prototype\x2C {\n  gpu: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      const webgpu = loadWebGPU();\n      return webgpu.gpu;\n    }\x2C\n  }\x2C\n  hardwareConcurrency: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return numCpus();\n    }\x2C\n  }\x2C\n  userAgent: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return userAgent();\n    }\x2C\n  }\x2C\n  language: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return language();\n    }\x2C\n  }\x2C\n  languages: {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      webidl.assertBranded(this\x2C NavigatorPrototype);\n      return [language()];\n    }\x2C\n  }\x2C\n});\nconst NavigatorPrototype = Navigator.prototype;\n\nconst mainRuntimeGlobalProperties = {\n  Location: location.locationConstructorDescriptor\x2C\n  location: location.locationDescriptor\x2C\n  Window: globalInterfaces.windowConstructorDescriptor\x2C\n  window: core.propGetterOnly(() => globalThis)\x2C\n  self: core.propGetterOnly(() => globalThis)\x2C\n  Navigator: core.propNonEnumerable(Navigator)\x2C\n  navigator: core.propGetterOnly(() => navigator)\x2C\n  alert: core.propWritable(prompt.alert)\x2C\n  confirm: core.propWritable(prompt.confirm)\x2C\n  prompt: core.propWritable(prompt.prompt)\x2C\n  localStorage: core.propGetterOnly(webStorage.localStorage)\x2C\n  sessionStorage: core.propGetterOnly(webStorage.sessionStorage)\x2C\n  Storage: core.propNonEnumerable(webStorage.Storage)\x2C\n};\n\nexport { mainRuntimeGlobalProperties\x2C memoizeLazy };\n
code-source-info,0x2c3700580594,303,1339,1410,C0O1351C6O1376C9O1381C12O1379C14O1396C16O1406,,
code-creation,JS,9,19934,0x2c37005805f0,10, ext:runtime_main/js/99_main.js:365:28,0x2c37003547c4,~
code-source-info,0x2c37005805f0,305,10140,10165,C0O10146C6O10146C9O10165,,
code-creation,JS,9,19964,0x2c3700580644,17,setNextTickCallback ext:core/01_core.js:147:31,0x2c37001ca030,~
code-source-info,0x2c3700580644,5,3497,3554,C0O3508C7O3527C10O3508C16O3553,,
code-creation,JS,9,19976,0x2c37005806a0,17,setMacrotaskCallback ext:core/01_core.js:143:32,0x2c37001c9ff4,~
code-source-info,0x2c37005806a0,5,3407,3465,C0O3418C7O3437C10O3418C16O3464,,
code-creation,JS,9,19990,0x2c37005806f8,12,enableNextTick ext:deno_node/_next_tick.ts:10:31,0x2c37002d2c70,~
script-source,167,ext:deno_node/_next_tick.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core } from "ext:core/mod.js";\nimport { validateFunction } from "ext:deno_node/internal/validators.mjs";\nimport { _exiting } from "ext:deno_node/_process/exiting.ts";\nimport { FixedQueue } from "ext:deno_node/internal/fixed_queue.ts";\nlet nextTickEnabled = false;\nexport function enableNextTick() {\n  nextTickEnabled = true;\n}\nconst queue = new FixedQueue();\nexport function processTicksAndRejections() {\n  let tock;\n  do {\n    // deno-lint-ignore no-cond-assign\n    while(tock = queue.shift()){\n      // FIXME(bartlomieju): Deno currently doesn't support async hooks\n      // const asyncId = tock[async_id_symbol];\n      // emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\n      try {\n        const callback = tock.callback;\n        if (tock.args === undefined) {\n          callback();\n        } else {\n          const args = tock.args;\n          switch(args.length){\n            case 1:\n              callback(args[0]);\n              break;\n            case 2:\n              callback(args[0]\x2C args[1]);\n              break;\n            case 3:\n              callback(args[0]\x2C args[1]\x2C args[2]);\n              break;\n            case 4:\n              callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]);\n              break;\n            default:\n              callback(...args);\n          }\n        }\n      } finally{\n      // FIXME(bartlomieju): Deno currently doesn't support async hooks\n      // if (destroyHooksExist())\n      // emitDestroy(asyncId);\n      }\n    // FIXME(bartlomieju): Deno currently doesn't support async hooks\n    // emitAfter(asyncId);\n    }\n    core.runMicrotasks();\n  // FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n  // } while (!queue.isEmpty() || processPromiseRejections());\n  }while (!queue.isEmpty())\n  core.setHasTickScheduled(false);\n// FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n// setHasRejectionToWarn(false);\n}\nexport function runNextTicks() {\n  // FIXME(bartlomieju): Deno currently doesn't unhandled rejections\n  // if (!hasTickScheduled() && !hasRejectionToWarn())\n  //   runMicrotasks();\n  // if (!hasTickScheduled() && !hasRejectionToWarn())\n  //   return;\n  if (!core.hasTickScheduled()) {\n    core.runMicrotasks();\n    return true;\n  }\n  processTicksAndRejections();\n  return true;\n}\nexport function nextTick(callback\x2C ...args) {\n  // If we're snapshotting we don't want to push nextTick to be run. We'll\n  // enable next ticks in "__bootstrapNodeProcess()";\n  if (!nextTickEnabled) {\n    return;\n  }\n  validateFunction(callback\x2C "callback");\n  if (_exiting) {\n    return;\n  }\n  // TODO(bartlomieju): seems superfluous if we don't depend on `arguments`\n  let args_;\n  switch(args.length){\n    case 0:\n      break;\n    case 1:\n      args_ = [\n        args[0]\n      ];\n      break;\n    case 2:\n      args_ = [\n        args[0]\x2C\n        args[1]\n      ];\n      break;\n    case 3:\n      args_ = [\n        args[0]\x2C\n        args[1]\x2C\n        args[2]\n      ];\n      break;\n    default:\n      args_ = new Array(args.length);\n      for(let i = 0; i < args.length; i++){\n        args_[i] = args[i];\n      }\n  }\n  if (queue.isEmpty()) {\n    core.setHasTickScheduled(true);\n  }\n  // FIXME(bartlomieju): Deno currently doesn't support async hooks\n  // const asyncId = newAsyncId();\n  // const triggerAsyncId = getDefaultTriggerAsyncId();\n  const tickObject = {\n    // FIXME(bartlomieju): Deno currently doesn't support async hooks\n    // [async_id_symbol]: asyncId\x2C\n    // [trigger_async_id_symbol]: triggerAsyncId\x2C\n    callback\x2C\n    args: args_\n  };\n  // FIXME(bartlomieju): Deno currently doesn't support async hooks\n  // if (initHooksExist())\n  //   emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\n  queue.push(tickObject);\n}\n
code-source-info,0x2c37005806f8,167,544,576,C0O551C4O567C11O575,,
code-creation,JS,9,20104,0x2c370058074c,26,_guessStdinType ext:deno_node/_process/streams.mjs:118:25,0x2c37002f3204,~
script-source,243,ext:deno_node/_process/streams.mjs,// Copyright 2018-2023 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and Node.js contributors. All rights reserved. MIT license.\n\nimport { primordials } from "ext:core/mod.js";\nconst {\n  Uint8ArrayPrototype\x2C\n  Error\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  TypedArrayPrototypeSlice\x2C\n  PromisePrototypeThen\x2C\n  ObjectValues\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n} = primordials;\n\nimport { Buffer } from "node:buffer";\nimport {\n  clearLine\x2C\n  clearScreenDown\x2C\n  cursorTo\x2C\n  moveCursor\x2C\n} from "ext:deno_node/internal/readline/callbacks.mjs";\nimport { Duplex\x2C Readable\x2C Writable } from "node:stream";\nimport * as io from "ext:deno_io/12_io.js";\nimport { guessHandleType } from "ext:deno_node/internal_binding/util.ts";\n\n// https://github.com/nodejs/node/blob/00738314828074243c9a52a228ab4c68b04259ef/lib/internal/bootstrap/switches/is_main_thread.js#L41\nexport function createWritableStdioStream(writer\x2C name\x2C warmup = false) {\n  const stream = new Writable({\n    emitClose: false\x2C\n    write(buf\x2C enc\x2C cb) {\n      if (!writer) {\n        this.destroy(\n          new Error(`Deno.${name} is not available in this environment`)\x2C\n        );\n        return;\n      }\n      writer.writeSync(\n        ObjectPrototypeIsPrototypeOf(Uint8ArrayPrototype\x2C buf)\n          ? buf\n          : Buffer.from(buf\x2C enc)\x2C\n      );\n      cb();\n    }\x2C\n    destroy(err\x2C cb) {\n      cb(err);\n      this._undestroy();\n      if (!this._writableState.emitClose) {\n        nextTick(() => this.emit("close"));\n      }\n    }\x2C\n  });\n  let fd = -1;\n\n  // deno-lint-ignore prefer-primordials\n  if (writer instanceof io.Stdout) {\n    fd = io.STDOUT_RID;\n    // deno-lint-ignore prefer-primordials\n  } else if (writer instanceof io.Stderr) {\n    fd = io.STDERR_RID;\n  }\n  stream.fd = fd;\n  stream.destroySoon = stream.destroy;\n  stream._isStdio = true;\n  stream.once("close"\x2C () => writer?.close());\n  ObjectDefineProperties(stream\x2C {\n    columns: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () =>\n        writer?.isTerminal() ? Deno.consoleSize?.().columns : undefined\x2C\n    }\x2C\n    rows: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () => writer?.isTerminal() ? Deno.consoleSize?.().rows : undefined\x2C\n    }\x2C\n    isTTY: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      get: () => writer?.isTerminal()\x2C\n    }\x2C\n    getWindowSize: {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: () =>\n        writer?.isTerminal() ? ObjectValues(Deno.consoleSize?.()) : undefined\x2C\n    }\x2C\n  });\n\n  // If we're warming up\x2C create a stdout/stderr stream that assumes a terminal (the most likely case).\n  // If we're wrong at boot time\x2C we'll recreate it.\n  if (warmup || writer?.isTerminal()) {\n    // These belong on tty.WriteStream()\x2C but the TTY streams currently have\n    // following problems:\n    // 1. Using them here introduces a circular dependency.\n    // 2. Creating a net.Socket() from a fd is not currently supported.\n    stream.cursorTo = function (x\x2C y\x2C callback) {\n      return cursorTo(this\x2C x\x2C y\x2C callback);\n    };\n\n    stream.moveCursor = function (dx\x2C dy\x2C callback) {\n      return moveCursor(this\x2C dx\x2C dy\x2C callback);\n    };\n\n    stream.clearLine = function (dir\x2C callback) {\n      return clearLine(this\x2C dir\x2C callback);\n    };\n\n    stream.clearScreenDown = function (callback) {\n      return clearScreenDown(this\x2C callback);\n    };\n  }\n\n  return stream;\n}\n\nfunction _guessStdinType(fd) {\n  if (typeof fd !== "number" || fd < 0) return "UNKNOWN";\n  return guessHandleType(fd);\n}\n\nconst _read = function (size) {\n  const p = Buffer.alloc(size || 16 * 1024);\n  PromisePrototypeThen(io.stdin?.read(p)\x2C (length) => {\n    // deno-lint-ignore prefer-primordials\n    this.push(length === null ? null : TypedArrayPrototypeSlice(p\x2C 0\x2C length));\n  }\x2C (error) => {\n    this.destroy(error);\n  });\n};\n\nlet readStream;\nexport function setReadStream(s) {\n  readStream = s;\n}\n\n/** https://nodejs.org/api/process.html#process_process_stdin */\n// https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L189\n/** Create process.stdin */\nexport const initStdin = (warmup = false) => {\n  const fd = io.stdin ? io.STDIN_RID : undefined;\n  let stdin;\n  // Warmup assumes a TTY for all stdio\n  const stdinType = warmup ? "TTY" : _guessStdinType(fd);\n\n  switch (stdinType) {\n    case "FILE": {\n      // Since `fs.ReadStream` cannot be imported before process initialization\x2C\n      // use `Readable` instead.\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L200\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/fs/streams.js#L148\n      stdin = new Readable({\n        highWaterMark: 64 * 1024\x2C\n        autoDestroy: false\x2C\n        read: _read\x2C\n      });\n      break;\n    }\n    case "TTY": {\n      // If it's a TTY\x2C we know that the stdin we created during warmup is the correct one and\n      // just return null to re-use it.\n      if (!warmup) {\n        return null;\n      }\n      stdin = new readStream(fd);\n      break;\n    }\n    case "PIPE":\n    case "TCP": {\n      // For PIPE and TCP\x2C `new Duplex()` should be replaced `new net.Socket()` if possible.\n      // There are two problems that need to be resolved.\n      // 1. Using them here introduces a circular dependency.\n      // 2. Creating a net.Socket() from a fd is not currently supported.\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/internal/bootstrap/switches/is_main_thread.js#L206\n      // https://github.com/nodejs/node/blob/v18.12.1/lib/net.js#L329\n      stdin = new Duplex({\n        readable: stdinType === "TTY" ? undefined : true\x2C\n        writable: stdinType === "TTY" ? undefined : false\x2C\n        readableHighWaterMark: stdinType === "TTY" ? 0 : undefined\x2C\n        allowHalfOpen: false\x2C\n        emitClose: false\x2C\n        autoDestroy: true\x2C\n        decodeStrings: false\x2C\n        read: _read\x2C\n      });\n\n      if (stdinType !== "TTY") {\n        // Make sure the stdin can't be `.end()`-ed\n        stdin._writableState.ended = true;\n      }\n      break;\n    }\n    default: {\n      // Provide a dummy contentless input for e.g. non-console\n      // Windows applications.\n      stdin = new Readable({ read() {} });\n      // deno-lint-ignore prefer-primordials\n      stdin.push(null);\n    }\n  }\n\n  stdin.on("close"\x2C () => io.stdin?.close());\n  stdin.fd = io.stdin ? io.STDIN_RID : -1;\n  ObjectDefineProperty(stdin\x2C "isTTY"\x2C {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return io.stdin.isTerminal();\n    }\x2C\n  });\n  stdin._isRawMode = false;\n  stdin.setRawMode = (enable) => {\n    io.stdin?.setRaw?.(enable);\n    stdin._isRawMode = enable;\n    return stdin;\n  };\n  ObjectDefineProperty(stdin\x2C "isRaw"\x2C {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return stdin._isRawMode;\n    }\x2C\n  });\n\n  return stdin;\n};\n
code-source-info,0x2c370058074c,243,3436,3532,C0O3445C7O3478C12O3483C14O3500C15O3503C21O3510C25O3530,,
code-creation,JS,9,20274,0x2c37005807b8,22,guessHandleType ext:deno_node/internal_binding/util.ts:37:32,0x2c37002d284c,~
script-source,166,ext:deno_node/internal_binding/util.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// This module ports:\n// - https://github.com/nodejs/node/blob/master/src/util-inl.h\n// - https://github.com/nodejs/node/blob/master/src/util.cc\n// - https://github.com/nodejs/node/blob/master/src/util.h\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { op_node_guess_handle_type } from "ext:core/ops";\nconst handleTypes = [\n  "TCP"\x2C\n  "TTY"\x2C\n  "UDP"\x2C\n  "FILE"\x2C\n  "PIPE"\x2C\n  "UNKNOWN"\n];\nexport function guessHandleType(fd) {\n  const type = op_node_guess_handle_type(fd);\n  return handleTypes[type];\n}\nexport const ALL_PROPERTIES = 0;\nexport const ONLY_WRITABLE = 1;\nexport const ONLY_ENUMERABLE = 2;\nexport const ONLY_CONFIGURABLE = 4;\nexport const ONLY_ENUM_WRITABLE = 6;\nexport const SKIP_STRINGS = 8;\nexport const SKIP_SYMBOLS = 16;\n/**\n * Efficiently determine whether the provided property key is numeric\n * (and thus could be an array indexer) or not.\n *\n * Always returns true for values of type `'number'`.\n *\n * Otherwise\x2C only returns true for strings that consist only of positive integers.\n *\n * Results are cached.\n */ const isNumericLookup = {};\nexport function isArrayIndex(value) {\n  switch(typeof value){\n    case "number":\n      return value >= 0 && (value | 0) === value;\n    case "string":\n      {\n        const result = isNumericLookup[value];\n        if (result !== void 0) {\n          return result;\n        }\n        const length = value.length;\n        if (length === 0) {\n          return isNumericLookup[value] = false;\n        }\n        let ch = 0;\n        let i = 0;\n        for(; i < length; ++i){\n          ch = value.charCodeAt(i);\n          if (i === 0 && ch === 0x30 && length > 1 /* must not start with 0 */  || ch < 0x30 /* 0 */  || ch > 0x39 /* 9 */ ) {\n            return isNumericLookup[value] = false;\n          }\n        }\n        return isNumericLookup[value] = true;\n      }\n    default:\n      return false;\n  }\n}\nexport function getOwnNonIndexProperties(obj\x2C filter) {\n  let allProperties = [\n    ...Object.getOwnPropertyNames(obj)\x2C\n    ...Object.getOwnPropertySymbols(obj)\n  ];\n  if (Array.isArray(obj)) {\n    allProperties = allProperties.filter((k)=>!isArrayIndex(k));\n  }\n  if (filter === ALL_PROPERTIES) {\n    return allProperties;\n  }\n  const result = [];\n  for (const key of allProperties){\n    const desc = Object.getOwnPropertyDescriptor(obj\x2C key);\n    if (desc === undefined) {\n      continue;\n    }\n    if (filter & ONLY_WRITABLE && !desc.writable) {\n      continue;\n    }\n    if (filter & ONLY_ENUMERABLE && !desc.enumerable) {\n      continue;\n    }\n    if (filter & ONLY_CONFIGURABLE && !desc.configurable) {\n      continue;\n    }\n    if (filter & SKIP_STRINGS && typeof key === "string") {\n      continue;\n    }\n    if (filter & SKIP_SYMBOLS && typeof key === "symbol") {\n      continue;\n    }\n    result.push(key);\n  }\n  return result;\n}\n
code-source-info,0x2c37005807b8,166,1696,1778,C0O1718C6O1718C11O1751C18O1769C21O1776,,
code-creation,JS,9,20396,0x2c370058081c,23,isTerminal ext:deno_io/12_io.js:290:13,0x2c370024d82c,~
script-source,54,ext:deno_io/12_io.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Interfaces 100% copied from Go.\n// Documentation liberally lifted from them too.\n// Thank you! We love Go! <3\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport { op_set_raw } from "ext:core/ops";\nconst {\n  Uint8Array\x2C\n  ArrayPrototypePush\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSubarray\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n} = primordials;\n\nimport {\n  readableStreamForRid\x2C\n  writableStreamForRid\x2C\n} from "ext:deno_web/06_streams.js";\n\nconst DEFAULT_BUFFER_SIZE = 32 * 1024;\n// Seek whence values.\n// https://golang.org/pkg/io/#pkg-constants\nconst SeekMode = {\n  0: "Start"\x2C\n  1: "Current"\x2C\n  2: "End"\x2C\n\n  Start: 0\x2C\n  Current: 1\x2C\n  End: 2\x2C\n};\n\nasync function copy(\n  src\x2C\n  dst\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.copy()"\x2C\n    new Error().stack\x2C\n    "Use `copy()` from `https://jsr.io/@std/io/doc/copy/~` instead."\x2C\n  );\n  let n = 0;\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  let gotEOF = false;\n  while (gotEOF === false) {\n    const result = await src.read(b);\n    if (result === null) {\n      gotEOF = true;\n    } else {\n      let nwritten = 0;\n      while (nwritten < result) {\n        nwritten += await dst.write(\n          TypedArrayPrototypeSubarray(b\x2C nwritten\x2C result)\x2C\n        );\n      }\n      n += nwritten;\n    }\n  }\n  return n;\n}\n\nasync function* iter(\n  r\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.iter()"\x2C\n    new Error().stack\x2C\n    "Use `ReadableStream` instead."\x2C\n  );\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  while (true) {\n    const result = await r.read(b);\n    if (result === null) {\n      break;\n    }\n\n    yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n  }\n}\n\nfunction* iterSync(\n  r\x2C\n  options\x2C\n) {\n  internals.warnOnDeprecatedApi(\n    "Deno.iterSync()"\x2C\n    new Error().stack\x2C\n    "Use `ReadableStream` instead."\x2C\n  );\n  const bufSize = options?.bufSize ?? DEFAULT_BUFFER_SIZE;\n  const b = new Uint8Array(bufSize);\n  while (true) {\n    const result = r.readSync(b);\n    if (result === null) {\n      break;\n    }\n\n    yield TypedArrayPrototypeSubarray(b\x2C 0\x2C result);\n  }\n}\n\nfunction readSync(rid\x2C buffer) {\n  if (buffer.length === 0) return 0;\n  const nread = core.readSync(rid\x2C buffer);\n  return nread === 0 ? null : nread;\n}\n\nasync function read(rid\x2C buffer) {\n  if (buffer.length === 0) return 0;\n  const nread = await core.read(rid\x2C buffer);\n  return nread === 0 ? null : nread;\n}\n\nfunction writeSync(rid\x2C data) {\n  return core.writeSync(rid\x2C data);\n}\n\nfunction write(rid\x2C data) {\n  return core.write(rid\x2C data);\n}\n\nconst READ_PER_ITER = 64 * 1024; // 64kb\n\nasync function readAll(r) {\n  const buffers = [];\n\n  while (true) {\n    const buf = new Uint8Array(READ_PER_ITER);\n    const read = await r.read(buf);\n    if (typeof read == "number") {\n      ArrayPrototypePush(buffers\x2C TypedArrayPrototypeSubarray(buf\x2C 0\x2C read));\n    } else {\n      break;\n    }\n  }\n\n  return concatBuffers(buffers);\n}\n\nfunction readAllSync(r) {\n  const buffers = [];\n\n  while (true) {\n    const buf = new Uint8Array(READ_PER_ITER);\n    const read = r.readSync(buf);\n    if (typeof read == "number") {\n      ArrayPrototypePush(buffers\x2C TypedArrayPrototypeSubarray(buf\x2C 0\x2C read));\n    } else {\n      break;\n    }\n  }\n\n  return concatBuffers(buffers);\n}\n\nfunction concatBuffers(buffers) {\n  let totalLen = 0;\n  for (let i = 0; i < buffers.length; ++i) {\n    totalLen += TypedArrayPrototypeGetByteLength(buffers[i]);\n  }\n\n  const contents = new Uint8Array(totalLen);\n\n  let n = 0;\n  for (let i = 0; i < buffers.length; ++i) {\n    const buf = buffers[i];\n    TypedArrayPrototypeSet(contents\x2C buf\x2C n);\n    n += TypedArrayPrototypeGetByteLength(buf);\n  }\n\n  return contents;\n}\n\nconst STDIN_RID = 0;\nconst STDOUT_RID = 1;\nconst STDERR_RID = 2;\n\nconst REF = Symbol("REF");\nconst UNREF = Symbol("UNREF");\n\nclass Stdin {\n  #rid = STDIN_RID;\n  #ref = true;\n  #readable;\n  #opPromise;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stdin.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stdin` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  async read(p) {\n    if (p.length === 0) return 0;\n    this.#opPromise = core.read(this.#rid\x2C p);\n    if (!this.#ref) {\n      core.unrefOpPromise(this.#opPromise);\n    }\n    const nread = await this.#opPromise;\n    return nread === 0 ? null : nread;\n  }\n\n  readSync(p) {\n    return readSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.tryClose(this.#rid);\n  }\n\n  get readable() {\n    if (this.#readable === undefined) {\n      this.#readable = readableStreamForRid(this.#rid);\n    }\n    return this.#readable;\n  }\n\n  setRaw(mode\x2C options = { __proto__: null }) {\n    const cbreak = !!(options.cbreak ?? false);\n    op_set_raw(this.#rid\x2C mode\x2C cbreak);\n  }\n\n  isTerminal() {\n    return core.isTerminal(this.#rid);\n  }\n\n  [REF]() {\n    this.#ref = true;\n    if (this.#opPromise) {\n      core.refOpPromise(this.#opPromise);\n    }\n  }\n\n  [UNREF]() {\n    this.#ref = false;\n    if (this.#opPromise) {\n      core.unrefOpPromise(this.#opPromise);\n    }\n  }\n}\n\nclass Stdout {\n  #rid = STDOUT_RID;\n  #writable;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stdout.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stdout` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  write(p) {\n    return write(this.#rid\x2C p);\n  }\n\n  writeSync(p) {\n    return writeSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.close(this.#rid);\n  }\n\n  get writable() {\n    if (this.#writable === undefined) {\n      this.#writable = writableStreamForRid(this.#rid);\n    }\n    return this.#writable;\n  }\n\n  isTerminal() {\n    return core.isTerminal(this.#rid);\n  }\n}\n\nclass Stderr {\n  #rid = STDERR_RID;\n  #writable;\n\n  constructor() {\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.stderr.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.stderr` instance methods instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  write(p) {\n    return write(this.#rid\x2C p);\n  }\n\n  writeSync(p) {\n    return writeSync(this.#rid\x2C p);\n  }\n\n  close() {\n    core.close(this.#rid);\n  }\n\n  get writable() {\n    if (this.#writable === undefined) {\n      this.#writable = writableStreamForRid(this.#rid);\n    }\n    return this.#writable;\n  }\n\n  isTerminal() {\n    return core.isTerminal(this.#rid);\n  }\n}\n\nconst stdin = new Stdin();\nconst stdout = new Stdout();\nconst stderr = new Stderr();\n\nexport {\n  copy\x2C\n  iter\x2C\n  iterSync\x2C\n  read\x2C\n  readAll\x2C\n  readAllSync\x2C\n  readSync\x2C\n  REF\x2C\n  SeekMode\x2C\n  Stderr\x2C\n  stderr\x2C\n  STDERR_RID\x2C\n  stdin\x2C\n  STDIN_RID\x2C\n  Stdout\x2C\n  stdout\x2C\n  STDOUT_RID\x2C\n  UNREF\x2C\n  write\x2C\n  writeSync\x2C\n};\n
code-source-info,0x2c370058081c,54,5786,5833,C0O5795C6O5807C13O5823C17O5807C22O5829,,
code-creation,JS,9,20578,0x2c3700580880,23,isTerminal ext:deno_io/12_io.js:330:13,0x2c370024dbd4,~
code-source-info,0x2c3700580880,54,6413,6460,C0O6422C6O6434C13O6450C17O6434C22O6456,,
code-creation,JS,9,20598,0x2c3700580904,69,arch ext:deno_node/_process/process.ts:10:113,0x2c37002f2c38,~
script-source,241,ext:deno_node/_process/process.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and Node.js contributors. All rights reserved. MIT license.\n// The following are all the process APIs that don't depend on the stream module\n// They have to be split this way to prevent a circular dependency\nimport { core\x2C primordials } from "ext:core/mod.js";\nconst { Error\x2C ObjectGetOwnPropertyNames\x2C String\x2C ReflectOwnKeys\x2C ArrayPrototypeIncludes\x2C Object\x2C Proxy\x2C ObjectPrototype\x2C ObjectPrototypeIsPrototypeOf\x2C TypeErrorPrototype } = primordials;\nconst { build } = core;\nimport { nextTick as _nextTick } from "ext:deno_node/_next_tick.ts";\nimport * as fs from "ext:deno_fs/30_fs.js";\n/** Returns the operating system CPU architecture for which the Deno binary was compiled */ export function arch() {\n  if (build.arch == "x86_64") {\n    return "x64";\n  } else if (build.arch == "aarch64") {\n    return "arm64";\n  } else if (build.arch == "riscv64gc") {\n    return "riscv64";\n  } else {\n    throw Error("unreachable");\n  }\n}\n/** https://nodejs.org/api/process.html#process_process_chdir_directory */ export const chdir = fs.chdir;\n/** https://nodejs.org/api/process.html#process_process_cwd */ export const cwd = fs.cwd;\n/** https://nodejs.org/api/process.html#process_process_nexttick_callback_args */ export const nextTick = _nextTick;\n/** Wrapper of Deno.env.get\x2C which doesn't throw type error when\n * the env name has "=" or "\\0" in it. */ function denoEnvGet(name) {\n  try {\n    return Deno.env.get(name);\n  } catch (e) {\n    if (ObjectPrototypeIsPrototypeOf(TypeErrorPrototype\x2C e) || // TODO(iuioiua): Use `PermissionDeniedPrototype` when it's available\n    ObjectPrototypeIsPrototypeOf(Deno.errors.PermissionDenied.prototype\x2C e)) {\n      return undefined;\n    }\n    throw e;\n  }\n}\nconst OBJECT_PROTO_PROP_NAMES = ObjectGetOwnPropertyNames(ObjectPrototype);\n/**\n * https://nodejs.org/api/process.html#process_process_env\n * Requires env permissions\n */ export const env = new Proxy(Object()\x2C {\n  get: (target\x2C prop)=>{\n    if (typeof prop === "symbol") {\n      return target[prop];\n    }\n    const envValue = denoEnvGet(prop);\n    if (envValue) {\n      return envValue;\n    }\n    if (ArrayPrototypeIncludes(OBJECT_PROTO_PROP_NAMES\x2C prop)) {\n      return target[prop];\n    }\n    return envValue;\n  }\x2C\n  ownKeys: ()=>ReflectOwnKeys(Deno.env.toObject())\x2C\n  getOwnPropertyDescriptor: (_target\x2C name)=>{\n    const value = denoEnvGet(String(name));\n    if (value) {\n      return {\n        enumerable: true\x2C\n        configurable: true\x2C\n        value\n      };\n    }\n  }\x2C\n  set (_target\x2C prop\x2C value) {\n    Deno.env.set(String(prop)\x2C String(value));\n    return true; // success\n  }\x2C\n  has: (_target\x2C prop)=>typeof denoEnvGet(String(prop)) === "string"\x2C\n  deleteProperty (_target\x2C key) {\n    Deno.env.delete(String(key));\n    return true;\n  }\n});\n/**\n * https://nodejs.org/api/process.html#process_process_version\n *\n * This value is hard coded to latest stable release of Node\x2C as\n * some packages are checking it for compatibility. Previously\n * it pointed to Deno version\x2C but that led to incompability\n * with some packages.\n */ export const version = "v20.11.1";\n/**\n * https://nodejs.org/api/process.html#process_process_versions\n *\n * This value is hard coded to latest stable release of Node\x2C as\n * some packages are checking it for compatibility. Previously\n * it contained only output of `Deno.version`\x2C but that led to incompability\n * with some packages. Value of `v8` field is still taken from `Deno.version`.\n */ export const versions = {\n  node: "20.11.1"\x2C\n  uv: "1.43.0"\x2C\n  zlib: "1.2.11"\x2C\n  brotli: "1.0.9"\x2C\n  ares: "1.18.1"\x2C\n  modules: "108"\x2C\n  nghttp2: "1.47.0"\x2C\n  napi: "8"\x2C\n  llhttp: "6.0.10"\x2C\n  openssl: "3.0.7+quic"\x2C\n  cldr: "41.0"\x2C\n  icu: "71.1"\x2C\n  tz: "2022b"\x2C\n  unicode: "14.0"\x2C\n  ngtcp2: "0.8.1"\x2C\n  nghttp3: "0.7.0"\x2C\n  // Will be filled when calling "__bootstrapNodeProcess()"\x2C\n  deno: ""\x2C\n  v8: ""\x2C\n  typescript: ""\n};\n
code-source-info,0x2c3700580904,241,799,1026,C0O806C5O816C12O821C17O840C19O853C20O863C23O873C30O878C35O898C37O913C38O923C41O933C48O938C53O960C55O977C56O993C64O999C68O993,,
code-creation,JS,9,20703,0x2c37005809ac,10, ext:runtime_main/js/99_main.js:366:27,0x2c3700354800,~
code-source-info,0x2c37005809ac,305,10194,10218,C0O10200C6O10200C9O10218,,
code-creation,JS,9,20744,0x2c3700580a44,162,initializeDebugEnv ext:deno_node/internal/util/debuglog.ts:11:35,0x2c37002b7930,~
script-source,147,ext:deno_node/internal/util/debuglog.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent and Node contributors. All rights reserved. MIT license.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { inspect } from "ext:deno_node/internal/util/inspect.mjs";\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nexport function initializeDebugEnv(debugEnv) {\n  debugImpls = Object.create(null);\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C "\\\\$&").replaceAll("*"\x2C ".*").replaceAll("\x2C"\x2C "$|^");\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C "i");\n    testEnabled = (str)=>debugEnvRegex.exec(str) !== null;\n  } else {\n    testEnabled = ()=>false;\n  }\n}\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ("HTTP" === set || "HTTP2" === set) {\n    console.warn("Setting the NODE_DEBUG environment variable " + "to '" + set.toLowerCase() + "' can expose sensitive " + "data (such as passwords\x2C tokens and authentication headers) " + "in the resulting log.");\n  }\n}\nconst noop = ()=>{};\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const msg = args.map((arg)=>inspect(arg)).join(" ");\n        console.error("%s %s: %s"\x2C set\x2C String(Deno.pid)\x2C msg);\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nexport function debuglog(set\x2C cb) {\n  function init() {\n    set = set.toUpperCase();\n    enabled = testEnabled(set);\n  }\n  let debug = (...args)=>{\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === "function") {\n      cb(debug);\n    }\n    return debug(...args);\n  };\n  let enabled;\n  let test = ()=>{\n    init();\n    test = ()=>enabled;\n    return enabled;\n  };\n  const logger = (...args)=>debug(...args);\n  Object.defineProperty(logger\x2C "enabled"\x2C {\n    get () {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\nexport default {\n  debuglog\n};\n
code-source-info,0x2c3700580a44,147,604,1016,C0O619C4O639C11O639C19O630C25O655C36O768C50O768C57O805C68O806C75O827C86O828C94O878C103O893C119O878C124O878C126O916C135O928C147O986C154O998C161O1015,,
tick,0x64950d022fad,20902,0,0x0,9,0x64950db65500,0x2c370022ac3b,0x2c370021661b,0x2c37003076bf
code-creation,JS,9,20909,0x2c3700580bf0,405,internals.__initWorkerThreads node:worker_threads:217:33,0x2c37002b5cc4,~
script-source,144,node:worker_threads,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent and Node contributors. All rights reserved. MIT license.\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport { op_create_worker\x2C op_host_post_message\x2C op_host_recv_ctrl\x2C op_host_recv_message\x2C op_host_terminate_worker\x2C op_message_port_recv_message_sync\x2C op_worker_threads_filename } from "ext:core/ops";\nimport { deserializeJsMessageData\x2C MessageChannel\x2C MessagePort\x2C MessagePortIdSymbol\x2C MessagePortPrototype\x2C MessagePortReceiveMessageOnPortSymbol\x2C nodeWorkerThreadCloseCb\x2C refMessagePort\x2C serializeJsMessageData\x2C unrefPollForMessages } from "ext:deno_web/13_message_port.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { notImplemented } from "ext:deno_node/_utils.ts";\nimport { EventEmitter } from "node:events";\nimport { BroadcastChannel } from "ext:deno_broadcast_channel/01_broadcast_channel.js";\nimport process from "node:process";\nconst { JSONParse\x2C JSONStringify\x2C ObjectPrototypeIsPrototypeOf } = primordials;\nconst { Error\x2C ObjectHasOwn\x2C PromiseResolve\x2C SafeSet\x2C Symbol\x2C SymbolFor\x2C SymbolIterator\x2C StringPrototypeTrim\x2C SafeWeakMap\x2C SafeMap\x2C TypeError } = primordials;\nconst debugWorkerThreads = false;\nfunction debugWT(...args) {\n  if (debugWorkerThreads) {\n    // deno-lint-ignore prefer-primordials\n    console.log(...args);\n  }\n}\nconst privateWorkerRef = Symbol("privateWorkerRef");\nclass NodeWorker extends EventEmitter {\n  #id = 0;\n  #name = "";\n  #refCount = 1;\n  #messagePromise = undefined;\n  #controlPromise = undefined;\n  // "RUNNING" | "CLOSED" | "TERMINATED"\n  // "TERMINATED" means that any controls or messages received will be\n  // discarded. "CLOSED" means that we have received a control\n  // indicating that the worker is no longer running\x2C but there might\n  // still be messages left to receive.\n  #status = "RUNNING";\n  // https://nodejs.org/api/worker_threads.html#workerthreadid\n  threadId = this.#id;\n  // https://nodejs.org/api/worker_threads.html#workerresourcelimits\n  resourceLimits = {\n    maxYoungGenerationSizeMb: -1\x2C\n    maxOldGenerationSizeMb: -1\x2C\n    codeRangeSizeMb: -1\x2C\n    stackSizeMb: 4\n  };\n  constructor(specifier\x2C options){\n    super();\n    if (typeof specifier === "object" && !(specifier.protocol === "data:" || specifier.protocol === "file:")) {\n      throw new TypeError("node:worker_threads support only 'file:' and 'data:' URLs");\n    }\n    if (options?.eval) {\n      specifier = `data:text/javascript\x2C${specifier}`;\n    } else if (!(typeof specifier === "object" && specifier.protocol === "data:")) {\n      // deno-lint-ignore prefer-primordials\n      specifier = specifier.toString();\n      specifier = op_worker_threads_filename(specifier);\n    }\n    // TODO(bartlomieu): this doesn't match the Node.js behavior\x2C it should be\n    // `[worker {threadId}] {name}` or empty string.\n    let name = StringPrototypeTrim(options?.name ?? "");\n    if (options?.eval) {\n      name = "[worker eval]";\n    }\n    this.#name = name;\n    // One of the most common usages will be to pass `process.env` here\x2C\n    // but because `process.env` is a Proxy in Deno\x2C we need to get a plain\n    // object out of it - otherwise we'll run in `DataCloneError`s.\n    // See https://github.com/denoland/deno/issues/23522.\n    let env_ = undefined;\n    if (options?.env) {\n      env_ = JSONParse(JSONStringify(options?.env));\n    }\n    const serializedWorkerMetadata = serializeJsMessageData({\n      workerData: options?.workerData\x2C\n      environmentData: environmentData\x2C\n      env: env_\n    }\x2C options?.transferList ?? []);\n    const id = op_create_worker({\n      // deno-lint-ignore prefer-primordials\n      specifier: specifier.toString()\x2C\n      hasSourceCode: false\x2C\n      sourceCode: ""\x2C\n      permissions: null\x2C\n      name: this.#name\x2C\n      workerType: "module"\x2C\n      closeOnIdle: true\n    }\x2C serializedWorkerMetadata);\n    this.#id = id;\n    this.threadId = id;\n    this.#pollControl();\n    this.#pollMessages();\n    // https://nodejs.org/api/worker_threads.html#event-online\n    this.emit("online");\n  }\n  [privateWorkerRef](ref) {\n    if (ref) {\n      this.#refCount++;\n    } else {\n      this.#refCount--;\n    }\n    if (!ref && this.#refCount == 0) {\n      if (this.#controlPromise) {\n        core.unrefOpPromise(this.#controlPromise);\n      }\n      if (this.#messagePromise) {\n        core.unrefOpPromise(this.#messagePromise);\n      }\n    } else if (ref && this.#refCount == 1) {\n      if (this.#controlPromise) {\n        core.refOpPromise(this.#controlPromise);\n      }\n      if (this.#messagePromise) {\n        core.refOpPromise(this.#messagePromise);\n      }\n    }\n  }\n  #handleError(err) {\n    this.emit("error"\x2C err);\n  }\n  #pollControl = async ()=>{\n    while(this.#status === "RUNNING"){\n      this.#controlPromise = op_host_recv_ctrl(this.#id);\n      if (this.#refCount < 1) {\n        core.unrefOpPromise(this.#controlPromise);\n      }\n      const { 0: type\x2C 1: data } = await this.#controlPromise;\n      // If terminate was called then we ignore all messages\n      if (this.#status === "TERMINATED") {\n        return;\n      }\n      switch(type){\n        case 1:\n          {\n            this.#status = "CLOSED";\n          }\n        case 2:\n          {\n            this.#handleError(data);\n            break;\n          }\n        case 3:\n          {\n            debugWT(`Host got "close" message from worker: ${this.#name}`);\n            this.#status = "CLOSED";\n            return;\n          }\n        default:\n          {\n            throw new Error(`Unknown worker event: "${type}"`);\n          }\n      }\n    }\n  };\n  #pollMessages = async ()=>{\n    while(this.#status !== "TERMINATED"){\n      this.#messagePromise = op_host_recv_message(this.#id);\n      if (this.#refCount < 1) {\n        core.unrefOpPromise(this.#messagePromise);\n      }\n      const data = await this.#messagePromise;\n      if (this.#status === "TERMINATED" || data === null) {\n        return;\n      }\n      let message\x2C _transferables;\n      try {\n        const v = deserializeJsMessageData(data);\n        message = v[0];\n        _transferables = v[1];\n      } catch (err) {\n        this.emit("messageerror"\x2C err);\n        return;\n      }\n      this.emit("message"\x2C message);\n    }\n  };\n  postMessage(message\x2C transferOrOptions = {}) {\n    const prefix = "Failed to execute 'postMessage' on 'MessagePort'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    message = webidl.converters.any(message);\n    let options;\n    if (webidl.type(transferOrOptions) === "Object" && transferOrOptions !== undefined && transferOrOptions[SymbolIterator] !== undefined) {\n      const transfer = webidl.converters["sequence<object>"](transferOrOptions\x2C prefix\x2C "Argument 2");\n      options = {\n        transfer\n      };\n    } else {\n      options = webidl.converters.StructuredSerializeOptions(transferOrOptions\x2C prefix\x2C "Argument 2");\n    }\n    const { transfer } = options;\n    const data = serializeJsMessageData(message\x2C transfer);\n    if (this.#status === "RUNNING") {\n      op_host_post_message(this.#id\x2C data);\n    }\n  }\n  // https://nodejs.org/api/worker_threads.html#workerterminate\n  terminate() {\n    if (this.#status !== "TERMINATED") {\n      this.#status = "TERMINATED";\n      op_host_terminate_worker(this.#id);\n    }\n    this.emit("exit"\x2C 0);\n    return PromiseResolve(0);\n  }\n  ref() {\n    this[privateWorkerRef](true);\n  }\n  unref() {\n    this[privateWorkerRef](false);\n  }\n  getHeapSnapshot = ()=>notImplemented("Worker.prototype.getHeapSnapshot");\n  // fake performance\n  performance = globalThis.performance;\n}\nexport let isMainThread;\nexport let resourceLimits;\nlet threadId = 0;\nlet workerData = null;\nlet environmentData = new SafeMap();\n// deno-lint-ignore no-explicit-any\nlet parentPort = null;\ninternals.__initWorkerThreads = (runningOnMainThread\x2C workerId\x2C maybeWorkerMetadata)=>{\n  isMainThread = runningOnMainThread;\n  defaultExport.isMainThread = isMainThread;\n  // fake resourceLimits\n  resourceLimits = isMainThread ? {} : {\n    maxYoungGenerationSizeMb: 48\x2C\n    maxOldGenerationSizeMb: 2048\x2C\n    codeRangeSizeMb: 0\x2C\n    stackSizeMb: 4\n  };\n  defaultExport.resourceLimits = resourceLimits;\n  if (!isMainThread) {\n    const listeners = new SafeWeakMap();\n    parentPort = self;\n    threadId = workerId;\n    if (maybeWorkerMetadata) {\n      const { 0: metadata\x2C 1: _ } = maybeWorkerMetadata;\n      workerData = metadata.workerData;\n      environmentData = metadata.environmentData;\n      const env = metadata.env;\n      if (env) {\n        process.env = env;\n      }\n    }\n    defaultExport.workerData = workerData;\n    defaultExport.parentPort = parentPort;\n    defaultExport.threadId = threadId;\n    patchMessagePortIfFound(workerData);\n    parentPort.off = parentPort.removeListener = function(name\x2C listener) {\n      this.removeEventListener(name\x2C listeners.get(listener));\n      listeners.delete(listener);\n      return this;\n    };\n    parentPort.on = parentPort.addListener = function(name\x2C listener) {\n      // deno-lint-ignore no-explicit-any\n      const _listener = (ev)=>{\n        const message = ev.data;\n        patchMessagePortIfFound(message);\n        return listener(message);\n      };\n      listeners.set(listener\x2C _listener);\n      this.addEventListener(name\x2C _listener);\n      return this;\n    };\n    parentPort.once = function(name\x2C listener) {\n      // deno-lint-ignore no-explicit-any\n      const _listener = (ev)=>listener(ev.data);\n      listeners.set(listener\x2C _listener);\n      this.addEventListener(name\x2C _listener);\n      return this;\n    };\n    // mocks\n    parentPort.setMaxListeners = ()=>{};\n    parentPort.getMaxListeners = ()=>Infinity;\n    parentPort.eventNames = ()=>[\n        ""\n      ];\n    parentPort.listenerCount = ()=>0;\n    parentPort.emit = ()=>notImplemented("parentPort.emit");\n    parentPort.removeAllListeners = ()=>notImplemented("parentPort.removeAllListeners");\n    parentPort.addEventListener("offline"\x2C ()=>{\n      parentPort.emit("close");\n    });\n    parentPort.unref = ()=>{\n      parentPort[unrefPollForMessages] = true;\n    };\n    parentPort.ref = ()=>{\n      parentPort[unrefPollForMessages] = false;\n    };\n  }\n};\nexport function getEnvironmentData(key) {\n  return environmentData.get(key);\n}\nexport function setEnvironmentData(key\x2C value) {\n  if (value === undefined) {\n    environmentData.delete(key);\n  } else {\n    environmentData.set(key\x2C value);\n  }\n}\nexport const SHARE_ENV = SymbolFor("nodejs.worker_threads.SHARE_ENV");\nexport function markAsUntransferable() {\n  notImplemented("markAsUntransferable");\n}\nexport function moveMessagePortToContext() {\n  notImplemented("moveMessagePortToContext");\n}\n/**\n * @param { MessagePort } port\n * @returns {object | undefined}\n */ export function receiveMessageOnPort(port) {\n  if (!ObjectPrototypeIsPrototypeOf(MessagePortPrototype\x2C port)) {\n    const err = new TypeError('The "port" argument must be a MessagePort instance');\n    err["code"] = "ERR_INVALID_ARG_TYPE";\n    throw err;\n  }\n  port[MessagePortReceiveMessageOnPortSymbol] = true;\n  const data = op_message_port_recv_message_sync(port[MessagePortIdSymbol]);\n  if (data === null) return undefined;\n  return {\n    message: deserializeJsMessageData(data)[0]\n  };\n}\nclass NodeMessageChannel {\n  port1;\n  port2;\n  constructor(){\n    const { port1\x2C port2 } = new MessageChannel();\n    this.port1 = webMessagePortToNodeMessagePort(port1);\n    this.port2 = webMessagePortToNodeMessagePort(port2);\n  }\n}\nconst listeners = new SafeWeakMap();\nfunction webMessagePortToNodeMessagePort(port) {\n  port.on = port.addListener = function(name\x2C listener) {\n    // deno-lint-ignore no-explicit-any\n    const _listener = (ev)=>{\n      patchMessagePortIfFound(ev.data);\n      listener(ev.data);\n    };\n    if (name == "message") {\n      if (port.onmessage === null) {\n        port.onmessage = _listener;\n      } else {\n        port.addEventListener("message"\x2C _listener);\n      }\n    } else if (name == "messageerror") {\n      if (port.onmessageerror === null) {\n        port.onmessageerror = _listener;\n      } else {\n        port.addEventListener("messageerror"\x2C _listener);\n      }\n    } else if (name == "close") {\n      port.addEventListener("close"\x2C _listener);\n    } else {\n      throw new Error(`Unknown event: "${name}"`);\n    }\n    listeners.set(listener\x2C _listener);\n    return this;\n  };\n  port.off = port.removeListener = function(name\x2C listener) {\n    if (name == "message") {\n      port.removeEventListener("message"\x2C listeners.get(listener));\n    } else if (name == "messageerror") {\n      port.removeEventListener("messageerror"\x2C listeners.get(listener));\n    } else if (name == "close") {\n      port.removeEventListener("close"\x2C listeners.get(listener));\n    } else {\n      throw new Error(`Unknown event: "${name}"`);\n    }\n    listeners.delete(listener);\n    return this;\n  };\n  port[nodeWorkerThreadCloseCb] = ()=>{\n    port.dispatchEvent(new Event("close"));\n  };\n  port.unref = ()=>{\n    port[refMessagePort](false);\n  };\n  port.ref = ()=>{\n    port[refMessagePort](true);\n  };\n  return port;\n}\n// TODO(@marvinhagemeister): Recursively iterating over all message\n// properties seems slow.\n// Maybe there is a way we can patch the prototype of MessagePort _only_\n// inside worker_threads? For now correctness is more important than perf.\n// deno-lint-ignore no-explicit-any\nfunction patchMessagePortIfFound(data\x2C seen = new SafeSet()) {\n  if (data === null || typeof data !== "object" || seen.has(data)) {\n    return;\n  }\n  seen.add(data);\n  if (ObjectPrototypeIsPrototypeOf(MessagePortPrototype\x2C data)) {\n    webMessagePortToNodeMessagePort(data);\n  } else {\n    for(const obj in data){\n      if (ObjectHasOwn(data\x2C obj)) {\n        patchMessagePortIfFound(data[obj]\x2C seen);\n      }\n    }\n  }\n}\nexport { BroadcastChannel\x2C MessagePort\x2C NodeMessageChannel as MessageChannel\x2C NodeWorker as Worker\x2C parentPort\x2C threadId\x2C workerData };\nconst defaultExport = {\n  markAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  MessagePort\x2C\n  MessageChannel: NodeMessageChannel\x2C\n  BroadcastChannel\x2C\n  Worker: NodeWorker\x2C\n  getEnvironmentData\x2C\n  setEnvironmentData\x2C\n  SHARE_ENV\x2C\n  threadId\x2C\n  workerData\x2C\n  resourceLimits\x2C\n  parentPort\x2C\n  isMainThread\n};\nexport default defaultExport;\n
code-source-info,0x2c3700580bf0,144,7807,10156,C0O7878C10O7903C15O7932C18O7930C22O7973C35O7988C45O8130C48O8161C51O8159C55O8179C67O8222C74O8222C79O8222C81O8245C85O8256C95O8277C105O8293C109O8356C111O8337C118O8350C122O8405C127O8394C137O8450C146O8439C154O8494C159O8505C161O8524C169O8536C173O8561C178O8588C183O8586C187O8604C192O8631C195O8629C199O8647C204O8672C207O8670C211O8686C216O8710C220O8686C224O8727C228O8744C237O8770C243O8742C247O8926C251O8942C260O8965C266O8940C270O9304C278O9320C282O9571C290O9598C294O9612C302O9639C306O9659C314O9681C318O9713C326O9738C330O9751C338O9767C342O9812C350O9842C354O9901C358O9912C371O9912C377O9990C385O10007C389O10073C397O10088C404O10155,,
code-creation,JS,9,21276,0x2c3700580e6c,41,setupChildProcessIpcChannel node:child_process:480:37,0x2c370025c104,~
script-source,70,node:child_process,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// This module implements 'child_process' module of Node.JS API.\n// ref: https://nodejs.org/api/child_process.html\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { internals } from "ext:core/mod.js";\nimport { op_bootstrap_unstable_args\x2C op_node_child_ipc_pipe\x2C op_npm_process_state } from "ext:core/ops";\nimport { ChildProcess\x2C normalizeSpawnArguments\x2C setupChannel\x2C spawnSync as _spawnSync\x2C stdioStringToArray } from "ext:deno_node/internal/child_process.ts";\nimport { validateAbortSignal\x2C validateFunction\x2C validateObject\x2C validateString } from "ext:deno_node/internal/validators.mjs";\nimport { ERR_CHILD_PROCESS_IPC_REQUIRED\x2C ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C ERR_INVALID_ARG_TYPE\x2C ERR_INVALID_ARG_VALUE\x2C ERR_OUT_OF_RANGE\x2C genericNodeError } from "ext:deno_node/internal/errors.ts";\nimport { ArrayIsArray\x2C ArrayPrototypeJoin\x2C ArrayPrototypePush\x2C ArrayPrototypeSlice\x2C ObjectAssign\x2C StringPrototypeSlice } from "ext:deno_node/internal/primordials.mjs";\nimport { getSystemErrorName\x2C promisify } from "node:util";\nimport { createDeferredPromise } from "ext:deno_node/internal/util.mjs";\nimport process from "node:process";\nimport { Buffer } from "node:buffer";\nimport { convertToValidSignal\x2C kEmptyObject } from "ext:deno_node/internal/util.mjs";\nconst MAX_BUFFER = 1024 * 1024;\n/**\n * Spawns a new Node.js process + fork.\n * @param modulePath\n * @param args\n * @param option\n * @returns\n */ export function fork(modulePath\x2C _args\x2C _options) {\n  validateString(modulePath\x2C "modulePath");\n  // Get options and args arguments.\n  let execArgv;\n  let options = {};\n  let args = [];\n  let pos = 1;\n  if (pos < arguments.length && Array.isArray(arguments[pos])) {\n    args = arguments[pos++];\n  }\n  if (pos < arguments.length && arguments[pos] == null) {\n    pos++;\n  }\n  if (pos < arguments.length && arguments[pos] != null) {\n    if (typeof arguments[pos] !== "object") {\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\n    }\n    options = {\n      ...arguments[pos++]\n    };\n  }\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = execArgv.lastIndexOf(process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = execArgv.slice(0);\n      execArgv.splice(index - 1\x2C 2);\n    }\n  }\n  // TODO(bartlomieju): this is incomplete\x2C currently only handling a single\n  // V8 flag to get Prisma integration running\x2C we should fill this out with\n  // more\n  const v8Flags = [];\n  if (Array.isArray(execArgv)) {\n    for(let index = 0; index < execArgv.length; index++){\n      const flag = execArgv[index];\n      if (flag.startsWith("--max-old-space-size")) {\n        execArgv.splice(index\x2C 1);\n        v8Flags.push(flag);\n      } else if (flag.startsWith("--enable-source-maps")) {\n        // https://github.com/denoland/deno/issues/21750\n        execArgv.splice(index\x2C 1);\n      }\n    }\n  }\n  const stringifiedV8Flags = [];\n  if (v8Flags.length > 0) {\n    stringifiedV8Flags.push("--v8-flags=" + v8Flags.join("\x2C"));\n  }\n  args = [\n    "run"\x2C\n    ...op_bootstrap_unstable_args()\x2C\n    "--node-modules-dir"\x2C\n    "-A"\x2C\n    ...stringifiedV8Flags\x2C\n    ...execArgv\x2C\n    modulePath\x2C\n    ...args\n  ];\n  if (typeof options.stdio === "string") {\n    options.stdio = stdioStringToArray(options.stdio\x2C "ipc");\n  } else if (!Array.isArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(options.silent ? "pipe" : "inherit"\x2C "ipc");\n  } else if (!options.stdio.includes("ipc")) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED("options.stdio");\n  }\n  options.execPath = options.execPath || Deno.execPath();\n  options.shell = false;\n  Object.assign(options.env ??= {}\x2C {\n    DENO_DONT_USE_INTERNAL_NODE_COMPAT_STATE: op_npm_process_state()\n  });\n  return spawn(options.execPath\x2C args\x2C options);\n}\n/**\n * Spawns a child process using `command`.\n */ export function spawn(command\x2C argsOrOptions\x2C maybeOptions) {\n  const args = Array.isArray(argsOrOptions) ? argsOrOptions : [];\n  let options = !Array.isArray(argsOrOptions) && argsOrOptions != null ? argsOrOptions : maybeOptions;\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\n  validateAbortSignal(options?.signal\x2C "options.signal");\n  return new ChildProcess(command\x2C args\x2C options);\n}\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(Number.isInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE("timeout"\x2C "an unsigned integer"\x2C timeout);\n  }\n}\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === "number" && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE("options.maxBuffer"\x2C "a positive number"\x2C maxBuffer);\n  }\n}\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === "string" || typeof killSignal === "number") {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE("options.killSignal"\x2C [\n      "string"\x2C\n      "number"\n    ]\x2C killSignal);\n  }\n}\nexport function spawnSync(command\x2C argsOrOptions\x2C maybeOptions) {\n  const args = Array.isArray(argsOrOptions) ? argsOrOptions : [];\n  let options = !Array.isArray(argsOrOptions) && argsOrOptions ? argsOrOptions : maybeOptions;\n  options = {\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(command\x2C args\x2C options)\n  };\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n  // Validate and translate the kill signal\x2C if present.\n  sanitizeKillSignal(options.killSignal);\n  return _spawnSync(command\x2C args\x2C options);\n}\nfunction normalizeExecArgs(command\x2C optionsOrCallback\x2C maybeCallback) {\n  let callback = maybeCallback;\n  if (typeof optionsOrCallback === "function") {\n    callback = optionsOrCallback;\n    optionsOrCallback = undefined;\n  }\n  // Make a shallow copy so we don't clobber the user's options object.\n  const options = {\n    ...optionsOrCallback\n  };\n  options.shell = typeof options.shell === "string" ? options.shell : true;\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\n  };\n}\nexport function exec(command\x2C optionsOrCallback\x2C maybeCallback) {\n  const opts = normalizeExecArgs(command\x2C optionsOrCallback\x2C maybeCallback);\n  return execFile(opts.file\x2C opts.options\x2C opts.callback);\n}\nconst customPromiseExecFunction = (orig)=>{\n  return (...args)=>{\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr)=>{\n      if (err !== null) {\n        const _err = err;\n        _err.stdout = stdout;\n        _err.stderr = stderr;\n        reject && reject(_err);\n      } else {\n        resolve && resolve({\n          stdout\x2C\n          stderr\n        });\n      }\n    });\n    return promise;\n  };\n};\nObject.defineProperty(exec\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\n});\nclass ExecFileError extends Error {\n  code;\n  constructor(message){\n    super(message);\n    this.code = "UNKNOWN";\n  }\n}\nexport function execFile(file\x2C argsOrOptionsOrCallback\x2C optionsOrCallback\x2C maybeCallback) {\n  let args = [];\n  let options = {};\n  let callback;\n  if (Array.isArray(argsOrOptionsOrCallback)) {\n    args = argsOrOptionsOrCallback;\n  } else if (argsOrOptionsOrCallback instanceof Function) {\n    callback = argsOrOptionsOrCallback;\n  } else if (argsOrOptionsOrCallback) {\n    options = argsOrOptionsOrCallback;\n  }\n  if (optionsOrCallback instanceof Function) {\n    callback = optionsOrCallback;\n  } else if (optionsOrCallback) {\n    options = optionsOrCallback;\n    callback = maybeCallback;\n  }\n  const execOptions = {\n    encoding: "utf8"\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: "SIGTERM"\x2C\n    shell: false\x2C\n    ...options\n  };\n  validateTimeout(execOptions.timeout);\n  if (execOptions.maxBuffer < 0) {\n    throw new ERR_OUT_OF_RANGE("options.maxBuffer"\x2C "a positive number"\x2C execOptions.maxBuffer);\n  }\n  const spawnOptions = {\n    cwd: execOptions.cwd\x2C\n    env: execOptions.env\x2C\n    gid: execOptions.gid\x2C\n    shell: execOptions.shell\x2C\n    signal: execOptions.signal\x2C\n    uid: execOptions.uid\x2C\n    windowsHide: !!execOptions.windowsHide\x2C\n    windowsVerbatimArguments: !!execOptions.windowsVerbatimArguments\n  };\n  const child = spawn(file\x2C args\x2C spawnOptions);\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (execOptions.encoding !== "buffer" && Buffer.isEncoding(execOptions.encoding)) {\n    encoding = execOptions.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n  let ex = null;\n  let cmd = file;\n  function exithandler(code = 0\x2C signal) {\n    if (exited) return;\n    exited = true;\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n    if (!callback) return;\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding || child.stdout && child.stdout.readableEncoding) {\n      stdout = _stdout.join("");\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding || child.stderr && child.stderr.readableEncoding) {\n      stderr = _stderr.join("");\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n    if (args?.length) {\n      cmd += ` ${args.join(" ")}`;\n    }\n    if (!ex) {\n      ex = new ExecFileError("Command failed: " + cmd + "\\n" + stderr);\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\n      ex.killed = child.killed || killed;\n      ex.signal = signal;\n    }\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n  function errorhandler(e) {\n    ex = e;\n    if (child.stdout) {\n      child.stdout.destroy();\n    }\n    if (child.stderr) {\n      child.stderr.destroy();\n    }\n    exithandler();\n  }\n  function kill() {\n    if (child.stdout) {\n      child.stdout.destroy();\n    }\n    if (child.stderr) {\n      child.stderr.destroy();\n    }\n    killed = true;\n    try {\n      child.kill(execOptions.killSignal);\n    } catch (e) {\n      if (e) {\n        ex = e;\n      }\n      exithandler();\n    }\n  }\n  if (execOptions.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C execOptions.timeout);\n  }\n  if (child.stdout) {\n    if (encoding) {\n      child.stdout.setEncoding(encoding);\n    }\n    child.stdout.on("data"\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (execOptions.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout?.readableEncoding;\n      const length = encoding ? Buffer.byteLength(chunk\x2C encoding) : chunk.length;\n      const slice = encoding ? StringPrototypeSlice : (buf\x2C ...args)=>buf.slice(...args);\n      stdoutLen += length;\n      if (stdoutLen > execOptions.maxBuffer) {\n        const truncatedLen = execOptions.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER("stdout");\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n  if (child.stderr) {\n    if (encoding) {\n      child.stderr.setEncoding(encoding);\n    }\n    child.stderr.on("data"\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (execOptions.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr?.readableEncoding;\n      const length = encoding ? Buffer.byteLength(chunk\x2C encoding) : chunk.length;\n      const slice = encoding ? StringPrototypeSlice : (buf\x2C ...args)=>buf.slice(...args);\n      stderrLen += length;\n      if (stderrLen > execOptions.maxBuffer) {\n        const truncatedLen = execOptions.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C slice(chunk\x2C 0\x2C truncatedLen));\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER("stderr");\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n  child.addListener("close"\x2C exithandler);\n  child.addListener("error"\x2C errorhandler);\n  return child;\n}\nconst customPromiseExecFileFunction = (orig)=>{\n  return (...args)=>{\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr)=>{\n      if (err !== null) {\n        const _err = err;\n        _err.stdout = stdout;\n        _err.stderr = stderr;\n        reject && reject(_err);\n      } else {\n        resolve && resolve({\n          stdout\x2C\n          stderr\n        });\n      }\n    });\n    return promise;\n  };\n};\nObject.defineProperty(execFile\x2C promisify.custom\x2C {\n  enumerable: false\x2C\n  value: customPromiseExecFileFunction(execFile)\n});\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = "Command failed: ";\n    msg += cmd || ArrayPrototypeJoin(args\x2C " ");\n    if (ret.stderr && ret.stderr.length > 0) {\n      msg += `\\n${ret.stderr.toString()}`;\n    }\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\nexport function execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options);\n  const inheritStderr = !opts.options.stdio;\n  const ret = spawnSync(opts.file\x2C opts.options);\n  if (inheritStderr && ret.stderr) {\n    process.stderr.write(ret.stderr);\n  }\n  const err = checkExecSyncError(ret\x2C []\x2C command);\n  if (err) {\n    throw err;\n  }\n  return ret.stdout;\n}\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === "object") {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === "function") {\n    callback = args;\n    options = null;\n    args = null;\n  }\n  if (args == null) {\n    args = [];\n  }\n  if (typeof options === "function") {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C "options");\n  }\n  if (options == null) {\n    options = kEmptyObject;\n  }\n  args = args;\n  options = options;\n  if (callback != null) {\n    validateFunction(callback\x2C "callback");\n  }\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C "options.argv0");\n  }\n  return {\n    file\x2C\n    args\x2C\n    options\x2C\n    callback\n  };\n}\nexport function execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n  if (inheritStderr && ret.stderr) {\n    process.stderr.write(ret.stderr);\n  }\n  const errArgs = [\n    options.argv0 || file\x2C\n    ...args\n  ];\n  const err = checkExecSyncError(ret\x2C errArgs);\n  if (err) {\n    throw err;\n  }\n  return ret.stdout;\n}\nfunction setupChildProcessIpcChannel() {\n  const fd = op_node_child_ipc_pipe();\n  if (typeof fd != "number" || fd < 0) return;\n  setupChannel(process\x2C fd);\n}\ninternals.__setupChildProcessIpcChannel = setupChildProcessIpcChannel;\nexport default {\n  fork\x2C\n  spawn\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  ChildProcess\x2C\n  spawnSync\n};\nexport { ChildProcess };\n
code-source-info,0x2c3700580e6c,70,15317,15438,C0O15335C6O15335C10O15363C15O15395C20O15400C21O15407C22O15410C28O15423C34O15410C40O15437,,
code-creation,Script,9,21705,0x2c3700580f10,106, ext:cli/40_test_common.js:1:1,0x2c370055c580,~
script-source,307,ext:cli/40_test_common.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport { serializePermissions } from "ext:runtime/10_permissions.js";\nconst ops = core.ops;\nconst {\n  StringPrototypeReplaceAll\x2C\n  SafeArrayIterator\x2C\n} = primordials;\n\nconst ESCAPE_ASCII_CHARS = [\n  ["\\b"\x2C "\\\\b"]\x2C\n  ["\\f"\x2C "\\\\f"]\x2C\n  ["\\t"\x2C "\\\\t"]\x2C\n  ["\\n"\x2C "\\\\n"]\x2C\n  ["\\r"\x2C "\\\\r"]\x2C\n  ["\\v"\x2C "\\\\v"]\x2C\n];\n\n/**\n * @param {string} name\n * @returns {string}\n */\nexport function escapeName(name) {\n  // Check if we need to escape a character\n  for (let i = 0; i < name.length; i++) {\n    const ch = name.charCodeAt(i);\n    if (ch <= 13 && ch >= 8) {\n      // Slow path: We do need to escape it\n      for (const [escape\x2C replaceWith] of ESCAPE_ASCII_CHARS) {\n        name = StringPrototypeReplaceAll(name\x2C escape\x2C replaceWith);\n      }\n      return name;\n    }\n  }\n\n  // We didn't need to escape anything\x2C return original string\n  return name;\n}\n\nexport function pledgePermissions(permissions) {\n  return ops.op_pledge_test_permissions(\n    serializePermissions(permissions)\x2C\n  );\n}\n\nexport function restorePermissions(token) {\n  ops.op_restore_test_permissions(token);\n}\n\nexport function withPermissions(fn\x2C permissions) {\n  return async function applyPermissions(...params) {\n    const token = pledgePermissions(permissions);\n\n    try {\n      return await fn(...new SafeArrayIterator(params));\n    } finally {\n      restorePermissions(token);\n    }\n  };\n}\n
code-source-info,0x2c3700580f10,307,0,1478,C10O0C40O0C60O0C67O210C73O215C77O210C79O282C85O230C91O259C97O323C101O323C105O1478,,
tick,0x64950d0c7a87,21975,0,0x0,2
code-creation,Script,9,22011,0x2c370058107c,377, ext:cli/40_test.js:1:1,0x2c370055d954,~
script-source,308,ext:cli/40_test.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport { escapeName\x2C withPermissions } from "ext:cli/40_test_common.js";\n\n// TODO(mmastrac): We cannot import these from "ext:core/ops" yet\nconst {\n  op_register_test_step\x2C\n  op_register_test\x2C\n  op_test_event_step_result_failed\x2C\n  op_test_event_step_result_ignored\x2C\n  op_test_event_step_result_ok\x2C\n  op_test_event_step_wait\x2C\n  op_test_get_origin\x2C\n} = core.ops;\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypePush\x2C\n  DateNow\x2C\n  Error\x2C\n  Map\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeSet\x2C\n  SafeArrayIterator\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nimport { setExitHandler } from "ext:runtime/30_os.js";\n\n// Capture `Deno` global so that users deleting or mangling it\x2C won't\n// have impact on our sanitizers.\nconst DenoNs = globalThis.Deno;\n\n/**\n * @typedef {{\n *   id: number\x2C\n *   name: string\x2C\n *   fn: TestFunction\n *   origin: string\x2C\n *   location: TestLocation\x2C\n *   ignore: boolean\x2C\n *   only: boolean.\n *   sanitizeOps: boolean\x2C\n *   sanitizeResources: boolean\x2C\n *   sanitizeExit: boolean\x2C\n *   permissions: PermissionOptions\x2C\n * }} TestDescription\n *\n * @typedef {{\n *   id: number\x2C\n *   name: string\x2C\n *   fn: TestFunction\n *   origin: string\x2C\n *   location: TestLocation\x2C\n *   ignore: boolean\x2C\n *   level: number\x2C\n *   parent: TestDescription | TestStepDescription\x2C\n *   rootId: number\x2C\n *   rootName: String\x2C\n *   sanitizeOps: boolean\x2C\n *   sanitizeResources: boolean\x2C\n *   sanitizeExit: boolean\x2C\n * }} TestStepDescription\n *\n * @typedef {{\n *   context: TestContext\x2C\n *   children: TestStepDescription[]\x2C\n *   completed: boolean\x2C\n * }} TestState\n *\n * @typedef {{\n *   context: TestContext\x2C\n *   children: TestStepDescription[]\x2C\n *   completed: boolean\x2C\n *   failed: boolean\x2C\n * }} TestStepState\n *\n * @typedef {{\n *   id: number\x2C\n *   name: string\x2C\n *   fn: BenchFunction\n *   origin: string\x2C\n *   ignore: boolean\x2C\n *   only: boolean.\n *   sanitizeExit: boolean\x2C\n *   permissions: PermissionOptions\x2C\n * }} BenchDescription\n */\n\n/** @type {Map<number\x2C TestState | TestStepState>} */\nconst testStates = new Map();\n\n// Wrap test function in additional assertion that makes sure\n// that the test case does not accidentally exit prematurely.\nfunction assertExit(fn\x2C isTest) {\n  return async function exitSanitizer(...params) {\n    setExitHandler((exitCode) => {\n      throw new Error(\n        `${\n          isTest ? "Test case" : "Bench"\n        } attempted to exit with exit code: ${exitCode}`\x2C\n      );\n    });\n\n    try {\n      const innerResult = await fn(...new SafeArrayIterator(params));\n      const exitCode = DenoNs.exitCode;\n      if (exitCode !== 0) {\n        // Reset the code to allow other tests to run...\n        DenoNs.exitCode = 0;\n        // ...and fail the current test.\n        throw new Error(\n          `${\n            isTest ? "Test case" : "Bench"\n          } finished with exit code set to ${exitCode}.`\x2C\n        );\n      }\n      if (innerResult) {\n        return innerResult;\n      }\n    } finally {\n      setExitHandler(null);\n    }\n  };\n}\n\nfunction wrapOuter(fn\x2C desc) {\n  return async function outerWrapped() {\n    try {\n      if (desc.ignore) {\n        return "ignored";\n      }\n      return await fn(desc) ?? "ok";\n    } catch (error) {\n      return { failed: { jsError: core.destructureError(error) } };\n    } finally {\n      const state = MapPrototypeGet(testStates\x2C desc.id);\n      for (const childDesc of state.children) {\n        stepReportResult(childDesc\x2C { failed: "incomplete" }\x2C 0);\n      }\n      state.completed = true;\n    }\n  };\n}\n\nfunction wrapInner(fn) {\n  /** @param desc {TestDescription | TestStepDescription} */\n  return async function innerWrapped(desc) {\n    function getRunningStepDescs() {\n      const results = [];\n      let childDesc = desc;\n      while (childDesc.parent != null) {\n        const state = MapPrototypeGet(testStates\x2C childDesc.parent.id);\n        for (const siblingDesc of state.children) {\n          if (siblingDesc.id == childDesc.id) {\n            continue;\n          }\n          const siblingState = MapPrototypeGet(testStates\x2C siblingDesc.id);\n          if (!siblingState.completed) {\n            ArrayPrototypePush(results\x2C siblingDesc);\n          }\n        }\n        childDesc = childDesc.parent;\n      }\n      return results;\n    }\n    const runningStepDescs = getRunningStepDescs();\n    const runningStepDescsWithSanitizers = ArrayPrototypeFilter(\n      runningStepDescs\x2C\n      (d) => usesSanitizer(d)\x2C\n    );\n\n    if (runningStepDescsWithSanitizers.length > 0) {\n      return {\n        failed: {\n          overlapsWithSanitizers: runningStepDescsWithSanitizers.map(\n            getFullName\x2C\n          )\x2C\n        }\x2C\n      };\n    }\n\n    if (usesSanitizer(desc) && runningStepDescs.length > 0) {\n      return {\n        failed: {\n          hasSanitizersAndOverlaps: runningStepDescs.map(getFullName)\x2C\n        }\x2C\n      };\n    }\n    await fn(MapPrototypeGet(testStates\x2C desc.id).context);\n    let failedSteps = 0;\n    for (const childDesc of MapPrototypeGet(testStates\x2C desc.id).children) {\n      const state = MapPrototypeGet(testStates\x2C childDesc.id);\n      if (!state.completed) {\n        return { failed: "incompleteSteps" };\n      }\n      if (state.failed) {\n        failedSteps++;\n      }\n    }\n    return failedSteps == 0 ? null : { failed: { failedSteps } };\n  };\n}\n\nconst registerTestIdRetBuf = new Uint32Array(1);\nconst registerTestIdRetBufU8 = new Uint8Array(registerTestIdRetBuf.buffer);\n\n// As long as we're using one isolate per test\x2C we can cache the origin since it won't change\nlet cachedOrigin = undefined;\n\nfunction testInner(\n  nameOrFnOrOptions\x2C\n  optionsOrFn\x2C\n  maybeFn\x2C\n  overrides = { __proto__: null }\x2C\n) {\n  // No-op if we're not running in `deno test` subcommand.\n  if (typeof op_register_test !== "function") {\n    return;\n  }\n\n  let testDesc;\n  const defaults = {\n    ignore: false\x2C\n    only: false\x2C\n    sanitizeOps: true\x2C\n    sanitizeResources: true\x2C\n    sanitizeExit: true\x2C\n    permissions: null\x2C\n  };\n\n  if (typeof nameOrFnOrOptions === "string") {\n    if (!nameOrFnOrOptions) {\n      throw new TypeError("The test name can't be empty");\n    }\n    if (typeof optionsOrFn === "function") {\n      testDesc = { fn: optionsOrFn\x2C name: nameOrFnOrOptions\x2C ...defaults };\n    } else {\n      if (!maybeFn || typeof maybeFn !== "function") {\n        throw new TypeError("Missing test function");\n      }\n      if (optionsOrFn.fn != undefined) {\n        throw new TypeError(\n          "Unexpected 'fn' field in options\x2C test function is already provided as the third argument."\x2C\n        );\n      }\n      if (optionsOrFn.name != undefined) {\n        throw new TypeError(\n          "Unexpected 'name' field in options\x2C test name is already provided as the first argument."\x2C\n        );\n      }\n      testDesc = {\n        ...defaults\x2C\n        ...optionsOrFn\x2C\n        fn: maybeFn\x2C\n        name: nameOrFnOrOptions\x2C\n      };\n    }\n  } else if (typeof nameOrFnOrOptions === "function") {\n    if (!nameOrFnOrOptions.name) {\n      throw new TypeError("The test function must have a name");\n    }\n    if (optionsOrFn != undefined) {\n      throw new TypeError("Unexpected second argument to Deno.test()");\n    }\n    if (maybeFn != undefined) {\n      throw new TypeError("Unexpected third argument to Deno.test()");\n    }\n    testDesc = {\n      ...defaults\x2C\n      fn: nameOrFnOrOptions\x2C\n      name: nameOrFnOrOptions.name\x2C\n    };\n  } else {\n    let fn;\n    let name;\n    if (typeof optionsOrFn === "function") {\n      fn = optionsOrFn;\n      if (nameOrFnOrOptions.fn != undefined) {\n        throw new TypeError(\n          "Unexpected 'fn' field in options\x2C test function is already provided as the second argument."\x2C\n        );\n      }\n      name = nameOrFnOrOptions.name ?? fn.name;\n    } else {\n      if (\n        !nameOrFnOrOptions.fn || typeof nameOrFnOrOptions.fn !== "function"\n      ) {\n        throw new TypeError(\n          "Expected 'fn' field in the first argument to be a test function."\x2C\n        );\n      }\n      fn = nameOrFnOrOptions.fn;\n      name = nameOrFnOrOptions.name ?? fn.name;\n    }\n    if (!name) {\n      throw new TypeError("The test name can't be empty");\n    }\n    testDesc = { ...defaults\x2C ...nameOrFnOrOptions\x2C fn\x2C name };\n  }\n\n  testDesc = { ...testDesc\x2C ...overrides };\n\n  // Delete this prop in case the user passed it. It's used to detect steps.\n  delete testDesc.parent;\n\n  if (cachedOrigin == undefined) {\n    cachedOrigin = op_test_get_origin();\n  }\n\n  testDesc.location = core.currentUserCallSite();\n  testDesc.fn = wrapTest(testDesc);\n  testDesc.name = escapeName(testDesc.name);\n\n  op_register_test(\n    testDesc.fn\x2C\n    testDesc.name\x2C\n    testDesc.ignore\x2C\n    testDesc.only\x2C\n    testDesc.sanitizeOps\x2C\n    testDesc.sanitizeResources\x2C\n    testDesc.location.fileName\x2C\n    testDesc.location.lineNumber\x2C\n    testDesc.location.columnNumber\x2C\n    registerTestIdRetBufU8\x2C\n  );\n  testDesc.id = registerTestIdRetBuf[0];\n  testDesc.origin = cachedOrigin;\n  MapPrototypeSet(testStates\x2C testDesc.id\x2C {\n    context: createTestContext(testDesc)\x2C\n    children: []\x2C\n    completed: false\x2C\n  });\n}\n\n// Main test function provided by Deno.\nfunction test(\n  nameOrFnOrOptions\x2C\n  optionsOrFn\x2C\n  maybeFn\x2C\n) {\n  return testInner(nameOrFnOrOptions\x2C optionsOrFn\x2C maybeFn);\n}\n\ntest.ignore = function (nameOrFnOrOptions\x2C optionsOrFn\x2C maybeFn) {\n  return testInner(nameOrFnOrOptions\x2C optionsOrFn\x2C maybeFn\x2C { ignore: true });\n};\n\ntest.only = function (\n  nameOrFnOrOptions\x2C\n  optionsOrFn\x2C\n  maybeFn\x2C\n) {\n  return testInner(nameOrFnOrOptions\x2C optionsOrFn\x2C maybeFn\x2C { only: true });\n};\n\nfunction getFullName(desc) {\n  if ("parent" in desc) {\n    return `${getFullName(desc.parent)} ... ${desc.name}`;\n  }\n  return desc.name;\n}\n\nfunction usesSanitizer(desc) {\n  return desc.sanitizeResources || desc.sanitizeOps || desc.sanitizeExit;\n}\n\nfunction stepReportResult(desc\x2C result\x2C elapsed) {\n  const state = MapPrototypeGet(testStates\x2C desc.id);\n  for (const childDesc of state.children) {\n    stepReportResult(childDesc\x2C { failed: "incomplete" }\x2C 0);\n  }\n  if (result === "ok") {\n    op_test_event_step_result_ok(desc.id\x2C elapsed);\n  } else if (result === "ignored") {\n    op_test_event_step_result_ignored(desc.id\x2C elapsed);\n  } else {\n    op_test_event_step_result_failed(desc.id\x2C result.failed\x2C elapsed);\n  }\n}\n\n/** @param desc {TestDescription | TestStepDescription} */\nfunction createTestContext(desc) {\n  let parent;\n  let level;\n  let rootId;\n  let rootName;\n  if ("parent" in desc) {\n    parent = MapPrototypeGet(testStates\x2C desc.parent.id).context;\n    level = desc.level;\n    rootId = desc.rootId;\n    rootName = desc.rootName;\n  } else {\n    parent = undefined;\n    level = 0;\n    rootId = desc.id;\n    rootName = desc.name;\n  }\n  return {\n    [SymbolToStringTag]: "TestContext"\x2C\n    /**\n     * The current test name.\n     */\n    name: desc.name\x2C\n    /**\n     * Parent test context.\n     */\n    parent\x2C\n    /**\n     * File Uri of the test code.\n     */\n    origin: desc.origin\x2C\n    /**\n     * @param nameOrFnOrOptions {string | TestStepDefinition | ((t: TestContext) => void | Promise<void>)}\n     * @param maybeFn {((t: TestContext) => void | Promise<void>) | undefined}\n     */\n    async step(nameOrFnOrOptions\x2C maybeFn) {\n      if (MapPrototypeGet(testStates\x2C desc.id).completed) {\n        throw new Error(\n          "Cannot run test step after parent scope has finished execution. " +\n            "Ensure any `.step(...)` calls are executed before their parent scope completes execution."\x2C\n        );\n      }\n\n      let stepDesc;\n      if (typeof nameOrFnOrOptions === "string") {\n        if (typeof maybeFn !== "function") {\n          throw new TypeError("Expected function for second argument.");\n        }\n        stepDesc = {\n          name: nameOrFnOrOptions\x2C\n          fn: maybeFn\x2C\n        };\n      } else if (typeof nameOrFnOrOptions === "function") {\n        if (!nameOrFnOrOptions.name) {\n          throw new TypeError("The step function must have a name.");\n        }\n        if (maybeFn != undefined) {\n          throw new TypeError(\n            "Unexpected second argument to TestContext.step()"\x2C\n          );\n        }\n        stepDesc = {\n          name: nameOrFnOrOptions.name\x2C\n          fn: nameOrFnOrOptions\x2C\n        };\n      } else if (typeof nameOrFnOrOptions === "object") {\n        stepDesc = nameOrFnOrOptions;\n      } else {\n        throw new TypeError(\n          "Expected a test definition or name and function."\x2C\n        );\n      }\n      stepDesc.ignore ??= false;\n      stepDesc.sanitizeOps ??= desc.sanitizeOps;\n      stepDesc.sanitizeResources ??= desc.sanitizeResources;\n      stepDesc.sanitizeExit ??= desc.sanitizeExit;\n      stepDesc.location = core.currentUserCallSite();\n      stepDesc.level = level + 1;\n      stepDesc.parent = desc;\n      stepDesc.rootId = rootId;\n      stepDesc.name = escapeName(stepDesc.name);\n      stepDesc.rootName = escapeName(rootName);\n      stepDesc.fn = wrapTest(stepDesc);\n      const id = op_register_test_step(\n        stepDesc.name\x2C\n        stepDesc.location.fileName\x2C\n        stepDesc.location.lineNumber\x2C\n        stepDesc.location.columnNumber\x2C\n        stepDesc.level\x2C\n        stepDesc.parent.id\x2C\n        stepDesc.rootId\x2C\n        stepDesc.rootName\x2C\n      );\n      stepDesc.id = id;\n      stepDesc.origin = desc.origin;\n      const state = {\n        context: createTestContext(stepDesc)\x2C\n        children: []\x2C\n        failed: false\x2C\n        completed: false\x2C\n      };\n      MapPrototypeSet(testStates\x2C stepDesc.id\x2C state);\n      ArrayPrototypePush(\n        MapPrototypeGet(testStates\x2C stepDesc.parent.id).children\x2C\n        stepDesc\x2C\n      );\n\n      op_test_event_step_wait(stepDesc.id);\n      const earlier = DateNow();\n      const result = await stepDesc.fn(stepDesc);\n      const elapsed = DateNow() - earlier;\n      state.failed = !!result.failed;\n      stepReportResult(stepDesc\x2C result\x2C elapsed);\n      return result == "ok";\n    }\x2C\n  };\n}\n\n/**\n * Wrap a user test function in one which returns a structured result.\n * @template T {Function}\n * @param testFn {T}\n * @param desc {TestDescription | TestStepDescription}\n * @returns {T}\n */\nfunction wrapTest(desc) {\n  let testFn = wrapInner(desc.fn);\n  if (desc.sanitizeExit) {\n    testFn = assertExit(testFn\x2C true);\n  }\n  if (!("parent" in desc) && desc.permissions) {\n    testFn = withPermissions(testFn\x2C desc.permissions);\n  }\n  return wrapOuter(testFn\x2C desc);\n}\n\nglobalThis.Deno.test = test;\n
code-source-info,0x2c370058107c,308,0,14465,C10O0C139O0C159O0C163O480C169O485C174O279C180O304C186O324C192O360C198O397C204O429C210O456C216O668C222O500C228O524C234O546C240O557C246O566C251O573C257O592C263O611C269O632C275O653C281O857C285O868C289O857C291O2149C293O2149C298O2149C300O5422C309O5422C314O5422C316O5473C323O5509C330O5473C335O5473C337O5632C338O5632C340O9317C344O9329C348O9467C352O9477C356O14436C360O14447C367O14457C376O14465,,
code-creation,Script,9,22578,0x2c3700581310,269, ext:cli/40_bench.js:1:1,0x2c370055eeb4,~
script-source,309,ext:cli/40_bench.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// deno-lint-ignore-file\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nimport {\n  escapeName\x2C\n  pledgePermissions\x2C\n  restorePermissions\x2C\n} from "ext:cli/40_test_common.js";\nimport { Console } from "ext:deno_console/01_console.js";\nimport { setExitHandler } from "ext:runtime/30_os.js";\nconst {\n  op_register_bench\x2C\n  op_bench_get_origin\x2C\n  op_dispatch_bench_event\x2C\n  op_bench_now\x2C\n} = core.ops;\nconst {\n  ArrayPrototypePush\x2C\n  Error\x2C\n  MathCeil\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\n/** @type {number | null} */\nlet currentBenchId = null;\n// These local variables are used to track time measurements at\n// `BenchContext::{start\x2Cend}` calls. They are global instead of using a state\n// map to minimise the overhead of assigning them.\n/** @type {number | null} */\nlet currentBenchUserExplicitStart = null;\n/** @type {number | null} */\nlet currentBenchUserExplicitEnd = null;\n\nlet registeredWarmupBench = false;\n\nconst registerBenchIdRetBuf = new Uint32Array(1);\nconst registerBenchIdRetBufU8 = new Uint8Array(registerBenchIdRetBuf.buffer);\n\n// As long as we're using one isolate per test\x2C we can cache the origin since it won't change\nlet cachedOrigin = undefined;\n\n// Main bench function provided by Deno.\nfunction bench(\n  nameOrFnOrOptions\x2C\n  optionsOrFn\x2C\n  maybeFn\x2C\n) {\n  // No-op if we're not running in `deno bench` subcommand.\n  if (typeof op_register_bench !== "function") {\n    return;\n  }\n\n  if (!registeredWarmupBench) {\n    registeredWarmupBench = true;\n    const warmupBenchDesc = {\n      name: "<warmup>"\x2C\n      fn: function warmup() {}\x2C\n      async: false\x2C\n      ignore: false\x2C\n      baseline: false\x2C\n      only: false\x2C\n      sanitizeExit: true\x2C\n      permissions: null\x2C\n      warmup: true\x2C\n    };\n    if (cachedOrigin == undefined) {\n      cachedOrigin = op_bench_get_origin();\n    }\n    warmupBenchDesc.fn = wrapBenchmark(warmupBenchDesc);\n    op_register_bench(\n      warmupBenchDesc.fn\x2C\n      warmupBenchDesc.name\x2C\n      warmupBenchDesc.baseline\x2C\n      warmupBenchDesc.group\x2C\n      warmupBenchDesc.ignore\x2C\n      warmupBenchDesc.only\x2C\n      warmupBenchDesc.warmup\x2C\n      registerBenchIdRetBufU8\x2C\n    );\n    warmupBenchDesc.id = registerBenchIdRetBufU8[0];\n    warmupBenchDesc.origin = cachedOrigin;\n  }\n\n  let benchDesc;\n  const defaults = {\n    ignore: false\x2C\n    baseline: false\x2C\n    only: false\x2C\n    sanitizeExit: true\x2C\n    permissions: null\x2C\n  };\n\n  if (typeof nameOrFnOrOptions === "string") {\n    if (!nameOrFnOrOptions) {\n      throw new TypeError("The bench name can't be empty");\n    }\n    if (typeof optionsOrFn === "function") {\n      benchDesc = { fn: optionsOrFn\x2C name: nameOrFnOrOptions\x2C ...defaults };\n    } else {\n      if (!maybeFn || typeof maybeFn !== "function") {\n        throw new TypeError("Missing bench function");\n      }\n      if (optionsOrFn.fn != undefined) {\n        throw new TypeError(\n          "Unexpected 'fn' field in options\x2C bench function is already provided as the third argument."\x2C\n        );\n      }\n      if (optionsOrFn.name != undefined) {\n        throw new TypeError(\n          "Unexpected 'name' field in options\x2C bench name is already provided as the first argument."\x2C\n        );\n      }\n      benchDesc = {\n        ...defaults\x2C\n        ...optionsOrFn\x2C\n        fn: maybeFn\x2C\n        name: nameOrFnOrOptions\x2C\n      };\n    }\n  } else if (typeof nameOrFnOrOptions === "function") {\n    if (!nameOrFnOrOptions.name) {\n      throw new TypeError("The bench function must have a name");\n    }\n    if (optionsOrFn != undefined) {\n      throw new TypeError("Unexpected second argument to Deno.bench()");\n    }\n    if (maybeFn != undefined) {\n      throw new TypeError("Unexpected third argument to Deno.bench()");\n    }\n    benchDesc = {\n      ...defaults\x2C\n      fn: nameOrFnOrOptions\x2C\n      name: nameOrFnOrOptions.name\x2C\n    };\n  } else {\n    let fn;\n    let name;\n    if (typeof optionsOrFn === "function") {\n      fn = optionsOrFn;\n      if (nameOrFnOrOptions.fn != undefined) {\n        throw new TypeError(\n          "Unexpected 'fn' field in options\x2C bench function is already provided as the second argument."\x2C\n        );\n      }\n      name = nameOrFnOrOptions.name ?? fn.name;\n    } else {\n      if (\n        !nameOrFnOrOptions.fn || typeof nameOrFnOrOptions.fn !== "function"\n      ) {\n        throw new TypeError(\n          "Expected 'fn' field in the first argument to be a bench function."\x2C\n        );\n      }\n      fn = nameOrFnOrOptions.fn;\n      name = nameOrFnOrOptions.name ?? fn.name;\n    }\n    if (!name) {\n      throw new TypeError("The bench name can't be empty");\n    }\n    benchDesc = { ...defaults\x2C ...nameOrFnOrOptions\x2C fn\x2C name };\n  }\n\n  const AsyncFunction = (async () => {}).constructor;\n  benchDesc.async = AsyncFunction === benchDesc.fn.constructor;\n  benchDesc.fn = wrapBenchmark(benchDesc);\n  benchDesc.warmup = false;\n  benchDesc.name = escapeName(benchDesc.name);\n  if (cachedOrigin == undefined) {\n    cachedOrigin = op_bench_get_origin();\n  }\n  op_register_bench(\n    benchDesc.fn\x2C\n    benchDesc.name\x2C\n    benchDesc.baseline\x2C\n    benchDesc.group\x2C\n    benchDesc.ignore\x2C\n    benchDesc.only\x2C\n    false\x2C\n    registerBenchIdRetBufU8\x2C\n  );\n  benchDesc.id = registerBenchIdRetBufU8[0];\n  benchDesc.origin = cachedOrigin;\n}\n\nfunction compareMeasurements(a\x2C b) {\n  if (a > b) return 1;\n  if (a < b) return -1;\n\n  return 0;\n}\n\nfunction benchStats(\n  n\x2C\n  highPrecision\x2C\n  usedExplicitTimers\x2C\n  avg\x2C\n  min\x2C\n  max\x2C\n  all\x2C\n) {\n  return {\n    n\x2C\n    min\x2C\n    max\x2C\n    p75: all[MathCeil(n * (75 / 100)) - 1]\x2C\n    p99: all[MathCeil(n * (99 / 100)) - 1]\x2C\n    p995: all[MathCeil(n * (99.5 / 100)) - 1]\x2C\n    p999: all[MathCeil(n * (99.9 / 100)) - 1]\x2C\n    avg: !highPrecision ? (avg / n) : MathCeil(avg / n)\x2C\n    highPrecision\x2C\n    usedExplicitTimers\x2C\n  };\n}\n\nasync function benchMeasure(timeBudget\x2C fn\x2C async\x2C context) {\n  let n = 0;\n  let avg = 0;\n  let wavg = 0;\n  let usedExplicitTimers = false;\n  const all = [];\n  let min = Infinity;\n  let max = -Infinity;\n  const lowPrecisionThresholdInNs = 1e4;\n\n  // warmup step\n  let c = 0;\n  let iterations = 20;\n  let budget = 10 * 1e6;\n\n  if (!async) {\n    while (budget > 0 || iterations-- > 0) {\n      const t1 = benchNow();\n      fn(context);\n      const t2 = benchNow();\n      const totalTime = t2 - t1;\n      if (currentBenchUserExplicitStart !== null) {\n        currentBenchUserExplicitStart = null;\n        usedExplicitTimers = true;\n      }\n      if (currentBenchUserExplicitEnd !== null) {\n        currentBenchUserExplicitEnd = null;\n        usedExplicitTimers = true;\n      }\n\n      c++;\n      wavg += totalTime;\n      budget -= totalTime;\n    }\n  } else {\n    while (budget > 0 || iterations-- > 0) {\n      const t1 = benchNow();\n      await fn(context);\n      const t2 = benchNow();\n      const totalTime = t2 - t1;\n      if (currentBenchUserExplicitStart !== null) {\n        currentBenchUserExplicitStart = null;\n        usedExplicitTimers = true;\n      }\n      if (currentBenchUserExplicitEnd !== null) {\n        currentBenchUserExplicitEnd = null;\n        usedExplicitTimers = true;\n      }\n\n      c++;\n      wavg += totalTime;\n      budget -= totalTime;\n    }\n  }\n\n  wavg /= c;\n\n  // measure step\n  if (wavg > lowPrecisionThresholdInNs) {\n    let iterations = 10;\n    let budget = timeBudget * 1e6;\n\n    if (!async) {\n      while (budget > 0 || iterations-- > 0) {\n        const t1 = benchNow();\n        fn(context);\n        const t2 = benchNow();\n        const totalTime = t2 - t1;\n        let measuredTime = totalTime;\n        if (currentBenchUserExplicitStart !== null) {\n          measuredTime -= currentBenchUserExplicitStart - t1;\n          currentBenchUserExplicitStart = null;\n        }\n        if (currentBenchUserExplicitEnd !== null) {\n          measuredTime -= t2 - currentBenchUserExplicitEnd;\n          currentBenchUserExplicitEnd = null;\n        }\n\n        n++;\n        avg += measuredTime;\n        budget -= totalTime;\n        ArrayPrototypePush(all\x2C measuredTime);\n        if (measuredTime < min) min = measuredTime;\n        if (measuredTime > max) max = measuredTime;\n      }\n    } else {\n      while (budget > 0 || iterations-- > 0) {\n        const t1 = benchNow();\n        await fn(context);\n        const t2 = benchNow();\n        const totalTime = t2 - t1;\n        let measuredTime = totalTime;\n        if (currentBenchUserExplicitStart !== null) {\n          measuredTime -= currentBenchUserExplicitStart - t1;\n          currentBenchUserExplicitStart = null;\n        }\n        if (currentBenchUserExplicitEnd !== null) {\n          measuredTime -= t2 - currentBenchUserExplicitEnd;\n          currentBenchUserExplicitEnd = null;\n        }\n\n        n++;\n        avg += measuredTime;\n        budget -= totalTime;\n        ArrayPrototypePush(all\x2C measuredTime);\n        if (measuredTime < min) min = measuredTime;\n        if (measuredTime > max) max = measuredTime;\n      }\n    }\n  } else {\n    context.start = function start() {};\n    context.end = function end() {};\n    let iterations = 10;\n    let budget = timeBudget * 1e6;\n\n    if (!async) {\n      while (budget > 0 || iterations-- > 0) {\n        const t1 = benchNow();\n        for (let c = 0; c < lowPrecisionThresholdInNs; c++) {\n          fn(context);\n        }\n        const iterationTime = (benchNow() - t1) / lowPrecisionThresholdInNs;\n\n        n++;\n        avg += iterationTime;\n        ArrayPrototypePush(all\x2C iterationTime);\n        if (iterationTime < min) min = iterationTime;\n        if (iterationTime > max) max = iterationTime;\n        budget -= iterationTime * lowPrecisionThresholdInNs;\n      }\n    } else {\n      while (budget > 0 || iterations-- > 0) {\n        const t1 = benchNow();\n        for (let c = 0; c < lowPrecisionThresholdInNs; c++) {\n          await fn(context);\n          currentBenchUserExplicitStart = null;\n          currentBenchUserExplicitEnd = null;\n        }\n        const iterationTime = (benchNow() - t1) / lowPrecisionThresholdInNs;\n\n        n++;\n        avg += iterationTime;\n        ArrayPrototypePush(all\x2C iterationTime);\n        if (iterationTime < min) min = iterationTime;\n        if (iterationTime > max) max = iterationTime;\n        budget -= iterationTime * lowPrecisionThresholdInNs;\n      }\n    }\n  }\n\n  all.sort(compareMeasurements);\n  return benchStats(\n    n\x2C\n    wavg > lowPrecisionThresholdInNs\x2C\n    usedExplicitTimers\x2C\n    avg\x2C\n    min\x2C\n    max\x2C\n    all\x2C\n  );\n}\n\n/** @param desc {BenchDescription} */\nfunction createBenchContext(desc) {\n  return {\n    [SymbolToStringTag]: "BenchContext"\x2C\n    name: desc.name\x2C\n    origin: desc.origin\x2C\n    start() {\n      if (currentBenchId !== desc.id) {\n        throw new TypeError(\n          "The benchmark which this context belongs to is not being executed."\x2C\n        );\n      }\n      if (currentBenchUserExplicitStart != null) {\n        throw new TypeError(\n          "BenchContext::start() has already been invoked."\x2C\n        );\n      }\n      currentBenchUserExplicitStart = benchNow();\n    }\x2C\n    end() {\n      const end = benchNow();\n      if (currentBenchId !== desc.id) {\n        throw new TypeError(\n          "The benchmark which this context belongs to is not being executed."\x2C\n        );\n      }\n      if (currentBenchUserExplicitEnd != null) {\n        throw new TypeError("BenchContext::end() has already been invoked.");\n      }\n      currentBenchUserExplicitEnd = end;\n    }\x2C\n  };\n}\n\n/** Wrap a user benchmark function in one which returns a structured result. */\nfunction wrapBenchmark(desc) {\n  const fn = desc.fn;\n  return async function outerWrapped() {\n    let token = null;\n    const originalConsole = globalThis.console;\n    currentBenchId = desc.id;\n\n    try {\n      globalThis.console = new Console((s) => {\n        op_dispatch_bench_event({ output: s });\n      });\n\n      if (desc.permissions) {\n        token = pledgePermissions(desc.permissions);\n      }\n\n      if (desc.sanitizeExit) {\n        setExitHandler((exitCode) => {\n          throw new Error(\n            `Bench attempted to exit with exit code: ${exitCode}`\x2C\n          );\n        });\n      }\n\n      const benchTimeInMs = 500;\n      const context = createBenchContext(desc);\n      const stats = await benchMeasure(\n        benchTimeInMs\x2C\n        fn\x2C\n        desc.async\x2C\n        context\x2C\n      );\n\n      return { ok: stats };\n    } catch (error) {\n      return { failed: core.destructureError(error) };\n    } finally {\n      globalThis.console = originalConsole;\n      currentBenchId = null;\n      currentBenchUserExplicitStart = null;\n      currentBenchUserExplicitEnd = null;\n      if (bench.sanitizeExit) setExitHandler(null);\n      if (token !== null) restorePermissions(token);\n    }\n  };\n}\n\nfunction benchNow() {\n  return op_bench_now();\n}\n\nglobalThis.Deno.bench = bench;\n
code-source-info,0x2c3700581310,309,0,12759,C10O0C104O0C124O0C128O468C134O473C139O379C145O400C151O423C157O450C163O567C169O488C175O510C181O519C187O531C193O552C199O631C200O631C202O896C203O896C205O965C206O965C208O1000C209O1000C211O1038C220O1038C226O1090C230O1127C237O1090C242O1090C244O1250C245O1250C247O12728C251O12739C259O12750C268O12759,,
code-creation,Script,9,23068,0x2c3700581548,313, ext:cli/40_jupyter.js:1:1,0x2c37005602e0,~
script-source,310,ext:cli/40_jupyter.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// deno-lint-ignore-file\n\n/*\n * @module mod\n * @description\n * This module provides a `display()` function for the Jupyter Deno Kernel\x2C similar to IPython's display.\n * It can be used to asynchronously display objects in Jupyter frontends. There are also tagged template functions\n * for quickly creating HTML\x2C Markdown\x2C and SVG views.\n *\n * @example\n * Displaying objects asynchronously in Jupyter frontends.\n * ```typescript\n * import { display\x2C html\x2C md } from "https://deno.land/x/deno_jupyter/mod.ts";\n *\n * await display(html`<h1>Hello\x2C world!</h1>`);\n * await display(md`# Notebooks in TypeScript via Deno ![Deno logo](https://github.com/denoland.png?size=32)\n *\n * * TypeScript ${Deno.version.typescript}\n * * V8 ${Deno.version.v8}\n * * Deno ${Deno.version.deno}\n *\n * Interactive compute with Jupyter _built into Deno_!\n * `);\n * ```\n *\n * @example\n * Emitting raw MIME bundles.\n * ```typescript\n * import { display } from "https://deno.land/x/deno_jupyter/mod.ts";\n *\n * await display({\n *  "text/plain": "Hello\x2C world!"\x2C\n *  "text/html": "<h1>Hello\x2C world!</h1>"\x2C\n *  "text/markdown": "# Hello\x2C world!"\x2C\n * }\x2C { raw: true });\n * ```\n */\nimport { core\x2C internals } from "ext:core/mod.js";\n\nconst $display = Symbol.for("Jupyter.display");\n\n/** Escape copied from https://jsr.io/@std/html/0.221.0/entities.ts */\nconst rawToEntityEntries = [\n  ["&"\x2C "&amp;"]\x2C\n  ["<"\x2C "&lt;"]\x2C\n  [">"\x2C "&gt;"]\x2C\n  ['"'\x2C "&quot;"]\x2C\n  ["'"\x2C "&#39;"]\x2C\n];\n\nconst rawToEntity = new Map(rawToEntityEntries);\n\nconst rawRe = new RegExp(`[${[...rawToEntity.keys()].join("")}]`\x2C "g");\n\nfunction escapeHTML(str) {\n  return str.replaceAll(\n    rawRe\x2C\n    (m) => rawToEntity.has(m) ? rawToEntity.get(m) : m\x2C\n  );\n}\n\n/** Duck typing our way to common visualization and tabular libraries */\n/** Vegalite */\nfunction isVegaLike(obj) {\n  return obj !== null && typeof obj === "object" && "toSpec" in obj;\n}\nfunction extractVega(obj) {\n  const spec = obj.toSpec();\n  if (!("$schema" in spec)) {\n    return null;\n  }\n  if (typeof spec !== "object") {\n    return null;\n  }\n  let mediaType = "application/vnd.vega.v5+json";\n  if (spec.$schema === "https://vega.github.io/schema/vega-lite/v4.json") {\n    mediaType = "application/vnd.vegalite.v4+json";\n  } else if (\n    spec.$schema === "https://vega.github.io/schema/vega-lite/v5.json"\n  ) {\n    mediaType = "application/vnd.vegalite.v5+json";\n  }\n  return {\n    [mediaType]: spec\x2C\n  };\n}\n/** Polars */\nfunction isDataFrameLike(obj) {\n  const isObject = obj !== null && typeof obj === "object";\n  if (!isObject) {\n    return false;\n  }\n  const df = obj;\n  return df.schema !== void 0 && typeof df.schema === "object" &&\n    df.head !== void 0 && typeof df.head === "function" &&\n    df.toRecords !== void 0 && typeof df.toRecords === "function";\n}\n/**\n * Map Polars DataType to JSON Schema data types.\n * @param dataType - The Polars DataType.\n * @returns The corresponding JSON Schema data type.\n */\nfunction mapPolarsTypeToJSONSchema(colType) {\n  const typeMapping = {\n    Null: "null"\x2C\n    Bool: "boolean"\x2C\n    Int8: "integer"\x2C\n    Int16: "integer"\x2C\n    Int32: "integer"\x2C\n    Int64: "integer"\x2C\n    UInt8: "integer"\x2C\n    UInt16: "integer"\x2C\n    UInt32: "integer"\x2C\n    UInt64: "integer"\x2C\n    Float32: "number"\x2C\n    Float64: "number"\x2C\n    Date: "string"\x2C\n    Datetime: "string"\x2C\n    Utf8: "string"\x2C\n    Categorical: "string"\x2C\n    List: "array"\x2C\n    Struct: "object"\x2C\n  };\n  // These colTypes are weird. When you console.dir or console.log them\n  // they show a `DataType` field\x2C however you can't access it directly until you\n  // convert it to JSON\n  const dataType = colType.toJSON()["DataType"];\n  return typeMapping[dataType] || "string";\n}\n\nfunction extractDataFrame(df) {\n  const fields = [];\n  const schema = {\n    fields\x2C\n  };\n  let data = [];\n  // Convert DataFrame schema to Tabular DataResource schema\n  for (const [colName\x2C colType] of Object.entries(df.schema)) {\n    const dataType = mapPolarsTypeToJSONSchema(colType);\n    schema.fields.push({\n      name: colName\x2C\n      type: dataType\x2C\n    });\n  }\n  // Convert DataFrame data to row-oriented JSON\n  //\n  // TODO(rgbkrk): Determine how to get the polars format max rows\n  //       Since pl.setTblRows just sets env var POLARS_FMT_MAX_ROWS\x2C\n  //       we probably just have to pick a number for now.\n  //\n\n  data = df.head(50).toRecords();\n  let htmlTable = "<table>";\n  htmlTable += "<thead><tr>";\n  schema.fields.forEach((field) => {\n    htmlTable += `<th>${escapeHTML(String(field.name))}</th>`;\n  });\n  htmlTable += "</tr></thead>";\n  htmlTable += "<tbody>";\n  df.head(10).toRecords().forEach((row) => {\n    htmlTable += "<tr>";\n    schema.fields.forEach((field) => {\n      htmlTable += `<td>${escapeHTML(String(row[field.name]))}</td>`;\n    });\n    htmlTable += "</tr>";\n  });\n  htmlTable += "</tbody></table>";\n  return {\n    "application/vnd.dataresource+json": { data\x2C schema }\x2C\n    "text/html": htmlTable\x2C\n  };\n}\n\n/** Canvas */\nfunction isCanvasLike(obj) {\n  return obj !== null && typeof obj === "object" && "toDataURL" in obj;\n}\n\n/** Possible HTML and SVG Elements */\nfunction isSVGElementLike(obj) {\n  return obj !== null && typeof obj === "object" && "outerHTML" in obj &&\n    typeof obj.outerHTML === "string" && obj.outerHTML.startsWith("<svg");\n}\n\nfunction isHTMLElementLike(obj) {\n  return obj !== null && typeof obj === "object" && "outerHTML" in obj &&\n    typeof obj.outerHTML === "string";\n}\n\n/** Check to see if an object already contains a `Symbol.for("Jupyter.display") */\nfunction hasDisplaySymbol(obj) {\n  return obj !== null && typeof obj === "object" && $display in obj &&\n    typeof obj[$display] === "function";\n}\n\nfunction makeDisplayable(obj) {\n  return {\n    [$display]: () => obj\x2C\n  };\n}\n\n/**\n * Format an object for displaying in Deno\n *\n * @param obj - The object to be displayed\n * @returns MediaBundle\n */\nasync function format(obj) {\n  if (hasDisplaySymbol(obj)) {\n    return await obj[$display]();\n  }\n  if (typeof obj !== "object") {\n    return {\n      "text/plain": Deno[Deno.internal].inspectArgs(["%o"\x2C obj]\x2C {\n        colors: !Deno.noColor\x2C\n      })\x2C\n    };\n  }\n\n  if (isCanvasLike(obj)) {\n    const dataURL = obj.toDataURL();\n    const parts = dataURL.split("\x2C");\n    const mime = parts[0].split(":")[1].split(";")[0];\n    const data = parts[1];\n    return {\n      [mime]: data\x2C\n    };\n  }\n  if (isVegaLike(obj)) {\n    return extractVega(obj);\n  }\n  if (isDataFrameLike(obj)) {\n    return extractDataFrame(obj);\n  }\n  if (isSVGElementLike(obj)) {\n    return {\n      "image/svg+xml": obj.outerHTML\x2C\n    };\n  }\n  if (isHTMLElementLike(obj)) {\n    return {\n      "text/html": obj.outerHTML\x2C\n    };\n  }\n  return {\n    "text/plain": Deno[Deno.internal].inspectArgs(["%o"\x2C obj]\x2C {\n      colors: !Deno.noColor\x2C\n    })\x2C\n  };\n}\n\n/**\n * This function creates a tagged template function for a given media type.\n * The tagged template function takes a template string and returns a displayable object.\n *\n * @param mediatype - The media type for the tagged template function.\n * @returns A function that takes a template string and returns a displayable object.\n */\nfunction createTaggedTemplateDisplayable(mediatype) {\n  return (strings\x2C ...values) => {\n    const payload = strings.reduce(\n      (acc\x2C string\x2C i) =>\n        acc + string + (values[i] !== undefined ? values[i] : "")\x2C\n      ""\x2C\n    );\n    return makeDisplayable({ [mediatype]: payload });\n  };\n}\n\n/**\n * Show Markdown in Jupyter frontends with a tagged template function.\n *\n * Takes a template string and returns a displayable object for Jupyter frontends.\n *\n * @example\n * Create a Markdown view.\n *\n * ```typescript\n * md`# Notebooks in TypeScript via Deno ![Deno logo](https://github.com/denoland.png?size=32)\n *\n * * TypeScript ${Deno.version.typescript}\n * * V8 ${Deno.version.v8}\n * * Deno ${Deno.version.deno}\n *\n * Interactive compute with Jupyter _built into Deno_!\n * `\n * ```\n */\nconst md = createTaggedTemplateDisplayable("text/markdown");\n\n/**\n * Show HTML in Jupyter frontends with a tagged template function.\n *\n * Takes a template string and returns a displayable object for Jupyter frontends.\n *\n * @example\n * Create an HTML view.\n * ```typescript\n * html`<h1>Hello\x2C world!</h1>`\n * ```\n */\nconst html = createTaggedTemplateDisplayable("text/html");\n/**\n * SVG Tagged Template Function.\n *\n * Takes a template string and returns a displayable object for Jupyter frontends.\n *\n * Example usage:\n *\n * svg`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">\n *      <circle cx="50" cy="50" r="40" stroke="green" stroke-width="4" fill="yellow" />\n *    </svg>`\n */\nconst svg = createTaggedTemplateDisplayable("image/svg+xml");\n\nfunction isMediaBundle(obj) {\n  if (obj == null || typeof obj !== "object" || Array.isArray(obj)) {\n    return false;\n  }\n  for (const key in obj) {\n    if (typeof key !== "string") {\n      return false;\n    }\n  }\n  return true;\n}\n\nasync function formatInner(obj\x2C raw) {\n  if (raw && isMediaBundle(obj)) {\n    return obj;\n  } else {\n    return await format(obj);\n  }\n}\n\ninternals.jupyter = { formatInner };\n\nfunction enableJupyter() {\n  const { op_jupyter_broadcast\x2C op_jupyter_input } = core.ops;\n\n  function input(\n    prompt\x2C\n    password\x2C\n  ) {\n    return op_jupyter_input(prompt\x2C password);\n  }\n\n  async function broadcast(\n    msgType\x2C\n    content\x2C\n    { metadata = { __proto__: null }\x2C buffers = [] } = { __proto__: null }\x2C\n  ) {\n    await op_jupyter_broadcast(msgType\x2C content\x2C metadata\x2C buffers);\n  }\n\n  async function broadcastResult(executionCount\x2C result) {\n    try {\n      if (result === undefined) {\n        return;\n      }\n\n      const data = await format(result);\n      await broadcast("execute_result"\x2C {\n        execution_count: executionCount\x2C\n        data\x2C\n        metadata: {}\x2C\n      });\n    } catch (err) {\n      if (err instanceof Error) {\n        const stack = err.stack || "";\n        await broadcast("error"\x2C {\n          ename: err.name\x2C\n          evalue: err.message\x2C\n          traceback: stack.split("\\n")\x2C\n        });\n      } else if (typeof err == "string") {\n        await broadcast("error"\x2C {\n          ename: "Error"\x2C\n          evalue: err\x2C\n          traceback: []\x2C\n        });\n      } else {\n        await broadcast("error"\x2C {\n          ename: "Error"\x2C\n          evalue:\n            "An error occurred while formatting a result\x2C but it could not be identified"\x2C\n          traceback: []\x2C\n        });\n      }\n    }\n  }\n\n  internals.jupyter.broadcastResult = broadcastResult;\n\n  /**\n   * Display function for Jupyter Deno Kernel.\n   * Mimics the behavior of IPython's `display(obj\x2C raw=True)` function to allow\n   * asynchronous displaying of objects in Jupyter.\n   *\n   * @param obj - The object to be displayed\n   * @param options - Display options\n   */\n  async function display(obj\x2C options = { raw: false\x2C update: false }) {\n    const bundle = await formatInner(obj\x2C options.raw);\n    let messageType = "display_data";\n    if (options.update) {\n      messageType = "update_display_data";\n    }\n    let transient = { __proto__: null };\n    if (options.display_id) {\n      transient = { display_id: options.display_id };\n    }\n    await broadcast(messageType\x2C {\n      data: bundle\x2C\n      metadata: {}\x2C\n      transient\x2C\n    });\n    return;\n  }\n\n  /**\n   * Prompt for user confirmation (in Jupyter Notebook context)\n   * Override confirm and prompt because they depend on a tty\n   * and in the Deno.jupyter environment that doesn't exist.\n   * @param {string} message - The message to display.\n   * @returns {Promise<boolean>} User confirmation.\n   */\n  function confirm(message = "Confirm") {\n    const answer = input(`${message} [y/N] `\x2C false);\n    return answer === "Y" || answer === "y";\n  }\n\n  /**\n   * Prompt for user input (in Jupyter Notebook context)\n   * @param {string} message - The message to display.\n   * @param {string} defaultValue - The value used if none is provided.\n   * @param {object} options Options\n   * @param {boolean} options.password Hide the output characters\n   * @returns {Promise<string>} The user input.\n   */\n  function prompt(\n    message = "Prompt"\x2C\n    defaultValue = ""\x2C\n    { password = false } = {}\x2C\n  ) {\n    if (defaultValue != "") {\n      message += ` [${defaultValue}]`;\n    }\n    const answer = input(`${message}`\x2C password);\n\n    if (answer === "") {\n      return defaultValue;\n    }\n\n    return answer;\n  }\n\n  globalThis.confirm = confirm;\n  globalThis.prompt = prompt;\n  globalThis.Deno.jupyter = {\n    broadcast\x2C\n    display\x2C\n    format\x2C\n    md\x2C\n    html\x2C\n    svg\x2C\n    $display\x2C\n  };\n}\n\ninternals.enableJupyter = enableJupyter;\n
code-source-info,0x2c3700581548,310,0,12624,C10O0C129O0C149O0C153O1292C157O1299C165O1302C170O1292C172O1422C177O1537C183O1537C188O1537C190O1581C200O1612C205O1612C209O1612C211O1620C219O1620C240O1581C245O1581C247O7961C250O7961C254O7961C256O8281C259O8281C263O8281C265O8662C268O8662C272O8662C274O9083C287O9105C293O9101C297O12583C303O12607C312O12624,,
tick,0x64950db1b330,23453,0,0x0,9
code-creation,JS,9,23471,0x2c3700581714,14,createTaggedTemplateDisplayable ext:cli/40_jupyter.js:260:41,0x2c3700560744,~
code-source-info,0x2c3700581714,310,7197,7452,C0O7197C9O7213C13O7450,,
code-creation,Script,9,23610,0x2c3700581798,163, file:///home/harm/git/gleam/test/performance/bench_rbt.js:1:1,0x2c3700561020,~
script-source,311,file:///home/harm/git/gleam/test/performance/bench_rbt.js,const treeFeature = Deno.args[0] === "true";\nconsole.log(`Using decision trees: ${treeFeature}`);\n\nconst qbaFeature = Deno.args[1] === "true";\nconsole.log(`Using qba: ${qbaFeature}`);\n\nDeno.bench("Matching RBTs"\x2C async (b) => {\n    const projectPath = "./test_rb_tree/";\n\n    try {\n        await Deno.remove("./test_rb_tree/build/"\x2C { recursive: true });\n    } catch (err) {\n        if (!(err instanceof Deno.errors.NotFound)) {\n            throw err;\n        }\n    }\n\n    const command = treeFeature ?\n        qbaFeature ?\n            new Deno.Command("cargo"\x2C {\n                args: ["run"\x2C "--features"\x2C "decisiontree\x2Cqba"\x2C "--"\x2C "build"\x2C "--target=js"]\x2C\n                cwd: projectPath\x2C\n            })\n            :\n            new Deno.Command("cargo"\x2C {\n                args: ["run"\x2C "--features"\x2C "decisiontree"\x2C "--"\x2C "build"\x2C "--target=js"]\x2C\n                cwd: projectPath\x2C\n            })\n        :\n        new Deno.Command("cargo"\x2C {\n            args: ["run"\x2C "--"\x2C "build"\x2C "--target=js"]\x2C\n            cwd: projectPath\x2C\n        });\n\n    const output = await command.output();\n    const { code } = output;\n\n    if (code !== 0) {\n        console.log(new TextDecoder().decode(output.stdout));\n        console.log(new TextDecoder().decode(output.stderr));\n        throw "failed to compile";\n    }\n\n    const jsPath = "./test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs";\n    const jsCode = await import(jsPath);\n    // const lol = [];\n    let huh;\n    b.start();\n    // for (let x = 0; x < 100; x++) {\n    // lol.push(jsCode.main());\n    // }\n    huh = jsCode.main();\n    b.end();\n    // const huh = lol[0];\n    // console.log(lol);\n    // console.log(huh);\n    // let list = huh;\n    // while (list.head) {\n    //     console.log(list.head);\n    //     list = list.tail;\n    // }\n    // console.log("====")\n});
code-source-info,0x2c3700581798,311,0,1837,C10O0C23O0C43O0C47O20C51O25C57O29C63O33C66O20C68O45C72O53C82O82C87O53C92O118C96O123C103O127C109O131C112O118C114O143C118O151C128O169C133O151C138O185C142O190C155O190C162O1837,,
code-creation,JS,9,23804,0x2c37005818b4,77,log ext:deno_console/01_console.js:3104:9,0x2c37001d4544,~
script-source,9,ext:deno_console/01_console.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n/// <reference path="../../core/internal.d.ts" />\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst {\n  isAnyArrayBuffer\x2C\n  isArgumentsObject\x2C\n  isArrayBuffer\x2C\n  isAsyncFunction\x2C\n  isBigIntObject\x2C\n  isBooleanObject\x2C\n  isBoxedPrimitive\x2C\n  isDataView\x2C\n  isDate\x2C\n  isGeneratorFunction\x2C\n  isMap\x2C\n  isMapIterator\x2C\n  isModuleNamespaceObject\x2C\n  isNativeError\x2C\n  isNumberObject\x2C\n  isPromise\x2C\n  isRegExp\x2C\n  isSet\x2C\n  isSetIterator\x2C\n  isStringObject\x2C\n  isTypedArray\x2C\n  isWeakMap\x2C\n  isWeakSet\x2C\n} = core;\nimport {\n  op_get_constructor_name\x2C\n  op_get_non_index_property_names\x2C\n  op_preview_entries\x2C\n} from "ext:core/ops";\nconst {\n  Array\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFill\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeFind\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePop\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeShift\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  BigIntPrototypeValueOf\x2C\n  Boolean\x2C\n  BooleanPrototypeValueOf\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  DatePrototypeToISOString\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototype\x2C\n  ErrorPrototypeToString\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  FunctionPrototypeToString\x2C\n  MapPrototypeDelete\x2C\n  MapPrototypeEntries\x2C\n  MapPrototypeForEach\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeGetSize\x2C\n  MapPrototypeHas\x2C\n  MapPrototypeSet\x2C\n  MathAbs\x2C\n  MathFloor\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathRound\x2C\n  MathSqrt\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  NumberPrototypeToString\x2C\n  NumberPrototypeValueOf\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectFromEntries\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectHasOwn\x2C\n  ObjectIs\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectPrototypePropertyIsEnumerable\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Proxy\x2C\n  ReflectGet\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectGetPrototypeOf\x2C\n  ReflectHas\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  RegExpPrototypeTest\x2C\n  RegExpPrototypeToString\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeMapIterator\x2C\n  SafeRegExp\x2C\n  SafeSet\x2C\n  SafeSetIterator\x2C\n  SafeStringIterator\x2C\n  SetPrototypeAdd\x2C\n  SetPrototypeGetSize\x2C\n  SetPrototypeHas\x2C\n  SetPrototypeValues\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypeNormalize\x2C\n  StringPrototypePadEnd\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  StringPrototypeValueOf\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolHasInstance\x2C\n  SymbolIterator\x2C\n  SymbolPrototypeGetDescription\x2C\n  SymbolPrototypeToString\x2C\n  SymbolPrototypeValueOf\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetLength\x2C\n  Uint8Array\x2C\n} = primordials;\n\nlet noColorStdout = () => false;\nlet noColorStderr = () => false;\n\nfunction setNoColorFns(stdoutFn\x2C stderrFn) {\n  noColorStdout = stdoutFn;\n  noColorStderr = stderrFn;\n}\n\nfunction getStdoutNoColor() {\n  return noColorStdout();\n}\n\nfunction getStderrNoColor() {\n  return noColorStderr();\n}\n\nclass AssertionError extends Error {\n  name = "AssertionError";\n  constructor(message) {\n    super(message);\n  }\n}\n\nfunction assert(cond\x2C msg = "Assertion failed.") {\n  if (!cond) {\n    throw new AssertionError(msg);\n  }\n}\n\n// Don't use 'blue' not visible on cmd.exe\nconst styles = {\n  special: "cyan"\x2C\n  number: "yellow"\x2C\n  bigint: "yellow"\x2C\n  boolean: "yellow"\x2C\n  undefined: "grey"\x2C\n  null: "bold"\x2C\n  string: "green"\x2C\n  symbol: "green"\x2C\n  date: "magenta"\x2C\n  // "name": intentionally not styling\n  // TODO(BridgeAR): Highlight regular expressions properly.\n  regexp: "red"\x2C\n  module: "underline"\x2C\n  internalError: "red"\x2C\n  temporal: "magenta"\x2C\n};\n\nconst defaultFG = 39;\nconst defaultBG = 49;\n\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n// Each color consists of an array with the color code as first entry and the\n// reset code as second entry.\nconst colors = {\n  reset: [0\x2C 0]\x2C\n  bold: [1\x2C 22]\x2C\n  dim: [2\x2C 22]\x2C // Alias: faint\n  italic: [3\x2C 23]\x2C\n  underline: [4\x2C 24]\x2C\n  blink: [5\x2C 25]\x2C\n  // Swap foreground and background colors\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\n  hidden: [8\x2C 28]\x2C // Alias: conceal\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\n  black: [30\x2C defaultFG]\x2C\n  red: [31\x2C defaultFG]\x2C\n  green: [32\x2C defaultFG]\x2C\n  yellow: [33\x2C defaultFG]\x2C\n  blue: [34\x2C defaultFG]\x2C\n  magenta: [35\x2C defaultFG]\x2C\n  cyan: [36\x2C defaultFG]\x2C\n  white: [37\x2C defaultFG]\x2C\n  bgBlack: [40\x2C defaultBG]\x2C\n  bgRed: [41\x2C defaultBG]\x2C\n  bgGreen: [42\x2C defaultBG]\x2C\n  bgYellow: [43\x2C defaultBG]\x2C\n  bgBlue: [44\x2C defaultBG]\x2C\n  bgMagenta: [45\x2C defaultBG]\x2C\n  bgCyan: [46\x2C defaultBG]\x2C\n  bgWhite: [47\x2C defaultBG]\x2C\n  framed: [51\x2C 54]\x2C\n  overlined: [53\x2C 55]\x2C\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\n  redBright: [91\x2C defaultFG]\x2C\n  greenBright: [92\x2C defaultFG]\x2C\n  yellowBright: [93\x2C defaultFG]\x2C\n  blueBright: [94\x2C defaultFG]\x2C\n  magentaBright: [95\x2C defaultFG]\x2C\n  cyanBright: [96\x2C defaultFG]\x2C\n  whiteBright: [97\x2C defaultFG]\x2C\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\n  bgRedBright: [101\x2C defaultBG]\x2C\n  bgGreenBright: [102\x2C defaultBG]\x2C\n  bgYellowBright: [103\x2C defaultBG]\x2C\n  bgBlueBright: [104\x2C defaultBG]\x2C\n  bgMagentaBright: [105\x2C defaultBG]\x2C\n  bgCyanBright: [106\x2C defaultBG]\x2C\n  bgWhiteBright: [107\x2C defaultBG]\x2C\n};\n\nfunction defineColorAlias(target\x2C alias) {\n  ObjectDefineProperty(colors\x2C alias\x2C {\n    get() {\n      return this[target];\n    }\x2C\n    set(value) {\n      this[target] = value;\n    }\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n}\n\ndefineColorAlias("gray"\x2C "grey");\ndefineColorAlias("gray"\x2C "blackBright");\ndefineColorAlias("bgGray"\x2C "bgGrey");\ndefineColorAlias("bgGray"\x2C "bgBlackBright");\ndefineColorAlias("dim"\x2C "faint");\ndefineColorAlias("strikethrough"\x2C "crossedout");\ndefineColorAlias("strikethrough"\x2C "strikeThrough");\ndefineColorAlias("strikethrough"\x2C "crossedOut");\ndefineColorAlias("hidden"\x2C "conceal");\ndefineColorAlias("inverse"\x2C "swapColors");\ndefineColorAlias("inverse"\x2C "swapcolors");\ndefineColorAlias("doubleunderline"\x2C "doubleUnderline");\n\n// https://tc39.es/ecma262/#sec-get-sharedarraybuffer.prototype.bytelength\nlet _getSharedArrayBufferByteLength;\n\nfunction getSharedArrayBufferByteLength(value) {\n  // TODO(kt3k): add SharedArrayBuffer to primordials\n  _getSharedArrayBufferByteLength ??= ObjectGetOwnPropertyDescriptor(\n    // deno-lint-ignore prefer-primordials\n    SharedArrayBuffer.prototype\x2C\n    "byteLength"\x2C\n  ).get;\n\n  return FunctionPrototypeCall(_getSharedArrayBufferByteLength\x2C value);\n}\n\n// The name property is used to allow cross realms to make a determination\n// This is the same as WHATWG's structuredClone algorithm\n// https://github.com/whatwg/html/pull/5150\nfunction isAggregateError(value) {\n  return (\n    isNativeError(value) &&\n    value.name === "AggregateError" &&\n    ArrayIsArray(value.errors)\n  );\n}\n\nconst kObjectType = 0;\nconst kArrayType = 1;\nconst kArrayExtrasType = 2;\n\nconst kMinLineLength = 16;\n\n// Constants to map the iterator state.\nconst kWeak = 0;\nconst kIterator = 1;\nconst kMapEntries = 2;\n\n// Escaped control characters (plus the single quote and the backslash). Use\n// empty strings to fill up unused entries.\n// deno-fmt-ignore\nconst meta = [\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\n];\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nconst isUndetectableObject = (v) => typeof v === "undefined" && v !== undefined;\n\nconst strEscapeSequencesReplacer = new SafeRegExp(\n  "[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]"\x2C\n  "g"\x2C\n);\n\nconst keyStrRegExp = new SafeRegExp("^[a-zA-Z_][a-zA-Z_0-9]*$");\nconst numberRegExp = new SafeRegExp("^(0|[1-9][0-9]*)$");\n\n// TODO(wafuwafu13): Figure out\nconst escapeFn = (str) => meta[StringPrototypeCharCodeAt(str\x2C 0)];\n\nfunction stylizeNoColor(str) {\n  return str;\n}\n\n// node custom inspect symbol\nconst nodeCustomInspectSymbol = SymbolFor("nodejs.util.inspect.custom");\n\n// This non-unique symbol is used to support op_crates\x2C ie.\n// in extensions/web we don't want to depend on public\n// Symbol.for("Deno.customInspect") symbol defined in the public API.\n// Internal only\x2C shouldn't be used by users.\nconst privateCustomInspect = SymbolFor("Deno.privateCustomInspect");\n\nfunction getUserOptions(ctx\x2C isCrossContext) {\n  const ret = {\n    stylize: ctx.stylize\x2C\n    showHidden: ctx.showHidden\x2C\n    depth: ctx.depth\x2C\n    colors: ctx.colors\x2C\n    customInspect: ctx.customInspect\x2C\n    showProxy: ctx.showProxy\x2C\n    maxArrayLength: ctx.maxArrayLength\x2C\n    maxStringLength: ctx.maxStringLength\x2C\n    breakLength: ctx.breakLength\x2C\n    compact: ctx.compact\x2C\n    sorted: ctx.sorted\x2C\n    getters: ctx.getters\x2C\n    numericSeparator: ctx.numericSeparator\x2C\n    ...ctx.userOptions\x2C\n  };\n\n  // Typically\x2C the target value will be an instance of `Object`. If that is\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\n  // to avoid passing it objects from this Context in that case\x2C so we remove\n  // the prototype from the returned object itself + the `stylize()` function\x2C\n  // and remove all other non-primitives\x2C including non-primitive user options.\n  if (isCrossContext) {\n    ObjectSetPrototypeOf(ret\x2C null);\n    for (const key of new SafeArrayIterator(ObjectKeys(ret))) {\n      if (\n        (typeof ret[key] === "object" || typeof ret[key] === "function") &&\n        ret[key] !== null\n      ) {\n        delete ret[key];\n      }\n    }\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\n      let stylized;\n      try {\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (typeof stylized !== "string") return value;\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\n      return stylized;\n    }\x2C null);\n  }\n\n  return ret;\n}\n\n// Note: using `formatValue` directly requires the indentation level to be\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\n// value afterwards again.\nfunction formatValue(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  typedArray\x2C\n) {\n  // Primitive types cannot have properties.\n  if (\n    typeof value !== "object" &&\n    typeof value !== "function" &&\n    !isUndetectableObject(value)\n  ) {\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\n  }\n  if (value === null) {\n    return ctx.stylize("null"\x2C "null");\n  }\n\n  // Memorize the context for custom inspection on proxies.\n  const context = value;\n  // Always check for proxies to prevent side effects and to prevent triggering\n  // any proxy handlers.\n  // TODO(wafuwafu13): Set Proxy\n  const proxyDetails = core.getProxyDetails(value);\n  // const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\n  // if (proxy !== undefined) {\n  //   if (ctx.showProxy) {\n  //     return formatProxy(ctx\x2C proxy\x2C recurseTimes);\n  //   }\n  //   value = proxy;\n  // }\n\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it.\n  if (ctx.customInspect) {\n    if (\n      ReflectHas(value\x2C customInspect) &&\n      typeof value[customInspect] === "function"\n    ) {\n      return String(value[customInspect](inspect\x2C ctx));\n    } else if (\n      ReflectHas(value\x2C privateCustomInspect) &&\n      typeof value[privateCustomInspect] === "function"\n    ) {\n      // TODO(nayeemrmn): `inspect` is passed as an argument because custom\n      // inspect implementations in `extensions` need it\x2C but may not have access\n      // to the `Deno` namespace in web workers. Remove when the `Deno`\n      // namespace is always enabled.\n      return String(value[privateCustomInspect](inspect\x2C ctx));\n    } else if (ReflectHas(value\x2C nodeCustomInspectSymbol)) {\n      const maybeCustom = value[nodeCustomInspectSymbol];\n      if (\n        typeof maybeCustom === "function" &&\n        // Filter out the util module\x2C its inspect function is special.\n        maybeCustom !== ctx.inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)\n      ) {\n        // This makes sure the recurseTimes are reported as before while using\n        // a counter internally.\n        const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\n        // TODO(@crowlKats): proxy handling\n        const isCrossContext = !ObjectPrototypeIsPrototypeOf(\n          ObjectPrototype\x2C\n          context\x2C\n        );\n        const ret = FunctionPrototypeCall(\n          maybeCustom\x2C\n          context\x2C\n          depth\x2C\n          getUserOptions(ctx\x2C isCrossContext)\x2C\n          ctx.inspect\x2C\n        );\n        // If the custom inspection method returned `this`\x2C don't go into\n        // infinite recursion.\n        if (ret !== context) {\n          if (typeof ret !== "string") {\n            return formatValue(ctx\x2C ret\x2C recurseTimes);\n          }\n          return StringPrototypeReplaceAll(\n            ret\x2C\n            "\\n"\x2C\n            `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`\x2C\n          );\n        }\n      }\n    }\n  }\n\n  // Using an array here is actually better for the average case than using\n  // a Set. `seen` will only check for the depth and will never grow too large.\n  if (ArrayPrototypeIncludes(ctx.seen\x2C value)) {\n    let index = 1;\n    if (ctx.circular === undefined) {\n      ctx.circular = new SafeMap();\n      MapPrototypeSet(ctx.circular\x2C value\x2C index);\n    } else {\n      index = ctx.circular.get(value);\n      if (index === undefined) {\n        index = ctx.circular.size + 1;\n        MapPrototypeSet(ctx.circular\x2C value\x2C index);\n      }\n    }\n    return ctx.stylize(`[Circular *${index}]`\x2C "special");\n  }\n\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray\x2C proxyDetails);\n}\n\nfunction getClassBase(value\x2C constructor\x2C tag) {\n  const hasName = ObjectHasOwn(value\x2C "name");\n  const name = (hasName && value.name) || "(anonymous)";\n  let base = `class ${name}`;\n  if (constructor !== "Function" && constructor !== null) {\n    base += ` [${constructor}]`;\n  }\n  if (tag !== "" && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  if (constructor !== null) {\n    const superName = ObjectGetPrototypeOf(value).name;\n    if (superName) {\n      base += ` extends ${superName}`;\n    }\n  } else {\n    base += " extends [null prototype]";\n  }\n  return `[${base}]`;\n}\n\nconst stripCommentsRegExp = new SafeRegExp(\n  "(\\\\/\\\\/.*?\\\\n)|(\\\\/\\\\*(.|\\\\n)*?\\\\*\\\\/)"\x2C\n  "g"\x2C\n);\nconst classRegExp = new SafeRegExp("^(\\\\s+[^(]*?)\\\\s*{");\n\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\n  const stringified = FunctionPrototypeToString(value);\n  if (\n    StringPrototypeStartsWith(stringified\x2C "class") &&\n    StringPrototypeEndsWith(stringified\x2C "}")\n  ) {\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C "{");\n    if (\n      bracketIndex !== -1 &&\n      (!StringPrototypeIncludes(\n        StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C\n        "("\x2C\n      ) ||\n        // Slow path to guarantee that it's indeed a class.\n        RegExpPrototypeExec(\n            classRegExp\x2C\n            RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)\x2C\n          ) !== null)\n    ) {\n      return getClassBase(value\x2C constructor\x2C tag);\n    }\n  }\n  let type = "Function";\n  if (isGeneratorFunction(value)) {\n    type = `Generator${type}`;\n  }\n  if (isAsyncFunction(value)) {\n    type = `Async${type}`;\n  }\n  let base = `[${type}`;\n  if (constructor === null) {\n    base += " (null prototype)";\n  }\n  if (value.name === "") {\n    base += " (anonymous)";\n  } else {\n    base += `: ${value.name}`;\n  }\n  base += "]";\n  if (constructor !== type && constructor !== null) {\n    base += ` ${constructor}`;\n  }\n  if (tag !== "" && constructor !== tag) {\n    base += ` [${tag}]`;\n  }\n  return base;\n}\n\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray\x2C proxyDetails) {\n  let keys;\n  let protoProps;\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\n    protoProps = [];\n  }\n\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\n  // Reset the variable to check for this later on.\n  if (protoProps !== undefined && protoProps.length === 0) {\n    protoProps = undefined;\n  }\n\n  let tag = value[SymbolToStringTag];\n  // Only list the tag in case it's non-enumerable / not an own property.\n  // Otherwise we'd print this twice.\n  if (\n    typeof tag !== "string"\n    // TODO(wafuwafu13): Implement\n    // (tag !== "" &&\n    //   (ctx.showHidden\n    //     ? Object.prototype.hasOwnProperty\n    //     : Object.prototype.propertyIsEnumerable)(\n    //       value\x2C\n    //       Symbol.toStringTag\x2C\n    //     ))\n  ) {\n    tag = "";\n  }\n  let base = "";\n  let formatter = () => [];\n  let braces;\n  let noIterator = true;\n  let i = 0;\n  const filter = ctx.showHidden ? 0 : 2;\n\n  let extrasType = kObjectType;\n\n  if (proxyDetails !== null && ctx.showProxy) {\n    return `Proxy ` + formatValue(ctx\x2C proxyDetails\x2C recurseTimes);\n  } else {\n    // Iterators and the rest are split to reduce checks.\n    // We have to check all values in case the constructor is set to null.\n    // Otherwise it would not possible to identify all types properly.\n    if (ReflectHas(value\x2C SymbolIterator) || constructor === null) {\n      noIterator = false;\n      if (ArrayIsArray(value)) {\n        // Only set the constructor for non ordinary ("Array [...]") arrays.\n        const prefix = (constructor !== "Array" || tag !== "")\n          ? getPrefix(constructor\x2C tag\x2C "Array"\x2C `(${value.length})`)\n          : "";\n        keys = op_get_non_index_property_names(value\x2C filter);\n        braces = [`${prefix}[`\x2C "]"];\n        if (\n          value.length === 0 && keys.length === 0 && protoProps === undefined\n        ) {\n          return `${braces[0]}]`;\n        }\n        extrasType = kArrayExtrasType;\n        formatter = formatArray;\n      } else if (\n        (proxyDetails === null && isSet(value)) ||\n        (proxyDetails !== null && isSet(proxyDetails[0]))\n      ) {\n        const set = proxyDetails?.[0] ?? value;\n        const size = SetPrototypeGetSize(set);\n        const prefix = getPrefix(constructor\x2C tag\x2C "Set"\x2C `(${size})`);\n        keys = getKeys(set\x2C ctx.showHidden);\n        formatter = constructor !== null\n          ? FunctionPrototypeBind(formatSet\x2C null\x2C set)\n          : FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(set));\n        if (size === 0 && keys.length === 0 && protoProps === undefined) {\n          return `${prefix}{}`;\n        }\n        braces = [`${prefix}{`\x2C "}"];\n      } else if (\n        (proxyDetails === null && isMap(value)) ||\n        (proxyDetails !== null && isMap(proxyDetails[0]))\n      ) {\n        const map = proxyDetails?.[0] ?? value;\n        const size = MapPrototypeGetSize(map);\n        const prefix = getPrefix(constructor\x2C tag\x2C "Map"\x2C `(${size})`);\n        keys = getKeys(map\x2C ctx.showHidden);\n        formatter = constructor !== null\n          ? FunctionPrototypeBind(formatMap\x2C null\x2C map)\n          : FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(map));\n        if (size === 0 && keys.length === 0 && protoProps === undefined) {\n          return `${prefix}{}`;\n        }\n        braces = [`${prefix}{`\x2C "}"];\n      } else if (\n        (proxyDetails === null && isTypedArray(value)) ||\n        (proxyDetails !== null && isTypedArray(proxyDetails[0]))\n      ) {\n        const typedArray = proxyDetails?.[0] ?? value;\n        keys = op_get_non_index_property_names(typedArray\x2C filter);\n        const bound = typedArray;\n        const fallback = "";\n        if (constructor === null) {\n          // TODO(wafuwafu13): Implement\n          // fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\n          // // Reconstruct the array information.\n          // bound = new primordials[fallback](value);\n        }\n        const size = TypedArrayPrototypeGetLength(typedArray);\n        const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\n        braces = [`${prefix}[`\x2C "]"];\n        if (typedArray.length === 0 && keys.length === 0 && !ctx.showHidden) {\n          return `${braces[0]}]`;\n        }\n        // Special handle the value. The original value is required below. The\n        // bound function is required to reconstruct missing information.\n        formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\n        extrasType = kArrayExtrasType;\n      } else if (\n        (proxyDetails === null && isMapIterator(value)) ||\n        (proxyDetails !== null && isMapIterator(proxyDetails[0]))\n      ) {\n        const mapIterator = proxyDetails?.[0] ?? value;\n        keys = getKeys(mapIterator\x2C ctx.showHidden);\n        braces = getIteratorBraces("Map"\x2C tag);\n        // Add braces to the formatter parameters.\n        formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n      } else if (\n        (proxyDetails === null && isSetIterator(value)) ||\n        (proxyDetails !== null && isSetIterator(proxyDetails[0]))\n      ) {\n        const setIterator = proxyDetails?.[0] ?? value;\n        keys = getKeys(setIterator\x2C ctx.showHidden);\n        braces = getIteratorBraces("Set"\x2C tag);\n        // Add braces to the formatter parameters.\n        formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\n      } else {\n        noIterator = true;\n      }\n    }\n    if (noIterator) {\n      keys = getKeys(value\x2C ctx.showHidden);\n      braces = ["{"\x2C "}"];\n      if (constructor === "Object") {\n        if (isArgumentsObject(value)) {\n          braces[0] = "[Arguments] {";\n        } else if (tag !== "") {\n          braces[0] = `${getPrefix(constructor\x2C tag\x2C "Object")}{`;\n        }\n        if (keys.length === 0 && protoProps === undefined) {\n          return `${braces[0]}}`;\n        }\n      } else if (typeof value === "function") {\n        base = getFunctionBase(value\x2C constructor\x2C tag);\n        if (keys.length === 0 && protoProps === undefined) {\n          return ctx.stylize(base\x2C "special");\n        }\n      } else if (\n        (proxyDetails === null && isRegExp(value)) ||\n        (proxyDetails !== null && isRegExp(proxyDetails[0]))\n      ) {\n        const regExp = proxyDetails?.[0] ?? value;\n        // Make RegExps say that they are RegExps\n        base = RegExpPrototypeToString(\n          constructor !== null ? regExp : new SafeRegExp(regExp)\x2C\n        );\n        const prefix = getPrefix(constructor\x2C tag\x2C "RegExp");\n        if (prefix !== "RegExp ") {\n          base = `${prefix}${base}`;\n        }\n        if (\n          (keys.length === 0 && protoProps === undefined) ||\n          (recurseTimes > ctx.depth && ctx.depth !== null)\n        ) {\n          return ctx.stylize(base\x2C "regexp");\n        }\n      } else if (\n        (proxyDetails === null && isDate(value)) ||\n        (proxyDetails !== null && isDate(proxyDetails[0]))\n      ) {\n        const date = proxyDetails?.[0] ?? value;\n        if (NumberIsNaN(DatePrototypeGetTime(date))) {\n          return ctx.stylize("Invalid Date"\x2C "date");\n        } else {\n          base = DatePrototypeToISOString(date);\n          if (keys.length === 0 && protoProps === undefined) {\n            return ctx.stylize(base\x2C "date");\n          }\n        }\n      } else if (\n        proxyDetails === null &&\n        typeof globalThis.Temporal !== "undefined" &&\n        (\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Instant.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.ZonedDateTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainDate.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainDateTime.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainYearMonth.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.PlainMonthDay.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Duration.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.TimeZone.prototype\x2C\n            value\x2C\n          ) ||\n          ObjectPrototypeIsPrototypeOf(\n            globalThis.Temporal.Calendar.prototype\x2C\n            value\x2C\n          )\n        )\n      ) {\n        // Temporal is not available in primordials yet\n        // deno-lint-ignore prefer-primordials\n        return ctx.stylize(value.toString()\x2C "temporal");\n      } else if (\n        (proxyDetails === null &&\n          (isNativeError(value) ||\n            ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C value))) ||\n        (proxyDetails !== null &&\n          (isNativeError(proxyDetails[0]) ||\n            ObjectPrototypeIsPrototypeOf(ErrorPrototype\x2C proxyDetails[0])))\n      ) {\n        const error = proxyDetails?.[0] ?? value;\n        base = inspectError(error\x2C ctx);\n        if (keys.length === 0 && protoProps === undefined) {\n          return base;\n        }\n      } else if (isAnyArrayBuffer(value)) {\n        // Fast path for ArrayBuffer and SharedArrayBuffer.\n        // Can't do the same for DataView because it has a non-primitive\n        // .buffer property that we need to recurse for.\n        const arrayType = isArrayBuffer(value)\n          ? "ArrayBuffer"\n          : "SharedArrayBuffer";\n\n        const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\n        if (typedArray === undefined) {\n          formatter = formatArrayBuffer;\n        } else if (keys.length === 0 && protoProps === undefined) {\n          return prefix +\n            `{ byteLength: ${\n              formatNumber(ctx.stylize\x2C TypedArrayPrototypeGetByteLength(value))\n            } }`;\n        }\n        braces[0] = `${prefix}{`;\n        ArrayPrototypeUnshift(keys\x2C "byteLength");\n      } else if (isDataView(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "DataView")}{`;\n        // .buffer goes last\x2C it's not a primitive like the others.\n        ArrayPrototypeUnshift(keys\x2C "byteLength"\x2C "byteOffset"\x2C "buffer");\n      } else if (isPromise(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "Promise")}{`;\n        formatter = formatPromise;\n      } else if (isWeakSet(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "WeakSet")}{`;\n        formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\n      } else if (isWeakMap(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "WeakMap")}{`;\n        formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\n      } else if (isModuleNamespaceObject(value)) {\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C "Module")}{`;\n        // Special handle keys for namespace objects.\n        formatter = FunctionPrototypeBind(formatNamespaceObject\x2C null\x2C keys);\n      } else if (isBoxedPrimitive(value)) {\n        base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\n        if (keys.length === 0 && protoProps === undefined) {\n          return base;\n        }\n      } else {\n        if (keys.length === 0 && protoProps === undefined) {\n          // TODO(wafuwafu13): Implement\n          // if (isExternal(value)) {\n          //   const address = getExternalValue(value).toString(16);\n          //   return ctx.stylize(`[External: ${address}]`\x2C 'special');\n          // }\n          return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\n        }\n        braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\n      }\n    }\n  }\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    let constructorName = StringPrototypeSlice(\n      getCtxStyle(value\x2C constructor\x2C tag)\x2C\n      0\x2C\n      -1\x2C\n    );\n    if (constructor !== null) {\n      constructorName = `[${constructorName}]`;\n    }\n    return ctx.stylize(constructorName\x2C "special");\n  }\n  recurseTimes += 1;\n\n  ArrayPrototypePush(ctx.seen\x2C value);\n  ctx.currentDepth = recurseTimes;\n  let output;\n  try {\n    output = formatter(ctx\x2C value\x2C recurseTimes);\n    for (i = 0; i < keys.length; i++) {\n      ArrayPrototypePush(\n        output\x2C\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\n      );\n    }\n    if (protoProps !== undefined) {\n      ArrayPrototypePushApply(output\x2C protoProps);\n    }\n  } catch (error) {\n    // TODO(wafuwafu13): Implement stack overflow check\n    return ctx.stylize(\n      `[Internal Formatting Error] ${error.stack}`\x2C\n      "internalError"\x2C\n    );\n  }\n\n  if (ctx.circular !== undefined) {\n    const index = ctx.circular.get(value);\n    if (index !== undefined) {\n      const reference = ctx.stylize(`<ref *${index}>`\x2C "special");\n      // Add reference always to the very beginning of the output.\n      if (ctx.compact !== true) {\n        base = base === "" ? reference : `${reference} ${base}`;\n      } else {\n        braces[0] = `${reference} ${braces[0]}`;\n      }\n    }\n  }\n  ArrayPrototypePop(ctx.seen);\n\n  if (ctx.sorted) {\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\n    if (extrasType === kObjectType) {\n      output = ArrayPrototypeSort(output\x2C comparator);\n    } else if (keys.length > 1) {\n      const sorted = ArrayPrototypeSort(\n        ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C\n        comparator\x2C\n      );\n      ArrayPrototypeSplice(\n        output\x2C\n        output.length - keys.length\x2C\n        keys.length\x2C\n        ...new SafeArrayIterator(sorted)\x2C\n      );\n    }\n  }\n\n  const res = reduceToSingleString(\n    ctx\x2C\n    output\x2C\n    base\x2C\n    braces\x2C\n    extrasType\x2C\n    recurseTimes\x2C\n    value\x2C\n  );\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\n  const newLength = budget + res.length;\n  ctx.budget[ctx.indentationLvl] = newLength;\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\n  // This limit also makes sure that huge objects don't block the event loop\n  // significantly.\n  if (newLength > 2 ** 27) {\n    ctx.depth = -1;\n  }\n  return res;\n}\n\nconst builtInObjectsRegExp = new SafeRegExp("^[A-Z][a-zA-Z0-9]+$");\nconst builtInObjects = new SafeSet(\n  ArrayPrototypeFilter(\n    ObjectGetOwnPropertyNames(globalThis)\x2C\n    (e) => RegExpPrototypeTest(builtInObjectsRegExp\x2C e)\x2C\n  )\x2C\n);\n\nfunction addPrototypeProperties(\n  ctx\x2C\n  main\x2C\n  obj\x2C\n  recurseTimes\x2C\n  output\x2C\n) {\n  let depth = 0;\n  let keys;\n  let keySet;\n  do {\n    if (depth !== 0 || main === obj) {\n      obj = ObjectGetPrototypeOf(obj);\n      // Stop as soon as a null prototype is encountered.\n      if (obj === null) {\n        return;\n      }\n      // Stop as soon as a built-in object type is detected.\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C "constructor");\n      if (\n        descriptor !== undefined &&\n        typeof descriptor.value === "function" &&\n        SetPrototypeHas(builtInObjects\x2C descriptor.value.name)\n      ) {\n        return;\n      }\n    }\n\n    if (depth === 0) {\n      keySet = new SafeSet();\n    } else {\n      ArrayPrototypeForEach(keys\x2C (key) => SetPrototypeAdd(keySet\x2C key));\n    }\n    // Get all own property names and symbols.\n    keys = ReflectOwnKeys(obj);\n    ArrayPrototypePush(ctx.seen\x2C main);\n    for (const key of new SafeArrayIterator(keys)) {\n      // Ignore the `constructor` property and keys that exist on layers above.\n      if (\n        key === "constructor" ||\n        ObjectHasOwn(main\x2C key) ||\n        (depth !== 0 && SetPrototypeHas(keySet\x2C key))\n      ) {\n        continue;\n      }\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\n      if (typeof desc.value === "function") {\n        continue;\n      }\n      const value = formatProperty(\n        ctx\x2C\n        obj\x2C\n        recurseTimes\x2C\n        key\x2C\n        kObjectType\x2C\n        desc\x2C\n        main\x2C\n      );\n      if (ctx.colors) {\n        // Faint!\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\n      } else {\n        ArrayPrototypePush(output\x2C value);\n      }\n    }\n    ArrayPrototypePop(ctx.seen);\n    // Limit the inspection to up to three prototype layers. Using `recurseTimes`\n    // is not a good choice here\x2C because it's as if the properties are declared\n    // on the current object from the users perspective.\n  } while (++depth !== 3);\n}\n\nfunction isInstanceof(proto\x2C object) {\n  try {\n    return ObjectPrototypeIsPrototypeOf(proto\x2C object);\n  } catch {\n    return false;\n  }\n}\n\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\n  let firstProto;\n  const tmp = obj;\n  while (obj || isUndetectableObject(obj)) {\n    let descriptor;\n    try {\n      descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C "constructor");\n    } catch {\n      /* this could fail */\n    }\n    if (\n      descriptor !== undefined &&\n      typeof descriptor.value === "function" &&\n      descriptor.value.name !== "" &&\n      isInstanceof(descriptor.value.prototype\x2C tmp)\n    ) {\n      if (\n        protoProps !== undefined &&\n        (firstProto !== obj ||\n          !SetPrototypeHas(builtInObjects\x2C descriptor.value.name))\n      ) {\n        addPrototypeProperties(\n          ctx\x2C\n          tmp\x2C\n          firstProto || tmp\x2C\n          recurseTimes\x2C\n          protoProps\x2C\n        );\n      }\n      return String(descriptor.value.name);\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n    if (firstProto === undefined) {\n      firstProto = obj;\n    }\n  }\n\n  if (firstProto === null) {\n    return null;\n  }\n\n  const res = op_get_constructor_name(tmp);\n\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\n    return `${res} <Complex prototype>`;\n  }\n\n  const protoConstr = getConstructorName(\n    firstProto\x2C\n    ctx\x2C\n    recurseTimes + 1\x2C\n    protoProps\x2C\n  );\n\n  if (protoConstr === null) {\n    return `${res} <${\n      inspect(firstProto\x2C {\n        ...ctx\x2C\n        customInspect: false\x2C\n        depth: -1\x2C\n      })\n    }>`;\n  }\n\n  return `${res} <${protoConstr}>`;\n}\n\nconst formatPrimitiveRegExp = new SafeRegExp("(?<=\\n)");\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\n  if (typeof value === "string") {\n    let trailer = "";\n    if (value.length > ctx.maxStringLength) {\n      const remaining = value.length - ctx.maxStringLength;\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\n      trailer = `... ${remaining} more character${remaining > 1 ? "s" : ""}`;\n    }\n    if (\n      ctx.compact !== true &&\n      // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n      // function.\n      value.length > kMinLineLength &&\n      value.length > ctx.breakLength - ctx.indentationLvl - 4\n    ) {\n      return ArrayPrototypeJoin(\n        ArrayPrototypeMap(\n          StringPrototypeSplit(value\x2C formatPrimitiveRegExp)\x2C\n          (line) => fn(quoteString(line\x2C ctx)\x2C "string")\x2C\n        )\x2C\n        ` +\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl + 2)}`\x2C\n      ) + trailer;\n    }\n    return fn(quoteString(value\x2C ctx)\x2C "string") + trailer;\n  }\n  if (typeof value === "number") {\n    return formatNumber(fn\x2C value);\n  }\n  if (typeof value === "bigint") {\n    return formatBigInt(fn\x2C value);\n  }\n  if (typeof value === "boolean") {\n    return fn(`${value}`\x2C "boolean");\n  }\n  if (typeof value === "undefined") {\n    return fn("undefined"\x2C "undefined");\n  }\n  // es6 symbol primitive\n  return fn(maybeQuoteSymbol(value\x2C ctx)\x2C "symbol");\n}\n\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = "") {\n  if (constructor === null) {\n    if (tag !== "" && fallback !== tag) {\n      return `[${fallback}${size}: null prototype] [${tag}] `;\n    }\n    return `[${fallback}${size}: null prototype] `;\n  }\n\n  if (tag !== "" && constructor !== tag) {\n    return `${constructor}${size} [${tag}] `;\n  }\n  return `${constructor}${size} `;\n}\n\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\n  const valLen = value.length;\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    // Special handle sparse arrays.\n    if (!ObjectHasOwn(value\x2C i)) {\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\n    }\n    ArrayPrototypePush(\n      output\x2C\n      formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType)\x2C\n    );\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\n  let fallback = "";\n  if (constructor === null) {\n    fallback = op_get_constructor_name(value);\n    if (fallback === tag) {\n      fallback = "Object";\n    }\n  }\n  return getPrefix(constructor\x2C tag\x2C fallback);\n}\n\n// Look up the keys of the object.\nfunction getKeys(value\x2C showHidden) {\n  let keys;\n  const symbols = ObjectGetOwnPropertySymbols(value);\n  if (showHidden) {\n    keys = ObjectGetOwnPropertyNames(value);\n    if (symbols.length !== 0) {\n      ArrayPrototypePushApply(keys\x2C symbols);\n    }\n  } else {\n    // This might throw if `value` is a Module Namespace Object from an\n    // unevaluated module\x2C but we don't want to perform the actual type\n    // check because it's expensive.\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\n    // and modify this logic as needed.\n    try {\n      keys = ObjectKeys(value);\n    } catch (err) {\n      assert(\n        isNativeError(err) && err.name === "ReferenceError" &&\n          isModuleNamespaceObject(value)\x2C\n      );\n      keys = ObjectGetOwnPropertyNames(value);\n    }\n    if (symbols.length !== 0) {\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\n    }\n  }\n  return keys;\n}\n\nfunction formatSet(value\x2C ctx\x2C _ignored\x2C recurseTimes) {\n  ctx.indentationLvl += 2;\n\n  const values = [...new SafeSetIterator(value)];\n  const valLen = SetPrototypeGetSize(value);\n  const len = MathMin(MathMax(0\x2C ctx.iterableLimit)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C values[i]\x2C recurseTimes));\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatMap(value\x2C ctx\x2C _ignored\x2C recurseTimes) {\n  ctx.indentationLvl += 2;\n\n  const values = [...new SafeMapIterator(value)];\n  const valLen = MapPrototypeGetSize(value);\n  const len = MathMin(MathMax(0\x2C ctx.iterableLimit)\x2C valLen);\n\n  const remaining = valLen - len;\n  const output = [];\n  for (let i = 0; i < len; i++) {\n    ArrayPrototypePush(\n      output\x2C\n      `${formatValue(ctx\x2C values[i][0]\x2C recurseTimes)} => ${\n        formatValue(ctx\x2C values[i][1]\x2C recurseTimes)\n      }`\x2C\n    );\n  }\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n\n  ctx.indentationLvl -= 2;\n  return output;\n}\n\nfunction formatTypedArray(\n  value\x2C\n  length\x2C\n  ctx\x2C\n  _ignored\x2C\n  recurseTimes\x2C\n) {\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\n  const remaining = value.length - maxLength;\n  const output = [];\n  const elementFormatter = value.length > 0 && typeof value[0] === "number"\n    ? formatNumber\n    : formatBigInt;\n  for (let i = 0; i < maxLength; ++i) {\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]);\n  }\n  if (remaining > 0) {\n    output[maxLength] = `... ${remaining} more item${remaining > 1 ? "s" : ""}`;\n  }\n  if (ctx.showHidden) {\n    // .buffer goes last\x2C it's not a primitive like the others.\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\n    ctx.indentationLvl += 2;\n    for (\n      const key of new SafeArrayIterator([\n        "BYTES_PER_ELEMENT"\x2C\n        "length"\x2C\n        "byteLength"\x2C\n        "byteOffset"\x2C\n        "buffer"\x2C\n      ])\n    ) {\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\n    }\n    ctx.indentationLvl -= 2;\n  }\n  return output;\n}\n\nfunction getIteratorBraces(type\x2C tag) {\n  if (tag !== `${type} Iterator`) {\n    if (tag !== "") {\n      tag += "] [";\n    }\n    tag += `${type} Iterator`;\n  }\n  return [`[${tag}] {`\x2C "}"];\n}\n\nconst iteratorRegExp = new SafeRegExp(" Iterator] {$");\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\n  const { 0: entries\x2C 1: isKeyValue } = op_preview_entries(value\x2C true);\n  if (isKeyValue) {\n    // Mark entry iterators as such.\n    braces[0] = StringPrototypeReplace(\n      braces[0]\x2C\n      iteratorRegExp\x2C\n      " Entries] {"\x2C\n    );\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\n  }\n\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\n}\n\nfunction handleCircular(value\x2C ctx) {\n  let index = 1;\n  if (ctx.circular === undefined) {\n    ctx.circular = new SafeMap();\n    MapPrototypeSet(ctx.circular\x2C value\x2C index);\n  } else {\n    index = MapPrototypeGet(ctx.circular\x2C value);\n    if (index === undefined) {\n      index = MapPrototypeGetSize(ctx.circular) + 1;\n      MapPrototypeSet(ctx.circular\x2C value\x2C index);\n    }\n  }\n  // Circular string is cyan\n  return ctx.stylize(`[Circular *${index}]`\x2C "special");\n}\n\nconst AGGREGATE_ERROR_HAS_AT_PATTERN = new SafeRegExp(/\\s+at/);\nconst AGGREGATE_ERROR_NOT_EMPTY_LINE_PATTERN = new SafeRegExp(/^(?!\\s*$)/gm);\n\nfunction inspectError(value\x2C ctx) {\n  const causes = [value];\n\n  let err = value;\n  while (err.cause) {\n    if (ArrayPrototypeIncludes(causes\x2C err.cause)) {\n      ArrayPrototypePush(causes\x2C handleCircular(err.cause\x2C ctx));\n      break;\n    } else {\n      ArrayPrototypePush(causes\x2C err.cause);\n      err = err.cause;\n    }\n  }\n\n  const refMap = new SafeMap();\n  for (let i = 0; i < causes.length; ++i) {\n    const cause = causes[i];\n    if (ctx.circular !== undefined) {\n      const index = MapPrototypeGet(ctx.circular\x2C cause);\n      if (index !== undefined) {\n        MapPrototypeSet(\n          refMap\x2C\n          cause\x2C\n          ctx.stylize(`<ref *${index}> `\x2C "special")\x2C\n        );\n      }\n    }\n  }\n  ArrayPrototypeShift(causes);\n\n  let finalMessage = MapPrototypeGet(refMap\x2C value) ?? "";\n\n  if (isAggregateError(value)) {\n    const stackLines = StringPrototypeSplit(value.stack\x2C "\\n");\n    while (true) {\n      const line = ArrayPrototypeShift(stackLines);\n      if (RegExpPrototypeTest(AGGREGATE_ERROR_HAS_AT_PATTERN\x2C line)) {\n        ArrayPrototypeUnshift(stackLines\x2C line);\n        break;\n      } else if (typeof line === "undefined") {\n        break;\n      }\n\n      finalMessage += line;\n      finalMessage += "\\n";\n    }\n    const aggregateMessage = ArrayPrototypeJoin(\n      ArrayPrototypeMap(\n        value.errors\x2C\n        (error) =>\n          StringPrototypeReplace(\n            inspectArgs([error])\x2C\n            AGGREGATE_ERROR_NOT_EMPTY_LINE_PATTERN\x2C\n            StringPrototypeRepeat(" "\x2C 4)\x2C\n          )\x2C\n      )\x2C\n      "\\n"\x2C\n    );\n    finalMessage += aggregateMessage;\n    finalMessage += "\\n";\n    finalMessage += ArrayPrototypeJoin(stackLines\x2C "\\n");\n  } else {\n    const stack = value.stack;\n    if (stack?.includes("\\n    at")) {\n      finalMessage += stack;\n    } else {\n      finalMessage += `[${stack || ErrorPrototypeToString(value)}]`;\n    }\n  }\n  finalMessage += ArrayPrototypeJoin(\n    ArrayPrototypeMap(\n      causes\x2C\n      (cause) =>\n        "\\nCaused by " + (MapPrototypeGet(refMap\x2C cause) ?? "") +\n        (cause?.stack ?? cause)\x2C\n    )\x2C\n    ""\x2C\n  );\n\n  return finalMessage;\n}\n\nconst hexSliceLookupTable = function () {\n  const alphabet = "0123456789abcdef";\n  const table = [];\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\nfunction hexSlice(buf\x2C start\x2C end) {\n  const len = TypedArrayPrototypeGetLength(buf);\n  if (!start || start < 0) {\n    start = 0;\n  }\n  if (!end || end < 0 || end > len) {\n    end = len;\n  }\n  let out = "";\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\n\nconst arrayBufferRegExp = new SafeRegExp("(.{2})"\x2C "g");\nfunction formatArrayBuffer(ctx\x2C value) {\n  let valLen;\n  try {\n    valLen = ArrayBufferPrototypeGetByteLength(value);\n  } catch {\n    valLen = getSharedArrayBufferByteLength(value);\n  }\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\n  let buffer;\n  try {\n    buffer = new Uint8Array(value\x2C 0\x2C len);\n  } catch {\n    return [ctx.stylize("(detached)"\x2C "special")];\n  }\n  let str = StringPrototypeTrim(\n    StringPrototypeReplace(hexSlice(buffer)\x2C arrayBufferRegExp\x2C "$1 ")\x2C\n  );\n\n  const remaining = valLen - len;\n  if (remaining > 0) {\n    str += ` ... ${remaining} more byte${remaining > 1 ? "s" : ""}`;\n  }\n  return [`${ctx.stylize("[Uint8Contents]"\x2C "special")}: <${str}>`];\n}\n\nfunction formatNumber(fn\x2C value) {\n  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.\n  return fn(ObjectIs(value\x2C -0) ? "-0" : `${value}`\x2C "number");\n}\n\nconst PromiseState = {\n  Pending: 0\x2C\n  Fulfilled: 1\x2C\n  Rejected: 2\x2C\n};\n\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\n  let output;\n  const { 0: state\x2C 1: result } = core.getPromiseDetails(value);\n  if (state === PromiseState.Pending) {\n    output = [ctx.stylize("<pending>"\x2C "special")];\n  } else {\n    ctx.indentationLvl += 2;\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\n    ctx.indentationLvl -= 2;\n    output = [\n      state === PromiseState.Rejected\n        ? `${ctx.stylize("<rejected>"\x2C "special")} ${str}`\n        : str\x2C\n    ];\n  }\n  return output;\n}\n\nfunction formatWeakCollection(ctx) {\n  return [ctx.stylize("<items unknown>"\x2C "special")];\n}\n\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\n  const entries = op_preview_entries(value\x2C false);\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\n  const entries = op_preview_entries(value\x2C false);\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\n}\n\nfunction formatProperty(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  key\x2C\n  type\x2C\n  desc\x2C\n  original = value\x2C\n) {\n  let name\x2C str;\n  let extra = " ";\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\n    { value: value[key]\x2C enumerable: true };\n  if (desc.value !== undefined) {\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\n    ctx.indentationLvl += diff;\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\n      extra = `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`;\n    }\n    ctx.indentationLvl -= diff;\n  } else if (desc.get !== undefined) {\n    const label = desc.set !== undefined ? "Getter/Setter" : "Getter";\n    const s = ctx.stylize;\n    const sp = "special";\n    if (\n      ctx.getters && (ctx.getters === true ||\n        (ctx.getters === "get" && desc.set === undefined) ||\n        (ctx.getters === "set" && desc.set !== undefined))\n    ) {\n      try {\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\n        ctx.indentationLvl += 2;\n        if (tmp === null) {\n          str = `${s(`[${label}:`\x2C sp)} ${s("null"\x2C "null")}${s("]"\x2C sp)}`;\n        } else if (typeof tmp === "object") {\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\n        } else {\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s("]"\x2C sp)}`;\n        }\n        ctx.indentationLvl -= 2;\n      } catch (err) {\n        const message = `<Inspection threw (${err.message})>`;\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s("]"\x2C sp)}`;\n      }\n    } else {\n      str = ctx.stylize(`[${label}]`\x2C sp);\n    }\n  } else if (desc.set !== undefined) {\n    str = ctx.stylize("[Setter]"\x2C "special");\n  } else {\n    str = ctx.stylize("undefined"\x2C "undefined");\n  }\n  if (type === kArrayType) {\n    return str;\n  }\n  if (typeof key === "symbol") {\n    name = `[${ctx.stylize(maybeQuoteSymbol(key\x2C ctx)\x2C "symbol")}]`;\n  } else if (key === "__proto__") {\n    name = "['__proto__']";\n  } else if (desc.enumerable === false) {\n    const tmp = StringPrototypeReplace(\n      key\x2C\n      strEscapeSequencesReplacer\x2C\n      escapeFn\x2C\n    );\n\n    name = `[${tmp}]`;\n  } else if (keyStrRegExp.test(key)) {\n    name = ctx.stylize(key\x2C "name");\n  } else {\n    name = ctx.stylize(quoteString(key\x2C ctx)\x2C "string");\n  }\n  return `${name}:${extra}${str}`;\n}\n\nconst colorRegExp = new SafeRegExp("\\u001b\\\\[\\\\d\\\\d?m"\x2C "g");\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C "");\n}\n\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\n  // length of at least `output.length`. In addition\x2C some cases have a\n  // whitespace in-between each other that is added to the total as well.\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\n  // function. Check the performance overhead and make it an opt-in in case it's\n  // significant.\n  let totalLength = output.length + start;\n  if (totalLength + output.length > ctx.breakLength) {\n    return false;\n  }\n  for (let i = 0; i < output.length; i++) {\n    if (ctx.colors) {\n      totalLength += removeColors(output[i]).length;\n    } else {\n      totalLength += output[i].length;\n    }\n    if (totalLength > ctx.breakLength) {\n      return false;\n    }\n  }\n  // Do not line up properties on the same line if `base` contains line breaks.\n  return base === "" || !StringPrototypeIncludes(base\x2C "\\n");\n}\n\nfunction formatBigInt(fn\x2C value) {\n  return fn(`${value}n`\x2C "bigint");\n}\n\nfunction formatNamespaceObject(\n  keys\x2C\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n) {\n  const output = [];\n  for (let i = 0; i < keys.length; i++) {\n    try {\n      output[i] = formatProperty(\n        ctx\x2C\n        value\x2C\n        recurseTimes\x2C\n        keys[i]\x2C\n        kObjectType\x2C\n      );\n    } catch (_err) {\n      // TODO(wafuwfu13): Implement\n      // assert(isNativeError(err) && err.name === 'ReferenceError');\n      // Use the existing functionality. This makes sure the indentation and\n      // line breaks are always correct. Otherwise it is very difficult to keep\n      // this aligned\x2C even though this is a hacky way of dealing with this.\n      const tmp = { [keys[i]]: "" };\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C " ");\n      // We have to find the last whitespace and have to replace that value as\n      // it will be visualized as a regular string.\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\n        ctx.stylize("<uninitialized>"\x2C "special");\n    }\n  }\n  // Reset the keys to an empty array. This prevents duplicated inspection.\n  keys.length = 0;\n  return output;\n}\n\n// The array is sparse and/or has extra keys\nfunction formatSpecialArray(\n  ctx\x2C\n  value\x2C\n  recurseTimes\x2C\n  maxLength\x2C\n  output\x2C\n  i\x2C\n) {\n  const keys = ObjectKeys(value);\n  let index = i;\n  for (; i < keys.length && output.length < maxLength; i++) {\n    const key = keys[i];\n    const tmp = +key;\n    // Arrays can only have up to 2^32 - 1 entries\n    if (tmp > 2 ** 32 - 2) {\n      break;\n    }\n    if (`${index}` !== key) {\n      if (!numberRegExp.test(key)) {\n        break;\n      }\n      const emptyItems = tmp - index;\n      const ending = emptyItems > 1 ? "s" : "";\n      const message = `<${emptyItems} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C "undefined"));\n      index = tmp;\n      if (output.length === maxLength) {\n        break;\n      }\n    }\n    ArrayPrototypePush(\n      output\x2C\n      formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType)\x2C\n    );\n    index++;\n  }\n  const remaining = value.length - index;\n  if (output.length !== maxLength) {\n    if (remaining > 0) {\n      const ending = remaining > 1 ? "s" : "";\n      const message = `<${remaining} empty item${ending}>`;\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C "undefined"));\n    }\n  } else if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction getBoxedBase(\n  value\x2C\n  ctx\x2C\n  keys\x2C\n  constructor\x2C\n  tag\x2C\n) {\n  let type\x2C primitive;\n  if (isNumberObject(value)) {\n    type = "Number";\n    primitive = NumberPrototypeValueOf(value);\n  } else if (isStringObject(value)) {\n    type = "String";\n    primitive = StringPrototypeValueOf(value);\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\n    // since they just noisy up the output and are redundant\n    // Make boxed primitive Strings look like such\n    ArrayPrototypeSplice(keys\x2C 0\x2C value.length);\n  } else if (isBooleanObject(value)) {\n    type = "Boolean";\n    primitive = BooleanPrototypeValueOf(value);\n  } else if (isBigIntObject(value)) {\n    type = "BigInt";\n    primitive = BigIntPrototypeValueOf(value);\n  } else {\n    type = "Symbol";\n    primitive = SymbolPrototypeValueOf(value);\n  }\n\n  let base = `[${type}`;\n  if (type !== constructor) {\n    if (constructor === null) {\n      base += " (null prototype)";\n    } else {\n      base += ` (${constructor})`;\n    }\n  }\n  base += `: ${formatPrimitive(stylizeNoColor\x2C primitive\x2C ctx)}]`;\n  if (tag !== "" && tag !== constructor) {\n    base += ` [${tag}]`;\n  }\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor) {\n    return base;\n  }\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\n}\n\nfunction reduceToSingleString(\n  ctx\x2C\n  output\x2C\n  base\x2C\n  braces\x2C\n  extrasType\x2C\n  recurseTimes\x2C\n  value\x2C\n) {\n  if (ctx.compact !== true) {\n    if (typeof ctx.compact === "number" && ctx.compact >= 1) {\n      // Memorize the original output length. In case the output is grouped\x2C\n      // prevent lining up the entries on a single line.\n      const entries = output.length;\n      // Group array elements together if the array contains at least six\n      // separate entries.\n      if (extrasType === kArrayExtrasType && entries > 6) {\n        output = groupArrayElements(ctx\x2C output\x2C value);\n      }\n      // `ctx.currentDepth` is set to the most inner depth of the currently\n      // inspected object part while `recurseTimes` is the actual current depth\n      // that is inspected.\n      //\n      // Example:\n      //\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\n      //\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\n      // depth of 1.\n      //\n      // Consolidate all entries of the local most inner depth up to\n      // `ctx.compact`\x2C as long as the properties are smaller than\n      // `ctx.breakLength`.\n      if (\n        ctx.currentDepth - recurseTimes < ctx.compact &&\n        entries === output.length\n      ) {\n        // Line up all entries on a single line in case the entries do not\n        // exceed `breakLength`. Add 10 as constant to start next to all other\n        // factors that may reduce `breakLength`.\n        const start = output.length + ctx.indentationLvl +\n          braces[0].length + base.length + 10;\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\n          const joinedOutput = ArrayPrototypeJoin(output\x2C "\x2C ");\n          if (!StringPrototypeIncludes(joinedOutput\x2C "\\n")) {\n            return `${base ? `${base} ` : ""}${braces[0]} ${joinedOutput}` +\n              ` ${braces[1]}`;\n          }\n        }\n      }\n    }\n    // Line up each entry on an individual line.\n    const indentation = `\\n${StringPrototypeRepeat(" "\x2C ctx.indentationLvl)}`;\n    return `${base ? `${base} ` : ""}${braces[0]}${indentation}  ` +\n      `${ArrayPrototypeJoin(output\x2C `\x2C${indentation}  `)}${\n        ctx.trailingComma ? "\x2C" : ""\n      }${indentation}${braces[1]}`;\n  }\n  // Line up all entries on a single line in case the entries do not exceed\n  // `breakLength`.\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\n    return `${braces[0]}${base ? ` ${base}` : ""} ${\n      ArrayPrototypeJoin(output\x2C "\x2C ")\n    } ` +\n      braces[1];\n  }\n  const indentation = StringPrototypeRepeat(" "\x2C ctx.indentationLvl);\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\n  // we need to force the first item to be on the next line or the\n  // items will not line up correctly.\n  const ln = base === "" && braces[0].length === 1\n    ? " "\n    : `${base ? ` ${base}` : ""}\\n${indentation}  `;\n  // Line up each entry on an individual line.\n  return `${braces[0]}${ln}${\n    ArrayPrototypeJoin(output\x2C `\x2C\\n${indentation}  `)\n  } ${braces[1]}`;\n}\n\nfunction groupArrayElements(ctx\x2C output\x2C value) {\n  let totalLength = 0;\n  let maxLength = 0;\n  let i = 0;\n  let outputLength = output.length;\n  if (ctx.maxArrayLength < output.length) {\n    // This makes sure the "... n more items" part is not taken into account.\n    outputLength--;\n  }\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\n  const dataLen = [];\n  // Calculate the total length of all output entries and the individual max\n  // entries length of all output entries. We have to remove colors first\x2C\n  // otherwise the length would not be calculated properly.\n  for (; i < outputLength; i++) {\n    const len = getStringWidth(output[i]\x2C ctx.colors);\n    dataLen[i] = len;\n    totalLength += len + separatorSpace;\n    if (maxLength < len) {\n      maxLength = len;\n    }\n  }\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\n  // in-between two entries.\n  const actualMax = maxLength + separatorSpace;\n  // Check if at least three entries fit next to each other and prevent grouping\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\n  // space in-between small entries would be enormous.\n  if (\n    actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\n    (totalLength / actualMax > 5 || maxLength <= 6)\n  ) {\n    const approxCharHeights = 2.5;\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\n    // Dynamically check how many columns seem possible.\n    const columns = MathMin(\n      // Ideally a square should be drawn. We expect a character to be about 2.5\n      // times as high as wide. This is the area formula to calculate a square\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\n      // Divide that by `actualMax` to receive the correct number of columns.\n      // The added bias increases the columns for short entries.\n      MathRound(\n        MathSqrt(\n          approxCharHeights * biasedMax * outputLength\x2C\n        ) / biasedMax\x2C\n      )\x2C\n      // Do not exceed the breakLength.\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\n      // Limit array grouping for small `compact` modes as the user requested\n      // minimal grouping.\n      ctx.compact * 4\x2C\n      // Limit the columns to a maximum of fifteen.\n      15\x2C\n    );\n    // Return with the original output if no grouping should happen.\n    if (columns <= 1) {\n      return output;\n    }\n    const tmp = [];\n    const maxLineLength = [];\n    for (let i = 0; i < columns; i++) {\n      let lineMaxLength = 0;\n      for (let j = i; j < output.length; j += columns) {\n        if (dataLen[j] > lineMaxLength) {\n          lineMaxLength = dataLen[j];\n        }\n      }\n      lineMaxLength += separatorSpace;\n      maxLineLength[i] = lineMaxLength;\n    }\n    let order = StringPrototypePadStart;\n    if (value !== undefined) {\n      for (let i = 0; i < output.length; i++) {\n        if (typeof value[i] !== "number" && typeof value[i] !== "bigint") {\n          order = StringPrototypePadEnd;\n          break;\n        }\n      }\n    }\n    // Each iteration creates a single line of grouped entries.\n    for (let i = 0; i < outputLength; i += columns) {\n      // The last lines may contain less entries than columns.\n      const max = MathMin(i + columns\x2C outputLength);\n      let str = "";\n      let j = i;\n      for (; j < max - 1; j++) {\n        // Calculate extra color padding in case it's active. This has to be\n        // done line by line as some lines might contain more colors than\n        // others.\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\n        str += order(`${output[j]}\x2C `\x2C padding\x2C " ");\n      }\n      if (order === StringPrototypePadStart) {\n        const padding = maxLineLength[j - i] +\n          output[j].length -\n          dataLen[j] -\n          separatorSpace;\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C " ");\n      } else {\n        str += output[j];\n      }\n      ArrayPrototypePush(tmp\x2C str);\n    }\n    if (ctx.maxArrayLength < output.length) {\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\n    }\n    output = tmp;\n  }\n  return output;\n}\n\nfunction formatMapIterInner(\n  ctx\x2C\n  recurseTimes\x2C\n  entries\x2C\n  state\x2C\n) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\n  const len = entries.length / 2;\n  const remaining = len - maxArrayLength;\n  const maxLength = MathMin(maxArrayLength\x2C len);\n  const output = [];\n  let i = 0;\n  ctx.indentationLvl += 2;\n  if (state === kWeak) {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      output[i] = `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\n      }`;\n    }\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    if (!ctx.sorted) {\n      ArrayPrototypeSort(output);\n    }\n  } else {\n    for (; i < maxLength; i++) {\n      const pos = i * 2;\n      const res = [\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\n      ];\n      output[i] = reduceToSingleString(\n        ctx\x2C\n        res\x2C\n        ""\x2C\n        ["["\x2C "]"]\x2C\n        kArrayExtrasType\x2C\n        recurseTimes\x2C\n      );\n    }\n  }\n  ctx.indentationLvl -= 2;\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\nfunction formatSetIterInner(\n  ctx\x2C\n  recurseTimes\x2C\n  entries\x2C\n  state\x2C\n) {\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\n  const output = [];\n  ctx.indentationLvl += 2;\n  for (let i = 0; i < maxLength; i++) {\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\n  }\n  ctx.indentationLvl -= 2;\n  if (state === kWeak && !ctx.sorted) {\n    // Sort all entries to have a halfway reliable output (if more entries than\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\n    // output is not sorted anyway.\n    ArrayPrototypeSort(output);\n  }\n  const remaining = entries.length - maxLength;\n  if (remaining > 0) {\n    ArrayPrototypePush(\n      output\x2C\n      `... ${remaining} more item${remaining > 1 ? "s" : ""}`\x2C\n    );\n  }\n  return output;\n}\n\n// Regex used for ansi escape code splitting\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\n// Matches all ansi escape code sequences in a string\nconst ansiPattern = "[\\\\u001B\\\\u009B][[\\\\]()#;?]*" +\n  "(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*" +\n  "|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)" +\n  "|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))";\nconst ansi = new SafeRegExp(ansiPattern\x2C "g");\n\n/**\n * Returns the number of columns required to display the given string.\n */\nexport function getStringWidth(str\x2C removeControlChars = true) {\n  let width = 0;\n\n  if (removeControlChars) {\n    str = stripVTControlCharacters(str);\n  }\n  str = StringPrototypeNormalize(str\x2C "NFC");\n  for (const char of new SafeStringIterator(str)) {\n    const code = StringPrototypeCodePointAt(char\x2C 0);\n    if (isFullWidthCodePoint(code)) {\n      width += 2;\n    } else if (!isZeroWidthCodePoint(code)) {\n      width++;\n    }\n  }\n\n  return width;\n}\n\nconst isZeroWidthCodePoint = (code) => {\n  return code <= 0x1F || // C0 control codes\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\n    // Combining Diacritical Marks for Symbols\n    (code >= 0x20D0 && code <= 0x20FF) ||\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\n};\n\n/**\n * Remove all VT control characters. Use to estimate displayed string width.\n */\nexport function stripVTControlCharacters(str) {\n  return StringPrototypeReplace(str\x2C ansi\x2C "");\n}\n\nfunction hasOwnProperty(obj\x2C v) {\n  if (obj == null) {\n    return false;\n  }\n  return ObjectHasOwn(obj\x2C v);\n}\n\n// Copyright Joyent\x2C Inc. and other Node contributors. MIT license.\n// Forked from Node's lib/internal/cli_table.js\n\nconst tableChars = {\n  middleMiddle: "\\u2500"\x2C\n  rowMiddle: "\\u253c"\x2C\n  topRight: "\\u2510"\x2C\n  topLeft: "\\u250c"\x2C\n  leftMiddle: "\\u251c"\x2C\n  topMiddle: "\\u252c"\x2C\n  bottomRight: "\\u2518"\x2C\n  bottomLeft: "\\u2514"\x2C\n  bottomMiddle: "\\u2534"\x2C\n  rightMiddle: "\\u2524"\x2C\n  left: "\\u2502 "\x2C\n  right: " \\u2502"\x2C\n  middle: " \\u2502 "\x2C\n};\n\nfunction isFullWidthCodePoint(code) {\n  // Code points are partially derived from:\n  // http://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\n  return (\n    code >= 0x1100 &&\n    (code <= 0x115f || // Hangul Jamo\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n      (code >= 0x3250 && code <= 0x4dbf) ||\n      // CJK Unified Ideographs .. Yi Radicals\n      (code >= 0x4e00 && code <= 0xa4c6) ||\n      // Hangul Jamo Extended-A\n      (code >= 0xa960 && code <= 0xa97c) ||\n      // Hangul Syllables\n      (code >= 0xac00 && code <= 0xd7a3) ||\n      // CJK Compatibility Ideographs\n      (code >= 0xf900 && code <= 0xfaff) ||\n      // Vertical Forms\n      (code >= 0xfe10 && code <= 0xfe19) ||\n      // CJK Compatibility Forms .. Small Form Variants\n      (code >= 0xfe30 && code <= 0xfe6b) ||\n      // Halfwidth and Fullwidth Forms\n      (code >= 0xff01 && code <= 0xff60) ||\n      (code >= 0xffe0 && code <= 0xffe6) ||\n      // Kana Supplement\n      (code >= 0x1b000 && code <= 0x1b001) ||\n      // Enclosed Ideographic Supplement\n      (code >= 0x1f200 && code <= 0x1f251) ||\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\n      // Emoticons 0x1f600 - 0x1f64f\n      (code >= 0x1f300 && code <= 0x1f64f) ||\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n      (code >= 0x20000 && code <= 0x3fffd))\n  );\n}\n\nfunction renderRow(row\x2C columnWidths\x2C columnRightAlign) {\n  let out = tableChars.left;\n  for (let i = 0; i < row.length; i++) {\n    const cell = row[i];\n    const len = getStringWidth(cell);\n    const padding = StringPrototypeRepeat(" "\x2C columnWidths[i] - len);\n    if (columnRightAlign?.[i]) {\n      out += `${padding}${cell}`;\n    } else {\n      out += `${cell}${padding}`;\n    }\n    if (i !== row.length - 1) {\n      out += tableChars.middle;\n    }\n  }\n  out += tableChars.right;\n  return out;\n}\n\nfunction cliTable(head\x2C columns) {\n  const rows = [];\n  const columnWidths = ArrayPrototypeMap(head\x2C (h) => getStringWidth(h));\n  const longestColumn = ArrayPrototypeReduce(\n    columns\x2C\n    (n\x2C a) => MathMax(n\x2C a.length)\x2C\n    0\x2C\n  );\n  const columnRightAlign = ArrayPrototypeFill(\n    new Array(columnWidths.length)\x2C\n    true\x2C\n  );\n\n  for (let i = 0; i < head.length; i++) {\n    const column = columns[i];\n    for (let j = 0; j < longestColumn; j++) {\n      if (rows[j] === undefined) {\n        rows[j] = [];\n      }\n      const value = (rows[j][i] = hasOwnProperty(column\x2C j) ? column[j] : "");\n      const width = columnWidths[i] || 0;\n      const counted = getStringWidth(value);\n      columnWidths[i] = MathMax(width\x2C counted);\n      columnRightAlign[i] &= NumberIsInteger(+value);\n    }\n  }\n\n  const divider = ArrayPrototypeMap(\n    columnWidths\x2C\n    (i) => StringPrototypeRepeat(tableChars.middleMiddle\x2C i + 2)\x2C\n  );\n\n  let result =\n    `${tableChars.topLeft}${\n      ArrayPrototypeJoin(divider\x2C tableChars.topMiddle)\n    }` +\n    `${tableChars.topRight}\\n${renderRow(head\x2C columnWidths)}\\n` +\n    `${tableChars.leftMiddle}${\n      ArrayPrototypeJoin(divider\x2C tableChars.rowMiddle)\n    }` +\n    `${tableChars.rightMiddle}\\n`;\n\n  for (let i = 0; i < rows.length; ++i) {\n    const row = rows[i];\n    result += `${renderRow(row\x2C columnWidths\x2C columnRightAlign)}\\n`;\n  }\n\n  result +=\n    `${tableChars.bottomLeft}${\n      ArrayPrototypeJoin(divider\x2C tableChars.bottomMiddle)\n    }` +\n    tableChars.bottomRight;\n\n  return result;\n}\n/* End of forked part */\n\n// We can match Node's quoting behavior exactly by swapping the double quote and\n// single quote in this array. That would give preference to single quotes.\n// However\x2C we prefer double quotes as the default.\n\nconst denoInspectDefaultOptions = {\n  indentationLvl: 0\x2C\n  currentDepth: 0\x2C\n  stylize: stylizeNoColor\x2C\n\n  showHidden: false\x2C\n  depth: 4\x2C\n  colors: false\x2C\n  showProxy: false\x2C\n  breakLength: 80\x2C\n  escapeSequences: true\x2C\n  compact: 3\x2C\n  sorted: false\x2C\n  getters: false\x2C\n\n  // node only\n  maxArrayLength: 100\x2C\n  maxStringLength: 10_000\x2C // deno: strAbbreviateSize: 10_000\n  customInspect: true\x2C\n\n  // deno only\n  /** You can override the quotes preference in inspectString.\n   * Used by util.inspect() */\n  // TODO(kt3k): Consider using symbol as a key to hide this from the public\n  // API.\n  quotes: ['"'\x2C "'"\x2C "`"]\x2C\n  iterableLimit: 100\x2C // similar to node's maxArrayLength\x2C but doesn't only apply to arrays\n  trailingComma: false\x2C\n\n  inspect\x2C\n\n  // TODO(@crowlKats): merge into indentationLvl\n  indentLevel: 0\x2C\n};\n\nfunction getDefaultInspectOptions() {\n  return {\n    budget: {}\x2C\n    seen: []\x2C\n    ...denoInspectDefaultOptions\x2C\n  };\n}\n\nconst DEFAULT_INDENT = "  "; // Default indent string\n\nconst STR_ABBREVIATE_SIZE = 10_000;\n\nclass CSI {\n  static kClear = "\\x1b[1;1H";\n  static kClearScreenDown = "\\x1b[0J";\n}\n\nconst QUOTE_SYMBOL_REG = new SafeRegExp(/^[a-zA-Z_][a-zA-Z_.0-9]*$/);\n\nfunction maybeQuoteSymbol(symbol\x2C ctx) {\n  const description = SymbolPrototypeGetDescription(symbol);\n\n  if (description === undefined) {\n    return SymbolPrototypeToString(symbol);\n  }\n\n  if (RegExpPrototypeTest(QUOTE_SYMBOL_REG\x2C description)) {\n    return SymbolPrototypeToString(symbol);\n  }\n\n  return `Symbol(${quoteString(description\x2C ctx)})`;\n}\n\n/** Surround the string in quotes.\n *\n * The quote symbol is chosen by taking the first of the `QUOTES` array which\n * does not occur in the string. If they all occur\x2C settle with `QUOTES[0]`.\n *\n * Insert a backslash before any occurrence of the chosen quote symbol and\n * before any backslash.\n */\nfunction quoteString(string\x2C ctx) {\n  const quote = ArrayPrototypeFind(\n    ctx.quotes\x2C\n    (c) => !StringPrototypeIncludes(string\x2C c)\x2C\n  ) ??\n    ctx.quotes[0];\n  const escapePattern = new SafeRegExp(`(?=[${quote}\\\\\\\\])`\x2C "g");\n  string = StringPrototypeReplace(string\x2C escapePattern\x2C "\\\\");\n  if (ctx.escapeSequences) {\n    string = replaceEscapeSequences(string);\n  }\n  return `${quote}${string}${quote}`;\n}\n\nconst ESCAPE_PATTERN = new SafeRegExp(/([\\b\\f\\n\\r\\t\\v])/g);\nconst ESCAPE_MAP = ObjectFreeze({\n  "\\b": "\\\\b"\x2C\n  "\\f": "\\\\f"\x2C\n  "\\n": "\\\\n"\x2C\n  "\\r": "\\\\r"\x2C\n  "\\t": "\\\\t"\x2C\n  "\\v": "\\\\v"\x2C\n});\n\nconst ESCAPE_PATTERN2 = new SafeRegExp("[\\x00-\\x1f\\x7f-\\x9f]"\x2C "g");\n\n// Replace escape sequences that can modify output.\nfunction replaceEscapeSequences(string) {\n  return StringPrototypeReplace(\n    StringPrototypeReplace(\n      string\x2C\n      ESCAPE_PATTERN\x2C\n      (c) => ESCAPE_MAP[c]\x2C\n    )\x2C\n    ESCAPE_PATTERN2\x2C\n    (c) =>\n      "\\\\x" +\n      StringPrototypePadStart(\n        NumberPrototypeToString(StringPrototypeCharCodeAt(c\x2C 0)\x2C 16)\x2C\n        2\x2C\n        "0"\x2C\n      )\x2C\n  );\n}\n\n// Print strings when they are inside of arrays or objects with quotes\nfunction inspectValueWithQuotes(\n  value\x2C\n  ctx\x2C\n) {\n  const abbreviateSize = typeof ctx.strAbbreviateSize === "undefined"\n    ? STR_ABBREVIATE_SIZE\n    : ctx.strAbbreviateSize;\n  switch (typeof value) {\n    case "string": {\n      const trunc = value.length > abbreviateSize\n        ? StringPrototypeSlice(value\x2C 0\x2C abbreviateSize) + "..."\n        : value;\n      return ctx.stylize(quoteString(trunc\x2C ctx)\x2C "string"); // Quoted strings are green\n    }\n    default:\n      return formatValue(ctx\x2C value\x2C 0);\n  }\n}\n\nconst colorKeywords = new SafeMap([\n  ["black"\x2C "#000000"]\x2C\n  ["silver"\x2C "#c0c0c0"]\x2C\n  ["gray"\x2C "#808080"]\x2C\n  ["white"\x2C "#ffffff"]\x2C\n  ["maroon"\x2C "#800000"]\x2C\n  ["red"\x2C "#ff0000"]\x2C\n  ["purple"\x2C "#800080"]\x2C\n  ["fuchsia"\x2C "#ff00ff"]\x2C\n  ["green"\x2C "#008000"]\x2C\n  ["lime"\x2C "#00ff00"]\x2C\n  ["olive"\x2C "#808000"]\x2C\n  ["yellow"\x2C "#ffff00"]\x2C\n  ["navy"\x2C "#000080"]\x2C\n  ["blue"\x2C "#0000ff"]\x2C\n  ["teal"\x2C "#008080"]\x2C\n  ["aqua"\x2C "#00ffff"]\x2C\n  ["orange"\x2C "#ffa500"]\x2C\n  ["aliceblue"\x2C "#f0f8ff"]\x2C\n  ["antiquewhite"\x2C "#faebd7"]\x2C\n  ["aquamarine"\x2C "#7fffd4"]\x2C\n  ["azure"\x2C "#f0ffff"]\x2C\n  ["beige"\x2C "#f5f5dc"]\x2C\n  ["bisque"\x2C "#ffe4c4"]\x2C\n  ["blanchedalmond"\x2C "#ffebcd"]\x2C\n  ["blueviolet"\x2C "#8a2be2"]\x2C\n  ["brown"\x2C "#a52a2a"]\x2C\n  ["burlywood"\x2C "#deb887"]\x2C\n  ["cadetblue"\x2C "#5f9ea0"]\x2C\n  ["chartreuse"\x2C "#7fff00"]\x2C\n  ["chocolate"\x2C "#d2691e"]\x2C\n  ["coral"\x2C "#ff7f50"]\x2C\n  ["cornflowerblue"\x2C "#6495ed"]\x2C\n  ["cornsilk"\x2C "#fff8dc"]\x2C\n  ["crimson"\x2C "#dc143c"]\x2C\n  ["cyan"\x2C "#00ffff"]\x2C\n  ["darkblue"\x2C "#00008b"]\x2C\n  ["darkcyan"\x2C "#008b8b"]\x2C\n  ["darkgoldenrod"\x2C "#b8860b"]\x2C\n  ["darkgray"\x2C "#a9a9a9"]\x2C\n  ["darkgreen"\x2C "#006400"]\x2C\n  ["darkgrey"\x2C "#a9a9a9"]\x2C\n  ["darkkhaki"\x2C "#bdb76b"]\x2C\n  ["darkmagenta"\x2C "#8b008b"]\x2C\n  ["darkolivegreen"\x2C "#556b2f"]\x2C\n  ["darkorange"\x2C "#ff8c00"]\x2C\n  ["darkorchid"\x2C "#9932cc"]\x2C\n  ["darkred"\x2C "#8b0000"]\x2C\n  ["darksalmon"\x2C "#e9967a"]\x2C\n  ["darkseagreen"\x2C "#8fbc8f"]\x2C\n  ["darkslateblue"\x2C "#483d8b"]\x2C\n  ["darkslategray"\x2C "#2f4f4f"]\x2C\n  ["darkslategrey"\x2C "#2f4f4f"]\x2C\n  ["darkturquoise"\x2C "#00ced1"]\x2C\n  ["darkviolet"\x2C "#9400d3"]\x2C\n  ["deeppink"\x2C "#ff1493"]\x2C\n  ["deepskyblue"\x2C "#00bfff"]\x2C\n  ["dimgray"\x2C "#696969"]\x2C\n  ["dimgrey"\x2C "#696969"]\x2C\n  ["dodgerblue"\x2C "#1e90ff"]\x2C\n  ["firebrick"\x2C "#b22222"]\x2C\n  ["floralwhite"\x2C "#fffaf0"]\x2C\n  ["forestgreen"\x2C "#228b22"]\x2C\n  ["gainsboro"\x2C "#dcdcdc"]\x2C\n  ["ghostwhite"\x2C "#f8f8ff"]\x2C\n  ["gold"\x2C "#ffd700"]\x2C\n  ["goldenrod"\x2C "#daa520"]\x2C\n  ["greenyellow"\x2C "#adff2f"]\x2C\n  ["grey"\x2C "#808080"]\x2C\n  ["honeydew"\x2C "#f0fff0"]\x2C\n  ["hotpink"\x2C "#ff69b4"]\x2C\n  ["indianred"\x2C "#cd5c5c"]\x2C\n  ["indigo"\x2C "#4b0082"]\x2C\n  ["ivory"\x2C "#fffff0"]\x2C\n  ["khaki"\x2C "#f0e68c"]\x2C\n  ["lavender"\x2C "#e6e6fa"]\x2C\n  ["lavenderblush"\x2C "#fff0f5"]\x2C\n  ["lawngreen"\x2C "#7cfc00"]\x2C\n  ["lemonchiffon"\x2C "#fffacd"]\x2C\n  ["lightblue"\x2C "#add8e6"]\x2C\n  ["lightcoral"\x2C "#f08080"]\x2C\n  ["lightcyan"\x2C "#e0ffff"]\x2C\n  ["lightgoldenrodyellow"\x2C "#fafad2"]\x2C\n  ["lightgray"\x2C "#d3d3d3"]\x2C\n  ["lightgreen"\x2C "#90ee90"]\x2C\n  ["lightgrey"\x2C "#d3d3d3"]\x2C\n  ["lightpink"\x2C "#ffb6c1"]\x2C\n  ["lightsalmon"\x2C "#ffa07a"]\x2C\n  ["lightseagreen"\x2C "#20b2aa"]\x2C\n  ["lightskyblue"\x2C "#87cefa"]\x2C\n  ["lightslategray"\x2C "#778899"]\x2C\n  ["lightslategrey"\x2C "#778899"]\x2C\n  ["lightsteelblue"\x2C "#b0c4de"]\x2C\n  ["lightyellow"\x2C "#ffffe0"]\x2C\n  ["limegreen"\x2C "#32cd32"]\x2C\n  ["linen"\x2C "#faf0e6"]\x2C\n  ["magenta"\x2C "#ff00ff"]\x2C\n  ["mediumaquamarine"\x2C "#66cdaa"]\x2C\n  ["mediumblue"\x2C "#0000cd"]\x2C\n  ["mediumorchid"\x2C "#ba55d3"]\x2C\n  ["mediumpurple"\x2C "#9370db"]\x2C\n  ["mediumseagreen"\x2C "#3cb371"]\x2C\n  ["mediumslateblue"\x2C "#7b68ee"]\x2C\n  ["mediumspringgreen"\x2C "#00fa9a"]\x2C\n  ["mediumturquoise"\x2C "#48d1cc"]\x2C\n  ["mediumvioletred"\x2C "#c71585"]\x2C\n  ["midnightblue"\x2C "#191970"]\x2C\n  ["mintcream"\x2C "#f5fffa"]\x2C\n  ["mistyrose"\x2C "#ffe4e1"]\x2C\n  ["moccasin"\x2C "#ffe4b5"]\x2C\n  ["navajowhite"\x2C "#ffdead"]\x2C\n  ["oldlace"\x2C "#fdf5e6"]\x2C\n  ["olivedrab"\x2C "#6b8e23"]\x2C\n  ["orangered"\x2C "#ff4500"]\x2C\n  ["orchid"\x2C "#da70d6"]\x2C\n  ["palegoldenrod"\x2C "#eee8aa"]\x2C\n  ["palegreen"\x2C "#98fb98"]\x2C\n  ["paleturquoise"\x2C "#afeeee"]\x2C\n  ["palevioletred"\x2C "#db7093"]\x2C\n  ["papayawhip"\x2C "#ffefd5"]\x2C\n  ["peachpuff"\x2C "#ffdab9"]\x2C\n  ["peru"\x2C "#cd853f"]\x2C\n  ["pink"\x2C "#ffc0cb"]\x2C\n  ["plum"\x2C "#dda0dd"]\x2C\n  ["powderblue"\x2C "#b0e0e6"]\x2C\n  ["rosybrown"\x2C "#bc8f8f"]\x2C\n  ["royalblue"\x2C "#4169e1"]\x2C\n  ["saddlebrown"\x2C "#8b4513"]\x2C\n  ["salmon"\x2C "#fa8072"]\x2C\n  ["sandybrown"\x2C "#f4a460"]\x2C\n  ["seagreen"\x2C "#2e8b57"]\x2C\n  ["seashell"\x2C "#fff5ee"]\x2C\n  ["sienna"\x2C "#a0522d"]\x2C\n  ["skyblue"\x2C "#87ceeb"]\x2C\n  ["slateblue"\x2C "#6a5acd"]\x2C\n  ["slategray"\x2C "#708090"]\x2C\n  ["slategrey"\x2C "#708090"]\x2C\n  ["snow"\x2C "#fffafa"]\x2C\n  ["springgreen"\x2C "#00ff7f"]\x2C\n  ["steelblue"\x2C "#4682b4"]\x2C\n  ["tan"\x2C "#d2b48c"]\x2C\n  ["thistle"\x2C "#d8bfd8"]\x2C\n  ["tomato"\x2C "#ff6347"]\x2C\n  ["turquoise"\x2C "#40e0d0"]\x2C\n  ["violet"\x2C "#ee82ee"]\x2C\n  ["wheat"\x2C "#f5deb3"]\x2C\n  ["whitesmoke"\x2C "#f5f5f5"]\x2C\n  ["yellowgreen"\x2C "#9acd32"]\x2C\n  ["rebeccapurple"\x2C "#663399"]\x2C\n]);\n\nconst HASH_PATTERN = new SafeRegExp(\n  /^#([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})([\\dA-Fa-f]{2})?$/\x2C\n);\nconst SMALL_HASH_PATTERN = new SafeRegExp(\n  /^#([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])([\\dA-Fa-f])?$/\x2C\n);\nconst RGB_PATTERN = new SafeRegExp(\n  /^rgba?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/\x2C\n);\nconst HSL_PATTERN = new SafeRegExp(\n  /^hsla?\\(\\s*([+\\-]?\\d*\\.?\\d+)\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*\x2C\\s*([+\\-]?\\d*\\.?\\d+)%\\s*(\x2C\\s*([+\\-]?\\d*\\.?\\d+)\\s*)?\\)$/\x2C\n);\n\nfunction parseCssColor(colorString) {\n  if (colorKeywords.has(colorString)) {\n    colorString = colorKeywords.get(colorString);\n  }\n  // deno-fmt-ignore\n  const hashMatch = StringPrototypeMatch(colorString\x2C HASH_PATTERN);\n  if (hashMatch != null) {\n    return [\n      NumberParseInt(hashMatch[1]\x2C 16)\x2C\n      NumberParseInt(hashMatch[2]\x2C 16)\x2C\n      NumberParseInt(hashMatch[3]\x2C 16)\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const smallHashMatch = StringPrototypeMatch(colorString\x2C SMALL_HASH_PATTERN);\n  if (smallHashMatch != null) {\n    return [\n      NumberParseInt(`${smallHashMatch[1]}${smallHashMatch[1]}`\x2C 16)\x2C\n      NumberParseInt(`${smallHashMatch[2]}${smallHashMatch[2]}`\x2C 16)\x2C\n      NumberParseInt(`${smallHashMatch[3]}${smallHashMatch[3]}`\x2C 16)\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const rgbMatch = StringPrototypeMatch(colorString\x2C RGB_PATTERN);\n  if (rgbMatch != null) {\n    return [\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[1])))\x2C\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[2])))\x2C\n      MathRound(MathMax(0\x2C MathMin(255\x2C rgbMatch[3])))\x2C\n    ];\n  }\n  // deno-fmt-ignore\n  const hslMatch = StringPrototypeMatch(colorString\x2C HSL_PATTERN);\n  if (hslMatch != null) {\n    // https://www.rapidtables.com/convert/color/hsl-to-rgb.html\n    let h = Number(hslMatch[1]) % 360;\n    if (h < 0) {\n      h += 360;\n    }\n    const s = MathMax(0\x2C MathMin(100\x2C hslMatch[2])) / 100;\n    const l = MathMax(0\x2C MathMin(100\x2C hslMatch[3])) / 100;\n    const c = (1 - MathAbs(2 * l - 1)) * s;\n    const x = c * (1 - MathAbs((h / 60) % 2 - 1));\n    const m = l - c / 2;\n    let r_;\n    let g_;\n    let b_;\n    if (h < 60) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [c\x2C x\x2C 0]);\n    } else if (h < 120) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [x\x2C c\x2C 0]);\n    } else if (h < 180) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [0\x2C c\x2C x]);\n    } else if (h < 240) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [0\x2C x\x2C c]);\n    } else if (h < 300) {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [x\x2C 0\x2C c]);\n    } else {\n      ({ 0: r_\x2C 1: g_\x2C 2: b_ } = [c\x2C 0\x2C x]);\n    }\n    return [\n      MathRound((r_ + m) * 255)\x2C\n      MathRound((g_ + m) * 255)\x2C\n      MathRound((b_ + m) * 255)\x2C\n    ];\n  }\n  return null;\n}\n\nfunction getDefaultCss() {\n  return {\n    backgroundColor: null\x2C\n    color: null\x2C\n    fontWeight: null\x2C\n    fontStyle: null\x2C\n    textDecorationColor: null\x2C\n    textDecorationLine: []\x2C\n  };\n}\n\nconst SPACE_PATTERN = new SafeRegExp(/\\s+/g);\n\nfunction parseCss(cssString) {\n  const css = getDefaultCss();\n\n  const rawEntries = [];\n  let inValue = false;\n  let currentKey = null;\n  let parenthesesDepth = 0;\n  let currentPart = "";\n  for (let i = 0; i < cssString.length; i++) {\n    const c = cssString[i];\n    if (c == "(") {\n      parenthesesDepth++;\n    } else if (parenthesesDepth > 0) {\n      if (c == ")") {\n        parenthesesDepth--;\n      }\n    } else if (inValue) {\n      if (c == ";") {\n        const value = StringPrototypeTrim(currentPart);\n        if (value != "") {\n          ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n        }\n        currentKey = null;\n        currentPart = "";\n        inValue = false;\n        continue;\n      }\n    } else if (c == ":") {\n      currentKey = StringPrototypeTrim(currentPart);\n      currentPart = "";\n      inValue = true;\n      continue;\n    }\n    currentPart += c;\n  }\n  if (inValue && parenthesesDepth == 0) {\n    const value = StringPrototypeTrim(currentPart);\n    if (value != "") {\n      ArrayPrototypePush(rawEntries\x2C [currentKey\x2C value]);\n    }\n    currentKey = null;\n    currentPart = "";\n  }\n\n  for (let i = 0; i < rawEntries.length; ++i) {\n    const { 0: key\x2C 1: value } = rawEntries[i];\n    if (key == "background-color") {\n      if (value != null) {\n        css.backgroundColor = value;\n      }\n    } else if (key == "color") {\n      if (value != null) {\n        css.color = value;\n      }\n    } else if (key == "font-weight") {\n      if (value == "bold") {\n        css.fontWeight = value;\n      }\n    } else if (key == "font-style") {\n      if (\n        ArrayPrototypeIncludes(["italic"\x2C "oblique"\x2C "oblique 14deg"]\x2C value)\n      ) {\n        css.fontStyle = "italic";\n      }\n    } else if (key == "text-decoration-line") {\n      css.textDecorationLine = [];\n      const lineTypes = StringPrototypeSplit(value\x2C SPACE_PATTERN);\n      for (let i = 0; i < lineTypes.length; ++i) {\n        const lineType = lineTypes[i];\n        if (\n          ArrayPrototypeIncludes(\n            ["line-through"\x2C "overline"\x2C "underline"]\x2C\n            lineType\x2C\n          )\n        ) {\n          ArrayPrototypePush(css.textDecorationLine\x2C lineType);\n        }\n      }\n    } else if (key == "text-decoration-color") {\n      const color = parseCssColor(value);\n      if (color != null) {\n        css.textDecorationColor = color;\n      }\n    } else if (key == "text-decoration") {\n      css.textDecorationColor = null;\n      css.textDecorationLine = [];\n      const args = StringPrototypeSplit(value\x2C SPACE_PATTERN);\n      for (let i = 0; i < args.length; ++i) {\n        const arg = args[i];\n        const maybeColor = parseCssColor(arg);\n        if (maybeColor != null) {\n          css.textDecorationColor = maybeColor;\n        } else if (\n          ArrayPrototypeIncludes(\n            ["line-through"\x2C "overline"\x2C "underline"]\x2C\n            arg\x2C\n          )\n        ) {\n          ArrayPrototypePush(css.textDecorationLine\x2C arg);\n        }\n      }\n    }\n  }\n\n  return css;\n}\n\nfunction colorEquals(color1\x2C color2) {\n  return color1?.[0] == color2?.[0] && color1?.[1] == color2?.[1] &&\n    color1?.[2] == color2?.[2];\n}\n\nfunction cssToAnsi(css\x2C prevCss = null) {\n  prevCss = prevCss ?? getDefaultCss();\n  let ansi = "";\n  if (!colorEquals(css.backgroundColor\x2C prevCss.backgroundColor)) {\n    if (css.backgroundColor == null) {\n      ansi += "\\x1b[49m";\n    } else if (css.backgroundColor == "black") {\n      ansi += `\\x1b[40m`;\n    } else if (css.backgroundColor == "red") {\n      ansi += `\\x1b[41m`;\n    } else if (css.backgroundColor == "green") {\n      ansi += `\\x1b[42m`;\n    } else if (css.backgroundColor == "yellow") {\n      ansi += `\\x1b[43m`;\n    } else if (css.backgroundColor == "blue") {\n      ansi += `\\x1b[44m`;\n    } else if (css.backgroundColor == "magenta") {\n      ansi += `\\x1b[45m`;\n    } else if (css.backgroundColor == "cyan") {\n      ansi += `\\x1b[46m`;\n    } else if (css.backgroundColor == "white") {\n      ansi += `\\x1b[47m`;\n    } else {\n      if (ArrayIsArray(css.backgroundColor)) {\n        const { 0: r\x2C 1: g\x2C 2: b } = css.backgroundColor;\n        ansi += `\\x1b[48;2;${r};${g};${b}m`;\n      } else {\n        const parsed = parseCssColor(css.backgroundColor);\n        if (parsed !== null) {\n          const { 0: r\x2C 1: g\x2C 2: b } = parsed;\n          ansi += `\\x1b[48;2;${r};${g};${b}m`;\n        } else {\n          ansi += "\\x1b[49m";\n        }\n      }\n    }\n  }\n  if (!colorEquals(css.color\x2C prevCss.color)) {\n    if (css.color == null) {\n      ansi += "\\x1b[39m";\n    } else if (css.color == "black") {\n      ansi += `\\x1b[30m`;\n    } else if (css.color == "red") {\n      ansi += `\\x1b[31m`;\n    } else if (css.color == "green") {\n      ansi += `\\x1b[32m`;\n    } else if (css.color == "yellow") {\n      ansi += `\\x1b[33m`;\n    } else if (css.color == "blue") {\n      ansi += `\\x1b[34m`;\n    } else if (css.color == "magenta") {\n      ansi += `\\x1b[35m`;\n    } else if (css.color == "cyan") {\n      ansi += `\\x1b[36m`;\n    } else if (css.color == "white") {\n      ansi += `\\x1b[37m`;\n    } else {\n      if (ArrayIsArray(css.color)) {\n        const { 0: r\x2C 1: g\x2C 2: b } = css.color;\n        ansi += `\\x1b[38;2;${r};${g};${b}m`;\n      } else {\n        const parsed = parseCssColor(css.color);\n        if (parsed !== null) {\n          const { 0: r\x2C 1: g\x2C 2: b } = parsed;\n          ansi += `\\x1b[38;2;${r};${g};${b}m`;\n        } else {\n          ansi += "\\x1b[39m";\n        }\n      }\n    }\n  }\n  if (css.fontWeight != prevCss.fontWeight) {\n    if (css.fontWeight == "bold") {\n      ansi += `\\x1b[1m`;\n    } else {\n      ansi += "\\x1b[22m";\n    }\n  }\n  if (css.fontStyle != prevCss.fontStyle) {\n    if (css.fontStyle == "italic") {\n      ansi += `\\x1b[3m`;\n    } else {\n      ansi += "\\x1b[23m";\n    }\n  }\n  if (!colorEquals(css.textDecorationColor\x2C prevCss.textDecorationColor)) {\n    if (css.textDecorationColor != null) {\n      const { 0: r\x2C 1: g\x2C 2: b } = css.textDecorationColor;\n      ansi += `\\x1b[58;2;${r};${g};${b}m`;\n    } else {\n      ansi += "\\x1b[59m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "line-through")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "line-through")) {\n      ansi += "\\x1b[9m";\n    } else {\n      ansi += "\\x1b[29m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "overline")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "overline")) {\n      ansi += "\\x1b[53m";\n    } else {\n      ansi += "\\x1b[55m";\n    }\n  }\n  if (\n    ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline") !=\n      ArrayPrototypeIncludes(prevCss.textDecorationLine\x2C "underline")\n  ) {\n    if (ArrayPrototypeIncludes(css.textDecorationLine\x2C "underline")) {\n      ansi += "\\x1b[4m";\n    } else {\n      ansi += "\\x1b[24m";\n    }\n  }\n  return ansi;\n}\n\nfunction inspectArgs(args\x2C inspectOptions = { __proto__: null }) {\n  const ctx = {\n    ...getDefaultInspectOptions()\x2C\n    colors: inspectOptions.colors ?? !noColorStdout()\x2C\n    ...inspectOptions\x2C\n  };\n  if (inspectOptions.iterableLimit !== undefined) {\n    ctx.maxArrayLength = inspectOptions.iterableLimit;\n  }\n  if (inspectOptions.strAbbreviateSize !== undefined) {\n    ctx.maxStringLength = inspectOptions.strAbbreviateSize;\n  }\n  if (ctx.colors) ctx.stylize = createStylizeWithColor(styles\x2C colors);\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n\n  const noColor = !ctx.colors;\n  const first = args[0];\n  let a = 0;\n  let string = "";\n\n  if (typeof first == "string" && args.length > 1) {\n    a++;\n    // Index of the first not-yet-appended character. Use this so we only\n    // have to append to `string` when a substitution occurs / at the end.\n    let appendedChars = 0;\n    let usedStyle = false;\n    let prevCss = null;\n    for (let i = 0; i < first.length - 1; i++) {\n      if (first[i] == "%") {\n        const char = first[++i];\n        if (a < args.length) {\n          let formattedArg = null;\n          if (char == "s") {\n            // Format as a string.\n            formattedArg = String(args[a++]);\n          } else if (ArrayPrototypeIncludes(["d"\x2C "i"]\x2C char)) {\n            // Format as an integer.\n            const value = args[a++];\n            if (typeof value == "bigint") {\n              formattedArg = `${value}n`;\n            } else if (typeof value == "number") {\n              formattedArg = `${NumberParseInt(String(value))}`;\n            } else {\n              formattedArg = "NaN";\n            }\n          } else if (char == "f") {\n            // Format as a floating point value.\n            const value = args[a++];\n            if (typeof value == "number") {\n              formattedArg = `${value}`;\n            } else {\n              formattedArg = "NaN";\n            }\n          } else if (ArrayPrototypeIncludes(["O"\x2C "o"]\x2C char)) {\n            // Format as an object.\n            formattedArg = formatValue(ctx\x2C args[a++]\x2C 0);\n          } else if (char == "c") {\n            const value = args[a++];\n            if (!noColor) {\n              const css = parseCss(value);\n              formattedArg = cssToAnsi(css\x2C prevCss);\n              if (formattedArg != "") {\n                usedStyle = true;\n                prevCss = css;\n              }\n            } else {\n              formattedArg = "";\n            }\n          }\n\n          if (formattedArg != null) {\n            string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) +\n              formattedArg;\n            appendedChars = i + 1;\n          }\n        }\n        if (char == "%") {\n          string += StringPrototypeSlice(first\x2C appendedChars\x2C i - 1) + "%";\n          appendedChars = i + 1;\n        }\n      }\n    }\n    string += StringPrototypeSlice(first\x2C appendedChars);\n    if (usedStyle) {\n      string += "\\x1b[0m";\n    }\n  }\n\n  for (; a < args.length; a++) {\n    if (a > 0) {\n      string += " ";\n    }\n    if (typeof args[a] == "string") {\n      string += args[a];\n    } else {\n      // Use default maximum depth for null or undefined arguments.\n      string += formatValue(ctx\x2C args[a]\x2C 0);\n    }\n  }\n\n  if (ctx.indentLevel > 0) {\n    const groupIndent = StringPrototypeRepeat(\n      DEFAULT_INDENT\x2C\n      ctx.indentLevel\x2C\n    );\n    string = groupIndent +\n      StringPrototypeReplaceAll(string\x2C "\\n"\x2C `\\n${groupIndent}`);\n  }\n\n  return string;\n}\n\nfunction createStylizeWithColor(styles\x2C colors) {\n  return function stylizeWithColor(str\x2C styleType) {\n    const style = styles[styleType];\n    if (style !== undefined) {\n      const color = colors[style];\n      if (color !== undefined) {\n        return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\n      }\n    }\n    return str;\n  };\n}\n\nconst countMap = new SafeMap();\nconst timerMap = new SafeMap();\nconst isConsoleInstance = Symbol("isConsoleInstance");\n\n/** @param noColor {boolean} */\nfunction getConsoleInspectOptions(noColor) {\n  return {\n    ...getDefaultInspectOptions()\x2C\n    colors: !noColor\x2C\n    stylize: noColor ? stylizeNoColor : createStylizeWithColor(styles\x2C colors)\x2C\n  };\n}\n\nclass Console {\n  #printFunc = null;\n  [isConsoleInstance] = false;\n\n  constructor(printFunc) {\n    this.#printFunc = printFunc;\n    this.indentLevel = 0;\n    this[isConsoleInstance] = true;\n\n    // ref https://console.spec.whatwg.org/#console-namespace\n    // For historical web-compatibility reasons\x2C the namespace object for\n    // console must have as its [[Prototype]] an empty object\x2C created as if\n    // by ObjectCreate(%ObjectPrototype%)\x2C instead of %ObjectPrototype%.\n    const console = ObjectCreate({}\x2C {\n      [SymbolToStringTag]: {\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n        value: "console"\x2C\n      }\x2C\n    });\n    ObjectAssign(console\x2C this);\n    return console;\n  }\n\n  log = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getConsoleInspectOptions(noColorStdout())\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  debug = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getConsoleInspectOptions(noColorStdout())\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      0\x2C\n    );\n  };\n\n  info = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getConsoleInspectOptions(noColorStdout())\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  dir = (obj = undefined\x2C options = { __proto__: null }) => {\n    this.#printFunc(\n      inspectArgs([obj]\x2C {\n        ...getConsoleInspectOptions(noColorStdout())\x2C\n        ...options\x2C\n      }) + "\\n"\x2C\n      1\x2C\n    );\n  };\n\n  dirxml = this.dir;\n\n  warn = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getConsoleInspectOptions(noColorStderr())\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      2\x2C\n    );\n  };\n\n  error = (...args) => {\n    this.#printFunc(\n      inspectArgs(args\x2C {\n        ...getConsoleInspectOptions(noColorStderr())\x2C\n        indentLevel: this.indentLevel\x2C\n      }) + "\\n"\x2C\n      3\x2C\n    );\n  };\n\n  assert = (condition = false\x2C ...args) => {\n    if (condition) {\n      return;\n    }\n\n    if (args.length === 0) {\n      this.error("Assertion failed");\n      return;\n    }\n\n    const [first\x2C ...rest] = new SafeArrayIterator(args);\n\n    if (typeof first === "string") {\n      this.error(\n        `Assertion failed: ${first}`\x2C\n        ...new SafeArrayIterator(rest)\x2C\n      );\n      return;\n    }\n\n    this.error(`Assertion failed:`\x2C ...new SafeArrayIterator(args));\n  };\n\n  count = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(countMap\x2C label)) {\n      const current = MapPrototypeGet(countMap\x2C label) || 0;\n      MapPrototypeSet(countMap\x2C label\x2C current + 1);\n    } else {\n      MapPrototypeSet(countMap\x2C label\x2C 1);\n    }\n\n    this.info(`${label}: ${MapPrototypeGet(countMap\x2C label)}`);\n  };\n\n  countReset = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(countMap\x2C label)) {\n      MapPrototypeSet(countMap\x2C label\x2C 0);\n    } else {\n      this.warn(`Count for '${label}' does not exist`);\n    }\n  };\n\n  table = (data = undefined\x2C properties = undefined) => {\n    if (properties !== undefined && !ArrayIsArray(properties)) {\n      throw new Error(\n        "The 'properties' argument must be of type Array. " +\n          "Received type " + typeof properties\x2C\n      );\n    }\n\n    if (data === null || typeof data !== "object") {\n      return this.log(data);\n    }\n\n    const stringifyValue = (value) =>\n      inspectValueWithQuotes(value\x2C {\n        ...getDefaultInspectOptions()\x2C\n        depth: 1\x2C\n        compact: true\x2C\n      });\n    const toTable = (header\x2C body) => this.log(cliTable(header\x2C body));\n\n    let resultData;\n    const isSetObject = isSet(data);\n    const isMapObject = isMap(data);\n    const valuesKey = "Values";\n    const indexKey = isSetObject || isMapObject ? "(iter idx)" : "(idx)";\n\n    if (isSetObject) {\n      resultData = [...new SafeSetIterator(data)];\n    } else if (isMapObject) {\n      let idx = 0;\n      resultData = { __proto__: null };\n\n      MapPrototypeForEach(data\x2C (v\x2C k) => {\n        resultData[idx] = { Key: k\x2C Values: v };\n        idx++;\n      });\n    } else {\n      resultData = data;\n    }\n\n    const keys = ObjectKeys(resultData);\n    const numRows = keys.length;\n\n    const objectValues = properties\n      ? ObjectFromEntries(\n        ArrayPrototypeMap(\n          properties\x2C\n          (name) => [name\x2C ArrayPrototypeFill(new Array(numRows)\x2C "")]\x2C\n        )\x2C\n      )\n      : {};\n    const indexKeys = [];\n    const values = [];\n\n    let hasPrimitives = false;\n    ArrayPrototypeForEach(keys\x2C (k\x2C idx) => {\n      const value = resultData[k];\n      const primitive = value === null ||\n        (typeof value !== "function" && typeof value !== "object");\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        ArrayPrototypePush(values\x2C stringifyValue(value));\n      } else {\n        const valueObj = value || {};\n        const keys = properties || ObjectKeys(valueObj);\n        for (let i = 0; i < keys.length; ++i) {\n          const k = keys[i];\n          if (!primitive && ReflectHas(valueObj\x2C k)) {\n            if (!(ReflectHas(objectValues\x2C k))) {\n              objectValues[k] = ArrayPrototypeFill(new Array(numRows)\x2C "");\n            }\n            objectValues[k][idx] = stringifyValue(valueObj[k]);\n          }\n        }\n        ArrayPrototypePush(values\x2C "");\n      }\n\n      ArrayPrototypePush(indexKeys\x2C k);\n    });\n\n    const headerKeys = ObjectKeys(objectValues);\n    const bodyValues = ObjectValues(objectValues);\n    const headerProps = properties ||\n      [\n        ...new SafeArrayIterator(headerKeys)\x2C\n        !isMapObject && hasPrimitives && valuesKey\x2C\n      ];\n    const header = ArrayPrototypeFilter([\n      indexKey\x2C\n      ...new SafeArrayIterator(headerProps)\x2C\n    ]\x2C Boolean);\n    const body = [indexKeys\x2C ...new SafeArrayIterator(bodyValues)\x2C values];\n\n    toTable(header\x2C body);\n  };\n\n  time = (label = "default") => {\n    label = String(label);\n\n    if (MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' already exists`);\n      return;\n    }\n\n    MapPrototypeSet(timerMap\x2C label\x2C DateNow());\n  };\n\n  timeLog = (label = "default"\x2C ...args) => {\n    label = String(label);\n\n    if (!MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' does not exist`);\n      return;\n    }\n\n    const startTime = MapPrototypeGet(timerMap\x2C label);\n    const duration = DateNow() - startTime;\n\n    this.info(`${label}: ${duration}ms`\x2C ...new SafeArrayIterator(args));\n  };\n\n  timeEnd = (label = "default") => {\n    label = String(label);\n\n    if (!MapPrototypeHas(timerMap\x2C label)) {\n      this.warn(`Timer '${label}' does not exist`);\n      return;\n    }\n\n    const startTime = MapPrototypeGet(timerMap\x2C label);\n    MapPrototypeDelete(timerMap\x2C label);\n    const duration = DateNow() - startTime;\n\n    this.info(`${label}: ${duration}ms`);\n  };\n\n  group = (...label) => {\n    if (label.length > 0) {\n      this.log(...new SafeArrayIterator(label));\n    }\n    this.indentLevel += 2;\n  };\n\n  groupCollapsed = this.group;\n\n  groupEnd = () => {\n    if (this.indentLevel > 0) {\n      this.indentLevel -= 2;\n    }\n  };\n\n  clear = () => {\n    this.indentLevel = 0;\n    this.#printFunc(CSI.kClear\x2C 1);\n    this.#printFunc(CSI.kClearScreenDown\x2C 1);\n  };\n\n  trace = (...args) => {\n    const message = inspectArgs(\n      args\x2C\n      {\n        ...getConsoleInspectOptions(noColorStderr())\x2C\n        indentLevel: 0\x2C\n      }\x2C\n    );\n    const err = {\n      name: "Trace"\x2C\n      message\x2C\n    };\n    ErrorCaptureStackTrace(err\x2C this.trace);\n    this.error(err.stack);\n  };\n\n  // These methods are noops\x2C but when the inspector is connected\x2C they\n  // call into V8.\n  profile = (_label) => {};\n  profileEnd = (_label) => {};\n  timeStamp = (_label) => {};\n\n  static [SymbolHasInstance](instance) {\n    return instance[isConsoleInstance];\n  }\n}\n\nconst customInspect = SymbolFor("Deno.customInspect");\n\nfunction inspect(\n  value\x2C\n  inspectOptions = { __proto__: null }\x2C\n) {\n  // Default options\n  const ctx = {\n    ...getDefaultInspectOptions()\x2C\n    ...inspectOptions\x2C\n  };\n  if (inspectOptions.iterableLimit !== undefined) {\n    ctx.maxArrayLength = inspectOptions.iterableLimit;\n  }\n  if (inspectOptions.strAbbreviateSize !== undefined) {\n    ctx.maxStringLength = inspectOptions.strAbbreviateSize;\n  }\n\n  if (ctx.colors) ctx.stylize = createStylizeWithColor(styles\x2C colors);\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\n  return formatValue(ctx\x2C value\x2C 0);\n}\n\n/** Creates a proxy that represents a subset of the properties\n * of the original object optionally without evaluating the properties\n * in order to get the values. */\nfunction createFilteredInspectProxy({ object\x2C keys\x2C evaluate }) {\n  const obj = class {};\n  if (object.constructor?.name) {\n    ObjectDefineProperty(obj\x2C "name"\x2C { value: object.constructor.name });\n  }\n\n  return new Proxy(new obj()\x2C {\n    get(_target\x2C key) {\n      if (key === SymbolToStringTag) {\n        return object.constructor?.name;\n      } else if (ArrayPrototypeIncludes(keys\x2C key)) {\n        return ReflectGet(object\x2C key);\n      } else {\n        return undefined;\n      }\n    }\x2C\n    getOwnPropertyDescriptor(_target\x2C key) {\n      if (!ArrayPrototypeIncludes(keys\x2C key)) {\n        return undefined;\n      } else if (evaluate) {\n        return getEvaluatedDescriptor(object\x2C key);\n      } else {\n        return getDescendantPropertyDescriptor(object\x2C key) ??\n          getEvaluatedDescriptor(object\x2C key);\n      }\n    }\x2C\n    has(_target\x2C key) {\n      return ArrayPrototypeIncludes(keys\x2C key);\n    }\x2C\n    ownKeys() {\n      return keys;\n    }\x2C\n  });\n\n  function getDescendantPropertyDescriptor(object\x2C key) {\n    let propertyDescriptor = ReflectGetOwnPropertyDescriptor(object\x2C key);\n    if (!propertyDescriptor) {\n      const prototype = ReflectGetPrototypeOf(object);\n      if (prototype) {\n        propertyDescriptor = getDescendantPropertyDescriptor(prototype\x2C key);\n      }\n    }\n    return propertyDescriptor;\n  }\n\n  function getEvaluatedDescriptor(object\x2C key) {\n    return {\n      configurable: true\x2C\n      enumerable: true\x2C\n      value: object[key]\x2C\n    };\n  }\n}\n\n// Expose these fields to internalObject for tests.\ninternals.Console = Console;\ninternals.cssToAnsi = cssToAnsi;\ninternals.inspectArgs = inspectArgs;\ninternals.parseCss = parseCss;\ninternals.parseCssColor = parseCssColor;\n\nexport {\n  colors\x2C\n  Console\x2C\n  createFilteredInspectProxy\x2C\n  createStylizeWithColor\x2C\n  CSI\x2C\n  customInspect\x2C\n  formatBigInt\x2C\n  formatNumber\x2C\n  formatValue\x2C\n  getDefaultInspectOptions\x2C\n  getStderrNoColor\x2C\n  getStdoutNoColor\x2C\n  inspect\x2C\n  inspectArgs\x2C\n  quoteString\x2C\n  setNoColorFns\x2C\n  styles\x2C\n};\n
code-source-info,0x2c37005818b4,9,93871,94062,C0O93871C3O93890C10O93895C14O93913C27O93969C30O93969C34O93944C47O94013C55O93913C63O94035C70O93905C76O94061,,
code-creation,JS,9,26159,0x2c3700581964,22, ext:runtime_main/js/99_main.js:368:3,0x2c370035483c,~
code-source-info,0x2c3700581964,305,10238,10300,C0O10268C6O10244C11O10272C17O10272C21O10300,,
code-creation,JS,9,26180,0x2c37005819cc,56,getConsoleInspectOptions ext:deno_console/01_console.js:3071:34,0x2c37001d1b24,~
code-source-info,0x2c37005819cc,9,92968,93134,C0O92982C4O92998C15O93039C22O93061C28O93088C32O93111C38O93119C44O93088C55O93132,,
code-creation,JS,9,26195,0x2c3700581a58,20,getDefaultInspectOptions ext:deno_console/01_console.js:2350:34,0x2c37001d1e2c,~
code-source-info,0x2c3700581a58,9,72229,72315,C0O72236C7O72282C19O72313,,
code-creation,JS,9,26225,0x2c3700581ab4,18,createStylizeWithColor ext:deno_console/01_console.js:3053:32,0x2c37001d1ee0,~
code-source-info,0x2c3700581ab4,9,92474,92781,C0O92474C13O92495C17O92779,,
tick,0x64950d0e34d0,26246,0,0x0,9,0x64950db65500,0x2c37005817ef,0x64950d8767c5
tick,0x64950d546be0,26252,0,0x0,9,0x64950db65500,0x2c37005817ef,0x64950d8767c5
code-creation,JS,9,26326,0x2c3700581b98,831,inspectArgs ext:deno_console/01_console.js:2940:21,0x2c37001d1ea4,~
code-source-info,0x2c3700581b
code-creation,JS,9,26407,0x2c3700582078,24, ext:runtime/98_global_scope_shared.js:132:25,0x2c37002cece4,~
script-source,161,ext:runtime/98_global_scope_shared.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core } from "ext:core/mod.js";\n\nimport * as event from "ext:deno_web/02_event.js";\nimport * as timers from "ext:deno_web/02_timers.js";\nimport * as base64 from "ext:deno_web/05_base64.js";\nimport * as encoding from "ext:deno_web/08_text_encoding.js";\nimport * as console from "ext:deno_console/01_console.js";\nimport * as caches from "ext:deno_cache/01_cache.js";\nimport * as compression from "ext:deno_web/14_compression.js";\nimport * as worker from "ext:runtime/11_workers.js";\nimport * as performance from "ext:deno_web/15_performance.js";\nimport * as crypto from "ext:deno_crypto/00_crypto.js";\nimport * as url from "ext:deno_url/00_url.js";\nimport * as urlPattern from "ext:deno_url/01_urlpattern.js";\nimport * as headers from "ext:deno_fetch/20_headers.js";\nimport * as streams from "ext:deno_web/06_streams.js";\nimport * as fileReader from "ext:deno_web/10_filereader.js";\nimport * as webSocket from "ext:deno_websocket/01_websocket.js";\nimport * as webSocketStream from "ext:deno_websocket/02_websocketstream.js";\nimport * as broadcastChannel from "ext:deno_broadcast_channel/01_broadcast_channel.js";\nimport * as file from "ext:deno_web/09_file.js";\nimport * as formData from "ext:deno_fetch/21_formdata.js";\nimport * as request from "ext:deno_fetch/23_request.js";\nimport * as response from "ext:deno_fetch/23_response.js";\nimport * as fetch from "ext:deno_fetch/26_fetch.js";\nimport * as eventSource from "ext:deno_fetch/27_eventsource.js";\nimport * as messagePort from "ext:deno_web/13_message_port.js";\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "ext:deno_web/01_dom_exception.js";\nimport * as abortSignal from "ext:deno_web/03_abort_signal.js";\nimport * as imageData from "ext:deno_web/16_image_data.js";\nimport { loadWebGPU } from "ext:deno_webgpu/00_init.js";\nimport * as webgpuSurface from "ext:deno_webgpu/02_surface.js";\nimport { unstableIds } from "ext:runtime/90_deno_ns.js";\n\nconst loadImage = core.createLazyLoader("ext:deno_canvas/01_image.js");\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\nconst windowOrWorkerGlobalScope = {\n  AbortController: core.propNonEnumerable(abortSignal.AbortController)\x2C\n  AbortSignal: core.propNonEnumerable(abortSignal.AbortSignal)\x2C\n  Blob: core.propNonEnumerable(file.Blob)\x2C\n  ByteLengthQueuingStrategy: core.propNonEnumerable(\n    streams.ByteLengthQueuingStrategy\x2C\n  )\x2C\n  CloseEvent: core.propNonEnumerable(event.CloseEvent)\x2C\n  CompressionStream: core.propNonEnumerable(compression.CompressionStream)\x2C\n  CountQueuingStrategy: core.propNonEnumerable(\n    streams.CountQueuingStrategy\x2C\n  )\x2C\n  CryptoKey: core.propNonEnumerable(crypto.CryptoKey)\x2C\n  CustomEvent: core.propNonEnumerable(event.CustomEvent)\x2C\n  DecompressionStream: core.propNonEnumerable(compression.DecompressionStream)\x2C\n  DOMException: core.propNonEnumerable(DOMException)\x2C\n  ErrorEvent: core.propNonEnumerable(event.ErrorEvent)\x2C\n  Event: core.propNonEnumerable(event.Event)\x2C\n  EventTarget: core.propNonEnumerable(event.EventTarget)\x2C\n  File: core.propNonEnumerable(file.File)\x2C\n  FileReader: core.propNonEnumerable(fileReader.FileReader)\x2C\n  FormData: core.propNonEnumerable(formData.FormData)\x2C\n  Headers: core.propNonEnumerable(headers.Headers)\x2C\n  ImageData: core.propNonEnumerable(imageData.ImageData)\x2C\n  ImageBitmap: core.propNonEnumerableLazyLoaded(\n    (image) => image.ImageBitmap\x2C\n    loadImage\x2C\n  )\x2C\n  MessageEvent: core.propNonEnumerable(event.MessageEvent)\x2C\n  Performance: core.propNonEnumerable(performance.Performance)\x2C\n  PerformanceEntry: core.propNonEnumerable(performance.PerformanceEntry)\x2C\n  PerformanceMark: core.propNonEnumerable(performance.PerformanceMark)\x2C\n  PerformanceMeasure: core.propNonEnumerable(performance.PerformanceMeasure)\x2C\n  PromiseRejectionEvent: core.propNonEnumerable(event.PromiseRejectionEvent)\x2C\n  ProgressEvent: core.propNonEnumerable(event.ProgressEvent)\x2C\n  ReadableStream: core.propNonEnumerable(streams.ReadableStream)\x2C\n  ReadableStreamDefaultReader: core.propNonEnumerable(\n    streams.ReadableStreamDefaultReader\x2C\n  )\x2C\n  Request: core.propNonEnumerable(request.Request)\x2C\n  Response: core.propNonEnumerable(response.Response)\x2C\n  TextDecoder: core.propNonEnumerable(encoding.TextDecoder)\x2C\n  TextEncoder: core.propNonEnumerable(encoding.TextEncoder)\x2C\n  TextDecoderStream: core.propNonEnumerable(encoding.TextDecoderStream)\x2C\n  TextEncoderStream: core.propNonEnumerable(encoding.TextEncoderStream)\x2C\n  TransformStream: core.propNonEnumerable(streams.TransformStream)\x2C\n  URL: core.propNonEnumerable(url.URL)\x2C\n  URLPattern: core.propNonEnumerable(urlPattern.URLPattern)\x2C\n  URLSearchParams: core.propNonEnumerable(url.URLSearchParams)\x2C\n  WebSocket: core.propNonEnumerable(webSocket.WebSocket)\x2C\n  MessageChannel: core.propNonEnumerable(messagePort.MessageChannel)\x2C\n  MessagePort: core.propNonEnumerable(messagePort.MessagePort)\x2C\n  Worker: core.propNonEnumerable(worker.Worker)\x2C\n  WritableStream: core.propNonEnumerable(streams.WritableStream)\x2C\n  WritableStreamDefaultWriter: core.propNonEnumerable(\n    streams.WritableStreamDefaultWriter\x2C\n  )\x2C\n  WritableStreamDefaultController: core.propNonEnumerable(\n    streams.WritableStreamDefaultController\x2C\n  )\x2C\n  ReadableByteStreamController: core.propNonEnumerable(\n    streams.ReadableByteStreamController\x2C\n  )\x2C\n  ReadableStreamBYOBReader: core.propNonEnumerable(\n    streams.ReadableStreamBYOBReader\x2C\n  )\x2C\n  ReadableStreamBYOBRequest: core.propNonEnumerable(\n    streams.ReadableStreamBYOBRequest\x2C\n  )\x2C\n  ReadableStreamDefaultController: core.propNonEnumerable(\n    streams.ReadableStreamDefaultController\x2C\n  )\x2C\n  TransformStreamDefaultController: core.propNonEnumerable(\n    streams.TransformStreamDefaultController\x2C\n  )\x2C\n  atob: core.propWritable(base64.atob)\x2C\n  btoa: core.propWritable(base64.btoa)\x2C\n  createImageBitmap: core.propWritableLazyLoaded(\n    (image) => image.createImageBitmap\x2C\n    loadImage\x2C\n  )\x2C\n  clearInterval: core.propWritable(timers.clearInterval)\x2C\n  clearTimeout: core.propWritable(timers.clearTimeout)\x2C\n  caches: {\n    enumerable: true\x2C\n    configurable: true\x2C\n    get: caches.cacheStorage\x2C\n  }\x2C\n  CacheStorage: core.propNonEnumerable(caches.CacheStorage)\x2C\n  Cache: core.propNonEnumerable(caches.Cache)\x2C\n  console: core.propNonEnumerable(\n    new console.Console((msg\x2C level) => core.print(msg\x2C level > 1))\x2C\n  )\x2C\n  crypto: core.propReadOnly(crypto.crypto)\x2C\n  Crypto: core.propNonEnumerable(crypto.Crypto)\x2C\n  SubtleCrypto: core.propNonEnumerable(crypto.SubtleCrypto)\x2C\n  fetch: core.propWritable(fetch.fetch)\x2C\n  EventSource: core.propWritable(eventSource.EventSource)\x2C\n  performance: core.propWritable(performance.performance)\x2C\n  reportError: core.propWritable(event.reportError)\x2C\n  setInterval: core.propWritable(timers.setInterval)\x2C\n  setTimeout: core.propWritable(timers.setTimeout)\x2C\n  structuredClone: core.propWritable(messagePort.structuredClone)\x2C\n  // Branding as a WebIDL object\n  [webidl.brand]: core.propNonEnumerable(webidl.brand)\x2C\n};\n\nconst unstableForWindowOrWorkerGlobalScope = { __proto__: null };\nunstableForWindowOrWorkerGlobalScope[unstableIds.broadcastChannel] = {\n  BroadcastChannel: core.propNonEnumerable(broadcastChannel.BroadcastChannel)\x2C\n};\nunstableForWindowOrWorkerGlobalScope[unstableIds.net] = {\n  WebSocketStream: core.propNonEnumerable(webSocketStream.WebSocketStream)\x2C\n  WebSocketError: core.propNonEnumerable(webSocketStream.WebSocketError)\x2C\n};\n// deno-fmt-ignore\nunstableForWindowOrWorkerGlobalScope[unstableIds.webgpu] = {\n  GPU: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPU\x2C loadWebGPU)\x2C\n  GPUAdapter: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUAdapter\x2C loadWebGPU)\x2C\n  GPUAdapterInfo: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUAdapterInfo\x2C loadWebGPU)\x2C\n  GPUSupportedLimits: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSupportedLimits\x2C loadWebGPU)\x2C\n  GPUSupportedFeatures: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSupportedFeatures\x2C loadWebGPU)\x2C\n  GPUDeviceLostInfo: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUDeviceLostInfo\x2C loadWebGPU)\x2C\n  GPUDevice: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUDevice\x2C loadWebGPU)\x2C\n  GPUQueue: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUQueue\x2C loadWebGPU)\x2C\n  GPUBuffer: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBuffer\x2C loadWebGPU)\x2C\n  GPUBufferUsage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBufferUsage\x2C loadWebGPU)\x2C\n  GPUMapMode: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUMapMode\x2C loadWebGPU)\x2C\n  GPUTextureUsage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTextureUsage\x2C loadWebGPU)\x2C\n  GPUTexture: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTexture\x2C loadWebGPU)\x2C\n  GPUTextureView: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUTextureView\x2C loadWebGPU)\x2C\n  GPUSampler: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUSampler\x2C loadWebGPU)\x2C\n  GPUBindGroupLayout: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBindGroupLayout\x2C loadWebGPU)\x2C\n  GPUPipelineLayout: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUPipelineLayout\x2C loadWebGPU)\x2C\n  GPUBindGroup: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUBindGroup\x2C loadWebGPU)\x2C\n  GPUShaderModule: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUShaderModule\x2C loadWebGPU)\x2C\n  GPUShaderStage: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUShaderStage\x2C loadWebGPU)\x2C\n  GPUComputePipeline: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUComputePipeline\x2C loadWebGPU)\x2C\n  GPURenderPipeline: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderPipeline\x2C loadWebGPU)\x2C\n  GPUColorWrite: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUColorWrite\x2C loadWebGPU)\x2C\n  GPUCommandEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUCommandEncoder\x2C loadWebGPU)\x2C\n  GPURenderPassEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderPassEncoder\x2C loadWebGPU)\x2C\n  GPUComputePassEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUComputePassEncoder\x2C loadWebGPU)\x2C\n  GPUCommandBuffer: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUCommandBuffer\x2C loadWebGPU)\x2C\n  GPURenderBundleEncoder: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderBundleEncoder\x2C loadWebGPU)\x2C\n  GPURenderBundle: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPURenderBundle\x2C loadWebGPU)\x2C\n  GPUQuerySet: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUQuerySet\x2C loadWebGPU)\x2C\n  GPUError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUError\x2C loadWebGPU)\x2C\n  GPUValidationError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUValidationError\x2C loadWebGPU)\x2C\n  GPUOutOfMemoryError: core.propNonEnumerableLazyLoaded((webgpu) => webgpu.GPUOutOfMemoryError\x2C loadWebGPU)\x2C\n  GPUCanvasContext: core.propNonEnumerable(webgpuSurface.GPUCanvasContext)\x2C\n};\n\nexport { unstableForWindowOrWorkerGlobalScope\x2C windowOrWorkerGlobalScope };\n
code-source-info,0x2c3700582078,161,6345,6387,C0O6366C6O6366C13O6383C17O6366C23O6387,,
tick,0x64950d26c820,26674,0,0x0,9,0x64950db65500,0x2c37005818fa,0x2c37005817ef,0x64950d8767c5
code-creation,JS,9,26679,0x2c37005820d8,11,print ext:core/01_core.js:628:12,0x2c37001cad10,~
code-source-info,0x2c37005820d8,5,16247,16283,C0O16263C5O16263C10O16283,,
code-creation,JS,9,26806,0x2c37005821a8,712,bench ext:cli/40_bench.js:45:15,0x2c370055f184,~
code-source-info,0x2c37005821a
code-creation,JS,9,26873,0x2c37005825f4,26,wrapBenchmark ext:cli/40_bench.js:414:23,0x2c370055f328,~
code-source-info,0x2c37005825f4,309,11496,12676,C0O11496C12O11518C15O11523C19O11518C21O11529C25O12674,,
code-creation,JS,9,26949,0x2c37005826cc,370,escapeName ext:cli/40_test_common.js:23:27,0x2c370055c7a8,~
code-source-info,0x2c37005826cc,307,510,965,C0O578C2O590C6O583C11O625C16O625C22O644C24O651C31O663C36O757C60O752C88O752C110O733C151O741C265O787C279O794C286O721C351O862C353O874C354O599C359O565C367O951C369O963,,
new,MemoryChunk,0x2c37005c0000,262144
new,MemoryChunk,0x64956d800000,262144
code-creation,JS,9,27068,0x2c3700582904,459,eventLoopTick ext:core/01_core.js:155:25,0x2c37001ca06c,~
code-source-info,0x2c3700582904,5,3844,5908,C0O3844C2O3907C4O3924C8O3931C11O3912C16O3970C18O3979C22O4002C24O4014C27O4011C31O4026C37O4026C42O3938C48O3894C52O4151C56O4158C59O4140C64O4185C66O4190C68O4192C72O4210C76O4190C81O4233C87O4250C92O4253C96O4219C101O4172C107O4284C113O4284C116O4367C118O4372C120O4374C124O4393C128O4372C133O4425C139O4443C143O4489C147O4633C149O4668C151O4694C157O4694C160O4827C165O4857C167O4454C171O4402C176O4354C180O4928C184O4935C187O4917C191O4945C193O4965C198O4979C204O5006C206O5020C210O5011C215O5046C217O5065C224O5057C230O5089C232O5098C235O5095C239O5112C245O5132C251O5132C258O5153C263O5207C265O5216C268O5213C272O5234C282O5234C302O5280C314O5280C320O5326C326O5326C329O5030C335O4993C339O5361C340O5375C342O5390C347O5401C353O5412C359O5428C365O5428C369O5559C373O5566C376O5548C380O5576C382O5613C384O5631C388O5618C393O5673C401O5727C408O5755C411O5752C416O5673C422O5780C424O5818C426O5831C429O5828C433O5847C442O5847C447O5641C453O5600C458O5907,,
code-creation,JS,9,27115,0x2c3700582c0c,41,runNextTicks ext:deno_node/_next_tick.ts:61:29,0x2c37002d2ef4,~
code-source-info,0x2c3700582c0c,167,2170,2521,C0O2395C6O2405C11O2405C17O2431C21O2436C26O2436C30O2457C31O2469C32O2476C36O2476C39O2507C40O2519,,
code-creation,JS,10,27126,0x64956d800040,1392,setUpAsyncStub ext:core/00_infra.js:193:26,0x2c37001c906c,^
code-source-info,0x64956d800040,4,5445,12118,,,
code-creation,JS,10,27131,0x64956d8005c0,696,removeImportedOps ext:runtime_main/js/99_main.js:606:27,0x2c370035424c,^
code-source-info,0x64956d8005c0,305,17930,18153,,,
code-creation,JS,10,27137,0x64956d8008c0,104,propWritable ext:core/01_core.js:509:24,0x2c37001ca710,^
code-source-info,0x64956d8008c0,5,14073,14191,,,
code-creation,JS,10,27142,0x64956d800940,160,propGetterOnly ext:core/01_core.js:536:26,0x2c37001ca8fc,^
code-source-info,0x64956d800940,5,14511,14630,,,
code-creation,JS,10,27189,0x64956d800a00,816,defineEventHandler ext:deno_web/02_event.js:1412:28,0x2c37001db34c,^
script-source,15,ext:deno_web/02_event.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// This module follows most of the WHATWG Living Standard for the DOM logic.\n// Many parts of the DOM are not implemented in Deno\x2C but the logic for those\n// parts still exists.  This means you will observe a lot of strange structures\n// and impossible logic branches based on what Deno currently supports.\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  MapPrototypeGet\x2C\n  MapPrototypeSet\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ReflectDefineProperty\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { DOMException } from "./01_dom_exception.js";\nimport { createFilteredInspectProxy } from "ext:deno_console/01_console.js";\n\n// This should be set via setGlobalThis this is required so that if even\n// user deletes globalThis it is still usable\nlet globalThis_;\n\nfunction saveGlobalThisReference(val) {\n  globalThis_ = val;\n}\n\n// accessors for non runtime visible data\n\nfunction getDispatched(event) {\n  return Boolean(event[_dispatched]);\n}\n\nfunction getPath(event) {\n  return event[_path] ?? [];\n}\n\nfunction getStopImmediatePropagation(event) {\n  return Boolean(event[_stopImmediatePropagationFlag]);\n}\n\nfunction setCurrentTarget(\n  event\x2C\n  value\x2C\n) {\n  event[_attributes].currentTarget = value;\n}\n\nfunction setIsTrusted(event\x2C value) {\n  event[_isTrusted] = value;\n}\n\nfunction setDispatched(event\x2C value) {\n  event[_dispatched] = value;\n}\n\nfunction setEventPhase(event\x2C value) {\n  event[_attributes].eventPhase = value;\n}\n\nfunction setInPassiveListener(event\x2C value) {\n  event[_inPassiveListener] = value;\n}\n\nfunction setPath(event\x2C value) {\n  event[_path] = value;\n}\n\nfunction setRelatedTarget(\n  event\x2C\n  value\x2C\n) {\n  event[_attributes].relatedTarget = value;\n}\n\nfunction setTarget(event\x2C value) {\n  event[_attributes].target = value;\n}\n\nfunction setStopImmediatePropagation(\n  event\x2C\n  value\x2C\n) {\n  event[_stopImmediatePropagationFlag] = value;\n}\n\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\n  get isTrusted() {\n    return this[_isTrusted];\n  }\x2C\n}\x2C "isTrusted").get;\n\nconst _attributes = Symbol("[[attributes]]");\nconst _canceledFlag = Symbol("[[canceledFlag]]");\nconst _stopPropagationFlag = Symbol("[[stopPropagationFlag]]");\nconst _stopImmediatePropagationFlag = Symbol(\n  "[[stopImmediatePropagationFlag]]"\x2C\n);\nconst _inPassiveListener = Symbol("[[inPassiveListener]]");\nconst _dispatched = Symbol("[[dispatched]]");\nconst _isTrusted = Symbol("[[isTrusted]]");\nconst _path = Symbol("[[path]]");\n\nclass Event {\n  constructor(type\x2C eventInitDict = { __proto__: null }) {\n    // TODO(lucacasonato): remove when this interface is spec aligned\n    this[SymbolToStringTag] = "Event";\n    this[_canceledFlag] = false;\n    this[_stopPropagationFlag] = false;\n    this[_stopImmediatePropagationFlag] = false;\n    this[_inPassiveListener] = false;\n    this[_dispatched] = false;\n    this[_isTrusted] = false;\n    this[_path] = [];\n\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to construct 'Event'"\x2C\n    );\n    type = webidl.converters.DOMString(\n      type\x2C\n      "Failed to construct 'Event'"\x2C\n      "Argument 1"\x2C\n    );\n\n    this[_attributes] = {\n      type\x2C\n      bubbles: !!eventInitDict.bubbles\x2C\n      cancelable: !!eventInitDict.cancelable\x2C\n      composed: !!eventInitDict.composed\x2C\n      currentTarget: null\x2C\n      eventPhase: Event.NONE\x2C\n      target: null\x2C\n      timeStamp: 0\x2C\n    };\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(EventPrototype\x2C this)\x2C\n        keys: EVENT_PROPS\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  get type() {\n    return this[_attributes].type;\n  }\n\n  get target() {\n    return this[_attributes].target;\n  }\n\n  get srcElement() {\n    return null;\n  }\n\n  set srcElement(_) {\n    // this member is deprecated\n  }\n\n  get currentTarget() {\n    return this[_attributes].currentTarget;\n  }\n\n  composedPath() {\n    const path = this[_path];\n    if (path.length === 0) {\n      return [];\n    }\n\n    if (!this.currentTarget) {\n      throw new Error("assertion error");\n    }\n    const composedPath = [\n      {\n        item: this.currentTarget\x2C\n        itemInShadowTree: false\x2C\n        relatedTarget: null\x2C\n        rootOfClosedTree: false\x2C\n        slotInClosedTree: false\x2C\n        target: null\x2C\n        touchTargetList: []\x2C\n      }\x2C\n    ];\n\n    let currentTargetIndex = 0;\n    let currentTargetHiddenSubtreeLevel = 0;\n\n    for (let index = path.length - 1; index >= 0; index--) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n      if (rootOfClosedTree) {\n        currentTargetHiddenSubtreeLevel++;\n      }\n\n      if (item === this.currentTarget) {\n        currentTargetIndex = index;\n        break;\n      }\n\n      if (slotInClosedTree) {\n        currentTargetHiddenSubtreeLevel--;\n      }\n    }\n\n    let currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n    let maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n    for (let i = currentTargetIndex - 1; i >= 0; i--) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[i];\n\n      if (rootOfClosedTree) {\n        currentHiddenLevel++;\n      }\n\n      if (currentHiddenLevel <= maxHiddenLevel) {\n        ArrayPrototypeUnshift(composedPath\x2C {\n          item\x2C\n          itemInShadowTree: false\x2C\n          relatedTarget: null\x2C\n          rootOfClosedTree: false\x2C\n          slotInClosedTree: false\x2C\n          target: null\x2C\n          touchTargetList: []\x2C\n        });\n      }\n\n      if (slotInClosedTree) {\n        currentHiddenLevel--;\n\n        if (currentHiddenLevel < maxHiddenLevel) {\n          maxHiddenLevel = currentHiddenLevel;\n        }\n      }\n    }\n\n    currentHiddenLevel = currentTargetHiddenSubtreeLevel;\n    maxHiddenLevel = currentTargetHiddenSubtreeLevel;\n\n    for (let index = currentTargetIndex + 1; index < path.length; index++) {\n      const { item\x2C rootOfClosedTree\x2C slotInClosedTree } = path[index];\n\n      if (slotInClosedTree) {\n        currentHiddenLevel++;\n      }\n\n      if (currentHiddenLevel <= maxHiddenLevel) {\n        ArrayPrototypePush(composedPath\x2C {\n          item\x2C\n          itemInShadowTree: false\x2C\n          relatedTarget: null\x2C\n          rootOfClosedTree: false\x2C\n          slotInClosedTree: false\x2C\n          target: null\x2C\n          touchTargetList: []\x2C\n        });\n      }\n\n      if (rootOfClosedTree) {\n        currentHiddenLevel--;\n\n        if (currentHiddenLevel < maxHiddenLevel) {\n          maxHiddenLevel = currentHiddenLevel;\n        }\n      }\n    }\n    return ArrayPrototypeMap(composedPath\x2C (p) => p.item);\n  }\n\n  get NONE() {\n    return Event.NONE;\n  }\n\n  get CAPTURING_PHASE() {\n    return Event.CAPTURING_PHASE;\n  }\n\n  get AT_TARGET() {\n    return Event.AT_TARGET;\n  }\n\n  get BUBBLING_PHASE() {\n    return Event.BUBBLING_PHASE;\n  }\n\n  static get NONE() {\n    return 0;\n  }\n\n  static get CAPTURING_PHASE() {\n    return 1;\n  }\n\n  static get AT_TARGET() {\n    return 2;\n  }\n\n  static get BUBBLING_PHASE() {\n    return 3;\n  }\n\n  get eventPhase() {\n    return this[_attributes].eventPhase;\n  }\n\n  stopPropagation() {\n    this[_stopPropagationFlag] = true;\n  }\n\n  get cancelBubble() {\n    return this[_stopPropagationFlag];\n  }\n\n  set cancelBubble(value) {\n    this[_stopPropagationFlag] = webidl.converters.boolean(value);\n  }\n\n  stopImmediatePropagation() {\n    this[_stopPropagationFlag] = true;\n    this[_stopImmediatePropagationFlag] = true;\n  }\n\n  get bubbles() {\n    return this[_attributes].bubbles;\n  }\n\n  get cancelable() {\n    return this[_attributes].cancelable;\n  }\n\n  get returnValue() {\n    return !this[_canceledFlag];\n  }\n\n  set returnValue(value) {\n    if (!webidl.converters.boolean(value)) {\n      this[_canceledFlag] = true;\n    }\n  }\n\n  preventDefault() {\n    if (this[_attributes].cancelable && !this[_inPassiveListener]) {\n      this[_canceledFlag] = true;\n    }\n  }\n\n  get defaultPrevented() {\n    return this[_canceledFlag];\n  }\n\n  get composed() {\n    return this[_attributes].composed;\n  }\n\n  get initialized() {\n    return true;\n  }\n\n  get timeStamp() {\n    return this[_attributes].timeStamp;\n  }\n}\n\nconst EventPrototype = Event.prototype;\n\n// Not spec compliant. The spec defines it as [LegacyUnforgeable]\n// but doing so has a big performance hit\nReflectDefineProperty(Event.prototype\x2C "isTrusted"\x2C {\n  enumerable: true\x2C\n  get: isTrusted\x2C\n});\n\nfunction defineEnumerableProps(\n  Ctor\x2C\n  props\x2C\n) {\n  for (let i = 0; i < props.length; ++i) {\n    const prop = props[i];\n    ReflectDefineProperty(Ctor.prototype\x2C prop\x2C { enumerable: true });\n  }\n}\n\nconst EVENT_PROPS = [\n  "bubbles"\x2C\n  "cancelable"\x2C\n  "composed"\x2C\n  "currentTarget"\x2C\n  "defaultPrevented"\x2C\n  "eventPhase"\x2C\n  "srcElement"\x2C\n  "target"\x2C\n  "returnValue"\x2C\n  "timeStamp"\x2C\n  "type"\x2C\n];\n\ndefineEnumerableProps(Event\x2C EVENT_PROPS);\n\n// This is currently the only node type we are using\x2C so instead of implementing\n// the whole of the Node interface at the moment\x2C this just gives us the one\n// value to power the standards based logic\nconst DOCUMENT_FRAGMENT_NODE = 11;\n\n// DOM Logic Helper functions and type guards\n\n/** Get the parent node\x2C for event targets that have a parent.\n *\n * Ref: https://dom.spec.whatwg.org/#get-the-parent */\nfunction getParent(eventTarget) {\n  return isNode(eventTarget) ? eventTarget.parentNode : null;\n}\n\nfunction getRoot(eventTarget) {\n  return isNode(eventTarget)\n    ? eventTarget.getRootNode({ composed: true })\n    : null;\n}\n\nfunction isNode(\n  eventTarget\x2C\n) {\n  return eventTarget?.nodeType !== undefined;\n}\n\n// https://dom.spec.whatwg.org/#concept-shadow-including-inclusive-ancestor\nfunction isShadowInclusiveAncestor(\n  ancestor\x2C\n  node\x2C\n) {\n  while (isNode(node)) {\n    if (node === ancestor) {\n      return true;\n    }\n\n    if (isShadowRoot(node)) {\n      node = node && getHost(node);\n    } else {\n      node = getParent(node);\n    }\n  }\n\n  return false;\n}\n\nfunction isShadowRoot(nodeImpl) {\n  return Boolean(\n    nodeImpl &&\n      isNode(nodeImpl) &&\n      nodeImpl.nodeType === DOCUMENT_FRAGMENT_NODE &&\n      getHost(nodeImpl) != null\x2C\n  );\n}\n\nfunction isSlottable(\n  /* nodeImpl\x2C */\n) {\n  // TODO(marcosc90) currently there aren't any slottables nodes\n  // https://dom.spec.whatwg.org/#concept-slotable\n  // return isNode(nodeImpl) && ReflectHas(nodeImpl\x2C "assignedSlot");\n  return false;\n}\n\n// DOM Logic functions\n\n/** Append a path item to an event's path.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-path-append\n */\nfunction appendToEventPath(\n  eventImpl\x2C\n  target\x2C\n  targetOverride\x2C\n  relatedTarget\x2C\n  touchTargets\x2C\n  slotInClosedTree\x2C\n) {\n  const itemInShadowTree = isNode(target) && isShadowRoot(getRoot(target));\n  const rootOfClosedTree = isShadowRoot(target) &&\n    getMode(target) === "closed";\n\n  ArrayPrototypePush(getPath(eventImpl)\x2C {\n    item: target\x2C\n    itemInShadowTree\x2C\n    target: targetOverride\x2C\n    relatedTarget\x2C\n    touchTargetList: touchTargets\x2C\n    rootOfClosedTree\x2C\n    slotInClosedTree\x2C\n  });\n}\n\nfunction dispatch(\n  targetImpl\x2C\n  eventImpl\x2C\n  targetOverride\x2C\n) {\n  let clearTargets = false;\n  let activationTarget = null;\n\n  setDispatched(eventImpl\x2C true);\n\n  targetOverride = targetOverride ?? targetImpl;\n  const eventRelatedTarget = eventImpl.relatedTarget;\n  let relatedTarget = retarget(eventRelatedTarget\x2C targetImpl);\n\n  if (targetImpl !== relatedTarget || targetImpl === eventRelatedTarget) {\n    const touchTargets = [];\n\n    appendToEventPath(\n      eventImpl\x2C\n      targetImpl\x2C\n      targetOverride\x2C\n      relatedTarget\x2C\n      touchTargets\x2C\n      false\x2C\n    );\n\n    const isActivationEvent = eventImpl.type === "click";\n\n    if (isActivationEvent && getHasActivationBehavior(targetImpl)) {\n      activationTarget = targetImpl;\n    }\n\n    let slotInClosedTree = false;\n    let slottable = isSlottable(targetImpl) && getAssignedSlot(targetImpl)\n      ? targetImpl\n      : null;\n    let parent = getParent(targetImpl);\n\n    // Populate event path\n    // https://dom.spec.whatwg.org/#event-path\n    while (parent !== null) {\n      if (slottable !== null) {\n        slottable = null;\n\n        const parentRoot = getRoot(parent);\n        if (\n          isShadowRoot(parentRoot) &&\n          parentRoot &&\n          getMode(parentRoot) === "closed"\n        ) {\n          slotInClosedTree = true;\n        }\n      }\n\n      relatedTarget = retarget(eventRelatedTarget\x2C parent);\n\n      if (\n        isNode(parent) &&\n        isShadowInclusiveAncestor(getRoot(targetImpl)\x2C parent)\n      ) {\n        appendToEventPath(\n          eventImpl\x2C\n          parent\x2C\n          null\x2C\n          relatedTarget\x2C\n          touchTargets\x2C\n          slotInClosedTree\x2C\n        );\n      } else if (parent === relatedTarget) {\n        parent = null;\n      } else {\n        targetImpl = parent;\n\n        if (\n          isActivationEvent &&\n          activationTarget === null &&\n          getHasActivationBehavior(targetImpl)\n        ) {\n          activationTarget = targetImpl;\n        }\n\n        appendToEventPath(\n          eventImpl\x2C\n          parent\x2C\n          targetImpl\x2C\n          relatedTarget\x2C\n          touchTargets\x2C\n          slotInClosedTree\x2C\n        );\n      }\n\n      if (parent !== null) {\n        parent = getParent(parent);\n      }\n\n      slotInClosedTree = false;\n    }\n\n    let clearTargetsTupleIndex = -1;\n    const path = getPath(eventImpl);\n    for (\n      let i = path.length - 1;\n      i >= 0 && clearTargetsTupleIndex === -1;\n      i--\n    ) {\n      if (path[i].target !== null) {\n        clearTargetsTupleIndex = i;\n      }\n    }\n    const clearTargetsTuple = path[clearTargetsTupleIndex];\n\n    clearTargets = (isNode(clearTargetsTuple.target) &&\n      isShadowRoot(getRoot(clearTargetsTuple.target))) ||\n      (isNode(clearTargetsTuple.relatedTarget) &&\n        isShadowRoot(getRoot(clearTargetsTuple.relatedTarget)));\n\n    setEventPhase(eventImpl\x2C Event.CAPTURING_PHASE);\n\n    for (let i = path.length - 1; i >= 0; --i) {\n      const tuple = path[i];\n\n      if (tuple.target === null) {\n        invokeEventListeners(tuple\x2C eventImpl);\n      }\n    }\n\n    for (let i = 0; i < path.length; i++) {\n      const tuple = path[i];\n\n      if (tuple.target !== null) {\n        setEventPhase(eventImpl\x2C Event.AT_TARGET);\n      } else {\n        setEventPhase(eventImpl\x2C Event.BUBBLING_PHASE);\n      }\n\n      if (\n        (eventImpl.eventPhase === Event.BUBBLING_PHASE &&\n          eventImpl.bubbles) ||\n        eventImpl.eventPhase === Event.AT_TARGET\n      ) {\n        invokeEventListeners(tuple\x2C eventImpl);\n      }\n    }\n  }\n\n  setEventPhase(eventImpl\x2C Event.NONE);\n  setCurrentTarget(eventImpl\x2C null);\n  setPath(eventImpl\x2C []);\n  setDispatched(eventImpl\x2C false);\n  eventImpl.cancelBubble = false;\n  setStopImmediatePropagation(eventImpl\x2C false);\n\n  if (clearTargets) {\n    setTarget(eventImpl\x2C null);\n    setRelatedTarget(eventImpl\x2C null);\n  }\n\n  // TODO(bartlomieju): invoke activation targets if HTML nodes will be implemented\n  // if (activationTarget !== null) {\n  //   if (!eventImpl.defaultPrevented) {\n  //     activationTarget._activationBehavior();\n  //   }\n  // }\n\n  return !eventImpl.defaultPrevented;\n}\n\n/** Inner invoking of the event listeners where the resolved listeners are\n * called.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke */\nfunction innerInvokeEventListeners(\n  eventImpl\x2C\n  targetListeners\x2C\n) {\n  let found = false;\n\n  const { type } = eventImpl;\n\n  if (!targetListeners || !targetListeners[type]) {\n    return found;\n  }\n\n  let handlers = targetListeners[type];\n  const handlersLength = handlers.length;\n\n  // Copy event listeners before iterating since the list can be modified during the iteration.\n  if (handlersLength > 1) {\n    handlers = ArrayPrototypeSlice(targetListeners[type]);\n  }\n\n  for (let i = 0; i < handlersLength; i++) {\n    const listener = handlers[i];\n\n    let capture\x2C once\x2C passive;\n    if (typeof listener.options === "boolean") {\n      capture = listener.options;\n      once = false;\n      passive = false;\n    } else {\n      capture = listener.options.capture;\n      once = listener.options.once;\n      passive = listener.options.passive;\n    }\n\n    // Check if the event listener has been removed since the listeners has been cloned.\n    if (!ArrayPrototypeIncludes(targetListeners[type]\x2C listener)) {\n      continue;\n    }\n\n    found = true;\n\n    if (\n      (eventImpl.eventPhase === Event.CAPTURING_PHASE && !capture) ||\n      (eventImpl.eventPhase === Event.BUBBLING_PHASE && capture)\n    ) {\n      continue;\n    }\n\n    if (once) {\n      ArrayPrototypeSplice(\n        targetListeners[type]\x2C\n        ArrayPrototypeIndexOf(targetListeners[type]\x2C listener)\x2C\n        1\x2C\n      );\n    }\n\n    if (passive) {\n      setInPassiveListener(eventImpl\x2C true);\n    }\n\n    if (typeof listener.callback === "object") {\n      if (typeof listener.callback.handleEvent === "function") {\n        listener.callback.handleEvent(eventImpl);\n      }\n    } else {\n      FunctionPrototypeCall(\n        listener.callback\x2C\n        eventImpl.currentTarget\x2C\n        eventImpl\x2C\n      );\n    }\n\n    setInPassiveListener(eventImpl\x2C false);\n\n    if (getStopImmediatePropagation(eventImpl)) {\n      return found;\n    }\n  }\n\n  return found;\n}\n\n/** Invokes the listeners on a given event path with the supplied event.\n *\n * Ref: https://dom.spec.whatwg.org/#concept-event-listener-invoke */\nfunction invokeEventListeners(tuple\x2C eventImpl) {\n  const path = getPath(eventImpl);\n  if (path.length === 1) {\n    const t = path[0];\n    if (t.target) {\n      setTarget(eventImpl\x2C t.target);\n    }\n  } else {\n    const tupleIndex = ArrayPrototypeIndexOf(path\x2C tuple);\n    for (let i = tupleIndex; i >= 0; i--) {\n      const t = path[i];\n      if (t.target) {\n        setTarget(eventImpl\x2C t.target);\n        break;\n      }\n    }\n  }\n\n  setRelatedTarget(eventImpl\x2C tuple.relatedTarget);\n\n  if (eventImpl.cancelBubble) {\n    return;\n  }\n\n  setCurrentTarget(eventImpl\x2C tuple.item);\n\n  try {\n    innerInvokeEventListeners(eventImpl\x2C getListeners(tuple.item));\n  } catch (error) {\n    reportException(error);\n  }\n}\n\nfunction normalizeEventHandlerOptions(\n  options\x2C\n) {\n  if (typeof options === "boolean" || typeof options === "undefined") {\n    return {\n      capture: Boolean(options)\x2C\n    };\n  } else {\n    return options;\n  }\n}\n\n/** Retarget the target following the spec logic.\n *\n * Ref: https://dom.spec.whatwg.org/#retarget */\nfunction retarget(a\x2C b) {\n  while (true) {\n    if (!isNode(a)) {\n      return a;\n    }\n\n    const aRoot = a.getRootNode();\n\n    if (aRoot) {\n      if (\n        !isShadowRoot(aRoot) ||\n        (isNode(b) && isShadowInclusiveAncestor(aRoot\x2C b))\n      ) {\n        return a;\n      }\n\n      a = getHost(aRoot);\n    }\n  }\n}\n\n// Accessors for non-public data\n\nconst eventTargetData = Symbol();\n\nfunction setEventTargetData(target) {\n  target[eventTargetData] = getDefaultTargetData();\n}\n\nfunction getAssignedSlot(target) {\n  return Boolean(target?.[eventTargetData]?.assignedSlot);\n}\n\nfunction getHasActivationBehavior(target) {\n  return Boolean(target?.[eventTargetData]?.hasActivationBehavior);\n}\n\nfunction getHost(target) {\n  return target?.[eventTargetData]?.host ?? null;\n}\n\nfunction getListeners(target) {\n  return target?.[eventTargetData]?.listeners ?? {};\n}\n\nfunction getMode(target) {\n  return target?.[eventTargetData]?.mode ?? null;\n}\n\nfunction listenerCount(target\x2C type) {\n  return getListeners(target)?.[type]?.length ?? 0;\n}\n\nfunction getDefaultTargetData() {\n  return {\n    assignedSlot: false\x2C\n    hasActivationBehavior: false\x2C\n    host: null\x2C\n    listeners: ObjectCreate(null)\x2C\n    mode: ""\x2C\n  };\n}\n\nfunction addEventListenerOptionsConverter(V\x2C prefix) {\n  if (webidl.type(V) !== "Object") {\n    return { capture: !!V\x2C once: false\x2C passive: false };\n  }\n\n  const options = {\n    capture: !!V.capture\x2C\n    once: !!V.once\x2C\n    passive: !!V.passive\x2C\n  };\n\n  const signal = V.signal;\n  if (signal !== undefined) {\n    options.signal = webidl.converters.AbortSignal(\n      signal\x2C\n      prefix\x2C\n      "'signal' of 'AddEventListenerOptions' (Argument 3)"\x2C\n    );\n  }\n\n  return options;\n}\n\nclass EventTarget {\n  constructor() {\n    this[eventTargetData] = getDefaultTargetData();\n    this[webidl.brand] = webidl.brand;\n  }\n\n  addEventListener(\n    type\x2C\n    callback\x2C\n    options\x2C\n  ) {\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    const prefix = "Failed to execute 'addEventListener' on 'EventTarget'";\n\n    webidl.requiredArguments(arguments.length\x2C 2\x2C prefix);\n\n    options = addEventListenerOptionsConverter(options\x2C prefix);\n\n    if (callback === null) {\n      return;\n    }\n\n    const { listeners } = self[eventTargetData];\n\n    if (!listeners[type]) {\n      listeners[type] = [];\n    }\n\n    const listenerList = listeners[type];\n    for (let i = 0; i < listenerList.length; ++i) {\n      const listener = listenerList[i];\n      if (\n        ((typeof listener.options === "boolean" &&\n          listener.options === options.capture) ||\n          (typeof listener.options === "object" &&\n            listener.options.capture === options.capture)) &&\n        listener.callback === callback\n      ) {\n        return;\n      }\n    }\n    if (options?.signal) {\n      const signal = options?.signal;\n      if (signal.aborted) {\n        // If signal is not null and its aborted flag is set\x2C then return.\n        return;\n      } else {\n        // If listener's signal is not null\x2C then add the following abort\n        // abort steps to it: Remove an event listener.\n        signal.addEventListener("abort"\x2C () => {\n          self.removeEventListener(type\x2C callback\x2C options);\n        });\n      }\n    }\n\n    ArrayPrototypePush(listeners[type]\x2C { callback\x2C options });\n  }\n\n  removeEventListener(\n    type\x2C\n    callback\x2C\n    options\x2C\n  ) {\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      2\x2C\n      "Failed to execute 'removeEventListener' on 'EventTarget'"\x2C\n    );\n\n    const { listeners } = self[eventTargetData];\n    if (callback !== null && listeners[type]) {\n      listeners[type] = ArrayPrototypeFilter(\n        listeners[type]\x2C\n        (listener) => listener.callback !== callback\x2C\n      );\n    } else if (callback === null || !listeners[type]) {\n      return;\n    }\n\n    options = normalizeEventHandlerOptions(options);\n\n    for (let i = 0; i < listeners[type].length; ++i) {\n      const listener = listeners[type][i];\n      if (\n        ((typeof listener.options === "boolean" &&\n          listener.options === options.capture) ||\n          (typeof listener.options === "object" &&\n            listener.options.capture === options.capture)) &&\n        listener.callback === callback\n      ) {\n        ArrayPrototypeSplice(listeners[type]\x2C i\x2C 1);\n        break;\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    // If `this` is not present\x2C then fallback to global scope. We don't use\n    // `globalThis` directly here\x2C because it could be deleted by user.\n    // Instead use saved reference to global scope when the script was\n    // executed.\n    const self = this ?? globalThis_;\n    webidl.assertBranded(self\x2C EventTargetPrototype);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to execute 'dispatchEvent' on 'EventTarget'"\x2C\n    );\n\n    // This is an optimization to avoid creating an event listener\n    // on each startup.\n    // Stores the flag for checking whether unload is dispatched or not.\n    // This prevents the recursive dispatches of unload events.\n    // See https://github.com/denoland/deno/issues/9201.\n    if (event.type === "unload" && self === globalThis_) {\n      globalThis_[SymbolFor("Deno.isUnloadDispatched")] = true;\n    }\n\n    const { listeners } = self[eventTargetData];\n    if (!listeners[event.type]) {\n      setTarget(event\x2C this);\n      return true;\n    }\n\n    if (getDispatched(event)) {\n      throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n    }\n\n    if (event.eventPhase !== Event.NONE) {\n      throw new DOMException("Invalid event state."\x2C "InvalidStateError");\n    }\n\n    return dispatch(self\x2C event);\n  }\n\n  getParent(_event) {\n    return null;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return `${this.constructor.name} ${inspect({}\x2C inspectOptions)}`;\n  }\n}\n\nwebidl.configureInterface(EventTarget);\nconst EventTargetPrototype = EventTarget.prototype;\n\ndefineEnumerableProps(EventTarget\x2C [\n  "addEventListener"\x2C\n  "removeEventListener"\x2C\n  "dispatchEvent"\x2C\n]);\n\nclass ErrorEvent extends Event {\n  #message = "";\n  #filename = "";\n  #lineno = "";\n  #colno = "";\n  #error = "";\n\n  get message() {\n    return this.#message;\n  }\n  get filename() {\n    return this.#filename;\n  }\n  get lineno() {\n    return this.#lineno;\n  }\n  get colno() {\n    return this.#colno;\n  }\n  get error() {\n    return this.#error;\n  }\n\n  constructor(\n    type\x2C\n    {\n      bubbles\x2C\n      cancelable\x2C\n      composed\x2C\n      message = ""\x2C\n      filename = ""\x2C\n      lineno = 0\x2C\n      colno = 0\x2C\n      error\x2C\n    } = { __proto__: null }\x2C\n  ) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#message = message;\n    this.#filename = filename;\n    this.#lineno = lineno;\n    this.#colno = colno;\n    this.#error = error;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(ErrorEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "message"\x2C\n          "filename"\x2C\n          "lineno"\x2C\n          "colno"\x2C\n          "error"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "ErrorEvent";\n}\n\nconst ErrorEventPrototype = ErrorEvent.prototype;\n\ndefineEnumerableProps(ErrorEvent\x2C [\n  "message"\x2C\n  "filename"\x2C\n  "lineno"\x2C\n  "colno"\x2C\n  "error"\x2C\n]);\n\nclass CloseEvent extends Event {\n  #wasClean = "";\n  #code = "";\n  #reason = "";\n\n  get wasClean() {\n    return this.#wasClean;\n  }\n  get code() {\n    return this.#code;\n  }\n  get reason() {\n    return this.#reason;\n  }\n\n  constructor(type\x2C {\n    bubbles\x2C\n    cancelable\x2C\n    composed\x2C\n    wasClean = false\x2C\n    code = 0\x2C\n    reason = ""\x2C\n  } = { __proto__: null }) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#wasClean = wasClean;\n    this.#code = code;\n    this.#reason = reason;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(CloseEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "wasClean"\x2C\n          "code"\x2C\n          "reason"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nconst CloseEventPrototype = CloseEvent.prototype;\n\nclass MessageEvent extends Event {\n  get source() {\n    return null;\n  }\n\n  constructor(type\x2C eventInitDict) {\n    super(type\x2C {\n      bubbles: eventInitDict?.bubbles ?? false\x2C\n      cancelable: eventInitDict?.cancelable ?? false\x2C\n      composed: eventInitDict?.composed ?? false\x2C\n    });\n\n    this.data = eventInitDict?.data ?? null;\n    this.ports = eventInitDict?.ports ?? [];\n    this.origin = eventInitDict?.origin ?? "";\n    this.lastEventId = eventInitDict?.lastEventId ?? "";\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(MessageEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "data"\x2C\n          "origin"\x2C\n          "lastEventId"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "MessageEvent";\n}\n\nconst MessageEventPrototype = MessageEvent.prototype;\n\nclass CustomEvent extends Event {\n  #detail = null;\n\n  constructor(type\x2C eventInitDict = { __proto__: null }) {\n    super(type\x2C eventInitDict);\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to construct 'CustomEvent'"\x2C\n    );\n    const { detail } = eventInitDict;\n    this.#detail = detail;\n  }\n\n  get detail() {\n    return this.#detail;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(CustomEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "detail"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "CustomEvent";\n}\n\nconst CustomEventPrototype = CustomEvent.prototype;\n\nReflectDefineProperty(CustomEvent.prototype\x2C "detail"\x2C {\n  enumerable: true\x2C\n});\n\n// ProgressEvent could also be used in other DOM progress event emits.\n// Current use is for FileReader.\nclass ProgressEvent extends Event {\n  constructor(type\x2C eventInitDict = { __proto__: null }) {\n    super(type\x2C eventInitDict);\n\n    this.lengthComputable = eventInitDict?.lengthComputable ?? false;\n    this.loaded = eventInitDict?.loaded ?? 0;\n    this.total = eventInitDict?.total ?? 0;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(ProgressEventPrototype\x2C this)\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "lengthComputable"\x2C\n          "loaded"\x2C\n          "total"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "ProgressEvent";\n}\n\nconst ProgressEventPrototype = ProgressEvent.prototype;\n\nclass PromiseRejectionEvent extends Event {\n  #promise = null;\n  #reason = null;\n\n  get promise() {\n    return this.#promise;\n  }\n  get reason() {\n    return this.#reason;\n  }\n\n  constructor(\n    type\x2C\n    {\n      bubbles\x2C\n      cancelable\x2C\n      composed\x2C\n      promise\x2C\n      reason\x2C\n    } = { __proto__: null }\x2C\n  ) {\n    super(type\x2C {\n      bubbles: bubbles\x2C\n      cancelable: cancelable\x2C\n      composed: composed\x2C\n    });\n\n    this.#promise = promise;\n    this.#reason = reason;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          PromiseRejectionEventPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          ...new SafeArrayIterator(EVENT_PROPS)\x2C\n          "promise"\x2C\n          "reason"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  // TODO(lucacasonato): remove when this interface is spec aligned\n  [SymbolToStringTag] = "PromiseRejectionEvent";\n}\n\nconst PromiseRejectionEventPrototype = PromiseRejectionEvent.prototype;\n\ndefineEnumerableProps(PromiseRejectionEvent\x2C [\n  "promise"\x2C\n  "reason"\x2C\n]);\n\nconst _eventHandlers = Symbol("eventHandlers");\n\nfunction makeWrappedHandler(handler\x2C isSpecialErrorEventHandler) {\n  function wrappedHandler(evt) {\n    if (typeof wrappedHandler.handler !== "function") {\n      return;\n    }\n\n    if (\n      isSpecialErrorEventHandler &&\n      ObjectPrototypeIsPrototypeOf(ErrorEventPrototype\x2C evt) &&\n      evt.type === "error"\n    ) {\n      const ret = FunctionPrototypeCall(\n        wrappedHandler.handler\x2C\n        this\x2C\n        evt.message\x2C\n        evt.filename\x2C\n        evt.lineno\x2C\n        evt.colno\x2C\n        evt.error\x2C\n      );\n      if (ret === true) {\n        evt.preventDefault();\n      }\n      return;\n    }\n\n    return FunctionPrototypeCall(wrappedHandler.handler\x2C this\x2C evt);\n  }\n  wrappedHandler.handler = handler;\n  return wrappedHandler;\n}\n\n// `init` is an optional function that will be called the first time that the\n// event handler property is set. It will be called with the object on which\n// the property is set as its argument.\n// `isSpecialErrorEventHandler` can be set to true to opt into the special\n// behavior of event handlers for the "error" event in a global scope.\nfunction defineEventHandler(\n  emitter\x2C\n  name\x2C\n  init = undefined\x2C\n  isSpecialErrorEventHandler = false\x2C\n) {\n  // HTML specification section 8.1.7.1\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\n    get() {\n      if (!this[_eventHandlers]) {\n        return null;\n      }\n\n      return MapPrototypeGet(this[_eventHandlers]\x2C name)?.handler ?? null;\n    }\x2C\n    set(value) {\n      // All three Web IDL event handler types are nullable callback functions\n      // with the [LegacyTreatNonObjectAsNull] extended attribute\x2C meaning\n      // anything other than an object is treated as null.\n      if (typeof value !== "object" && typeof value !== "function") {\n        value = null;\n      }\n\n      if (!this[_eventHandlers]) {\n        this[_eventHandlers] = new SafeMap();\n      }\n      let handlerWrapper = MapPrototypeGet(this[_eventHandlers]\x2C name);\n      if (handlerWrapper) {\n        handlerWrapper.handler = value;\n      } else if (value !== null) {\n        handlerWrapper = makeWrappedHandler(\n          value\x2C\n          isSpecialErrorEventHandler\x2C\n        );\n        this.addEventListener(name\x2C handlerWrapper);\n        init?.(this);\n      }\n      MapPrototypeSet(this[_eventHandlers]\x2C name\x2C handlerWrapper);\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n}\n\nlet reportExceptionStackedCalls = 0;\n\n// https://html.spec.whatwg.org/#report-the-exception\nfunction reportException(error) {\n  reportExceptionStackedCalls++;\n  const jsError = core.destructureError(error);\n  const message = jsError.exceptionMessage;\n  let filename = "";\n  let lineno = 0;\n  let colno = 0;\n  if (jsError.frames.length > 0) {\n    filename = jsError.frames[0].fileName;\n    lineno = jsError.frames[0].lineNumber;\n    colno = jsError.frames[0].columnNumber;\n  } else {\n    const jsError = core.destructureError(new Error());\n    const frames = jsError.frames;\n    for (let i = 0; i < frames.length; ++i) {\n      const frame = frames[i];\n      if (\n        typeof frame.fileName == "string" &&\n        !StringPrototypeStartsWith(frame.fileName\x2C "ext:")\n      ) {\n        filename = frame.fileName;\n        lineno = frame.lineNumber;\n        colno = frame.columnNumber;\n        break;\n      }\n    }\n  }\n  const event = new ErrorEvent("error"\x2C {\n    cancelable: true\x2C\n    message\x2C\n    filename\x2C\n    lineno\x2C\n    colno\x2C\n    error\x2C\n  });\n  // Avoid recursing `reportException()` via error handlers more than once.\n  if (reportExceptionStackedCalls > 1 || globalThis_.dispatchEvent(event)) {\n    core.reportUnhandledException(error);\n  }\n  reportExceptionStackedCalls--;\n}\n\nfunction checkThis(thisArg) {\n  if (thisArg !== null && thisArg !== undefined && thisArg !== globalThis_) {\n    throw new TypeError("Illegal invocation");\n  }\n}\n\n// https://html.spec.whatwg.org/#dom-reporterror\nfunction reportError(error) {\n  checkThis(this);\n  const prefix = "Failed to execute 'reportError'";\n  webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n  reportException(error);\n}\n\nexport {\n  CloseEvent\x2C\n  CustomEvent\x2C\n  defineEventHandler\x2C\n  dispatch\x2C\n  ErrorEvent\x2C\n  Event\x2C\n  EventTarget\x2C\n  listenerCount\x2C\n  MessageEvent\x2C\n  ProgressEvent\x2C\n  PromiseRejectionEvent\x2C\n  reportError\x2C\n  reportException\x2C\n  saveGlobalThisReference\x2C\n  setEventTargetData\x2C\n  setIsTrusted\x2C\n  setTarget\x2C\n};\n
code-source-info,0x64956d800a00,15,32880,34125,,,
code-creation,JS,10,28395,0x64956d800d40,2584,escapeName ext:cli/40_test_common.js:23:27,0x2c370055c7a8,^
code-source-info,0x64956d800d40,307,510,965,,,
code-creation,JS,9,28422,0x2c3700582c8c,9,hasTickScheduled ext:core/01_core.js:643:23,0x2c37001caf68,~
code-source-info,0x2c3700582c8c,5,16806,16835,C0O16812C5O16812C8O16835,,
code-creation,JS,9,28442,0x2c3700582cdc,9,runMicrotasks ext:core/01_core.js:642:20,0x2c37001caf04,~
code-source-info,0x2c3700582cdc,5,16757,16782,C0O16763C5O16763C8O16782,,
code-creation,JS,9,28472,0x2c3700582d38,32,dispatchLoadEvent ext:runtime_main/js/99_main.js:521:27,0x2c370035415c,~
code-source-info,0x2c3700582d38,305,15294,15348,C0O15301C5O15313C10O15331C19O15327C25O15313C31O15347,,
tick,0x64950d022ef2,28515,0,0x0,9,0x64950db69e20,0x2c3700582c0b,0x2c3700582993
tick,0x64950da3c258,28565,0,0x0,2
code-creation,JS,9,28612,0x2c3700582e44,428,outerWrapped ext:cli/40_bench.js:416:37,0x2c3700565940,~
code-source-info,0x2c3700582e
code-creation,JS,9,28766,0x2c370058309c,10,setExitHandler ext:runtime/30_os.js:73:24,0x2c37002f1d2c,~
script-source,238,ext:runtime/30_os.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { primordials } from "ext:core/mod.js";\nimport {\n  op_delete_env\x2C\n  op_env\x2C\n  op_exec_path\x2C\n  op_exit\x2C\n  op_get_env\x2C\n  op_get_exit_code\x2C\n  op_gid\x2C\n  op_hostname\x2C\n  op_loadavg\x2C\n  op_network_interfaces\x2C\n  op_os_release\x2C\n  op_os_uptime\x2C\n  op_set_env\x2C\n  op_set_exit_code\x2C\n  op_system_memory_info\x2C\n  op_uid\x2C\n} from "ext:core/ops";\nconst {\n  Error\x2C\n  FunctionPrototypeBind\x2C\n  NumberIsInteger\x2C\n  RangeError\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n} = primordials;\n\nimport { Event\x2C EventTarget } from "ext:deno_web/02_event.js";\n\nconst windowDispatchEvent = FunctionPrototypeBind(\n  EventTarget.prototype.dispatchEvent\x2C\n  globalThis\x2C\n);\n\nfunction loadavg() {\n  return op_loadavg();\n}\n\nfunction hostname() {\n  return op_hostname();\n}\n\nfunction osRelease() {\n  return op_os_release();\n}\n\nfunction osUptime() {\n  return op_os_uptime();\n}\n\nfunction systemMemoryInfo() {\n  return op_system_memory_info();\n}\n\nfunction networkInterfaces() {\n  return op_network_interfaces();\n}\n\nfunction gid() {\n  return op_gid();\n}\n\nfunction uid() {\n  return op_uid();\n}\n\n// This is an internal only method used by the test harness to override the\n// behavior of exit when the exit sanitizer is enabled.\nlet exitHandler = null;\nfunction setExitHandler(fn) {\n  exitHandler = fn;\n}\n\nfunction exit(code) {\n  // Set exit code first so unload event listeners can override it.\n  if (typeof code === "number") {\n    op_set_exit_code(code);\n  } else {\n    code = op_get_exit_code();\n  }\n\n  // Dispatches `unload` only when it's not dispatched yet.\n  if (!globalThis[SymbolFor("Deno.isUnloadDispatched")]) {\n    // Invokes the `unload` hooks before exiting\n    // ref: https://github.com/denoland/deno/issues/3603\n    windowDispatchEvent(new Event("unload"));\n  }\n\n  if (exitHandler) {\n    exitHandler(code);\n    return;\n  }\n\n  op_exit();\n  throw new Error("Code not reachable");\n}\n\nfunction getExitCode() {\n  return op_get_exit_code();\n}\n\nfunction setExitCode(value) {\n  if (typeof value !== "number") {\n    throw new TypeError(\n      `Exit code must be a number\x2C got: ${value} (${typeof value})`\x2C\n    );\n  }\n  if (!NumberIsInteger(value)) {\n    throw new RangeError(\n      `Exit code must be an integer\x2C got: ${value}`\x2C\n    );\n  }\n  op_set_exit_code(value);\n}\n\nfunction setEnv(key\x2C value) {\n  op_set_env(key\x2C value);\n}\n\nfunction getEnv(key) {\n  return op_get_env(key) ?? undefined;\n}\n\nfunction deleteEnv(key) {\n  op_delete_env(key);\n}\n\nconst env = {\n  get: getEnv\x2C\n  toObject() {\n    return op_env();\n  }\x2C\n  set: setEnv\x2C\n  has(key) {\n    return getEnv(key) !== undefined;\n  }\x2C\n  delete: deleteEnv\x2C\n};\n\nfunction execPath() {\n  return op_exec_path();\n}\n\nexport {\n  env\x2C\n  execPath\x2C\n  exit\x2C\n  getExitCode\x2C\n  gid\x2C\n  hostname\x2C\n  loadavg\x2C\n  networkInterfaces\x2C\n  osRelease\x2C\n  osUptime\x2C\n  setExitCode\x2C\n  setExitHandler\x2C\n  systemMemoryInfo\x2C\n  uid\x2C\n};\n
code-source-info,0x2c370058309c,238,1290,1318,C0O1299C2O1311C9O1317,,
code-creation,JS,9,28936,0x2c3700583110,86,createBenchContext ext:cli/40_bench.js:380:28,0x2c370055f2cc,~
code-source-info,0x2c3700583110,309,10487,11392,C0O10487C9O10498C18O10512C24O10532C35O10563C50O10586C62O10598C74O10997C85O11390,,
code-creation,JS,9,29134,0x2c3700583208,1158,benchMeasure ext:cli/40_bench.js:217:28,0x2c370055f258,~
code-source-info,0x2c
code-creation,JS,9,29229,0x2c37005838c0,9,benchNow ext:cli/40_bench.js:461:18,0x2c370055f380,~
code-source-info,0x2c37005838c0,309,12695,12726,C0O12702C5O12709C8O12724,,
code-creation,JS,9,29251,0x2c3700583904,2,warmup ext:cli/40_bench.js:59:26,0x2c37005655b4,~
code-source-info,0x2c3700583904,309,1641,1646,C1O1645,,
code-creation,JS,10,29366,0x64956d801780,124,benchNow ext:cli/40_bench.js:461:18,0x2c370055f380,^
code-source-info,0x64956d801780,309,12695,12726,,,
code-creation,JS,10,29372,0x64956d801840,44,warmup ext:cli/40_bench.js:59:26,0x2c37005655b4,^
code-source-info,0x64956d801840,309,1641,1646,,,
code-creation,JS,10,29380,0x64956d801880,8128,benchMeasure ext:cli/40_bench.js:217:28,0x2c370055f258,^
code-source-info,0x64956d801880,309,5854,10420,,,
tick,0x64950e66da2a,29649,0,0x0,0,0x64956d8017eb,0x64956d801ac6,0x2c3700582ef5
code-creation,JS,12,30300,0x64956d803880,144,warmup ext:cli/40_bench.js:59:26,0x2c37005655b4,*
code-source-info,0x64956d803880,309,1641,1646,C36O1641C46O1645C79O1641C130O1645,,
code-creation,JS,12,30349,0x64956d803940,620,benchNow ext:cli/40_bench.js:461:18,0x2c370055f380,*
code-source-info,0x64956d803940,309,12695,12726,C52O12695C66O12709C393O12724C422O12695C473O12709C598O12724,,
tick,0x64950d826f07,30750,0,0x0,0,0x2c3700582ef5
tick,0x64956d803a3c,31822,0,0x0,0,0x64956d801a7d,0x2c3700582ef5
tick,0x7ffe50f10b03,32936,1,0x649509bdd1b0,6,0x64956d803a04,0x64956d801a7d,0x2c3700582ef5
tick,0x64956d803a42,33956,0,0x0,0,0x64956d801ac6,0x2c3700582ef5
tick,0x649509bdd2c5,35056,1,0x649509bdd1b0,6,0x64956d803a04,0x64956d801a7d,0x2c3700582ef5
code-creation,JS,12,35784,0x64956d803c00,2512,benchMeasure ext:cli/40_bench.js:217:28,0x2c370055f258,*
code-source-info,0x64956d803c00,309,5854,10420,C96O5854C113O12709I0C192O6189C223O6185C266O6229C282O12709I0C617O6247C633O6277C656O12709I2C995O6316C1042O6328C1079O6412C1102O6328C1109O6469C1139O6549C1157O6607C1190O6626C1217O6653C1234O6171C1245O6189C1286O6185C1311O5854C1362O12709I0C1508O12709I2C1638O6171C1741O6189C2168O6469C2237O6328C2300O10418C2408O6328,F0O6229F1O6247F0O6277,S0x2c370055f380S0x2c37005655b4
tick,0x649509bdd31b,36200,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x649509bdd327,37282,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x64950e66da26,38298,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x64950e677dea,39414,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x7ffe50f10b03,40528,1,0x649509bdd1b0,6,0x64956d803d9a,0x2c3700582ef5
tick,0x64956d803dce,41611,0,0x0,0,0x2c3700582ef5
tick,0x64950e677ec0,42616,1,0x649509bdd1b0,6,0x64956d803d9a,0x2c3700582ef5
tick,0x649509bdd230,43709,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x7ffe50f10b03,44817,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x7ffe50f10b6e,45914,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x64950e66d9e8,46980,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x7ffe50f10b03,48130,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x7ffe50f10b03,49244,1,0x649509bdd1b0,6,0x64956d803f1b,0x2c3700582ef5
tick,0x64950d827900,50372,0,0x0,0,0x2c3700582ef5
tick,0x64950d8a9d50,51546,0,0x0,0,0x2c3700582ef5
tick,0x64950d827900,52682,0,0x0,0,0x2c3700582ef5
code-creation,JS,12,53728,0x64956d804740,3352,benchMeasure ext:cli/40_bench.js:217:28,0x2c370055f258,*
code-source-info,0x64956dx2c370055f380S0x2c37005655b4
tick,0x7d8294d9899d,53824,0,0x0,4,0x64950db6a140,0x64956d803902,0x64956d802d4b,0x2c3700582ef5
tick,0x64956d804aaa,54981,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,55937,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,57040,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,58233,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,59389,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,60554,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,61630,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,62782,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,63878,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,65007,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,66159,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,67285,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,68367,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,69444,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,70547,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,71505,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,72736,0,0x0,0,0x2c3700582ef5
tick,0x649509bdd31b,73851,1,0x649509bdd1b0,6,0x64956d804915,0x2c3700582ef5
tick,0x64956d804a50,75024,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,76123,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,77247,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,78397,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,79457,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,80684,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,81828,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,82964,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,84062,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,85224,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,86370,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,87491,0,0x0,0,0x2c3700582ef5
tick,0x7ffe50f10b03,88643,1,0x649509bdd1b0,6,0x64956d804915,0x2c3700582ef5
tick,0x64956d804a8e,89809,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,90941,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,92031,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,93179,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,94302,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,95433,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,96512,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,103484,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,103491,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,103494,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,103498,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,103500,0,0x0,0,0x2c3700582ef5
tick,0x7ffe50f10b03,103506,1,0x649509bdd1b0,6,0x64956d804b51,0x2c3700582ef5
tick,0x649509bdd1c2,104102,1,0x649509bdd1b0,6,0x64956d804b51,0x2c3700582ef5
tick,0x64956d804a71,105278,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,106423,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,107561,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,108757,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,109892,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,111037,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,112133,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,113279,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a78,114430,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,115472,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,116719,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,117878,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,118945,0,0x0,0,0x2c3700582ef5
tick,0x64956d804eef,120030,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,121171,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,122395,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700600000,184320
tick,0x64956d804a71,123477,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,124686,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,125865,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,126980,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,127990,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,129143,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,130292,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,131475,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,132686,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,133830,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,134952,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,136039,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,137173,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,138337,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,139483,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,140622,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700640000,262144
new,MemoryChunk,0x2c3700680000,262144
new,MemoryChunk,0x2c37006c0000,262144
new,MemoryChunk,0x2c3700700000,262144
tick,0x64956d804a53,141767,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,142908,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,143992,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,145137,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,146300,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,147436,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,148506,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,149591,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,150721,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,151835,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,152957,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,154110,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,155231,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,156329,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,157419,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700740000,274432
tick,0x64956d804a57,158563,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,159569,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,160754,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,161902,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,163060,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,164150,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,165235,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,166378,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,167485,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,168669,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,169770,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,170971,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,172067,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,173221,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,174355,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,175481,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,176641,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,177782,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,178928,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,180028,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,181163,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,182296,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,183448,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,184508,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,185597,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,186744,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,187830,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,188950,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,190115,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,191249,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,192380,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,193500,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,194617,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,195631,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,196821,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,197967,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,199109,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a74,200195,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a74,201285,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,202431,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,203541,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,204731,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,205856,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,207004,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,208102,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,209270,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c37007c0000,409600
tick,0x64956d804a78,210391,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,211456,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a62,212678,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,213836,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,214980,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,216070,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,217218,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,218358,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,219483,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,220657,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,221799,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,222912,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,223927,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,225075,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,226229,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,227453,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,228542,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,229634,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,230776,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,231857,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,233015,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,234154,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,235294,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,236426,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,237531,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,238686,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,239714,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,240834,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,242001,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,243121,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,244197,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,245307,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,246445,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,247542,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,248711,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,249871,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,250981,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,252095,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,253233,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a78,254357,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,255480,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,256666,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,257833,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,258962,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,260054,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,261204,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,262357,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,263484,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,264698,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,265843,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,266990,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,268078,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,269232,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,270280,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,271424,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,272574,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,273649,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,274738,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,275763,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,276898,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,278037,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,279182,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,280258,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,281335,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,282427,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,283486,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,284673,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,285824,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,286894,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700840000,262144
delete,MemoryChunk,0x7d8270086330
tick,0x7d8294d2531c,288002,0,0x0,1
new,MemoryChunk,0x2c3700880000,614400
tick,0x64956d804a5d,289121,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,290361,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,291494,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,292670,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,293797,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,294923,0,0x0,0,0x2c3700582ef5
tick,0x64956d804b89,295934,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,297137,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,298304,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a78,299427,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,300534,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,301667,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,302783,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,303871,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,305001,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,306154,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,307280,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,308387,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,309530,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,310700,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,311717,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,312902,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,314032,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,315180,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,316266,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,317403,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,318547,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,319543,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,320759,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,321918,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,323058,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,324150,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a62,325311,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,326446,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,327555,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,328760,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,329910,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,331060,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,332155,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,333309,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,334453,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,335553,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,336737,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,337887,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,339033,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,340136,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,341296,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,342421,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,343542,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,344737,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,345854,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,346997,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,348085,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,349241,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,350389,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,351454,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,352688,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,353837,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,354964,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,356071,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,357228,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,358356,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,359491,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,360664,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,361804,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,362935,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,364038,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,365184,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,366322,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,367458,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,368630,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,369763,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,370900,0,0x0,0,0x2c3700582ef5
tick,0x7ffe50f10b03,371984,1,0x649509bdd1b0,6,0x64956d804b51,0x2c3700582ef5
tick,0x64956d804a87,373156,0,0x0,0,0x2c3700582ef5
tick,0x649509bdd2c5,374296,1,0x649509bdd1b0,6,0x64956d804915,0x2c3700582ef5
tick,0x64956d804a8e,375444,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,376506,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a78,377612,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,378726,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,379824,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,380992,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,382139,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,383227,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,384299,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,385375,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,386464,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,387477,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,388668,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,389806,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,390871,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,391949,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,393095,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,394322,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,395468,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,396669,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,397790,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,398947,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,399945,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,401096,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,402247,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,403473,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700940000,917504
tick,0x64950d2c40a3,404587,0,0x0,0,0x64950d50da40,0x64950d86e15d,0x64956d804dbb,0x2c3700582ef5
tick,0x64956d804a7e,405794,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,406923,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,408018,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a9d,408981,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,410227,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,411223,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,412382,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,413452,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,414466,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,415526,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,416650,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,417736,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,418723,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,419873,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,421041,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,422107,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,423254,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,424413,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,425492,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,426591,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,427583,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,428732,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,429888,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,430945,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,432112,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,433282,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,434407,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,435551,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,436712,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,437851,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,438976,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,439992,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,441144,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,442294,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,443545,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,444677,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,445842,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,446977,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,448060,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,449144,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,450386,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,451420,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,452688,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,453847,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,454976,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,456074,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,457204,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,458369,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,459520,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,460647,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,461727,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,462878,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,464057,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,465189,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,466359,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,467510,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,468673,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,469799,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,470957,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,471958,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,473100,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,474247,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,475488,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,476648,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,477830,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,478946,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,480025,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,481195,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a78,482329,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,483504,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,484650,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,485824,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,486943,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,488045,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,489182,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,490336,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,491511,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,492649,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,493824,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,494949,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,496059,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,497104,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,498327,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,499484,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,500635,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,501796,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,502939,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,504031,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,505163,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a62,506322,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,507455,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,508550,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a71,509619,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,510770,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,511871,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,513018,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,514189,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,515319,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,516458,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,517549,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,518690,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a87,519714,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,520834,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,521998,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,523127,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,524199,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,525282,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,526456,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,527560,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,528755,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,529904,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,531056,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,532167,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,533291,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,534437,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,535554,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,536751,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,537891,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,539004,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,540109,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a50,541255,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,542396,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,543482,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,544682,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a5d,545755,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aaa,546902,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,548078,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a57,549228,0,0x0,0,0x2c3700582ef5
tick,0x7ffe50f10b50,550369,1,0x649509bdd1b0,6,0x64956d804b51,0x2c3700582ef5
tick,0x64956d804a94,551531,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a94,552703,0,0x0,0,0x2c3700582ef5
tick,0x64956d804aa4,553759,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a7e,554991,0,0x0,0,0x2c3700582ef5
tick,0x64956d804a8e,556087,0,0x0,0,0x2c3700582ef5
new,MemoryChunk,0x2c3700740000,262144
new,MemoryChunk,0x2c3700780000,262144
new,MemoryChunk,0x2c3700a40000,262144
new,MemoryChunk,0x2c3700a80000,262144
new,MemoryChunk,0x2c3700ac0000,262144
tick,0x0,557229,0,0x0,5
new,MemoryChunk,0x2c3700b00000,262144
new,MemoryChunk,0x2c3700b40000,262144
new,MemoryChunk,0x2c3700b80000,262144
new,MemoryChunk,0x2c3700bc0000,438272
code-creation,JS,9,557895,0x2c3700584cf0,22,compareMeasurements ext:cli/40_bench.js:187:29,0x2c370055f1e0,~
code-source-info,0x2c3700584cf0,309,5332,5402,C0O5343C2O5349C7O5354C9O5363C10O5366C12O5372C17O5377C19O5387C20O5391C21O5400,,
tick,0x64950d8329ac,558263,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
code-creation,JS,12,558514,0x64956d805600,272,compareMeasurements ext:cli/40_bench.js:187:29,0x2c370055f1e0,*
code-source-info,0x64956d805600,309,5332,5402,C36O5332C50O5349C153O5372C163O5400C191O5387C200O5363C207O5332,,
tick,0x64950d99d34b,559430,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64956d8056a9,560585,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99d3cd,561737,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99f518,562887,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99f5ce,563962,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99e888,565125,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x7d8294d993ba,566278,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64956d80560a,567446,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99f607,568613,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64956d805666,569762,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99cd1f,570920,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64956d8056cd,572004,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99ed02,573163,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
tick,0x64950d99cc00,574328,0,0x0,0,0x64950d9a03eb,0x64956d8036a8,0x2c3700582ef5
new,MemoryChunk,0x2c3700c40000,217088
code-creation,JS,9,575286,0x2c3700584ee4,160,benchStats ext:cli/40_bench.js:194:20,0x2c370055f21c,~
code-source-info,0x2c3700584ee4,309,5423,5825,C0O5503C7O5516C13O5523C19O5532C25O5550C30O5561C34O5550C38O5575C41O5549C53O5605C57O5594C61O5619C64O5593C76O5650C80O5639C84O5666C87O5638C99O5697C103O5686C107O5713C110O5685C119O5729C123O5750C133O5770C137O5757C147O5780C153O5799C159O5823,,
code-creation,JS,9,575583,0x2c37005850a8,473, file:///home/harm/git/gleam/test/performance/bench_rbt.js:7:29,0x2c37005610a0,~
code-source-info,0x2c37005850a8,311,213,1835,C10O213C18O252C24O290C28O301C41O301C55O290C93O383C96O404C100O409C105O416C109O393C114O441C116O441C119O489C127O511C131O540C135O545C150O680C156O536C163O738C167O743C182O874C188O734C195O924C199O929C214O1022C220O920C226O1081C231O1081C243O1067C269O1103C274O1125C275O1134C280O1151C284O1159C289O1167C293O1163C299O1181C304O1195C309O1181C315O1159C320O1213C324O1221C329O1229C333O1225C339O1243C344O1257C349O1243C355O1221C360O1275C362O1275C363O1328C366O1416C385O1416C411O1469C413O1480C418O1480C422O1586C427O1586C432O1600C437O1600C450O1834,,
code-creation,JS,9,575662,0x2c3700585394,152,remove ext:deno_fs/30_fs.js:256:22,0x2c37002502b4,~
script-source,55,ext:deno_fs/30_fs.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst {\n  isDate\x2C\n  internalRidSymbol\x2C\n  createCancelHandle\x2C\n} = core;\nimport {\n  op_fs_chdir\x2C\n  op_fs_chmod_async\x2C\n  op_fs_chmod_sync\x2C\n  op_fs_chown_async\x2C\n  op_fs_chown_sync\x2C\n  op_fs_copy_file_async\x2C\n  op_fs_copy_file_sync\x2C\n  op_fs_cwd\x2C\n  op_fs_fdatasync_async\x2C\n  op_fs_fdatasync_sync\x2C\n  op_fs_file_stat_async\x2C\n  op_fs_file_stat_sync\x2C\n  op_fs_flock_async\x2C\n  op_fs_flock_async_unstable\x2C\n  op_fs_flock_sync\x2C\n  op_fs_flock_sync_unstable\x2C\n  op_fs_fsync_async\x2C\n  op_fs_fsync_sync\x2C\n  op_fs_ftruncate_async\x2C\n  op_fs_ftruncate_sync\x2C\n  op_fs_funlock_async\x2C\n  op_fs_funlock_async_unstable\x2C\n  op_fs_funlock_sync\x2C\n  op_fs_funlock_sync_unstable\x2C\n  op_fs_futime_async\x2C\n  op_fs_futime_sync\x2C\n  op_fs_link_async\x2C\n  op_fs_link_sync\x2C\n  op_fs_lstat_async\x2C\n  op_fs_lstat_sync\x2C\n  op_fs_make_temp_dir_async\x2C\n  op_fs_make_temp_dir_sync\x2C\n  op_fs_make_temp_file_async\x2C\n  op_fs_make_temp_file_sync\x2C\n  op_fs_mkdir_async\x2C\n  op_fs_mkdir_sync\x2C\n  op_fs_open_async\x2C\n  op_fs_open_sync\x2C\n  op_fs_read_dir_async\x2C\n  op_fs_read_dir_sync\x2C\n  op_fs_read_file_async\x2C\n  op_fs_read_file_sync\x2C\n  op_fs_read_file_text_async\x2C\n  op_fs_read_file_text_sync\x2C\n  op_fs_read_link_async\x2C\n  op_fs_read_link_sync\x2C\n  op_fs_realpath_async\x2C\n  op_fs_realpath_sync\x2C\n  op_fs_remove_async\x2C\n  op_fs_remove_sync\x2C\n  op_fs_rename_async\x2C\n  op_fs_rename_sync\x2C\n  op_fs_seek_async\x2C\n  op_fs_seek_sync\x2C\n  op_fs_stat_async\x2C\n  op_fs_stat_sync\x2C\n  op_fs_symlink_async\x2C\n  op_fs_symlink_sync\x2C\n  op_fs_truncate_async\x2C\n  op_fs_truncate_sync\x2C\n  op_fs_umask\x2C\n  op_fs_utime_async\x2C\n  op_fs_utime_sync\x2C\n  op_fs_write_file_async\x2C\n  op_fs_write_file_sync\x2C\n  op_set_raw\x2C\n} from "ext:core/ops";\nconst {\n  ArrayPrototypeFilter\x2C\n  Date\x2C\n  DatePrototypeGetTime\x2C\n  Error\x2C\n  Function\x2C\n  MathTrunc\x2C\n  ObjectEntries\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectValues\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n  Uint32Array\x2C\n} = primordials;\n\nimport { read\x2C readSync\x2C write\x2C writeSync } from "ext:deno_io/12_io.js";\nimport * as abortSignal from "ext:deno_web/03_abort_signal.js";\nimport {\n  readableStreamForRid\x2C\n  ReadableStreamPrototype\x2C\n  writableStreamForRid\x2C\n} from "ext:deno_web/06_streams.js";\nimport { pathFromURL\x2C SymbolDispose } from "ext:deno_web/00_infra.js";\n\nfunction chmodSync(path\x2C mode) {\n  op_fs_chmod_sync(pathFromURL(path)\x2C mode);\n}\n\nasync function chmod(path\x2C mode) {\n  await op_fs_chmod_async(pathFromURL(path)\x2C mode);\n}\n\nfunction chownSync(\n  path\x2C\n  uid\x2C\n  gid\x2C\n) {\n  op_fs_chown_sync(pathFromURL(path)\x2C uid\x2C gid);\n}\n\nasync function chown(\n  path\x2C\n  uid\x2C\n  gid\x2C\n) {\n  await op_fs_chown_async(\n    pathFromURL(path)\x2C\n    uid\x2C\n    gid\x2C\n  );\n}\n\nfunction copyFileSync(\n  fromPath\x2C\n  toPath\x2C\n) {\n  op_fs_copy_file_sync(\n    pathFromURL(fromPath)\x2C\n    pathFromURL(toPath)\x2C\n  );\n}\n\nasync function copyFile(\n  fromPath\x2C\n  toPath\x2C\n) {\n  await op_fs_copy_file_async(\n    pathFromURL(fromPath)\x2C\n    pathFromURL(toPath)\x2C\n  );\n}\n\nfunction cwd() {\n  return op_fs_cwd();\n}\n\nfunction chdir(directory) {\n  op_fs_chdir(pathFromURL(directory));\n}\n\nfunction makeTempDirSync(options = { __proto__: null }) {\n  return op_fs_make_temp_dir_sync(\n    options.dir\x2C\n    options.prefix\x2C\n    options.suffix\x2C\n  );\n}\n\nfunction makeTempDir(options = { __proto__: null }) {\n  return op_fs_make_temp_dir_async(\n    options.dir\x2C\n    options.prefix\x2C\n    options.suffix\x2C\n  );\n}\n\nfunction makeTempFileSync(options = { __proto__: null }) {\n  return op_fs_make_temp_file_sync(\n    options.dir\x2C\n    options.prefix\x2C\n    options.suffix\x2C\n  );\n}\n\nfunction makeTempFile(options = { __proto__: null }) {\n  return op_fs_make_temp_file_async(\n    options.dir\x2C\n    options.prefix\x2C\n    options.suffix\x2C\n  );\n}\n\nfunction mkdirSync(path\x2C options) {\n  op_fs_mkdir_sync(\n    pathFromURL(path)\x2C\n    options?.recursive ?? false\x2C\n    options?.mode\x2C\n  );\n}\n\nasync function mkdir(path\x2C options) {\n  await op_fs_mkdir_async(\n    pathFromURL(path)\x2C\n    options?.recursive ?? false\x2C\n    options?.mode\x2C\n  );\n}\n\nfunction readDirSync(path) {\n  return op_fs_read_dir_sync(pathFromURL(path))[\n    SymbolIterator\n  ]();\n}\n\nfunction readDir(path) {\n  const array = op_fs_read_dir_async(\n    pathFromURL(path)\x2C\n  );\n  return {\n    async *[SymbolAsyncIterator]() {\n      const dir = await array;\n      for (let i = 0; i < dir.length; ++i) {\n        yield dir[i];\n      }\n    }\x2C\n  };\n}\n\nfunction readLinkSync(path) {\n  return op_fs_read_link_sync(pathFromURL(path));\n}\n\nfunction readLink(path) {\n  return op_fs_read_link_async(pathFromURL(path));\n}\n\nfunction realPathSync(path) {\n  return op_fs_realpath_sync(pathFromURL(path));\n}\n\nfunction realPath(path) {\n  return op_fs_realpath_async(pathFromURL(path));\n}\n\nfunction removeSync(\n  path\x2C\n  options = { __proto__: null }\x2C\n) {\n  op_fs_remove_sync(\n    pathFromURL(path)\x2C\n    !!options.recursive\x2C\n  );\n}\n\nasync function remove(\n  path\x2C\n  options = { __proto__: null }\x2C\n) {\n  await op_fs_remove_async(\n    pathFromURL(path)\x2C\n    !!options.recursive\x2C\n  );\n}\n\nfunction renameSync(oldpath\x2C newpath) {\n  op_fs_rename_sync(\n    pathFromURL(oldpath)\x2C\n    pathFromURL(newpath)\x2C\n  );\n}\n\nasync function rename(oldpath\x2C newpath) {\n  await op_fs_rename_async(\n    pathFromURL(oldpath)\x2C\n    pathFromURL(newpath)\x2C\n  );\n}\n\n// Extract the FsStat object from the encoded buffer.\n// See `runtime/ops/fs.rs` for the encoder.\n//\n// This is not a general purpose decoder. There are 4 types:\n//\n// 1. date\n//  offset += 4\n//  1/0 | extra padding | high u32 | low u32\n//  if date[0] == 1\x2C new Date(u64) else null\n//\n// 2. bool\n//  offset += 2\n//  1/0 | extra padding\n//\n// 3. u64\n//  offset += 2\n//  high u32 | low u32\n//\n// 4. ?u64 converts a zero u64 value to JS null on Windows.\n//    ?bool converts a false bool value to JS null on Windows.\nfunction createByteStruct(types) {\n  // types can be "date"\x2C "bool" or "u64".\n  let offset = 0;\n  let str =\n    'const unix = Deno.build.os === "darwin" || Deno.build.os === "linux" || Deno.build.os === "android" || Deno.build.os === "openbsd" || Deno.build.os === "freebsd"; return {';\n  const typeEntries = ObjectEntries(types);\n  for (let i = 0; i < typeEntries.length; ++i) {\n    let { 0: name\x2C 1: type } = typeEntries[i];\n\n    const optional = StringPrototypeStartsWith(type\x2C "?");\n    if (optional) type = StringPrototypeSlice(type\x2C 1);\n\n    if (type == "u64") {\n      if (!optional) {\n        str += `${name}: view[${offset}] + view[${offset + 1}] * 2**32\x2C`;\n      } else {\n        str += `${name}: (unix ? (view[${offset}] + view[${\n          offset + 1\n        }] * 2**32) : (view[${offset}] + view[${\n          offset + 1\n        }] * 2**32) || null)\x2C`;\n      }\n    } else if (type == "date") {\n      str += `${name}: view[${offset}] === 0 ? null : new Date(view[${\n        offset + 2\n      }] + view[${offset + 3}] * 2**32)\x2C`;\n      offset += 2;\n    } else {\n      if (!optional) {\n        str += `${name}: !!(view[${offset}] + view[${offset + 1}] * 2**32)\x2C`;\n      } else {\n        str += `${name}: (unix ? !!((view[${offset}] + view[${\n          offset + 1\n        }] * 2**32)) : !!((view[${offset}] + view[${\n          offset + 1\n        }] * 2**32)) || null)\x2C`;\n      }\n    }\n    offset += 2;\n  }\n  str += "};";\n  // ...so you don't like eval huh? don't worry\x2C it only executes during snapshot :)\n  return [new Function("view"\x2C str)\x2C new Uint32Array(offset)];\n}\n\nconst { 0: statStruct\x2C 1: statBuf } = createByteStruct({\n  isFile: "bool"\x2C\n  isDirectory: "bool"\x2C\n  isSymlink: "bool"\x2C\n  size: "u64"\x2C\n  mtime: "date"\x2C\n  atime: "date"\x2C\n  birthtime: "date"\x2C\n  dev: "u64"\x2C\n  ino: "?u64"\x2C\n  mode: "?u64"\x2C\n  nlink: "?u64"\x2C\n  uid: "?u64"\x2C\n  gid: "?u64"\x2C\n  rdev: "?u64"\x2C\n  blksize: "?u64"\x2C\n  blocks: "?u64"\x2C\n  isBlockDevice: "?bool"\x2C\n  isCharDevice: "?bool"\x2C\n  isFifo: "?bool"\x2C\n  isSocket: "?bool"\x2C\n});\n\nfunction parseFileInfo(response) {\n  const unix = core.build.os === "darwin" ||\n    core.build.os === "linux" ||\n    core.build.os === "android" ||\n    core.build.os === "freebsd" ||\n    core.build.os === "openbsd";\n  return {\n    isFile: response.isFile\x2C\n    isDirectory: response.isDirectory\x2C\n    isSymlink: response.isSymlink\x2C\n    size: response.size\x2C\n    mtime: response.mtimeSet === true ? new Date(response.mtime) : null\x2C\n    atime: response.atimeSet === true ? new Date(response.atime) : null\x2C\n    birthtime: response.birthtimeSet === true\n      ? new Date(response.birthtime)\n      : null\x2C\n    dev: response.dev\x2C\n    ino: unix ? response.ino : null\x2C\n    mode: unix ? response.mode : null\x2C\n    nlink: unix ? response.nlink : null\x2C\n    uid: unix ? response.uid : null\x2C\n    gid: unix ? response.gid : null\x2C\n    rdev: unix ? response.rdev : null\x2C\n    blksize: unix ? response.blksize : null\x2C\n    blocks: unix ? response.blocks : null\x2C\n    isBlockDevice: unix ? response.isBlockDevice : null\x2C\n    isCharDevice: unix ? response.isCharDevice : null\x2C\n    isFifo: unix ? response.isFifo : null\x2C\n    isSocket: unix ? response.isSocket : null\x2C\n  };\n}\n\nfunction fstatSync(rid) {\n  op_fs_file_stat_sync(rid\x2C statBuf);\n  return statStruct(statBuf);\n}\n\nasync function fstat(rid) {\n  return parseFileInfo(await op_fs_file_stat_async(rid));\n}\n\nasync function lstat(path) {\n  const res = await op_fs_lstat_async(pathFromURL(path));\n  return parseFileInfo(res);\n}\n\nfunction lstatSync(path) {\n  op_fs_lstat_sync(pathFromURL(path)\x2C statBuf);\n  return statStruct(statBuf);\n}\n\nasync function stat(path) {\n  const res = await op_fs_stat_async(pathFromURL(path));\n  return parseFileInfo(res);\n}\n\nfunction statSync(path) {\n  op_fs_stat_sync(pathFromURL(path)\x2C statBuf);\n  return statStruct(statBuf);\n}\n\nfunction coerceLen(len) {\n  if (len == null || len < 0) {\n    return 0;\n  }\n  return len;\n}\n\nfunction ftruncateSync(rid\x2C len) {\n  op_fs_ftruncate_sync(rid\x2C coerceLen(len));\n}\n\nasync function ftruncate(rid\x2C len) {\n  await op_fs_ftruncate_async(rid\x2C coerceLen(len));\n}\n\nfunction truncateSync(path\x2C len) {\n  op_fs_truncate_sync(path\x2C coerceLen(len));\n}\n\nasync function truncate(path\x2C len) {\n  await op_fs_truncate_async(path\x2C coerceLen(len));\n}\n\nfunction umask(mask) {\n  return op_fs_umask(mask);\n}\n\nfunction linkSync(oldpath\x2C newpath) {\n  op_fs_link_sync(oldpath\x2C newpath);\n}\n\nasync function link(oldpath\x2C newpath) {\n  await op_fs_link_async(oldpath\x2C newpath);\n}\n\nfunction toUnixTimeFromEpoch(value) {\n  if (isDate(value)) {\n    const time = DatePrototypeGetTime(value);\n    const seconds = MathTrunc(time / 1e3);\n    const nanoseconds = MathTrunc(time - (seconds * 1e3)) * 1e6;\n\n    return [\n      seconds\x2C\n      nanoseconds\x2C\n    ];\n  }\n\n  const seconds = MathTrunc(value);\n  const nanoseconds = MathTrunc((value * 1e3) - (seconds * 1e3)) * 1e6;\n\n  return [\n    seconds\x2C\n    nanoseconds\x2C\n  ];\n}\n\nfunction futimeSync(\n  rid\x2C\n  atime\x2C\n  mtime\x2C\n) {\n  const { 0: atimeSec\x2C 1: atimeNsec } = toUnixTimeFromEpoch(atime);\n  const { 0: mtimeSec\x2C 1: mtimeNsec } = toUnixTimeFromEpoch(mtime);\n  op_fs_futime_sync(rid\x2C atimeSec\x2C atimeNsec\x2C mtimeSec\x2C mtimeNsec);\n}\n\nasync function futime(\n  rid\x2C\n  atime\x2C\n  mtime\x2C\n) {\n  const { 0: atimeSec\x2C 1: atimeNsec } = toUnixTimeFromEpoch(atime);\n  const { 0: mtimeSec\x2C 1: mtimeNsec } = toUnixTimeFromEpoch(mtime);\n  await op_fs_futime_async(\n    rid\x2C\n    atimeSec\x2C\n    atimeNsec\x2C\n    mtimeSec\x2C\n    mtimeNsec\x2C\n  );\n}\n\nfunction utimeSync(\n  path\x2C\n  atime\x2C\n  mtime\x2C\n) {\n  const { 0: atimeSec\x2C 1: atimeNsec } = toUnixTimeFromEpoch(atime);\n  const { 0: mtimeSec\x2C 1: mtimeNsec } = toUnixTimeFromEpoch(mtime);\n  op_fs_utime_sync(\n    pathFromURL(path)\x2C\n    atimeSec\x2C\n    atimeNsec\x2C\n    mtimeSec\x2C\n    mtimeNsec\x2C\n  );\n}\n\nasync function utime(\n  path\x2C\n  atime\x2C\n  mtime\x2C\n) {\n  const { 0: atimeSec\x2C 1: atimeNsec } = toUnixTimeFromEpoch(atime);\n  const { 0: mtimeSec\x2C 1: mtimeNsec } = toUnixTimeFromEpoch(mtime);\n  await op_fs_utime_async(\n    pathFromURL(path)\x2C\n    atimeSec\x2C\n    atimeNsec\x2C\n    mtimeSec\x2C\n    mtimeNsec\x2C\n  );\n}\n\nfunction symlinkSync(\n  oldpath\x2C\n  newpath\x2C\n  options\x2C\n) {\n  op_fs_symlink_sync(\n    pathFromURL(oldpath)\x2C\n    pathFromURL(newpath)\x2C\n    options?.type\x2C\n  );\n}\n\nasync function symlink(\n  oldpath\x2C\n  newpath\x2C\n  options\x2C\n) {\n  await op_fs_symlink_async(\n    pathFromURL(oldpath)\x2C\n    pathFromURL(newpath)\x2C\n    options?.type\x2C\n  );\n}\n\nfunction fdatasyncSync(rid) {\n  op_fs_fdatasync_sync(rid);\n}\n\nasync function fdatasync(rid) {\n  await op_fs_fdatasync_async(rid);\n}\n\nfunction fsyncSync(rid) {\n  op_fs_fsync_sync(rid);\n}\n\nasync function fsync(rid) {\n  await op_fs_fsync_async(rid);\n}\n\nfunction flockSync(rid\x2C exclusive) {\n  op_fs_flock_sync_unstable(rid\x2C exclusive === true);\n}\n\nasync function flock(rid\x2C exclusive) {\n  await op_fs_flock_async_unstable(rid\x2C exclusive === true);\n}\n\nfunction funlockSync(rid) {\n  op_fs_funlock_sync_unstable(rid);\n}\n\nasync function funlock(rid) {\n  await op_fs_funlock_async_unstable(rid);\n}\n\nfunction seekSync(\n  rid\x2C\n  offset\x2C\n  whence\x2C\n) {\n  return op_fs_seek_sync(rid\x2C offset\x2C whence);\n}\n\nfunction seek(\n  rid\x2C\n  offset\x2C\n  whence\x2C\n) {\n  return op_fs_seek_async(rid\x2C offset\x2C whence);\n}\n\nfunction openSync(\n  path\x2C\n  options\x2C\n) {\n  if (options) checkOpenOptions(options);\n  const rid = op_fs_open_sync(\n    pathFromURL(path)\x2C\n    options\x2C\n  );\n\n  return new FsFile(rid\x2C SymbolFor("Deno.internal.FsFile"));\n}\n\nasync function open(\n  path\x2C\n  options\x2C\n) {\n  if (options) checkOpenOptions(options);\n  const rid = await op_fs_open_async(\n    pathFromURL(path)\x2C\n    options\x2C\n  );\n\n  return new FsFile(rid\x2C SymbolFor("Deno.internal.FsFile"));\n}\n\nfunction createSync(path) {\n  return openSync(path\x2C {\n    read: true\x2C\n    write: true\x2C\n    truncate: true\x2C\n    create: true\x2C\n  });\n}\n\nfunction create(path) {\n  return open(path\x2C {\n    read: true\x2C\n    write: true\x2C\n    truncate: true\x2C\n    create: true\x2C\n  });\n}\n\nclass FsFile {\n  #rid = 0;\n\n  #readable;\n  #writable;\n\n  constructor(rid\x2C symbol) {\n    ObjectDefineProperty(this\x2C internalRidSymbol\x2C {\n      enumerable: false\x2C\n      value: rid\x2C\n    });\n    this.#rid = rid;\n    if (!symbol || symbol !== SymbolFor("Deno.internal.FsFile")) {\n      internals.warnOnDeprecatedApi(\n        "new Deno.FsFile()"\x2C\n        new Error().stack\x2C\n        "Use `Deno.open` or `Deno.openSync` instead."\x2C\n      );\n      if (internals.future) {\n        throw new TypeError(\n          "`Deno.FsFile` cannot be constructed\x2C use `Deno.open()` or `Deno.openSync()` instead."\x2C\n        );\n      }\n    }\n  }\n\n  get rid() {\n    internals.warnOnDeprecatedApi(\n      "Deno.FsFile.rid"\x2C\n      new Error().stack\x2C\n      "Use `Deno.FsFile` methods directly instead."\x2C\n    );\n    return this.#rid;\n  }\n\n  write(p) {\n    return write(this.#rid\x2C p);\n  }\n\n  writeSync(p) {\n    return writeSync(this.#rid\x2C p);\n  }\n\n  truncate(len) {\n    return ftruncate(this.#rid\x2C len);\n  }\n\n  truncateSync(len) {\n    return ftruncateSync(this.#rid\x2C len);\n  }\n\n  read(p) {\n    return read(this.#rid\x2C p);\n  }\n\n  readSync(p) {\n    return readSync(this.#rid\x2C p);\n  }\n\n  seek(offset\x2C whence) {\n    return seek(this.#rid\x2C offset\x2C whence);\n  }\n\n  seekSync(offset\x2C whence) {\n    return seekSync(this.#rid\x2C offset\x2C whence);\n  }\n\n  stat() {\n    return fstat(this.#rid);\n  }\n\n  statSync() {\n    return fstatSync(this.#rid);\n  }\n\n  async syncData() {\n    await op_fs_fdatasync_async(this.#rid);\n  }\n\n  syncDataSync() {\n    op_fs_fdatasync_sync(this.#rid);\n  }\n\n  close() {\n    core.close(this.#rid);\n  }\n\n  get readable() {\n    if (this.#readable === undefined) {\n      this.#readable = readableStreamForRid(this.#rid);\n    }\n    return this.#readable;\n  }\n\n  get writable() {\n    if (this.#writable === undefined) {\n      this.#writable = writableStreamForRid(this.#rid);\n    }\n    return this.#writable;\n  }\n\n  async sync() {\n    await op_fs_fsync_async(this.#rid);\n  }\n\n  syncSync() {\n    op_fs_fsync_sync(this.#rid);\n  }\n\n  async utime(atime\x2C mtime) {\n    await futime(this.#rid\x2C atime\x2C mtime);\n  }\n\n  utimeSync(atime\x2C mtime) {\n    futimeSync(this.#rid\x2C atime\x2C mtime);\n  }\n\n  isTerminal() {\n    return core.isTerminal(this.#rid);\n  }\n\n  setRaw(mode\x2C options = { __proto__: null }) {\n    const cbreak = !!(options.cbreak ?? false);\n    op_set_raw(this.#rid\x2C mode\x2C cbreak);\n  }\n\n  lockSync(exclusive = false) {\n    op_fs_flock_sync(this.#rid\x2C exclusive);\n  }\n\n  async lock(exclusive = false) {\n    await op_fs_flock_async(this.#rid\x2C exclusive);\n  }\n\n  unlockSync() {\n    op_fs_funlock_sync(this.#rid);\n  }\n\n  async unlock() {\n    await op_fs_funlock_async(this.#rid);\n  }\n\n  [SymbolDispose]() {\n    core.tryClose(this.#rid);\n  }\n}\n\nfunction checkOpenOptions(options) {\n  if (\n    ArrayPrototypeFilter(\n      ObjectValues(options)\x2C\n      (val) => val === true\x2C\n    ).length === 0\n  ) {\n    throw new Error("OpenOptions requires at least one option to be true");\n  }\n\n  if (options.truncate && !options.write) {\n    throw new Error("'truncate' option requires 'write' option");\n  }\n\n  const createOrCreateNewWithoutWriteOrAppend =\n    (options.create || options.createNew) &&\n    !(options.write || options.append);\n\n  if (createOrCreateNewWithoutWriteOrAppend) {\n    throw new Error(\n      "'create' or 'createNew' options require 'write' or 'append' option"\x2C\n    );\n  }\n}\n\nconst File = FsFile;\n\nfunction readFileSync(path) {\n  return op_fs_read_file_sync(pathFromURL(path));\n}\n\nasync function readFile(path\x2C options) {\n  let cancelRid;\n  let abortHandler;\n  if (options?.signal) {\n    options.signal.throwIfAborted();\n    cancelRid = createCancelHandle();\n    abortHandler = () => core.tryClose(cancelRid);\n    options.signal[abortSignal.add](abortHandler);\n  }\n\n  try {\n    const read = await op_fs_read_file_async(\n      pathFromURL(path)\x2C\n      cancelRid\x2C\n    );\n    return read;\n  } finally {\n    if (options?.signal) {\n      options.signal[abortSignal.remove](abortHandler);\n\n      // always throw the abort error when aborted\n      options.signal.throwIfAborted();\n    }\n  }\n}\n\nfunction readTextFileSync(path) {\n  return op_fs_read_file_text_sync(pathFromURL(path));\n}\n\nasync function readTextFile(path\x2C options) {\n  let cancelRid;\n  let abortHandler;\n  if (options?.signal) {\n    options.signal.throwIfAborted();\n    cancelRid = createCancelHandle();\n    abortHandler = () => core.tryClose(cancelRid);\n    options.signal[abortSignal.add](abortHandler);\n  }\n\n  try {\n    const read = await op_fs_read_file_text_async(\n      pathFromURL(path)\x2C\n      cancelRid\x2C\n    );\n    return read;\n  } finally {\n    if (options?.signal) {\n      options.signal[abortSignal.remove](abortHandler);\n\n      // always throw the abort error when aborted\n      options.signal.throwIfAborted();\n    }\n  }\n}\n\nfunction writeFileSync(\n  path\x2C\n  data\x2C\n  options = { __proto__: null }\x2C\n) {\n  options.signal?.throwIfAborted();\n  op_fs_write_file_sync(\n    pathFromURL(path)\x2C\n    options.mode\x2C\n    options.append ?? false\x2C\n    options.create ?? true\x2C\n    options.createNew ?? false\x2C\n    data\x2C\n  );\n}\n\nasync function writeFile(\n  path\x2C\n  data\x2C\n  options = { __proto__: null }\x2C\n) {\n  let cancelRid;\n  let abortHandler;\n  if (options.signal) {\n    options.signal.throwIfAborted();\n    cancelRid = createCancelHandle();\n    abortHandler = () => core.tryClose(cancelRid);\n    options.signal[abortSignal.add](abortHandler);\n  }\n  try {\n    if (ObjectPrototypeIsPrototypeOf(ReadableStreamPrototype\x2C data)) {\n      const file = await open(path\x2C {\n        mode: options.mode\x2C\n        append: options.append ?? false\x2C\n        create: options.create ?? true\x2C\n        createNew: options.createNew ?? false\x2C\n        truncate: !(options.append ?? false)\x2C\n        write: true\x2C\n      });\n      await data.pipeTo(file.writable\x2C {\n        signal: options.signal\x2C\n      });\n    } else {\n      await op_fs_write_file_async(\n        pathFromURL(path)\x2C\n        options.mode\x2C\n        options.append ?? false\x2C\n        options.create ?? true\x2C\n        options.createNew ?? false\x2C\n        data\x2C\n        cancelRid\x2C\n      );\n    }\n  } finally {\n    if (options.signal) {\n      options.signal[abortSignal.remove](abortHandler);\n\n      // always throw the abort error when aborted\n      options.signal.throwIfAborted();\n    }\n  }\n}\n\nfunction writeTextFileSync(\n  path\x2C\n  data\x2C\n  options = { __proto__: null }\x2C\n) {\n  const encoder = new TextEncoder();\n  return writeFileSync(path\x2C encoder.encode(data)\x2C options);\n}\n\nfunction writeTextFile(\n  path\x2C\n  data\x2C\n  options = { __proto__: null }\x2C\n) {\n  if (ObjectPrototypeIsPrototypeOf(ReadableStreamPrototype\x2C data)) {\n    return writeFile(\n      path\x2C\n      data.pipeThrough(new TextEncoderStream())\x2C\n      options\x2C\n    );\n  } else {\n    const encoder = new TextEncoder();\n    return writeFile(path\x2C encoder.encode(data)\x2C options);\n  }\n}\n\nexport {\n  chdir\x2C\n  chmod\x2C\n  chmodSync\x2C\n  chown\x2C\n  chownSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  create\x2C\n  createSync\x2C\n  cwd\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  File\x2C\n  flock\x2C\n  flockSync\x2C\n  FsFile\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  funlock\x2C\n  funlockSync\x2C\n  futime\x2C\n  futimeSync\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  makeTempDir\x2C\n  makeTempDirSync\x2C\n  makeTempFile\x2C\n  makeTempFileSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  open\x2C\n  openSync\x2C\n  readDir\x2C\n  readDirSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readLink\x2C\n  readLinkSync\x2C\n  readTextFile\x2C\n  readTextFileSync\x2C\n  realPath\x2C\n  realPathSync\x2C\n  remove\x2C\n  removeSync\x2C\n  rename\x2C\n  renameSync\x2C\n  seek\x2C\n  seekSync\x2C\n  stat\x2C\n  statSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  umask\x2C\n  utime\x2C\n  utimeSync\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  writeTextFile\x2C\n  writeTextFileSync\x2C\n};\n
code-source-info,0x2c3700585394,55,4967,5096,C10O4967C61O5016C67O5046C73O5046C78O5079C84O5022C97O5016C129O5095,,
code-creation,JS,9,576216,0x2c37005854a0,89,pathFromURL ext:deno_web/00_infra.js:444:21,0x2c37001d8428,~
script-source,12,ext:deno_web/00_infra.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// @ts-check\n/// <reference path="../../core/internal.d.ts" />\n/// <reference path="../../core/lib.deno_core.d.ts" />\n/// <reference path="../web/internal.d.ts" />\n/// <reference path="../web/lib.deno_web.d.ts" />\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport { op_base64_decode\x2C op_base64_encode } from "ext:core/ops";\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  decodeURIComponent\x2C\n  Error\x2C\n  JSONStringify\x2C\n  NumberPrototypeToString\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  RegExpPrototypeTest\x2C\n  SafeArrayIterator\x2C\n  SafeRegExp\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeMatch\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSubstring\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  TypeError\x2C\n} = primordials;\n\nimport { URLPrototype } from "ext:deno_url/00_url.js";\n\nconst ASCII_DIGIT = ["\\u0030-\\u0039"];\nconst ASCII_UPPER_ALPHA = ["\\u0041-\\u005A"];\nconst ASCII_LOWER_ALPHA = ["\\u0061-\\u007A"];\nconst ASCII_ALPHA = [\n  ...new SafeArrayIterator(ASCII_UPPER_ALPHA)\x2C\n  ...new SafeArrayIterator(ASCII_LOWER_ALPHA)\x2C\n];\nconst ASCII_ALPHANUMERIC = [\n  ...new SafeArrayIterator(ASCII_DIGIT)\x2C\n  ...new SafeArrayIterator(ASCII_ALPHA)\x2C\n];\n\nconst HTTP_TAB_OR_SPACE = ["\\u0009"\x2C "\\u0020"];\nconst HTTP_WHITESPACE = [\n  "\\u000A"\x2C\n  "\\u000D"\x2C\n  ...new SafeArrayIterator(HTTP_TAB_OR_SPACE)\x2C\n];\n\nconst HTTP_TOKEN_CODE_POINT = [\n  "\\u0021"\x2C\n  "\\u0023"\x2C\n  "\\u0024"\x2C\n  "\\u0025"\x2C\n  "\\u0026"\x2C\n  "\\u0027"\x2C\n  "\\u002A"\x2C\n  "\\u002B"\x2C\n  "\\u002D"\x2C\n  "\\u002E"\x2C\n  "\\u005E"\x2C\n  "\\u005F"\x2C\n  "\\u0060"\x2C\n  "\\u007C"\x2C\n  "\\u007E"\x2C\n  ...new SafeArrayIterator(ASCII_ALPHANUMERIC)\x2C\n];\nconst HTTP_TOKEN_CODE_POINT_RE = new SafeRegExp(\n  `^[${regexMatcher(HTTP_TOKEN_CODE_POINT)}]+$`\x2C\n);\nconst HTTP_QUOTED_STRING_TOKEN_POINT = [\n  "\\u0009"\x2C\n  "\\u0020-\\u007E"\x2C\n  "\\u0080-\\u00FF"\x2C\n];\nconst HTTP_QUOTED_STRING_TOKEN_POINT_RE = new SafeRegExp(\n  `^[${regexMatcher(HTTP_QUOTED_STRING_TOKEN_POINT)}]+$`\x2C\n);\nconst HTTP_TAB_OR_SPACE_MATCHER = regexMatcher(HTTP_TAB_OR_SPACE);\nconst HTTP_TAB_OR_SPACE_PREFIX_RE = new SafeRegExp(\n  `^[${HTTP_TAB_OR_SPACE_MATCHER}]+`\x2C\n  "g"\x2C\n);\nconst HTTP_TAB_OR_SPACE_SUFFIX_RE = new SafeRegExp(\n  `[${HTTP_TAB_OR_SPACE_MATCHER}]+$`\x2C\n  "g"\x2C\n);\nconst HTTP_WHITESPACE_MATCHER = regexMatcher(HTTP_WHITESPACE);\nconst HTTP_BETWEEN_WHITESPACE = new SafeRegExp(\n  `^[${HTTP_WHITESPACE_MATCHER}]*(.*?)[${HTTP_WHITESPACE_MATCHER}]*$`\x2C\n);\nconst HTTP_WHITESPACE_PREFIX_RE = new SafeRegExp(\n  `^[${HTTP_WHITESPACE_MATCHER}]+`\x2C\n  "g"\x2C\n);\nconst HTTP_WHITESPACE_SUFFIX_RE = new SafeRegExp(\n  `[${HTTP_WHITESPACE_MATCHER}]+$`\x2C\n  "g"\x2C\n);\n\n/**\n * Turn a string of chars into a regex safe matcher.\n * @param {string[]} chars\n * @returns {string}\n */\nfunction regexMatcher(chars) {\n  const matchers = ArrayPrototypeMap(chars\x2C (char) => {\n    if (char.length === 1) {\n      const a = StringPrototypePadStart(\n        NumberPrototypeToString(StringPrototypeCharCodeAt(char\x2C 0)\x2C 16)\x2C\n        4\x2C\n        "0"\x2C\n      );\n      return `\\\\u${a}`;\n    } else if (char.length === 3 && char[1] === "-") {\n      const a = StringPrototypePadStart(\n        NumberPrototypeToString(StringPrototypeCharCodeAt(char\x2C 0)\x2C 16)\x2C\n        4\x2C\n        "0"\x2C\n      );\n      const b = StringPrototypePadStart(\n        NumberPrototypeToString(StringPrototypeCharCodeAt(char\x2C 2)\x2C 16)\x2C\n        4\x2C\n        "0"\x2C\n      );\n      return `\\\\u${a}-\\\\u${b}`;\n    } else {\n      throw TypeError("unreachable");\n    }\n  });\n  return ArrayPrototypeJoin(matchers\x2C "");\n}\n\n/**\n * https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points\n * @param {string} input\n * @param {number} position\n * @param {(char: string) => boolean} condition\n * @returns {{result: string\x2C position: number}}\n */\nfunction collectSequenceOfCodepoints(input\x2C position\x2C condition) {\n  const start = position;\n  for (\n    let c = StringPrototypeCharAt(input\x2C position);\n    position < input.length && condition(c);\n    c = StringPrototypeCharAt(input\x2C ++position)\n  );\n  return { result: StringPrototypeSlice(input\x2C start\x2C position)\x2C position };\n}\n\nconst LOWERCASE_PATTERN = new SafeRegExp(/[a-z]/g);\n\n/**\n * @param {string} s\n * @returns {string}\n */\nfunction byteUpperCase(s) {\n  return StringPrototypeReplace(\n    String(s)\x2C\n    LOWERCASE_PATTERN\x2C\n    function byteUpperCaseReplace(c) {\n      return StringPrototypeToUpperCase(c);\n    }\x2C\n  );\n}\n\n/**\n * @param {string} s\n * @returns {string}\n */\nfunction byteLowerCase(s) {\n  // NOTE: correct since all callers convert to ByteString first\n  // TODO(@AaronO): maybe prefer a ByteString_Lower webidl converter\n  return StringPrototypeToLowerCase(s);\n}\n\n/**\n * https://fetch.spec.whatwg.org/#collect-an-http-quoted-string\n * @param {string} input\n * @param {number} position\n * @param {boolean} extractValue\n * @returns {{result: string\x2C position: number}}\n */\nfunction collectHttpQuotedString(input\x2C position\x2C extractValue) {\n  // 1.\n  const positionStart = position;\n  // 2.\n  let value = "";\n  // 3.\n  if (input[position] !== "\\u0022") throw new TypeError('must be "');\n  // 4.\n  position++;\n  // 5.\n  while (true) {\n    // 5.1.\n    const res = collectSequenceOfCodepoints(\n      input\x2C\n      position\x2C\n      (c) => c !== "\\u0022" && c !== "\\u005C"\x2C\n    );\n    value += res.result;\n    position = res.position;\n    // 5.2.\n    if (position >= input.length) break;\n    // 5.3.\n    const quoteOrBackslash = input[position];\n    // 5.4.\n    position++;\n    // 5.5.\n    if (quoteOrBackslash === "\\u005C") {\n      // 5.5.1.\n      if (position >= input.length) {\n        value += "\\u005C";\n        break;\n      }\n      // 5.5.2.\n      value += input[position];\n      // 5.5.3.\n      position++;\n    } else { // 5.6.\n      // 5.6.1\n      if (quoteOrBackslash !== "\\u0022") throw new TypeError('must be "');\n      // 5.6.2\n      break;\n    }\n  }\n  // 6.\n  if (extractValue) return { result: value\x2C position };\n  // 7.\n  return {\n    result: StringPrototypeSubstring(input\x2C positionStart\x2C position + 1)\x2C\n    position\x2C\n  };\n}\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction forgivingBase64Encode(data) {\n  return op_base64_encode(data);\n}\n\n/**\n * @param {string} data\n * @returns {Uint8Array}\n */\nfunction forgivingBase64Decode(data) {\n  return op_base64_decode(data);\n}\n\n// Taken from std/encoding/base64url.ts\n/*\n * Some variants allow or require omitting the padding '=' signs:\n * https://en.wikipedia.org/wiki/Base64#The_URL_applications\n * @param base64url\n */\n/**\n * @param {string} base64url\n * @returns {string}\n */\nfunction addPaddingToBase64url(base64url) {\n  if (base64url.length % 4 === 2) return base64url + "==";\n  if (base64url.length % 4 === 3) return base64url + "=";\n  if (base64url.length % 4 === 1) {\n    throw new TypeError("Illegal base64url string!");\n  }\n  return base64url;\n}\n\nconst BASE64URL_PATTERN = new SafeRegExp(/^[-_A-Z0-9]*?={0\x2C2}$/i);\n\n/**\n * @param {string} base64url\n * @returns {string}\n */\nfunction convertBase64urlToBase64(base64url) {\n  if (!RegExpPrototypeTest(BASE64URL_PATTERN\x2C base64url)) {\n    // Contains characters not part of base64url spec.\n    throw new TypeError("Failed to decode base64url: invalid character");\n  }\n  return StringPrototypeReplaceAll(\n    StringPrototypeReplaceAll(\n      addPaddingToBase64url(base64url)\x2C\n      "-"\x2C\n      "+"\x2C\n    )\x2C\n    "_"\x2C\n    "/"\x2C\n  );\n}\n\n/**\n * Encodes a given ArrayBuffer or string into a base64url representation\n * @param {ArrayBuffer | string} data\n * @returns {string}\n */\nfunction forgivingBase64UrlEncode(data) {\n  return StringPrototypeReplaceAll(\n    StringPrototypeReplaceAll(\n      StringPrototypeReplaceAll(\n        forgivingBase64Encode(\n          typeof data === "string" ? new TextEncoder().encode(data) : data\x2C\n        )\x2C\n        "="\x2C\n        ""\x2C\n      )\x2C\n      "+"\x2C\n      "-"\x2C\n    )\x2C\n    "/"\x2C\n    "_"\x2C\n  );\n}\n\n/**\n * Converts given base64url encoded data back to original\n * @param {string} b64url\n * @returns {Uint8Array}\n */\nfunction forgivingBase64UrlDecode(b64url) {\n  return forgivingBase64Decode(convertBase64urlToBase64(b64url));\n}\n\n/**\n * @param {string} char\n * @returns {boolean}\n */\nfunction isHttpWhitespace(char) {\n  switch (char) {\n    case "\\u0009":\n    case "\\u000A":\n    case "\\u000D":\n    case "\\u0020":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * @param {string} s\n * @returns {string}\n */\nfunction httpTrim(s) {\n  if (!isHttpWhitespace(s[0]) && !isHttpWhitespace(s[s.length - 1])) {\n    return s;\n  }\n  return StringPrototypeMatch(s\x2C HTTP_BETWEEN_WHITESPACE)?.[1] ?? "";\n}\n\nclass AssertionError extends Error {\n  constructor(msg) {\n    super(msg);\n    this.name = "AssertionError";\n  }\n}\n\n/**\n * @param {unknown} cond\n * @param {string=} msg\n * @returns {asserts cond}\n */\nfunction assert(cond\x2C msg = "Assertion failed.") {\n  if (!cond) {\n    throw new AssertionError(msg);\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nfunction serializeJSValueToJSONString(value) {\n  const result = JSONStringify(value);\n  if (result === undefined) {\n    throw new TypeError("Value is not JSON serializable.");\n  }\n  return result;\n}\n\nconst PATHNAME_WIN_RE = new SafeRegExp(/^\\/*([A-Za-z]:)(\\/|$)/);\nconst SLASH_WIN_RE = new SafeRegExp(/\\//g);\nconst PERCENT_RE = new SafeRegExp(/%(?![0-9A-Fa-f]{2})/g);\n\n// Keep in sync with `fromFileUrl()` in `std/path/win32.ts`.\n/**\n * @param {URL} url\n * @returns {string}\n */\nfunction pathFromURLWin32(url) {\n  let p = StringPrototypeReplace(\n    url.pathname\x2C\n    PATHNAME_WIN_RE\x2C\n    "$1/"\x2C\n  );\n  p = StringPrototypeReplace(\n    p\x2C\n    SLASH_WIN_RE\x2C\n    "\\\\"\x2C\n  );\n  p = StringPrototypeReplace(\n    p\x2C\n    PERCENT_RE\x2C\n    "%25"\x2C\n  );\n  let path = decodeURIComponent(p);\n  if (url.hostname != "") {\n    // Note: The `URL` implementation guarantees that the drive letter and\n    // hostname are mutually exclusive. Otherwise it would not have been valid\n    // to append the hostname and path like this.\n    path = `\\\\\\\\${url.hostname}${path}`;\n  }\n  return path;\n}\n\n// Keep in sync with `fromFileUrl()` in `std/path/posix.ts`.\n/**\n * @param {URL} url\n * @returns {string}\n */\nfunction pathFromURLPosix(url) {\n  if (url.hostname !== "") {\n    throw new TypeError(`Host must be empty.`);\n  }\n\n  return decodeURIComponent(\n    StringPrototypeReplace(\n      url.pathname\x2C\n      PERCENT_RE\x2C\n      "%25"\x2C\n    )\x2C\n  );\n}\n\nfunction pathFromURL(pathOrUrl) {\n  if (ObjectPrototypeIsPrototypeOf(URLPrototype\x2C pathOrUrl)) {\n    if (pathOrUrl.protocol != "file:") {\n      throw new TypeError("Must be a file URL.");\n    }\n\n    return core.build.os == "windows"\n      ? pathFromURLWin32(pathOrUrl)\n      : pathFromURLPosix(pathOrUrl);\n  }\n  return pathOrUrl;\n}\n\n// NOTE(bartlomieju): this is exposed on `internals` so we can test\n// it in unit tests\ninternals.pathFromURL = pathFromURL;\n\n// deno-lint-ignore prefer-primordials\nexport const SymbolDispose = Symbol.dispose ?? Symbol("Symbol.dispose");\n// deno-lint-ignore prefer-primordials\nexport const SymbolAsyncDispose = Symbol.asyncDispose ??\n  Symbol("Symbol.asyncDispose");\n// deno-lint-ignore prefer-primordials\nexport const SymbolMetadata = Symbol.metadata ??\n  Symbol("Symbol.metadata");\n\nexport {\n  ASCII_ALPHA\x2C\n  ASCII_ALPHANUMERIC\x2C\n  ASCII_DIGIT\x2C\n  ASCII_LOWER_ALPHA\x2C\n  ASCII_UPPER_ALPHA\x2C\n  assert\x2C\n  AssertionError\x2C\n  byteLowerCase\x2C\n  byteUpperCase\x2C\n  collectHttpQuotedString\x2C\n  collectSequenceOfCodepoints\x2C\n  forgivingBase64Decode\x2C\n  forgivingBase64Encode\x2C\n  forgivingBase64UrlDecode\x2C\n  forgivingBase64UrlEncode\x2C\n  HTTP_QUOTED_STRING_TOKEN_POINT\x2C\n  HTTP_QUOTED_STRING_TOKEN_POINT_RE\x2C\n  HTTP_TAB_OR_SPACE\x2C\n  HTTP_TAB_OR_SPACE_PREFIX_RE\x2C\n  HTTP_TAB_OR_SPACE_SUFFIX_RE\x2C\n  HTTP_TOKEN_CODE_POINT\x2C\n  HTTP_TOKEN_CODE_POINT_RE\x2C\n  HTTP_WHITESPACE\x2C\n  HTTP_WHITESPACE_PREFIX_RE\x2C\n  HTTP_WHITESPACE_SUFFIX_RE\x2C\n  httpTrim\x2C\n  pathFromURL\x2C\n  regexMatcher\x2C\n  serializeJSValueToJSONString\x2C\n};\n
code-source-info,0x2c37005854a0,12,10434,10745,C0O10450C5O10483C11O10454C18O10529C25O10538C30O10558C40O10564C45O10558C46O10613C52O10625C57O10631C64O10634C72O10655C81O10691C85O10719C86O10726C88O10743,,
code-creation,JS,9,576536,0x2c3700585594,135,async_op_3 ext:core/00_infra.js:257:33,0x2c37001c915c,~
code-source-info,0x2c3700585594,4,7512,8046,C3O7545C13O7608C28O7608C34O7645C36O7692C43O7699C47O7727C61O7780C71O7780C76O7833C86O7840C90O7859C91O7882C99O7922C106O7922C110O7965C112O7985C118O7990C121O7979C125O8014C130O8021C134O8036,,
tick,0x64950d44aaee,576556,0,0x0,0,0x64950d50c620,0x64950d8aaeb5,0x2c3700204f5b,0x2c3700582e8e
code-creation,JS,9,576663,0x2c37005856b4,134,setPromise ext:core/00_infra.js:118:22,0x2c37001c8f7c,~
code-source-info,0x2c37005856b4,4,3049,3601,C0O3049C8O3079C12O3091C14O3089C17O3079C19O3166C28O3177C32O3188C36O3207C38O3203C43O3248C47O3258C51O3277C62O3293C71O3277C76O3359C90O3359C96O3455C108O3498C112O3455C118O3526C122O3541C127O3558C131O3575C133O3597,,
code-creation,JS,9,576687,0x2c37005857b4,20, ext:core/00_infra.js:127:33,0x2c370057f9c8,~
code-source-info,0x2c37005857b4,4,3371,3425,C0O3392C9O3404C14O3409C19O3424,,
tick,0x7d8294cabd14,576698,0,0x0,0,0x2c37005855b0,0x2c37005853e8,0x2c37005850d1,0x64956d801de7,0x2c3700582ef5
code-creation,JS,9,576712,0x2c370058580c,5,unwrapOpError ext:core/00_infra.js:171:25,0x2c37001c9030,~
code-source-info,0x2c370058580c,4,4662,5418,C0O4671C4O5414,,
code-creation,JS,9,577108,0x2c3700585878,109,__resolvePromise ext:core/00_infra.js:138:28,0x2c37001c8fb8,~
code-source-info,0x2c3700585878,4,3630,4283,C0O3725C2O3737C7O3753C9O3751C12O3735C16O3768C18O3809C25O3825C28O3809C34O3855C36O3879C41O3913C44O3879C45O3940C53O3940C58O3989C64O4068C66O4078C70O4113C77O4124C81O4137C83O4161C88O4196C91O4161C92O4223C97O4242C99O4240C103O4260C108O4282,,
code-creation,JS,9,577155,0x2c3700585990,120, ext:core/00_infra.js:172:12,0x2c370057fbe8,~
code-source-info,0x2c3700585990,4,4678,5413,C0O4789C7O4792C15O4817C17O4843C19O4854C20O4891C27O4899C31O4930C33O4962C38O4945C46O4977C54O5022C65O5043C82O4973C88O5242C94O5273C98O5267C102O5347C109O5375C112O5347C117O5397C119O5397,,
code-creation,JS,9,577216,0x2c3700585a7c,34,Command ext:runtime/40_process.js:444:14,0x2c370035055c,~
script-source,297,ext:runtime/40_process.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nimport {\n  op_kill\x2C\n  op_run\x2C\n  op_run_status\x2C\n  op_spawn_child\x2C\n  op_spawn_kill\x2C\n  op_spawn_sync\x2C\n  op_spawn_wait\x2C\n} from "ext:core/ops";\nconst {\n  ArrayPrototypeMap\x2C\n  ArrayPrototypeSlice\x2C\n  TypeError\x2C\n  ObjectEntries\x2C\n  SafeArrayIterator\x2C\n  String\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  PromisePrototypeThen\x2C\n  SafePromiseAll\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nimport { FsFile } from "ext:deno_fs/30_fs.js";\nimport { readAll } from "ext:deno_io/12_io.js";\nimport {\n  assert\x2C\n  pathFromURL\x2C\n  SymbolAsyncDispose\x2C\n} from "ext:deno_web/00_infra.js";\nimport * as abortSignal from "ext:deno_web/03_abort_signal.js";\nimport {\n  readableStreamCollectIntoUint8Array\x2C\n  readableStreamForRidUnrefable\x2C\n  readableStreamForRidUnrefableRef\x2C\n  readableStreamForRidUnrefableUnref\x2C\n  ReadableStreamPrototype\x2C\n  writableStreamForRid\x2C\n} from "ext:deno_web/06_streams.js";\n\nfunction opKill(pid\x2C signo\x2C apiName) {\n  op_kill(pid\x2C signo\x2C apiName);\n}\n\nfunction kill(pid\x2C signo = "SIGTERM") {\n  opKill(pid\x2C signo\x2C "Deno.kill()");\n}\n\nfunction opRunStatus(rid) {\n  return op_run_status(rid);\n}\n\nfunction opRun(request) {\n  assert(request.cmd.length > 0);\n  return op_run(request);\n}\n\nasync function runStatus(rid) {\n  const res = await opRunStatus(rid);\n\n  if (res.gotSignal) {\n    const signal = res.exitSignal;\n    return { success: false\x2C code: 128 + signal\x2C signal };\n  } else if (res.exitCode != 0) {\n    return { success: false\x2C code: res.exitCode };\n  } else {\n    return { success: true\x2C code: 0 };\n  }\n}\n\nclass Process {\n  constructor(res) {\n    this.rid = res.rid;\n    this.pid = res.pid;\n\n    if (res.stdinRid && res.stdinRid > 0) {\n      this.stdin = new FsFile(res.stdinRid\x2C SymbolFor("Deno.internal.FsFile"));\n    }\n\n    if (res.stdoutRid && res.stdoutRid > 0) {\n      this.stdout = new FsFile(\n        res.stdoutRid\x2C\n        SymbolFor("Deno.internal.FsFile")\x2C\n      );\n    }\n\n    if (res.stderrRid && res.stderrRid > 0) {\n      this.stderr = new FsFile(\n        res.stderrRid\x2C\n        SymbolFor("Deno.internal.FsFile")\x2C\n      );\n    }\n  }\n\n  status() {\n    return runStatus(this.rid);\n  }\n\n  async output() {\n    if (!this.stdout) {\n      throw new TypeError("stdout was not piped");\n    }\n    try {\n      return await readAll(this.stdout);\n    } finally {\n      this.stdout.close();\n    }\n  }\n\n  async stderrOutput() {\n    if (!this.stderr) {\n      throw new TypeError("stderr was not piped");\n    }\n    try {\n      return await readAll(this.stderr);\n    } finally {\n      this.stderr.close();\n    }\n  }\n\n  close() {\n    core.close(this.rid);\n  }\n\n  kill(signo = "SIGTERM") {\n    opKill(this.pid\x2C signo\x2C "Deno.Process.kill()");\n  }\n}\n\nfunction run({\n  cmd\x2C\n  cwd = undefined\x2C\n  clearEnv = false\x2C\n  env = { __proto__: null }\x2C\n  gid = undefined\x2C\n  uid = undefined\x2C\n  stdout = "inherit"\x2C\n  stderr = "inherit"\x2C\n  stdin = "inherit"\x2C\n}) {\n  if (cmd[0] != null) {\n    cmd = [\n      pathFromURL(cmd[0])\x2C\n      ...new SafeArrayIterator(ArrayPrototypeSlice(cmd\x2C 1))\x2C\n    ];\n  }\n  internals.warnOnDeprecatedApi(\n    "Deno.run()"\x2C\n    (new Error()).stack\x2C\n    `Use "Deno.Command()" API instead.`\x2C\n  );\n  const res = opRun({\n    cmd: ArrayPrototypeMap(cmd\x2C String)\x2C\n    cwd\x2C\n    clearEnv\x2C\n    env: ObjectEntries(env)\x2C\n    gid\x2C\n    uid\x2C\n    stdin\x2C\n    stdout\x2C\n    stderr\x2C\n  });\n  return new Process(res);\n}\n\nconst illegalConstructorKey = Symbol("illegalConstructorKey");\n\nfunction spawnChildInner(opFn\x2C command\x2C apiName\x2C {\n  args = []\x2C\n  cwd = undefined\x2C\n  clearEnv = false\x2C\n  env = { __proto__: null }\x2C\n  uid = undefined\x2C\n  gid = undefined\x2C\n  stdin = "null"\x2C\n  stdout = "piped"\x2C\n  stderr = "piped"\x2C\n  signal = undefined\x2C\n  windowsRawArguments = false\x2C\n  ipc = -1\x2C\n} = { __proto__: null }) {\n  const child = opFn({\n    cmd: pathFromURL(command)\x2C\n    args: ArrayPrototypeMap(args\x2C String)\x2C\n    cwd: pathFromURL(cwd)\x2C\n    clearEnv\x2C\n    env: ObjectEntries(env)\x2C\n    uid\x2C\n    gid\x2C\n    stdin\x2C\n    stdout\x2C\n    stderr\x2C\n    windowsRawArguments\x2C\n    ipc\x2C\n  }\x2C apiName);\n  return new ChildProcess(illegalConstructorKey\x2C {\n    ...child\x2C\n    signal\x2C\n  });\n}\n\nfunction spawnChild(command\x2C options = { __proto__: null }) {\n  return spawnChildInner(\n    op_spawn_child\x2C\n    command\x2C\n    "Deno.Command().spawn()"\x2C\n    options\x2C\n  );\n}\n\nfunction collectOutput(readableStream) {\n  if (\n    !(ObjectPrototypeIsPrototypeOf(ReadableStreamPrototype\x2C readableStream))\n  ) {\n    return null;\n  }\n\n  return readableStreamCollectIntoUint8Array(readableStream);\n}\n\nconst _pipeFd = Symbol("[[pipeFd]]");\n\ninternals.getPipeFd = (process) => process[_pipeFd];\n\nclass ChildProcess {\n  #rid;\n  #waitPromise;\n  #waitComplete = false;\n\n  [_pipeFd];\n\n  #pid;\n  get pid() {\n    return this.#pid;\n  }\n\n  #stdin = null;\n  get stdin() {\n    if (this.#stdin == null) {\n      throw new TypeError("stdin is not piped");\n    }\n    return this.#stdin;\n  }\n\n  #stdout = null;\n  get stdout() {\n    if (this.#stdout == null) {\n      throw new TypeError("stdout is not piped");\n    }\n    return this.#stdout;\n  }\n\n  #stderr = null;\n  get stderr() {\n    if (this.#stderr == null) {\n      throw new TypeError("stderr is not piped");\n    }\n    return this.#stderr;\n  }\n\n  constructor(key = null\x2C {\n    signal\x2C\n    rid\x2C\n    pid\x2C\n    stdinRid\x2C\n    stdoutRid\x2C\n    stderrRid\x2C\n    pipeFd\x2C // internal\n  } = null) {\n    if (key !== illegalConstructorKey) {\n      throw new TypeError("Illegal constructor.");\n    }\n\n    this.#rid = rid;\n    this.#pid = pid;\n    this[_pipeFd] = pipeFd;\n\n    if (stdinRid !== null) {\n      this.#stdin = writableStreamForRid(stdinRid);\n    }\n\n    if (stdoutRid !== null) {\n      this.#stdout = readableStreamForRidUnrefable(stdoutRid);\n    }\n\n    if (stderrRid !== null) {\n      this.#stderr = readableStreamForRidUnrefable(stderrRid);\n    }\n\n    const onAbort = () => this.kill("SIGTERM");\n    signal?.[abortSignal.add](onAbort);\n\n    const waitPromise = op_spawn_wait(this.#rid);\n    this.#waitPromise = waitPromise;\n    this.#status = PromisePrototypeThen(waitPromise\x2C (res) => {\n      signal?.[abortSignal.remove](onAbort);\n      this.#waitComplete = true;\n      return res;\n    });\n  }\n\n  #status;\n  get status() {\n    return this.#status;\n  }\n\n  async output() {\n    if (this.#stdout?.locked) {\n      throw new TypeError(\n        "Can't collect output because stdout is locked"\x2C\n      );\n    }\n    if (this.#stderr?.locked) {\n      throw new TypeError(\n        "Can't collect output because stderr is locked"\x2C\n      );\n    }\n\n    const { 0: status\x2C 1: stdout\x2C 2: stderr } = await SafePromiseAll([\n      this.#status\x2C\n      collectOutput(this.#stdout)\x2C\n      collectOutput(this.#stderr)\x2C\n    ]);\n\n    return {\n      success: status.success\x2C\n      code: status.code\x2C\n      signal: status.signal\x2C\n      get stdout() {\n        if (stdout == null) {\n          throw new TypeError("stdout is not piped");\n        }\n        return stdout;\n      }\x2C\n      get stderr() {\n        if (stderr == null) {\n          throw new TypeError("stderr is not piped");\n        }\n        return stderr;\n      }\x2C\n    };\n  }\n\n  kill(signo = "SIGTERM") {\n    if (this.#waitComplete) {\n      throw new TypeError("Child process has already terminated.");\n    }\n    op_spawn_kill(this.#rid\x2C signo);\n  }\n\n  async [SymbolAsyncDispose]() {\n    try {\n      op_spawn_kill(this.#rid\x2C "SIGTERM");\n    } catch {\n      // ignore errors from killing the process (such as ESRCH or BadResource)\n    }\n    await this.#status;\n  }\n\n  ref() {\n    core.refOpPromise(this.#waitPromise);\n    if (this.#stdout) readableStreamForRidUnrefableRef(this.#stdout);\n    if (this.#stderr) readableStreamForRidUnrefableRef(this.#stderr);\n  }\n\n  unref() {\n    core.unrefOpPromise(this.#waitPromise);\n    if (this.#stdout) readableStreamForRidUnrefableUnref(this.#stdout);\n    if (this.#stderr) readableStreamForRidUnrefableUnref(this.#stderr);\n  }\n}\n\nfunction spawn(command\x2C options) {\n  if (options?.stdin === "piped") {\n    throw new TypeError(\n      "Piped stdin is not supported for this function\x2C use 'Deno.Command().spawn()' instead"\x2C\n    );\n  }\n  return spawnChildInner(\n    op_spawn_child\x2C\n    command\x2C\n    "Deno.Command().output()"\x2C\n    options\x2C\n  )\n    .output();\n}\n\nfunction spawnSync(command\x2C {\n  args = []\x2C\n  cwd = undefined\x2C\n  clearEnv = false\x2C\n  env = { __proto__: null }\x2C\n  uid = undefined\x2C\n  gid = undefined\x2C\n  stdin = "null"\x2C\n  stdout = "piped"\x2C\n  stderr = "piped"\x2C\n  windowsRawArguments = false\x2C\n} = { __proto__: null }) {\n  if (stdin === "piped") {\n    throw new TypeError(\n      "Piped stdin is not supported for this function\x2C use 'Deno.Command().spawn()' instead"\x2C\n    );\n  }\n  const result = op_spawn_sync({\n    cmd: pathFromURL(command)\x2C\n    args: ArrayPrototypeMap(args\x2C String)\x2C\n    cwd: pathFromURL(cwd)\x2C\n    clearEnv\x2C\n    env: ObjectEntries(env)\x2C\n    uid\x2C\n    gid\x2C\n    stdin\x2C\n    stdout\x2C\n    stderr\x2C\n    windowsRawArguments\x2C\n  });\n  return {\n    success: result.status.success\x2C\n    code: result.status.code\x2C\n    signal: result.status.signal\x2C\n    get stdout() {\n      if (result.stdout == null) {\n        throw new TypeError("stdout is not piped");\n      }\n      return result.stdout;\n    }\x2C\n    get stderr() {\n      if (result.stderr == null) {\n        throw new TypeError("stderr is not piped");\n      }\n      return result.stderr;\n    }\x2C\n  };\n}\n\nclass Command {\n  #command;\n  #options;\n\n  constructor(command\x2C options) {\n    this.#command = command;\n    this.#options = options;\n  }\n\n  output() {\n    if (this.#options?.stdin === "piped") {\n      throw new TypeError(\n        "Piped stdin is not supported for this function\x2C use 'Deno.Command.spawn()' instead"\x2C\n      );\n    }\n    return spawn(this.#command\x2C this.#options);\n  }\n\n  outputSync() {\n    if (this.#options?.stdin === "piped") {\n      throw new TypeError(\n        "Piped stdin is not supported for this function\x2C use 'Deno.Command.spawn()' instead"\x2C\n      );\n    }\n    return spawnSync(this.#command\x2C this.#options);\n  }\n\n  spawn() {\n    const options = {\n      ...(this.#options ?? {})\x2C\n      stdout: this.#options?.stdout ?? "inherit"\x2C\n      stderr: this.#options?.stderr ?? "inherit"\x2C\n      stdin: this.#options?.stdin ?? "inherit"\x2C\n    };\n    return spawnChild(this.#command\x2C options);\n  }\n}\n\nexport { ChildProcess\x2C Command\x2C kill\x2C Process\x2C run };\n
code-source-info,0x2c3700585a7c,297,9373,9455,C0O9373C14O9398C19O9412C23O9427C28O9441C33O9454,,
code-creation,JS,9,577491,0x2c3700585af4,64,output ext:runtime/40_process.js:449:9,0x2c3700350598,~
code-source-info,0x2c3700585af4,297,9465,9701,C0O9474C2O9483C8O9491C18O9499C23O9520C35O9526C40O9520C41O9654C48O9672C54O9687C58O9661C63O9697,,
code-creation,JS,9,577512,0x2c3700585ba4,72,spawn ext:runtime/40_process.js:376:15,0x2c370034fa7c,~
code-source-info,0x2c3700585ba4,297,7907,8217,C0O7930C7O7941C17O7949C22O7968C32O7974C37O7968C38O8096C41O8124C56O8103C62O8205C67O8206C71O8215,,
code-creation,JS,9,577554,0x2c3700585c9c,283,spawnChildInner ext:runtime/40_process.js:171:25,0x2c370034f9c8,~
code-source-info,0x2c3700585c9c,297,3518,4167,C13O3518C23O3547C32O3560C40O3579C48O3599C59O3628C67O3647C75O3666C84O3684C93O3704C102O3724C110O3746C118O3777C127O3830C133O3846C140O3846C150O3878C156O3902C160O3878C169O3920C174O3920C184O3942C190O3961C194O3961C204O3985C210O3994C216O4003C222O4014C228O4026C234O4038C240O4063C244O3830C250O4085C259O4109C263O4141C271O4152C277O4092C282O4165,,
code-creation,JS,9,578063,0x2c3700585e98,365,ChildProcess ext:runtime/40_process.js:264:14,0x2c37003500c4,~
code-source-info,0x2c3700585e98,297,5253,6185,C0O5253C46O5272C52O5284C57O5293C62O5302C67O5316C72O5331C77O5346C89O5384C93O5396C95O5392C100O5427C112O5433C117O5427C118O5483C130O5493C134O5504C146O5514C150O5525C159O5530C164O5539C168O5554C172O5585C182O5599C188O5599C192O5597C196O5642C200O5674C210O5689C216O5689C220O5687C224O5742C228O5774C238O5789C244O5789C248O5787C252O5858C256O5858C258O5890C270O5911C274O5898C281O5915C289O5951C304O5970C308O5951C313O5981C325O5999C329O6018C343O6033C346O6054C352O6033C357O6031C364O6184,,
tick,0x7d8294d0f727,578096,0,0x0,0,0x2c3700585d90,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
code-creation,JS,9,578327,0x2c37005860f4,165,readableStreamForRidUnrefable ext:deno_web/06_streams.js:977:39,0x2c37001e5800,~
script-source,21,ext:deno_web/06_streams.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// @ts-check\n/// <reference path="../webidl/internal.d.ts" />\n/// <reference path="./06_streams_types.d.ts" />\n/// <reference path="./lib.deno_web.d.ts" />\n/// <reference lib="esnext" />\n\nimport { core\x2C internals\x2C primordials } from "ext:core/mod.js";\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBuffer\x2C\n  isSharedArrayBuffer\x2C\n  isTypedArray\x2C\n} = core;\nimport {\n  // TODO(mmastrac): use readAll\n  op_read_all\x2C\n  op_readable_stream_resource_allocate\x2C\n  op_readable_stream_resource_allocate_sized\x2C\n  op_readable_stream_resource_await_close\x2C\n  op_readable_stream_resource_close\x2C\n  op_readable_stream_resource_get_sink\x2C\n  op_readable_stream_resource_write_buf\x2C\n  op_readable_stream_resource_write_error\x2C\n  op_readable_stream_resource_write_sync\x2C\n} from "ext:core/ops";\nconst {\n  ArrayBuffer\x2C\n  ArrayBufferIsView\x2C\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayBufferPrototypeGetDetached\x2C\n  ArrayBufferPrototypeSlice\x2C\n  ArrayBufferPrototypeTransferToFixedLength\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  AsyncGeneratorPrototype\x2C\n  BigInt64Array\x2C\n  BigUint64Array\x2C\n  DataView\x2C\n  DataViewPrototypeGetBuffer\x2C\n  DataViewPrototypeGetByteLength\x2C\n  DataViewPrototypeGetByteOffset\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  Int16Array\x2C\n  Int32Array\x2C\n  Int8Array\x2C\n  MathMin\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeCatch\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  RangeError\x2C\n  ReflectHas\x2C\n  SafeFinalizationRegistry\x2C\n  SafePromiseAll\x2C\n  SafeWeakMap\x2C\n  // TODO(lucacasonato): add SharedArrayBuffer to primordials\n  // SharedArrayBufferPrototype\x2C\n  String\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n  SymbolFor\x2C\n  TypeError\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  TypedArrayPrototypeGetLength\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  TypedArrayPrototypeSet\x2C\n  TypedArrayPrototypeSlice\x2C\n  Uint16Array\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n  Uint8ClampedArray\x2C\n  WeakMapPrototypeGet\x2C\n  WeakMapPrototypeHas\x2C\n  WeakMapPrototypeSet\x2C\n  queueMicrotask\x2C\n} = primordials;\n\nimport * as webidl from "ext:deno_webidl/00_webidl.js";\nimport { structuredClone } from "./02_structured_clone.js";\nimport {\n  AbortSignalPrototype\x2C\n  add\x2C\n  newSignal\x2C\n  remove\x2C\n  signalAbort\x2C\n} from "./03_abort_signal.js";\n\nimport { createFilteredInspectProxy } from "ext:deno_console/01_console.js";\nimport { assert\x2C AssertionError } from "./00_infra.js";\n\n/** @template T */\nclass Deferred {\n  /** @type {Promise<T>} */\n  #promise;\n  /** @type {(reject?: any) => void} */\n  #reject;\n  /** @type {(value: T | PromiseLike<T>) => void} */\n  #resolve;\n  /** @type {"pending" | "fulfilled"} */\n  #state = "pending";\n\n  constructor() {\n    this.#promise = new Promise((resolve\x2C reject) => {\n      this.#resolve = resolve;\n      this.#reject = reject;\n    });\n  }\n\n  /** @returns {Promise<T>} */\n  get promise() {\n    return this.#promise;\n  }\n\n  /** @returns {"pending" | "fulfilled"} */\n  get state() {\n    return this.#state;\n  }\n\n  /** @param {any=} reason */\n  reject(reason) {\n    // already settled promises are a no-op\n    if (this.#state !== "pending") {\n      return;\n    }\n    this.#state = "fulfilled";\n    this.#reject(reason);\n  }\n\n  /** @param {T | PromiseLike<T>} value */\n  resolve(value) {\n    // already settled promises are a no-op\n    if (this.#state !== "pending") {\n      return;\n    }\n    this.#state = "fulfilled";\n    this.#resolve(value);\n  }\n}\n\n/**\n * @template T\n * @param {T | PromiseLike<T>} value\n * @returns {Promise<T>}\n */\nfunction resolvePromiseWith(value) {\n  return new Promise((resolve) => resolve(value));\n}\n\n/** @param {any} e */\nfunction rethrowAssertionErrorRejection(e) {\n  if (e && ObjectPrototypeIsPrototypeOf(AssertionError.prototype\x2C e)) {\n    queueMicrotask(() => {\n      console.error(`Internal Error: ${e.stack}`);\n    });\n  }\n}\n\n/** @param {Promise<any>} promise */\nfunction setPromiseIsHandledToTrue(promise) {\n  PromisePrototypeThen(promise\x2C undefined\x2C rethrowAssertionErrorRejection);\n}\n\n/**\n * @template T\n * @template TResult1\n * @template TResult2\n * @param {Promise<T>} promise\n * @param {(value: T) => TResult1 | PromiseLike<TResult1>} fulfillmentHandler\n * @param {(reason: any) => TResult2 | PromiseLike<TResult2>=} rejectionHandler\n * @returns {Promise<TResult1 | TResult2>}\n */\nfunction transformPromiseWith(promise\x2C fulfillmentHandler\x2C rejectionHandler) {\n  return PromisePrototypeThen(promise\x2C fulfillmentHandler\x2C rejectionHandler);\n}\n\n/**\n * @template T\n * @template TResult\n * @param {Promise<T>} promise\n * @param {(value: T) => TResult | PromiseLike<TResult>} onFulfilled\n * @returns {void}\n */\nfunction uponFulfillment(promise\x2C onFulfilled) {\n  uponPromise(promise\x2C onFulfilled);\n}\n\n/**\n * @template T\n * @template TResult\n * @param {Promise<T>} promise\n * @param {(value: T) => TResult | PromiseLike<TResult>} onRejected\n * @returns {void}\n */\nfunction uponRejection(promise\x2C onRejected) {\n  uponPromise(promise\x2C undefined\x2C onRejected);\n}\n\n/**\n * @template T\n * @template TResult1\n * @template TResult2\n * @param {Promise<T>} promise\n * @param {(value: T) => TResult1 | PromiseLike<TResult1>} onFulfilled\n * @param {(reason: any) => TResult2 | PromiseLike<TResult2>=} onRejected\n * @returns {void}\n */\nfunction uponPromise(promise\x2C onFulfilled\x2C onRejected) {\n  PromisePrototypeThen(\n    PromisePrototypeThen(promise\x2C onFulfilled\x2C onRejected)\x2C\n    undefined\x2C\n    rethrowAssertionErrorRejection\x2C\n  );\n}\n\nclass Queue {\n  #head = null;\n  #tail = null;\n  #size = 0;\n\n  enqueue(value) {\n    const node = { value\x2C next: null };\n    if (this.#head === null) {\n      this.#head = node;\n      this.#tail = node;\n    } else {\n      this.#tail.next = node;\n      this.#tail = node;\n    }\n    return ++this.#size;\n  }\n\n  dequeue() {\n    const node = this.#head;\n    if (node === null) {\n      return null;\n    }\n\n    if (this.#head === this.#tail) {\n      this.#tail = null;\n    }\n    this.#head = this.#head.next;\n    this.#size--;\n    return node.value;\n  }\n\n  peek() {\n    if (this.#head === null) {\n      return null;\n    }\n\n    return this.#head.value;\n  }\n\n  get size() {\n    return this.#size;\n  }\n}\n\n/**\n * @param {ArrayBufferLike} O\n * @returns {boolean}\n */\nfunction isDetachedBuffer(O) {\n  if (isSharedArrayBuffer(O)) {\n    return false;\n  }\n  return ArrayBufferPrototypeGetDetached(O);\n}\n\n/**\n * @param {ArrayBufferLike} O\n * @returns {boolean}\n */\nfunction canTransferArrayBuffer(O) {\n  assert(typeof O === "object");\n  assert(isAnyArrayBuffer(O));\n  if (isDetachedBuffer(O)) {\n    return false;\n  }\n  // TODO(@crowlKats): 4. If SameValue(O.[[ArrayBufferDetachKey]]\x2C undefined) is false\x2C return false.\n  return true;\n}\n\n/**\n * @param {ArrayBufferLike} O\n * @returns {number}\n */\nfunction getArrayBufferByteLength(O) {\n  if (isSharedArrayBuffer(O)) {\n    // TODO(petamoriken): use primordials\n    // deno-lint-ignore prefer-primordials\n    return O.byteLength;\n  } else {\n    return ArrayBufferPrototypeGetByteLength(O);\n  }\n}\n\n/**\n * @param {ArrayBufferView} O\n * @returns {Uint8Array}\n */\nfunction cloneAsUint8Array(O) {\n  assert(typeof O === "object");\n  assert(ArrayBufferIsView(O));\n  if (isTypedArray(O)) {\n    return TypedArrayPrototypeSlice(\n      new Uint8Array(\n        TypedArrayPrototypeGetBuffer(/** @type {Uint8Array} */ (O))\x2C\n        TypedArrayPrototypeGetByteOffset(/** @type {Uint8Array} */ (O))\x2C\n        TypedArrayPrototypeGetByteLength(/** @type {Uint8Array} */ (O))\x2C\n      )\x2C\n    );\n  } else {\n    return TypedArrayPrototypeSlice(\n      new Uint8Array(\n        DataViewPrototypeGetBuffer(/** @type {DataView} */ (O))\x2C\n        DataViewPrototypeGetByteOffset(/** @type {DataView} */ (O))\x2C\n        DataViewPrototypeGetByteLength(/** @type {DataView} */ (O))\x2C\n      )\x2C\n    );\n  }\n}\n\nconst _abortAlgorithm = Symbol("[[abortAlgorithm]]");\nconst _abortSteps = Symbol("[[AbortSteps]]");\nconst _autoAllocateChunkSize = Symbol("[[autoAllocateChunkSize]]");\nconst _backpressure = Symbol("[[backpressure]]");\nconst _backpressureChangePromise = Symbol("[[backpressureChangePromise]]");\nconst _byobRequest = Symbol("[[byobRequest]]");\nconst _cancelAlgorithm = Symbol("[[cancelAlgorithm]]");\nconst _cancelSteps = Symbol("[[CancelSteps]]");\nconst _close = Symbol("close sentinel");\nconst _closeAlgorithm = Symbol("[[closeAlgorithm]]");\nconst _closedPromise = Symbol("[[closedPromise]]");\nconst _closeRequest = Symbol("[[closeRequest]]");\nconst _closeRequested = Symbol("[[closeRequested]]");\nconst _controller = Symbol("[[controller]]");\nconst _detached = Symbol("[[Detached]]");\nconst _disturbed = Symbol("[[disturbed]]");\nconst _errorSteps = Symbol("[[ErrorSteps]]");\nconst _finishPromise = Symbol("[[finishPromise]]");\nconst _flushAlgorithm = Symbol("[[flushAlgorithm]]");\nconst _globalObject = Symbol("[[globalObject]]");\nconst _highWaterMark = Symbol("[[highWaterMark]]");\nconst _inFlightCloseRequest = Symbol("[[inFlightCloseRequest]]");\nconst _inFlightWriteRequest = Symbol("[[inFlightWriteRequest]]");\nconst _pendingAbortRequest = Symbol("[pendingAbortRequest]");\nconst _pendingPullIntos = Symbol("[[pendingPullIntos]]");\nconst _preventCancel = Symbol("[[preventCancel]]");\nconst _pullAgain = Symbol("[[pullAgain]]");\nconst _pullAlgorithm = Symbol("[[pullAlgorithm]]");\nconst _pulling = Symbol("[[pulling]]");\nconst _pullSteps = Symbol("[[PullSteps]]");\nconst _releaseSteps = Symbol("[[ReleaseSteps]]");\nconst _queue = Symbol("[[queue]]");\nconst _queueTotalSize = Symbol("[[queueTotalSize]]");\nconst _readable = Symbol("[[readable]]");\nconst _reader = Symbol("[[reader]]");\nconst _readRequests = Symbol("[[readRequests]]");\nconst _readIntoRequests = Symbol("[[readIntoRequests]]");\nconst _readyPromise = Symbol("[[readyPromise]]");\nconst _signal = Symbol("[[signal]]");\nconst _started = Symbol("[[started]]");\nconst _state = Symbol("[[state]]");\nconst _storedError = Symbol("[[storedError]]");\nconst _strategyHWM = Symbol("[[strategyHWM]]");\nconst _strategySizeAlgorithm = Symbol("[[strategySizeAlgorithm]]");\nconst _stream = Symbol("[[stream]]");\nconst _transformAlgorithm = Symbol("[[transformAlgorithm]]");\nconst _view = Symbol("[[view]]");\nconst _writable = Symbol("[[writable]]");\nconst _writeAlgorithm = Symbol("[[writeAlgorithm]]");\nconst _writer = Symbol("[[writer]]");\nconst _writeRequests = Symbol("[[writeRequests]]");\nconst _brand = webidl.brand;\n\nfunction noop() {}\nasync function noopAsync() {}\nconst _defaultStartAlgorithm = noop;\nconst _defaultWriteAlgorithm = noopAsync;\nconst _defaultCloseAlgorithm = noopAsync;\nconst _defaultAbortAlgorithm = noopAsync;\nconst _defaultPullAlgorithm = noopAsync;\nconst _defaultFlushAlgorithm = noopAsync;\nconst _defaultCancelAlgorithm = noopAsync;\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @returns {ReadableStreamDefaultReader<R>}\n */\nfunction acquireReadableStreamDefaultReader(stream) {\n  const reader = new ReadableStreamDefaultReader(_brand);\n  setUpReadableStreamDefaultReader(reader\x2C stream);\n  return reader;\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @returns {ReadableStreamBYOBReader<R>}\n */\nfunction acquireReadableStreamBYOBReader(stream) {\n  const reader = new ReadableStreamBYOBReader(_brand);\n  setUpReadableStreamBYOBReader(reader\x2C stream);\n  return reader;\n}\n\n/**\n * @template W\n * @param {WritableStream<W>} stream\n * @returns {WritableStreamDefaultWriter<W>}\n */\nfunction acquireWritableStreamDefaultWriter(stream) {\n  return new WritableStreamDefaultWriter(stream);\n}\n\n/**\n * @template R\n * @param {() => void} startAlgorithm\n * @param {() => Promise<void>} pullAlgorithm\n * @param {(reason: any) => Promise<void>} cancelAlgorithm\n * @param {number=} highWaterMark\n * @param {((chunk: R) => number)=} sizeAlgorithm\n * @returns {ReadableStream<R>}\n */\nfunction createReadableStream(\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n  highWaterMark = 1\x2C\n  sizeAlgorithm = () => 1\x2C\n) {\n  assert(isNonNegativeNumber(highWaterMark));\n  /** @type {ReadableStream} */\n  const stream = new ReadableStream(_brand);\n  initializeReadableStream(stream);\n  const controller = new ReadableStreamDefaultController(_brand);\n  setUpReadableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm\x2C\n  );\n  return stream;\n}\n\n/**\n * @template W\n * @param {(controller: WritableStreamDefaultController<W>) => Promise<void>} startAlgorithm\n * @param {(chunk: W) => Promise<void>} writeAlgorithm\n * @param {() => Promise<void>} closeAlgorithm\n * @param {(reason: any) => Promise<void>} abortAlgorithm\n * @param {number} highWaterMark\n * @param {(chunk: W) => number} sizeAlgorithm\n * @returns {WritableStream<W>}\n */\nfunction createWritableStream(\n  startAlgorithm\x2C\n  writeAlgorithm\x2C\n  closeAlgorithm\x2C\n  abortAlgorithm\x2C\n  highWaterMark\x2C\n  sizeAlgorithm\x2C\n) {\n  assert(isNonNegativeNumber(highWaterMark));\n  const stream = new WritableStream(_brand);\n  initializeWritableStream(stream);\n  const controller = new WritableStreamDefaultController(_brand);\n  setUpWritableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    writeAlgorithm\x2C\n    closeAlgorithm\x2C\n    abortAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm\x2C\n  );\n  return stream;\n}\n\n/**\n * @template T\n * @param {{ [_queue]: Array<ValueWithSize<T>>\x2C [_queueTotalSize]: number }} container\n * @returns {T}\n */\nfunction dequeueValue(container) {\n  assert(container[_queue] && typeof container[_queueTotalSize] === "number");\n  assert(container[_queue].size);\n  const valueWithSize = container[_queue].dequeue();\n  container[_queueTotalSize] -= valueWithSize.size;\n  if (container[_queueTotalSize] < 0) {\n    container[_queueTotalSize] = 0;\n  }\n  return valueWithSize.value;\n}\n/**\n * @template T\n * @param {{ [_queue]: Array<ValueWithSize<T | _close>>\x2C [_queueTotalSize]: number }} container\n * @param {T} value\n * @param {number} size\n * @returns {void}\n */\nfunction enqueueValueWithSize(container\x2C value\x2C size) {\n  assert(container[_queue] && typeof container[_queueTotalSize] === "number");\n  if (isNonNegativeNumber(size) === false) {\n    throw RangeError("chunk size isn't a positive number");\n  }\n  if (size === Infinity) {\n    throw RangeError("chunk size is invalid");\n  }\n  container[_queue].enqueue({ value\x2C size });\n  container[_queueTotalSize] += size;\n}\n\n/**\n * @param {QueuingStrategy} strategy\n * @param {number} defaultHWM\n */\nfunction extractHighWaterMark(strategy\x2C defaultHWM) {\n  if (strategy.highWaterMark === undefined) {\n    return defaultHWM;\n  }\n  const highWaterMark = strategy.highWaterMark;\n  if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n    throw RangeError(\n      `Expected highWaterMark to be a positive number or Infinity\x2C got "${highWaterMark}".`\x2C\n    );\n  }\n  return highWaterMark;\n}\n\n/**\n * @template T\n * @param {QueuingStrategy<T>} strategy\n * @return {(chunk: T) => number}\n */\nfunction extractSizeAlgorithm(strategy) {\n  if (strategy.size === undefined) {\n    return () => 1;\n  }\n  return (chunk) =>\n    webidl.invokeCallbackFunction(\n      strategy.size\x2C\n      [chunk]\x2C\n      undefined\x2C\n      webidl.converters["unrestricted double"]\x2C\n      "Failed to execute `sizeAlgorithm`"\x2C\n    );\n}\n\n/**\n * @param {() => void} startAlgorithm\n * @param {() => Promise<void>} pullAlgorithm\n * @param {(reason: any) => Promise<void>} cancelAlgorithm\n * @returns {ReadableStream}\n */\nfunction createReadableByteStream(\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n) {\n  const stream = new ReadableStream(_brand);\n  initializeReadableStream(stream);\n  const controller = new ReadableByteStreamController(_brand);\n  setUpReadableByteStreamController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    0\x2C\n    undefined\x2C\n  );\n  return stream;\n}\n\n/**\n * @param {ReadableStream} stream\n * @returns {void}\n */\nfunction initializeReadableStream(stream) {\n  stream[_state] = "readable";\n  stream[_reader] = stream[_storedError] = undefined;\n  stream[_disturbed] = false;\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @param {Deferred<void>} startPromise\n * @param {number} writableHighWaterMark\n * @param {(chunk: I) => number} writableSizeAlgorithm\n * @param {number} readableHighWaterMark\n * @param {(chunk: O) => number} readableSizeAlgorithm\n */\nfunction initializeTransformStream(\n  stream\x2C\n  startPromise\x2C\n  writableHighWaterMark\x2C\n  writableSizeAlgorithm\x2C\n  readableHighWaterMark\x2C\n  readableSizeAlgorithm\x2C\n) {\n  function startAlgorithm() {\n    return startPromise.promise;\n  }\n\n  function writeAlgorithm(chunk) {\n    return transformStreamDefaultSinkWriteAlgorithm(stream\x2C chunk);\n  }\n\n  function abortAlgorithm(reason) {\n    return transformStreamDefaultSinkAbortAlgorithm(stream\x2C reason);\n  }\n\n  function closeAlgorithm() {\n    return transformStreamDefaultSinkCloseAlgorithm(stream);\n  }\n\n  stream[_writable] = createWritableStream(\n    startAlgorithm\x2C\n    writeAlgorithm\x2C\n    closeAlgorithm\x2C\n    abortAlgorithm\x2C\n    writableHighWaterMark\x2C\n    writableSizeAlgorithm\x2C\n  );\n\n  function pullAlgorithm() {\n    return transformStreamDefaultSourcePullAlgorithm(stream);\n  }\n\n  function cancelAlgorithm(reason) {\n    return transformStreamDefaultSourceCancelAlgorithm(stream\x2C reason);\n  }\n\n  stream[_readable] = createReadableStream(\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    readableHighWaterMark\x2C\n    readableSizeAlgorithm\x2C\n  );\n\n  stream[_backpressure] = stream[_backpressureChangePromise] = undefined;\n  transformStreamSetBackpressure(stream\x2C true);\n  stream[_controller] = undefined;\n}\n\n/** @param {WritableStream} stream */\nfunction initializeWritableStream(stream) {\n  stream[_state] = "writable";\n  stream[_storedError] =\n    stream[_writer] =\n    stream[_controller] =\n    stream[_inFlightWriteRequest] =\n    stream[_closeRequest] =\n    stream[_inFlightCloseRequest] =\n    stream[_pendingAbortRequest] =\n      undefined;\n  stream[_writeRequests] = [];\n  stream[_backpressure] = false;\n}\n\n/**\n * @param {unknown} v\n * @returns {v is number}\n */\nfunction isNonNegativeNumber(v) {\n  return typeof v === "number" && v >= 0;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ReadableStream}\n */\nfunction isReadableStream(value) {\n  return !(typeof value !== "object" || value === null || !value[_controller]);\n}\n\n/**\n * @param {ReadableStream} stream\n * @returns {boolean}\n */\nfunction isReadableStreamLocked(stream) {\n  return stream[_reader] !== undefined;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ReadableStreamDefaultReader}\n */\nfunction isReadableStreamDefaultReader(value) {\n  return !(typeof value !== "object" || value === null ||\n    !value[_readRequests]);\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ReadableStreamBYOBReader}\n */\nfunction isReadableStreamBYOBReader(value) {\n  return !(typeof value !== "object" || value === null ||\n    !ReflectHas(value\x2C _readIntoRequests));\n}\n\n/**\n * @param {ReadableStream} stream\n * @returns {boolean}\n */\nfunction isReadableStreamDisturbed(stream) {\n  assert(isReadableStream(stream));\n  return stream[_disturbed];\n}\n\n/**\n * @param {Error | string | undefined} error\n * @returns {string}\n */\nfunction extractStringErrorFromError(error) {\n  if (typeof error == "string") {\n    return error;\n  }\n  const message = error?.message;\n  const stringMessage = typeof message == "string" ? message : String(message);\n  return stringMessage;\n}\n\n// We don't want to leak resources associated with our sink\x2C even if something bad happens\nconst READABLE_STREAM_SOURCE_REGISTRY = new SafeFinalizationRegistry(\n  (external) => {\n    op_readable_stream_resource_close(external);\n  }\x2C\n);\n\nclass ResourceStreamResourceSink {\n  external;\n  constructor(external) {\n    this.external = external;\n    READABLE_STREAM_SOURCE_REGISTRY.register(this\x2C external\x2C this);\n  }\n  close() {\n    if (this.external === undefined) {\n      return;\n    }\n    READABLE_STREAM_SOURCE_REGISTRY.unregister(this);\n    op_readable_stream_resource_close(this.external);\n    this.external = undefined;\n  }\n}\n\n/**\n * @param {ReadableStreamDefaultReader<Uint8Array>} reader\n * @param {any} sink\n * @param {Uint8Array} chunk\n */\nfunction readableStreamWriteChunkFn(reader\x2C sink\x2C chunk) {\n  // Empty chunk. Re-read.\n  if (chunk.length == 0) {\n    readableStreamReadFn(reader\x2C sink);\n    return;\n  }\n\n  const res = op_readable_stream_resource_write_sync(sink.external\x2C chunk);\n  if (res == 0) {\n    // Closed\n    reader.cancel("resource closed");\n    sink.close();\n  } else if (res == 1) {\n    // Successfully written (synchronous). Re-read.\n    readableStreamReadFn(reader\x2C sink);\n  } else if (res == 2) {\n    // Full. If the channel is full\x2C we perform an async await until we can write\x2C and then return\n    // to a synchronous loop.\n    (async () => {\n      if (\n        await op_readable_stream_resource_write_buf(\n          sink.external\x2C\n          chunk\x2C\n        )\n      ) {\n        readableStreamReadFn(reader\x2C sink);\n      } else {\n        reader.cancel("resource closed");\n        sink.close();\n      }\n    })();\n  }\n}\n\n/**\n * @param {ReadableStreamDefaultReader<Uint8Array>} reader\n * @param {any} sink\n */\nfunction readableStreamReadFn(reader\x2C sink) {\n  // The ops here look like op_write_all/op_close\x2C but we're not actually writing to a\n  // real resource.\n  let reentrant = true;\n  let gotChunk = undefined;\n  readableStreamDefaultReaderRead(reader\x2C {\n    chunkSteps(chunk) {\n      // If the chunk has non-zero length\x2C write it\n      if (reentrant) {\n        gotChunk = chunk;\n      } else {\n        readableStreamWriteChunkFn(reader\x2C sink\x2C chunk);\n      }\n    }\x2C\n    closeSteps() {\n      sink.close();\n    }\x2C\n    errorSteps(error) {\n      const success = op_readable_stream_resource_write_error(\n        sink.external\x2C\n        extractStringErrorFromError(error)\x2C\n      );\n      // We don't cancel the reader if there was an error reading. We'll let the downstream\n      // consumer close the resource after it receives the error.\n      if (!success) {\n        reader.cancel("resource closed");\n      }\n      sink.close();\n    }\x2C\n  });\n  reentrant = false;\n  if (gotChunk) {\n    readableStreamWriteChunkFn(reader\x2C sink\x2C gotChunk);\n  }\n}\n\n/**\n * Create a new resource that wraps a ReadableStream. The resource will support\n * read operations\x2C and those read operations will be fed by the output of the\n * ReadableStream source.\n * @param {ReadableStream<Uint8Array>} stream\n * @param {number | undefined} length\n * @returns {number}\n */\nfunction resourceForReadableStream(stream\x2C length) {\n  const reader = acquireReadableStreamDefaultReader(stream);\n\n  // Allocate the resource\n  const rid = typeof length == "number"\n    ? op_readable_stream_resource_allocate_sized(length)\n    : op_readable_stream_resource_allocate();\n\n  // Close the Reader we get from the ReadableStream when the resource is closed\x2C ignoring any errors\n  PromisePrototypeCatch(\n    PromisePrototypeThen(\n      op_readable_stream_resource_await_close(rid)\x2C\n      () => reader.cancel("resource closed")\x2C\n    )\x2C\n    () => {}\x2C\n  );\n\n  // This allocation is freed when readableStreamReadFn is completed\n  const sink = new ResourceStreamResourceSink(\n    op_readable_stream_resource_get_sink(rid)\x2C\n  );\n\n  // Trigger the first read\n  readableStreamReadFn(reader\x2C sink);\n\n  return rid;\n}\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024; // 64 KiB\n\n// A finalization registry to clean up underlying resources that are GC'ed.\nconst RESOURCE_REGISTRY = new SafeFinalizationRegistry((rid) => {\n  core.tryClose(rid);\n});\n\nconst _readAll = Symbol("[[readAll]]");\nconst _original = Symbol("[[original]]");\n/**\n * Create a new ReadableStream object that is backed by a Resource that\n * implements `Resource::read_return`. This object contains enough metadata to\n * allow callers to bypass the JavaScript ReadableStream implementation and\n * read directly from the underlying resource if they so choose (FastStream).\n *\n * @param {number} rid The resource ID to read from.\n * @param {boolean=} autoClose If the resource should be auto-closed when the stream closes. Defaults to true.\n * @returns {ReadableStream<Uint8Array>}\n */\nfunction readableStreamForRid(rid\x2C autoClose = true) {\n  const stream = new ReadableStream(_brand);\n  stream[_resourceBacking] = { rid\x2C autoClose };\n\n  const tryClose = () => {\n    if (!autoClose) return;\n    RESOURCE_REGISTRY.unregister(stream);\n    core.tryClose(rid);\n  };\n\n  if (autoClose) {\n    RESOURCE_REGISTRY.register(stream\x2C rid\x2C stream);\n  }\n\n  const underlyingSource = {\n    type: "bytes"\x2C\n    async pull(controller) {\n      const v = controller.byobRequest.view;\n      try {\n        if (controller[_readAll] === true) {\n          // fast path for tee'd streams consuming body\n          const chunk = await core.readAll(rid);\n          if (TypedArrayPrototypeGetByteLength(chunk) > 0) {\n            controller.enqueue(chunk);\n          }\n          controller.close();\n          tryClose();\n          return;\n        }\n\n        const bytesRead = await core.read(rid\x2C v);\n        if (bytesRead === 0) {\n          tryClose();\n          controller.close();\n          controller.byobRequest.respond(0);\n        } else {\n          controller.byobRequest.respond(bytesRead);\n        }\n      } catch (e) {\n        controller.error(e);\n        tryClose();\n      }\n    }\x2C\n    cancel() {\n      tryClose();\n    }\x2C\n    autoAllocateChunkSize: DEFAULT_CHUNK_SIZE\x2C\n  };\n  initializeReadableStream(stream);\n  setUpReadableByteStreamControllerFromUnderlyingSource(\n    stream\x2C\n    underlyingSource\x2C\n    underlyingSource\x2C\n    0\x2C\n  );\n  return stream;\n}\n\nconst promiseSymbol = SymbolFor("__promise");\nconst _isUnref = Symbol("isUnref");\n/**\n * Create a new ReadableStream object that is backed by a Resource that\n * implements `Resource::read_return`. This readable stream supports being\n * refed and unrefed by calling `readableStreamForRidUnrefableRef` and\n * `readableStreamForRidUnrefableUnref` on it. Unrefable streams are not\n * FastStream compatible.\n *\n * @param {number} rid The resource ID to read from.\n * @returns {ReadableStream<Uint8Array>}\n */\nfunction readableStreamForRidUnrefable(rid) {\n  const stream = new ReadableStream(_brand);\n  stream[promiseSymbol] = undefined;\n  stream[_isUnref] = false;\n  stream[_resourceBackingUnrefable] = { rid\x2C autoClose: true };\n  const underlyingSource = {\n    type: "bytes"\x2C\n    async pull(controller) {\n      const v = controller.byobRequest.view;\n      try {\n        const promise = core.read(rid\x2C v);\n        stream[promiseSymbol] = promise;\n        if (stream[_isUnref]) core.unrefOpPromise(promise);\n        const bytesRead = await promise;\n        stream[promiseSymbol] = undefined;\n        if (bytesRead === 0) {\n          core.tryClose(rid);\n          controller.close();\n          controller.byobRequest.respond(0);\n        } else {\n          controller.byobRequest.respond(bytesRead);\n        }\n      } catch (e) {\n        controller.error(e);\n        core.tryClose(rid);\n      }\n    }\x2C\n    cancel() {\n      core.tryClose(rid);\n    }\x2C\n    autoAllocateChunkSize: DEFAULT_CHUNK_SIZE\x2C\n  };\n  initializeReadableStream(stream);\n  setUpReadableByteStreamControllerFromUnderlyingSource(\n    stream\x2C\n    underlyingSource\x2C\n    underlyingSource\x2C\n    0\x2C\n  );\n  return stream;\n}\n\nfunction readableStreamIsUnrefable(stream) {\n  return ReflectHas(stream\x2C _isUnref);\n}\n\nfunction readableStreamForRidUnrefableRef(stream) {\n  if (!readableStreamIsUnrefable(stream)) {\n    throw new TypeError("Not an unrefable stream");\n  }\n  stream[_isUnref] = false;\n  if (stream[promiseSymbol] !== undefined) {\n    core.refOpPromise(stream[promiseSymbol]);\n  }\n}\n\nfunction readableStreamForRidUnrefableUnref(stream) {\n  if (!readableStreamIsUnrefable(stream)) {\n    throw new TypeError("Not an unrefable stream");\n  }\n  stream[_isUnref] = true;\n  if (stream[promiseSymbol] !== undefined) {\n    core.unrefOpPromise(stream[promiseSymbol]);\n  }\n}\n\nfunction getReadableStreamResourceBacking(stream) {\n  return stream[_resourceBacking];\n}\n\nfunction getReadableStreamResourceBackingUnrefable(stream) {\n  return stream[_resourceBackingUnrefable];\n}\n\nasync function readableStreamCollectIntoUint8Array(stream) {\n  const resourceBacking = getReadableStreamResourceBacking(stream) ||\n    getReadableStreamResourceBackingUnrefable(stream);\n  const reader = acquireReadableStreamDefaultReader(stream);\n\n  if (resourceBacking) {\n    // fast path\x2C read whole body in a single op call\n    try {\n      readableStreamDisturb(stream);\n      const promise = op_read_all(resourceBacking.rid);\n      if (readableStreamIsUnrefable(stream)) {\n        stream[promiseSymbol] = promise;\n        if (stream[_isUnref]) core.unrefOpPromise(promise);\n      }\n      const buf = await promise;\n      stream[promiseSymbol] = undefined;\n      readableStreamThrowIfErrored(stream);\n      readableStreamClose(stream);\n      return buf;\n    } catch (err) {\n      readableStreamThrowIfErrored(stream);\n      readableStreamError(stream\x2C err);\n      throw err;\n    } finally {\n      if (resourceBacking.autoClose) {\n        core.tryClose(resourceBacking.rid);\n      }\n    }\n  }\n\n  // slow path\n  /** @type {Uint8Array[]} */\n  const chunks = [];\n  let totalLength = 0;\n\n  // tee'd stream\n  if (stream[_original]) {\n    // One of the branches is consuming the stream\n    // signal controller.pull that we can consume it in a single op\n    stream[_original][_controller][_readAll] = true;\n  }\n\n  while (true) {\n    const { value: chunk\x2C done } = await reader.read();\n\n    if (done) break;\n\n    if (TypedArrayPrototypeGetSymbolToStringTag(chunk) !== "Uint8Array") {\n      throw new TypeError(\n        "Can't convert value to Uint8Array while consuming the stream"\x2C\n      );\n    }\n\n    ArrayPrototypePush(chunks\x2C chunk);\n    totalLength += TypedArrayPrototypeGetByteLength(chunk);\n  }\n\n  const finalBuffer = new Uint8Array(totalLength);\n  let offset = 0;\n  for (let i = 0; i < chunks.length; ++i) {\n    const chunk = chunks[i];\n    TypedArrayPrototypeSet(finalBuffer\x2C chunk\x2C offset);\n    offset += TypedArrayPrototypeGetByteLength(chunk);\n  }\n  return finalBuffer;\n}\n\n/**\n * Create a new Writable object that is backed by a Resource that implements\n * `Resource::write` / `Resource::write_all`. This object contains enough\n * metadata to allow callers to bypass the JavaScript WritableStream\n * implementation and write directly to the underlying resource if they so\n * choose (FastStream).\n *\n * @param {number} rid The resource ID to write to.\n * @param {boolean=} autoClose If the resource should be auto-closed when the stream closes. Defaults to true.\n * @returns {ReadableStream<Uint8Array>}\n */\nfunction writableStreamForRid(rid\x2C autoClose = true) {\n  const stream = new WritableStream(_brand);\n  stream[_resourceBacking] = { rid\x2C autoClose };\n\n  const tryClose = () => {\n    if (!autoClose) return;\n    RESOURCE_REGISTRY.unregister(stream);\n    core.tryClose(rid);\n  };\n\n  if (autoClose) {\n    RESOURCE_REGISTRY.register(stream\x2C rid\x2C stream);\n  }\n\n  const underlyingSink = {\n    async write(chunk\x2C controller) {\n      try {\n        await core.writeAll(rid\x2C chunk);\n      } catch (e) {\n        controller.error(e);\n        tryClose();\n      }\n    }\x2C\n    close() {\n      tryClose();\n    }\x2C\n    abort() {\n      tryClose();\n    }\x2C\n  };\n  initializeWritableStream(stream);\n  setUpWritableStreamDefaultControllerFromUnderlyingSink(\n    stream\x2C\n    underlyingSink\x2C\n    underlyingSink\x2C\n    1\x2C\n    () => 1\x2C\n  );\n  return stream;\n}\n\nfunction getWritableStreamResourceBacking(stream) {\n  return stream[_resourceBacking];\n}\n\n/*\n * @param {ReadableStream} stream\n */\nfunction readableStreamThrowIfErrored(stream) {\n  if (stream[_state] === "errored") {\n    throw stream[_storedError];\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {value is WritableStream}\n */\nfunction isWritableStream(value) {\n  return !(typeof value !== "object" || value === null ||\n    !ReflectHas(value\x2C _controller));\n}\n\n/**\n * @param {WritableStream} stream\n * @returns {boolean}\n */\nfunction isWritableStreamLocked(stream) {\n  if (stream[_writer] === undefined) {\n    return false;\n  }\n  return true;\n}\n/**\n * @template T\n * @param {{ [_queue]: Array<ValueWithSize<T | _close>>\x2C [_queueTotalSize]: number }} container\n * @returns {T | _close}\n */\nfunction peekQueueValue(container) {\n  assert(\n    container[_queue] &&\n      typeof container[_queueTotalSize] === "number"\x2C\n  );\n  assert(container[_queue].size);\n  const valueWithSize = container[_queue].peek();\n  return valueWithSize.value;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {void}\n */\nfunction readableByteStreamControllerCallPullIfNeeded(controller) {\n  const shouldPull = readableByteStreamControllerShouldCallPull(controller);\n  if (!shouldPull) {\n    return;\n  }\n  if (controller[_pulling]) {\n    controller[_pullAgain] = true;\n    return;\n  }\n  assert(controller[_pullAgain] === false);\n  controller[_pulling] = true;\n  /** @type {Promise<void>} */\n  const pullPromise = controller[_pullAlgorithm](controller);\n  setPromiseIsHandledToTrue(\n    PromisePrototypeThen(\n      pullPromise\x2C\n      () => {\n        controller[_pulling] = false;\n        if (controller[_pullAgain]) {\n          controller[_pullAgain] = false;\n          readableByteStreamControllerCallPullIfNeeded(controller);\n        }\n      }\x2C\n      (e) => {\n        readableByteStreamControllerError(controller\x2C e);\n      }\x2C\n    )\x2C\n  );\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {void}\n */\nfunction readableByteStreamControllerClearAlgorithms(controller) {\n  controller[_pullAlgorithm] = undefined;\n  controller[_cancelAlgorithm] = undefined;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {any} e\n */\nfunction readableByteStreamControllerError(controller\x2C e) {\n  /** @type {ReadableStream<ArrayBuffer>} */\n  const stream = controller[_stream];\n  if (stream[_state] !== "readable") {\n    return;\n  }\n  readableByteStreamControllerClearPendingPullIntos(controller);\n  resetQueue(controller);\n  readableByteStreamControllerClearAlgorithms(controller);\n  readableStreamError(stream\x2C e);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {void}\n */\nfunction readableByteStreamControllerClearPendingPullIntos(controller) {\n  readableByteStreamControllerInvalidateBYOBRequest(controller);\n  controller[_pendingPullIntos] = [];\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {void}\n */\nfunction readableByteStreamControllerClose(controller) {\n  /** @type {ReadableStream<ArrayBuffer>} */\n  const stream = controller[_stream];\n  if (controller[_closeRequested] || stream[_state] !== "readable") {\n    return;\n  }\n  if (controller[_queueTotalSize] > 0) {\n    controller[_closeRequested] = true;\n    return;\n  }\n  if (controller[_pendingPullIntos].length !== 0) {\n    const firstPendingPullInto = controller[_pendingPullIntos][0];\n    if (\n      firstPendingPullInto.bytesFilled % firstPendingPullInto.elementSize !== 0\n    ) {\n      const e = new TypeError(\n        "Insufficient bytes to fill elements in the given buffer"\x2C\n      );\n      readableByteStreamControllerError(controller\x2C e);\n      throw e;\n    }\n  }\n  readableByteStreamControllerClearAlgorithms(controller);\n  readableStreamClose(stream);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ArrayBufferView} chunk\n */\nfunction readableByteStreamControllerEnqueue(controller\x2C chunk) {\n  /** @type {ReadableStream<ArrayBuffer>} */\n  const stream = controller[_stream];\n  if (\n    controller[_closeRequested] ||\n    controller[_stream][_state] !== "readable"\n  ) {\n    return;\n  }\n\n  let buffer\x2C byteLength\x2C byteOffset;\n  if (isTypedArray(chunk)) {\n    buffer = TypedArrayPrototypeGetBuffer(/** @type {Uint8Array}} */ (chunk));\n    byteLength = TypedArrayPrototypeGetByteLength(\n      /** @type {Uint8Array} */ (chunk)\x2C\n    );\n    byteOffset = TypedArrayPrototypeGetByteOffset(\n      /** @type {Uint8Array} */ (chunk)\x2C\n    );\n  } else {\n    buffer = DataViewPrototypeGetBuffer(/** @type {DataView} */ (chunk));\n    byteLength = DataViewPrototypeGetByteLength(\n      /** @type {DataView} */ (chunk)\x2C\n    );\n    byteOffset = DataViewPrototypeGetByteOffset(\n      /** @type {DataView} */ (chunk)\x2C\n    );\n  }\n\n  if (isDetachedBuffer(buffer)) {\n    throw new TypeError(\n      "chunk's buffer is detached and so cannot be enqueued"\x2C\n    );\n  }\n  const transferredBuffer = ArrayBufferPrototypeTransferToFixedLength(buffer);\n  if (controller[_pendingPullIntos].length !== 0) {\n    const firstPendingPullInto = controller[_pendingPullIntos][0];\n    // deno-lint-ignore prefer-primordials\n    if (isDetachedBuffer(firstPendingPullInto.buffer)) {\n      throw new TypeError(\n        "The BYOB request's buffer has been detached and so cannot be filled with an enqueued chunk"\x2C\n      );\n    }\n    readableByteStreamControllerInvalidateBYOBRequest(controller);\n    firstPendingPullInto.buffer = ArrayBufferPrototypeTransferToFixedLength(\n      // deno-lint-ignore prefer-primordials\n      firstPendingPullInto.buffer\x2C\n    );\n    if (firstPendingPullInto.readerType === "none") {\n      readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n        controller\x2C\n        firstPendingPullInto\x2C\n      );\n    }\n  }\n  if (readableStreamHasDefaultReader(stream)) {\n    readableByteStreamControllerProcessReadRequestsUsingQueue(controller);\n    if (readableStreamGetNumReadRequests(stream) === 0) {\n      assert(controller[_pendingPullIntos].length === 0);\n      readableByteStreamControllerEnqueueChunkToQueue(\n        controller\x2C\n        transferredBuffer\x2C\n        byteOffset\x2C\n        byteLength\x2C\n      );\n    } else {\n      assert(controller[_queue].size === 0);\n      if (controller[_pendingPullIntos].length !== 0) {\n        assert(controller[_pendingPullIntos][0].readerType === "default");\n        readableByteStreamControllerShiftPendingPullInto(controller);\n      }\n      const transferredView = new Uint8Array(\n        transferredBuffer\x2C\n        byteOffset\x2C\n        byteLength\x2C\n      );\n      readableStreamFulfillReadRequest(stream\x2C transferredView\x2C false);\n    }\n  } else if (readableStreamHasBYOBReader(stream)) {\n    readableByteStreamControllerEnqueueChunkToQueue(\n      controller\x2C\n      transferredBuffer\x2C\n      byteOffset\x2C\n      byteLength\x2C\n    );\n    readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n      controller\x2C\n    );\n  } else {\n    assert(isReadableStreamLocked(stream) === false);\n    readableByteStreamControllerEnqueueChunkToQueue(\n      controller\x2C\n      transferredBuffer\x2C\n      byteOffset\x2C\n      byteLength\x2C\n    );\n  }\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ArrayBufferLike} buffer\n * @param {number} byteOffset\n * @param {number} byteLength\n * @returns {void}\n */\nfunction readableByteStreamControllerEnqueueChunkToQueue(\n  controller\x2C\n  buffer\x2C\n  byteOffset\x2C\n  byteLength\x2C\n) {\n  controller[_queue].enqueue({ buffer\x2C byteOffset\x2C byteLength });\n  controller[_queueTotalSize] += byteLength;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ArrayBufferLike} buffer\n * @param {number} byteOffset\n * @param {number} byteLength\n * @returns {void}\n */\nfunction readableByteStreamControllerEnqueueClonedChunkToQueue(\n  controller\x2C\n  buffer\x2C\n  byteOffset\x2C\n  byteLength\x2C\n) {\n  let cloneResult;\n  try {\n    if (isArrayBuffer(buffer)) {\n      cloneResult = ArrayBufferPrototypeSlice(\n        buffer\x2C\n        byteOffset\x2C\n        byteOffset + byteLength\x2C\n      );\n    } else {\n      // TODO(lucacasonato): add SharedArrayBuffer to primordials\n      // deno-lint-ignore prefer-primordials\n      cloneResult = buffer.slice(byteOffset\x2C byteOffset + byteLength);\n    }\n  } catch (e) {\n    readableByteStreamControllerError(controller\x2C e);\n  }\n  readableByteStreamControllerEnqueueChunkToQueue(\n    controller\x2C\n    cloneResult\x2C\n    0\x2C\n    byteLength\x2C\n  );\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {PullIntoDescriptor} pullIntoDescriptor\n * @returns {void}\n */\nfunction readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n  controller\x2C\n  pullIntoDescriptor\x2C\n) {\n  assert(pullIntoDescriptor.readerType === "none");\n  if (pullIntoDescriptor.bytesFilled > 0) {\n    readableByteStreamControllerEnqueueClonedChunkToQueue(\n      controller\x2C\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.buffer\x2C\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.byteOffset\x2C\n      pullIntoDescriptor.bytesFilled\x2C\n    );\n  }\n  readableByteStreamControllerShiftPendingPullInto(controller);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {ReadableStreamBYOBRequest | null}\n */\nfunction readableByteStreamControllerGetBYOBRequest(controller) {\n  if (\n    controller[_byobRequest] === null &&\n    controller[_pendingPullIntos].length !== 0\n  ) {\n    const firstDescriptor = controller[_pendingPullIntos][0];\n    const view = new Uint8Array(\n      // deno-lint-ignore prefer-primordials\n      firstDescriptor.buffer\x2C\n      // deno-lint-ignore prefer-primordials\n      firstDescriptor.byteOffset + firstDescriptor.bytesFilled\x2C\n      // deno-lint-ignore prefer-primordials\n      firstDescriptor.byteLength - firstDescriptor.bytesFilled\x2C\n    );\n    const byobRequest = new ReadableStreamBYOBRequest(_brand);\n    byobRequest[_controller] = controller;\n    byobRequest[_view] = view;\n    controller[_byobRequest] = byobRequest;\n  }\n  return controller[_byobRequest];\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {number | null}\n */\nfunction readableByteStreamControllerGetDesiredSize(controller) {\n  const state = controller[_stream][_state];\n  if (state === "errored") {\n    return null;\n  }\n  if (state === "closed") {\n    return 0;\n  }\n  return controller[_strategyHWM] - controller[_queueTotalSize];\n}\n\n/**\n * @param {{ [_queue]: any[]\x2C [_queueTotalSize]: number }} container\n * @returns {void}\n */\nfunction resetQueue(container) {\n  container[_queue] = new Queue();\n  container[_queueTotalSize] = 0;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {void}\n */\nfunction readableByteStreamControllerHandleQueueDrain(controller) {\n  assert(controller[_stream][_state] === "readable");\n  if (\n    controller[_queueTotalSize] === 0 && controller[_closeRequested]\n  ) {\n    readableByteStreamControllerClearAlgorithms(controller);\n    readableStreamClose(controller[_stream]);\n  } else {\n    readableByteStreamControllerCallPullIfNeeded(controller);\n  }\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {boolean}\n */\nfunction readableByteStreamControllerShouldCallPull(controller) {\n  /** @type {ReadableStream<ArrayBuffer>} */\n  const stream = controller[_stream];\n  if (\n    stream[_state] !== "readable" ||\n    controller[_closeRequested] ||\n    !controller[_started]\n  ) {\n    return false;\n  }\n  if (\n    readableStreamHasDefaultReader(stream) &&\n    readableStreamGetNumReadRequests(stream) > 0\n  ) {\n    return true;\n  }\n  if (\n    readableStreamHasBYOBReader(stream) &&\n    readableStreamGetNumReadIntoRequests(stream) > 0\n  ) {\n    return true;\n  }\n  const desiredSize = readableByteStreamControllerGetDesiredSize(controller);\n  assert(desiredSize !== null);\n  return desiredSize > 0;\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {ReadRequest<R>} readRequest\n * @returns {void}\n */\nfunction readableStreamAddReadRequest(stream\x2C readRequest) {\n  assert(isReadableStreamDefaultReader(stream[_reader]));\n  assert(stream[_state] === "readable");\n  stream[_reader][_readRequests].enqueue(readRequest);\n}\n\n/**\n * @param {ReadableStream} stream\n * @param {ReadIntoRequest} readRequest\n * @returns {void}\n */\nfunction readableStreamAddReadIntoRequest(stream\x2C readRequest) {\n  assert(isReadableStreamBYOBReader(stream[_reader]));\n  assert(stream[_state] === "readable" || stream[_state] === "closed");\n  ArrayPrototypePush(stream[_reader][_readIntoRequests]\x2C readRequest);\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {any=} reason\n * @returns {Promise<void>}\n */\nfunction readableStreamCancel(stream\x2C reason) {\n  stream[_disturbed] = true;\n  if (stream[_state] === "closed") {\n    return PromiseResolve(undefined);\n  }\n  if (stream[_state] === "errored") {\n    return PromiseReject(stream[_storedError]);\n  }\n  readableStreamClose(stream);\n  const reader = stream[_reader];\n  if (reader !== undefined && isReadableStreamBYOBReader(reader)) {\n    const readIntoRequests = reader[_readIntoRequests];\n    reader[_readIntoRequests] = [];\n    for (let i = 0; i < readIntoRequests.length; ++i) {\n      const readIntoRequest = readIntoRequests[i];\n      readIntoRequest.closeSteps(undefined);\n    }\n  }\n  /** @type {Promise<void>} */\n  const sourceCancelPromise = stream[_controller][_cancelSteps](reason);\n  return PromisePrototypeThen(sourceCancelPromise\x2C noop);\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @returns {void}\n */\nfunction readableStreamClose(stream) {\n  assert(stream[_state] === "readable");\n  stream[_state] = "closed";\n  /** @type {ReadableStreamDefaultReader<R> | undefined} */\n  const reader = stream[_reader];\n  if (!reader) {\n    return;\n  }\n  if (isReadableStreamDefaultReader(reader)) {\n    /** @type {Array<ReadRequest<R>>} */\n    const readRequests = reader[_readRequests];\n    while (readRequests.size !== 0) {\n      const readRequest = readRequests.dequeue();\n      readRequest.closeSteps();\n    }\n  }\n  // This promise can be double resolved.\n  // See: https://github.com/whatwg/streams/issues/1100\n  reader[_closedPromise].resolve(undefined);\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @returns {void}\n */\nfunction readableStreamDisturb(stream) {\n  stream[_disturbed] = true;\n}\n\n/** @param {ReadableStreamDefaultController<any>} controller */\nfunction readableStreamDefaultControllerCallPullIfNeeded(controller) {\n  const shouldPull = readableStreamDefaultcontrollerShouldCallPull(\n    controller\x2C\n  );\n  if (shouldPull === false) {\n    return;\n  }\n  if (controller[_pulling] === true) {\n    controller[_pullAgain] = true;\n    return;\n  }\n  assert(controller[_pullAgain] === false);\n  controller[_pulling] = true;\n  const pullPromise = controller[_pullAlgorithm](controller);\n  uponFulfillment(pullPromise\x2C () => {\n    controller[_pulling] = false;\n    if (controller[_pullAgain] === true) {\n      controller[_pullAgain] = false;\n      readableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n  });\n  uponRejection(pullPromise\x2C (e) => {\n    readableStreamDefaultControllerError(controller\x2C e);\n  });\n}\n\n/**\n * @param {ReadableStreamDefaultController<any>} controller\n * @returns {boolean}\n */\nfunction readableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n  const state = controller[_stream][_state];\n  return controller[_closeRequested] === false && state === "readable";\n}\n\n/** @param {ReadableStreamDefaultController<any>} controller */\nfunction readableStreamDefaultControllerClearAlgorithms(controller) {\n  controller[_pullAlgorithm] = undefined;\n  controller[_cancelAlgorithm] = undefined;\n  controller[_strategySizeAlgorithm] = undefined;\n}\n\n/** @param {ReadableStreamDefaultController<any>} controller */\nfunction readableStreamDefaultControllerClose(controller) {\n  if (\n    readableStreamDefaultControllerCanCloseOrEnqueue(controller) === false\n  ) {\n    return;\n  }\n  const stream = controller[_stream];\n  controller[_closeRequested] = true;\n  if (controller[_queue].size === 0) {\n    readableStreamDefaultControllerClearAlgorithms(controller);\n    readableStreamClose(stream);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStreamDefaultController<R>} controller\n * @param {R} chunk\n * @returns {void}\n */\nfunction readableStreamDefaultControllerEnqueue(controller\x2C chunk) {\n  if (\n    readableStreamDefaultControllerCanCloseOrEnqueue(controller) === false\n  ) {\n    return;\n  }\n  const stream = controller[_stream];\n  if (\n    isReadableStreamLocked(stream) === true &&\n    readableStreamGetNumReadRequests(stream) > 0\n  ) {\n    readableStreamFulfillReadRequest(stream\x2C chunk\x2C false);\n  } else {\n    let chunkSize;\n    try {\n      chunkSize = controller[_strategySizeAlgorithm](chunk);\n    } catch (e) {\n      readableStreamDefaultControllerError(controller\x2C e);\n      throw e;\n    }\n\n    try {\n      enqueueValueWithSize(controller\x2C chunk\x2C chunkSize);\n    } catch (e) {\n      readableStreamDefaultControllerError(controller\x2C e);\n      throw e;\n    }\n  }\n  readableStreamDefaultControllerCallPullIfNeeded(controller);\n}\n\n/**\n * @param {ReadableStreamDefaultController<any>} controller\n * @param {any} e\n */\nfunction readableStreamDefaultControllerError(controller\x2C e) {\n  const stream = controller[_stream];\n  if (stream[_state] !== "readable") {\n    return;\n  }\n  resetQueue(controller);\n  readableStreamDefaultControllerClearAlgorithms(controller);\n  readableStreamError(stream\x2C e);\n}\n\n/**\n * @param {ReadableStreamDefaultController<any>} controller\n * @returns {number | null}\n */\nfunction readableStreamDefaultControllerGetDesiredSize(controller) {\n  const state = controller[_stream][_state];\n  if (state === "errored") {\n    return null;\n  }\n  if (state === "closed") {\n    return 0;\n  }\n  return controller[_strategyHWM] - controller[_queueTotalSize];\n}\n\n/** @param {ReadableStreamDefaultController} controller */\nfunction readableStreamDefaultcontrollerHasBackpressure(controller) {\n  if (readableStreamDefaultcontrollerShouldCallPull(controller) === true) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n/**\n * @param {ReadableStreamDefaultController<any>} controller\n * @returns {boolean}\n */\nfunction readableStreamDefaultcontrollerShouldCallPull(controller) {\n  if (\n    readableStreamDefaultControllerCanCloseOrEnqueue(controller) === false\n  ) {\n    return false;\n  }\n  if (controller[_started] === false) {\n    return false;\n  }\n  const stream = controller[_stream];\n  if (\n    isReadableStreamLocked(stream) &&\n    readableStreamGetNumReadRequests(stream) > 0\n  ) {\n    return true;\n  }\n  const desiredSize = readableStreamDefaultControllerGetDesiredSize(\n    controller\x2C\n  );\n\n  if (desiredSize > 0) {\n    return true;\n  }\n  assert(desiredSize !== null);\n  return false;\n}\n\n/**\n * @param {ReadableStreamBYOBReader} reader\n * @param {ArrayBufferView} view\n * @param {number} min\n * @param {ReadIntoRequest} readIntoRequest\n * @returns {void}\n */\nfunction readableStreamBYOBReaderRead(reader\x2C view\x2C min\x2C readIntoRequest) {\n  const stream = reader[_stream];\n  assert(stream);\n  stream[_disturbed] = true;\n  if (stream[_state] === "errored") {\n    readIntoRequest.errorSteps(stream[_storedError]);\n  } else {\n    readableByteStreamControllerPullInto(\n      stream[_controller]\x2C\n      view\x2C\n      min\x2C\n      readIntoRequest\x2C\n    );\n  }\n}\n\n/**\n * @param {ReadableStreamBYOBReader} reader\n */\nfunction readableStreamBYOBReaderRelease(reader) {\n  readableStreamReaderGenericRelease(reader);\n  const e = new TypeError("The reader was released.");\n  readableStreamBYOBReaderErrorReadIntoRequests(reader\x2C e);\n}\n\n/**\n * @param {ReadableStreamBYOBReader} reader\n * @param {any} e\n */\nfunction readableStreamDefaultReaderErrorReadRequests(reader\x2C e) {\n  const readRequests = reader[_readRequests];\n  while (readRequests.size !== 0) {\n    const readRequest = readRequests.dequeue();\n    readRequest.errorSteps(e);\n  }\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n */\nfunction readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n  controller\x2C\n) {\n  assert(!controller[_closeRequested]);\n  while (controller[_pendingPullIntos].length !== 0) {\n    if (controller[_queueTotalSize] === 0) {\n      return;\n    }\n    const pullIntoDescriptor = controller[_pendingPullIntos][0];\n    if (\n      readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n        controller\x2C\n        pullIntoDescriptor\x2C\n      )\n    ) {\n      readableByteStreamControllerShiftPendingPullInto(controller);\n      readableByteStreamControllerCommitPullIntoDescriptor(\n        controller[_stream]\x2C\n        pullIntoDescriptor\x2C\n      );\n    }\n  }\n}\n/**\n * @param {ReadableByteStreamController} controller\n */\nfunction readableByteStreamControllerProcessReadRequestsUsingQueue(\n  controller\x2C\n) {\n  const reader = controller[_stream][_reader];\n  assert(isReadableStreamDefaultReader(reader));\n  while (reader[_readRequests].size !== 0) {\n    if (controller[_queueTotalSize] === 0) {\n      return;\n    }\n    const readRequest = reader[_readRequests].dequeue();\n    readableByteStreamControllerFillReadRequestFromQueue(\n      controller\x2C\n      readRequest\x2C\n    );\n  }\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ArrayBufferView} view\n * @param {number} min\n * @param {ReadIntoRequest} readIntoRequest\n * @returns {void}\n */\nfunction readableByteStreamControllerPullInto(\n  controller\x2C\n  view\x2C\n  min\x2C\n  readIntoRequest\x2C\n) {\n  const stream = controller[_stream];\n\n  let ctor;\n  /** @type {number} */\n  let elementSize;\n  /** @type {ArrayBufferLike} */\n  let buffer;\n  /** @type {number} */\n  let byteLength;\n  /** @type {number} */\n  let byteOffset;\n\n  const tag = TypedArrayPrototypeGetSymbolToStringTag(view);\n  if (tag === undefined) {\n    ctor = DataView;\n    elementSize = 1;\n    buffer = DataViewPrototypeGetBuffer(/** @type {DataView} */ (view));\n    byteLength = DataViewPrototypeGetByteLength(/** @type {DataView} */ (view));\n    byteOffset = DataViewPrototypeGetByteOffset(/** @type {DataView} */ (view));\n  } else {\n    switch (tag) {\n      case "Int8Array":\n        ctor = Int8Array;\n        break;\n      case "Uint8Array":\n        ctor = Uint8Array;\n        break;\n      case "Uint8ClampedArray":\n        ctor = Uint8ClampedArray;\n        break;\n      case "Int16Array":\n        ctor = Int16Array;\n        break;\n      case "Uint16Array":\n        ctor = Uint16Array;\n        break;\n      case "Int32Array":\n        ctor = Int32Array;\n        break;\n      case "Uint32Array":\n        ctor = Uint32Array;\n        break;\n      case "Float16Array":\n        // TODO(petamoriken): add Float16Array to primordials\n        ctor = Float16Array;\n        break;\n      case "Float32Array":\n        ctor = Float32Array;\n        break;\n      case "Float64Array":\n        ctor = Float64Array;\n        break;\n      case "BigInt64Array":\n        ctor = BigInt64Array;\n        break;\n      case "BigUint64Array":\n        ctor = BigUint64Array;\n        break;\n      default:\n        throw new TypeError("unreachable");\n    }\n    elementSize = ctor.BYTES_PER_ELEMENT;\n    buffer = TypedArrayPrototypeGetBuffer(/** @type {Uint8Array} */ (view));\n    byteLength = TypedArrayPrototypeGetByteLength(\n      /** @type {Uint8Array} */ (view)\x2C\n    );\n    byteOffset = TypedArrayPrototypeGetByteOffset(\n      /** @type {Uint8Array} */ (view)\x2C\n    );\n  }\n\n  const minimumFill = min * elementSize;\n  assert(minimumFill >= 0 && minimumFill <= byteLength);\n  assert(minimumFill % elementSize === 0);\n\n  try {\n    buffer = ArrayBufferPrototypeTransferToFixedLength(buffer);\n  } catch (e) {\n    readIntoRequest.errorSteps(e);\n    return;\n  }\n\n  /** @type {PullIntoDescriptor} */\n  const pullIntoDescriptor = {\n    buffer\x2C\n    bufferByteLength: getArrayBufferByteLength(buffer)\x2C\n    byteOffset\x2C\n    byteLength\x2C\n    bytesFilled: 0\x2C\n    minimumFill\x2C\n    elementSize\x2C\n    viewConstructor: ctor\x2C\n    readerType: "byob"\x2C\n  };\n\n  if (controller[_pendingPullIntos].length !== 0) {\n    ArrayPrototypePush(controller[_pendingPullIntos]\x2C pullIntoDescriptor);\n    readableStreamAddReadIntoRequest(stream\x2C readIntoRequest);\n    return;\n  }\n  if (stream[_state] === "closed") {\n    const emptyView = new ctor(\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.buffer\x2C\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.byteOffset\x2C\n      0\x2C\n    );\n    readIntoRequest.closeSteps(emptyView);\n    return;\n  }\n  if (controller[_queueTotalSize] > 0) {\n    if (\n      readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n        controller\x2C\n        pullIntoDescriptor\x2C\n      )\n    ) {\n      const filledView = readableByteStreamControllerConvertPullIntoDescriptor(\n        pullIntoDescriptor\x2C\n      );\n      readableByteStreamControllerHandleQueueDrain(controller);\n      readIntoRequest.chunkSteps(filledView);\n      return;\n    }\n    if (controller[_closeRequested]) {\n      const e = new TypeError(\n        "Insufficient bytes to fill elements in the given buffer"\x2C\n      );\n      readableByteStreamControllerError(controller\x2C e);\n      readIntoRequest.errorSteps(e);\n      return;\n    }\n  }\n  ArrayPrototypePush(controller[_pendingPullIntos]\x2C pullIntoDescriptor);\n  readableStreamAddReadIntoRequest(stream\x2C readIntoRequest);\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {number} bytesWritten\n * @returns {void}\n */\nfunction readableByteStreamControllerRespond(controller\x2C bytesWritten) {\n  assert(controller[_pendingPullIntos].length !== 0);\n  const firstDescriptor = controller[_pendingPullIntos][0];\n  const state = controller[_stream][_state];\n  if (state === "closed") {\n    if (bytesWritten !== 0) {\n      throw new TypeError(\n        "bytesWritten must be 0 when calling respond() on a closed stream"\x2C\n      );\n    }\n  } else {\n    assert(state === "readable");\n    if (bytesWritten === 0) {\n      throw new TypeError(\n        "bytesWritten must be greater than 0 when calling respond() on a readable stream"\x2C\n      );\n    }\n    if (\n      (firstDescriptor.bytesFilled + bytesWritten) >\n        // deno-lint-ignore prefer-primordials\n        firstDescriptor.byteLength\n    ) {\n      throw new RangeError("bytesWritten out of range");\n    }\n  }\n  firstDescriptor.buffer = ArrayBufferPrototypeTransferToFixedLength(\n    // deno-lint-ignore prefer-primordials\n    firstDescriptor.buffer\x2C\n  );\n  readableByteStreamControllerRespondInternal(controller\x2C bytesWritten);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {number} bytesWritten\n * @param {PullIntoDescriptor} pullIntoDescriptor\n * @returns {void}\n */\nfunction readableByteStreamControllerRespondInReadableState(\n  controller\x2C\n  bytesWritten\x2C\n  pullIntoDescriptor\x2C\n) {\n  assert(\n    (pullIntoDescriptor.bytesFilled + bytesWritten) <=\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.byteLength\x2C\n  );\n  readableByteStreamControllerFillHeadPullIntoDescriptor(\n    controller\x2C\n    bytesWritten\x2C\n    pullIntoDescriptor\x2C\n  );\n  if (pullIntoDescriptor.readerType === "none") {\n    readableByteStreamControllerEnqueueDetachedPullIntoToQueue(\n      controller\x2C\n      pullIntoDescriptor\x2C\n    );\n    readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n      controller\x2C\n    );\n    return;\n  }\n  if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill) {\n    return;\n  }\n  readableByteStreamControllerShiftPendingPullInto(controller);\n  const remainderSize = pullIntoDescriptor.bytesFilled %\n    pullIntoDescriptor.elementSize;\n  if (remainderSize > 0) {\n    // deno-lint-ignore prefer-primordials\n    const end = pullIntoDescriptor.byteOffset +\n      pullIntoDescriptor.bytesFilled;\n    readableByteStreamControllerEnqueueClonedChunkToQueue(\n      controller\x2C\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.buffer\x2C\n      end - remainderSize\x2C\n      remainderSize\x2C\n    );\n  }\n  pullIntoDescriptor.bytesFilled -= remainderSize;\n  readableByteStreamControllerCommitPullIntoDescriptor(\n    controller[_stream]\x2C\n    pullIntoDescriptor\x2C\n  );\n  readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(\n    controller\x2C\n  );\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {number} bytesWritten\n * @returns {void}\n */\nfunction readableByteStreamControllerRespondInternal(\n  controller\x2C\n  bytesWritten\x2C\n) {\n  const firstDescriptor = controller[_pendingPullIntos][0];\n  // deno-lint-ignore prefer-primordials\n  assert(canTransferArrayBuffer(firstDescriptor.buffer));\n  readableByteStreamControllerInvalidateBYOBRequest(controller);\n  const state = controller[_stream][_state];\n  if (state === "closed") {\n    assert(bytesWritten === 0);\n    readableByteStreamControllerRespondInClosedState(\n      controller\x2C\n      firstDescriptor\x2C\n    );\n  } else {\n    assert(state === "readable");\n    assert(bytesWritten > 0);\n    readableByteStreamControllerRespondInReadableState(\n      controller\x2C\n      bytesWritten\x2C\n      firstDescriptor\x2C\n    );\n  }\n  readableByteStreamControllerCallPullIfNeeded(controller);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n */\nfunction readableByteStreamControllerInvalidateBYOBRequest(controller) {\n  if (controller[_byobRequest] === null) {\n    return;\n  }\n  controller[_byobRequest][_controller] = undefined;\n  controller[_byobRequest][_view] = null;\n  controller[_byobRequest] = null;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {PullIntoDescriptor} firstDescriptor\n */\nfunction readableByteStreamControllerRespondInClosedState(\n  controller\x2C\n  firstDescriptor\x2C\n) {\n  assert(firstDescriptor.bytesFilled % firstDescriptor.elementSize === 0);\n  if (firstDescriptor.readerType === "none") {\n    readableByteStreamControllerShiftPendingPullInto(controller);\n  }\n  const stream = controller[_stream];\n  if (readableStreamHasBYOBReader(stream)) {\n    while (readableStreamGetNumReadIntoRequests(stream) > 0) {\n      const pullIntoDescriptor =\n        readableByteStreamControllerShiftPendingPullInto(controller);\n      readableByteStreamControllerCommitPullIntoDescriptor(\n        stream\x2C\n        pullIntoDescriptor\x2C\n      );\n    }\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {PullIntoDescriptor} pullIntoDescriptor\n */\nfunction readableByteStreamControllerCommitPullIntoDescriptor(\n  stream\x2C\n  pullIntoDescriptor\x2C\n) {\n  assert(stream[_state] !== "errored");\n  assert(pullIntoDescriptor.readerType !== "none");\n  let done = false;\n  if (stream[_state] === "closed") {\n    assert(\n      pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize === 0\x2C\n    );\n    done = true;\n  }\n  const filledView = readableByteStreamControllerConvertPullIntoDescriptor(\n    pullIntoDescriptor\x2C\n  );\n  if (pullIntoDescriptor.readerType === "default") {\n    readableStreamFulfillReadRequest(stream\x2C filledView\x2C done);\n  } else {\n    assert(pullIntoDescriptor.readerType === "byob");\n    readableStreamFulfillReadIntoRequest(stream\x2C filledView\x2C done);\n  }\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ArrayBufferView} view\n */\nfunction readableByteStreamControllerRespondWithNewView(controller\x2C view) {\n  assert(controller[_pendingPullIntos].length !== 0);\n\n  let buffer\x2C byteLength\x2C byteOffset;\n  if (isTypedArray(view)) {\n    buffer = TypedArrayPrototypeGetBuffer(/** @type {Uint8Array}} */ (view));\n    byteLength = TypedArrayPrototypeGetByteLength(\n      /** @type {Uint8Array} */ (view)\x2C\n    );\n    byteOffset = TypedArrayPrototypeGetByteOffset(\n      /** @type {Uint8Array} */ (view)\x2C\n    );\n  } else {\n    buffer = DataViewPrototypeGetBuffer(/** @type {DataView} */ (view));\n    byteLength = DataViewPrototypeGetByteLength(/** @type {DataView} */ (view));\n    byteOffset = DataViewPrototypeGetByteOffset(/** @type {DataView} */ (view));\n  }\n\n  assert(!isDetachedBuffer(buffer));\n  const firstDescriptor = controller[_pendingPullIntos][0];\n  const state = controller[_stream][_state];\n  if (state === "closed") {\n    if (byteLength !== 0) {\n      throw new TypeError(\n        "The view's length must be 0 when calling respondWithNewView() on a closed stream"\x2C\n      );\n    }\n  } else {\n    assert(state === "readable");\n    if (byteLength === 0) {\n      throw new TypeError(\n        "The view's length must be greater than 0 when calling respondWithNewView() on a readable stream"\x2C\n      );\n    }\n  }\n  // deno-lint-ignore prefer-primordials\n  if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== byteOffset) {\n    throw new RangeError(\n      "The region specified by view does not match byobRequest"\x2C\n    );\n  }\n  if (firstDescriptor.bufferByteLength !== getArrayBufferByteLength(buffer)) {\n    throw new RangeError(\n      "The buffer of view has different capacity than byobRequest"\x2C\n    );\n  }\n  // deno-lint-ignore prefer-primordials\n  if (firstDescriptor.bytesFilled + byteLength > firstDescriptor.byteLength) {\n    throw new RangeError(\n      "The region specified by view is larger than byobRequest"\x2C\n    );\n  }\n  firstDescriptor.buffer = ArrayBufferPrototypeTransferToFixedLength(buffer);\n  readableByteStreamControllerRespondInternal(controller\x2C byteLength);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @returns {PullIntoDescriptor}\n */\nfunction readableByteStreamControllerShiftPendingPullInto(controller) {\n  assert(controller[_byobRequest] === null);\n  return ArrayPrototypeShift(controller[_pendingPullIntos]);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {PullIntoDescriptor} pullIntoDescriptor\n * @returns {boolean}\n */\nfunction readableByteStreamControllerFillPullIntoDescriptorFromQueue(\n  controller\x2C\n  pullIntoDescriptor\x2C\n) {\n  const maxBytesToCopy = MathMin(\n    controller[_queueTotalSize]\x2C\n    // deno-lint-ignore prefer-primordials\n    pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled\x2C\n  );\n  const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n  let totalBytesToCopyRemaining = maxBytesToCopy;\n  let ready = false;\n  assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill);\n  const maxAlignedBytes = maxBytesFilled -\n    (maxBytesFilled % pullIntoDescriptor.elementSize);\n  if (maxAlignedBytes >= pullIntoDescriptor.minimumFill) {\n    totalBytesToCopyRemaining = maxAlignedBytes -\n      pullIntoDescriptor.bytesFilled;\n    ready = true;\n  }\n  const queue = controller[_queue];\n  while (totalBytesToCopyRemaining > 0) {\n    const headOfQueue = queue.peek();\n    const bytesToCopy = MathMin(\n      totalBytesToCopyRemaining\x2C\n      // deno-lint-ignore prefer-primordials\n      headOfQueue.byteLength\x2C\n    );\n    // deno-lint-ignore prefer-primordials\n    const destStart = pullIntoDescriptor.byteOffset +\n      pullIntoDescriptor.bytesFilled;\n\n    const destBuffer = new Uint8Array(\n      // deno-lint-ignore prefer-primordials\n      pullIntoDescriptor.buffer\x2C\n      destStart\x2C\n      bytesToCopy\x2C\n    );\n    const srcBuffer = new Uint8Array(\n      // deno-lint-ignore prefer-primordials\n      headOfQueue.buffer\x2C\n      // deno-lint-ignore prefer-primordials\n      headOfQueue.byteOffset\x2C\n      bytesToCopy\x2C\n    );\n    destBuffer.set(srcBuffer);\n\n    // deno-lint-ignore prefer-primordials\n    if (headOfQueue.byteLength === bytesToCopy) {\n      queue.dequeue();\n    } else {\n      headOfQueue.byteOffset += bytesToCopy;\n      headOfQueue.byteLength -= bytesToCopy;\n    }\n    controller[_queueTotalSize] -= bytesToCopy;\n    readableByteStreamControllerFillHeadPullIntoDescriptor(\n      controller\x2C\n      bytesToCopy\x2C\n      pullIntoDescriptor\x2C\n    );\n    totalBytesToCopyRemaining -= bytesToCopy;\n  }\n  if (!ready) {\n    assert(controller[_queueTotalSize] === 0);\n    assert(pullIntoDescriptor.bytesFilled > 0);\n    assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.minimumFill);\n  }\n  return ready;\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {ReadRequest} readRequest\n * @returns {void}\n */\nfunction readableByteStreamControllerFillReadRequestFromQueue(\n  controller\x2C\n  readRequest\x2C\n) {\n  assert(controller[_queueTotalSize] > 0);\n  const entry = controller[_queue].dequeue();\n  // deno-lint-ignore prefer-primordials\n  controller[_queueTotalSize] -= entry.byteLength;\n  readableByteStreamControllerHandleQueueDrain(controller);\n  const view = new Uint8Array(\n    // deno-lint-ignore prefer-primordials\n    entry.buffer\x2C\n    // deno-lint-ignore prefer-primordials\n    entry.byteOffset\x2C\n    // deno-lint-ignore prefer-primordials\n    entry.byteLength\x2C\n  );\n  readRequest.chunkSteps(view);\n}\n\n/**\n * @param {ReadableByteStreamController} controller\n * @param {number} size\n * @param {PullIntoDescriptor} pullIntoDescriptor\n * @returns {void}\n */\nfunction readableByteStreamControllerFillHeadPullIntoDescriptor(\n  controller\x2C\n  size\x2C\n  pullIntoDescriptor\x2C\n) {\n  assert(\n    controller[_pendingPullIntos].length === 0 ||\n      controller[_pendingPullIntos][0] === pullIntoDescriptor\x2C\n  );\n  assert(controller[_byobRequest] === null);\n  pullIntoDescriptor.bytesFilled += size;\n}\n\n/**\n * @param {PullIntoDescriptor} pullIntoDescriptor\n * @returns {ArrayBufferView}\n */\nfunction readableByteStreamControllerConvertPullIntoDescriptor(\n  pullIntoDescriptor\x2C\n) {\n  const bytesFilled = pullIntoDescriptor.bytesFilled;\n  const elementSize = pullIntoDescriptor.elementSize;\n  // deno-lint-ignore prefer-primordials\n  assert(bytesFilled <= pullIntoDescriptor.byteLength);\n  assert((bytesFilled % elementSize) === 0);\n  const buffer = ArrayBufferPrototypeTransferToFixedLength(\n    // deno-lint-ignore prefer-primordials\n    pullIntoDescriptor.buffer\x2C\n  );\n  return new pullIntoDescriptor.viewConstructor(\n    buffer\x2C\n    // deno-lint-ignore prefer-primordials\n    pullIntoDescriptor.byteOffset\x2C\n    bytesFilled / elementSize\x2C\n  );\n}\n\n/**\n * @template R\n * @param {ReadableStreamDefaultReader<R>} reader\n * @param {ReadRequest<R>} readRequest\n * @returns {void}\n */\nfunction readableStreamDefaultReaderRead(reader\x2C readRequest) {\n  const stream = reader[_stream];\n  assert(stream);\n  stream[_disturbed] = true;\n  if (stream[_state] === "closed") {\n    readRequest.closeSteps();\n  } else if (stream[_state] === "errored") {\n    readRequest.errorSteps(stream[_storedError]);\n  } else {\n    assert(stream[_state] === "readable");\n    stream[_controller][_pullSteps](readRequest);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStreamDefaultReader<R>} reader\n */\nfunction readableStreamDefaultReaderRelease(reader) {\n  readableStreamReaderGenericRelease(reader);\n  const e = new TypeError("The reader was released.");\n  readableStreamDefaultReaderErrorReadRequests(reader\x2C e);\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {any} e\n */\nfunction readableStreamError(stream\x2C e) {\n  assert(stream[_state] === "readable");\n  stream[_state] = "errored";\n  stream[_storedError] = e;\n  /** @type {ReadableStreamDefaultReader<R> | undefined} */\n  const reader = stream[_reader];\n  if (reader === undefined) {\n    return;\n  }\n  /** @type {Deferred<void>} */\n  const closedPromise = reader[_closedPromise];\n  closedPromise.reject(e);\n  setPromiseIsHandledToTrue(closedPromise.promise);\n  if (isReadableStreamDefaultReader(reader)) {\n    readableStreamDefaultReaderErrorReadRequests(reader\x2C e);\n  } else {\n    assert(isReadableStreamBYOBReader(reader));\n    readableStreamBYOBReaderErrorReadIntoRequests(reader\x2C e);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {R} chunk\n * @param {boolean} done\n */\nfunction readableStreamFulfillReadIntoRequest(stream\x2C chunk\x2C done) {\n  assert(readableStreamHasBYOBReader(stream));\n  /** @type {ReadableStreamDefaultReader<R>} */\n  const reader = stream[_reader];\n  assert(reader[_readIntoRequests].length !== 0);\n  /** @type {ReadIntoRequest} */\n  const readIntoRequest = ArrayPrototypeShift(reader[_readIntoRequests]);\n  if (done) {\n    readIntoRequest.closeSteps(chunk);\n  } else {\n    readIntoRequest.chunkSteps(chunk);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {R} chunk\n * @param {boolean} done\n */\nfunction readableStreamFulfillReadRequest(stream\x2C chunk\x2C done) {\n  assert(readableStreamHasDefaultReader(stream) === true);\n  /** @type {ReadableStreamDefaultReader<R>} */\n  const reader = stream[_reader];\n  assert(reader[_readRequests].size);\n  /** @type {ReadRequest<R>} */\n  const readRequest = reader[_readRequests].dequeue();\n  if (done) {\n    readRequest.closeSteps();\n  } else {\n    readRequest.chunkSteps(chunk);\n  }\n}\n\n/**\n * @param {ReadableStream} stream\n * @return {number}\n */\nfunction readableStreamGetNumReadIntoRequests(stream) {\n  assert(readableStreamHasBYOBReader(stream) === true);\n  return stream[_reader][_readIntoRequests].length;\n}\n\n/**\n * @param {ReadableStream} stream\n * @return {number}\n */\nfunction readableStreamGetNumReadRequests(stream) {\n  assert(readableStreamHasDefaultReader(stream) === true);\n  return stream[_reader][_readRequests].size;\n}\n\n/**\n * @param {ReadableStream} stream\n * @returns {boolean}\n */\nfunction readableStreamHasBYOBReader(stream) {\n  const reader = stream[_reader];\n  if (reader === undefined) {\n    return false;\n  }\n  if (isReadableStreamBYOBReader(reader)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {ReadableStream} stream\n * @returns {boolean}\n */\nfunction readableStreamHasDefaultReader(stream) {\n  const reader = stream[_reader];\n  if (reader === undefined) {\n    return false;\n  }\n  if (isReadableStreamDefaultReader(reader)) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @template T\n * @param {ReadableStream<T>} source\n * @param {WritableStream<T>} dest\n * @param {boolean} preventClose\n * @param {boolean} preventAbort\n * @param {boolean} preventCancel\n * @param {AbortSignal=} signal\n * @returns {Promise<void>}\n */\nfunction readableStreamPipeTo(\n  source\x2C\n  dest\x2C\n  preventClose\x2C\n  preventAbort\x2C\n  preventCancel\x2C\n  signal\x2C\n) {\n  assert(isReadableStream(source));\n  assert(isWritableStream(dest));\n  assert(\n    typeof preventClose === "boolean" && typeof preventAbort === "boolean" &&\n      typeof preventCancel === "boolean"\x2C\n  );\n  assert(\n    signal === undefined ||\n      ObjectPrototypeIsPrototypeOf(AbortSignalPrototype\x2C signal)\x2C\n  );\n  assert(!isReadableStreamLocked(source));\n  assert(!isWritableStreamLocked(dest));\n  // We use acquireReadableStreamDefaultReader even in case of ReadableByteStreamController\n  // as the spec allows us\x2C and the only reason to use BYOBReader is to do some smart things\n  // with it\x2C but the spec does not specify what things\x2C so to simplify we stick to DefaultReader.\n  const reader = acquireReadableStreamDefaultReader(source);\n  const writer = acquireWritableStreamDefaultWriter(dest);\n  source[_disturbed] = true;\n  let shuttingDown = false;\n  let currentWrite = PromiseResolve(undefined);\n  /** @type {Deferred<void>} */\n  const promise = new Deferred();\n  /** @type {() => void} */\n  let abortAlgorithm;\n  if (signal) {\n    abortAlgorithm = () => {\n      const error = signal.reason;\n      /** @type {Array<() => Promise<void>>} */\n      const actions = [];\n      if (preventAbort === false) {\n        ArrayPrototypePush(actions\x2C () => {\n          if (dest[_state] === "writable") {\n            return writableStreamAbort(dest\x2C error);\n          } else {\n            return PromiseResolve(undefined);\n          }\n        });\n      }\n      if (preventCancel === false) {\n        ArrayPrototypePush(actions\x2C () => {\n          if (source[_state] === "readable") {\n            return readableStreamCancel(source\x2C error);\n          } else {\n            return PromiseResolve(undefined);\n          }\n        });\n      }\n      shutdownWithAction(\n        () => SafePromiseAll(ArrayPrototypeMap(actions\x2C (action) => action()))\x2C\n        true\x2C\n        error\x2C\n      );\n    };\n\n    if (signal.aborted) {\n      abortAlgorithm();\n      return promise.promise;\n    }\n    signal[add](abortAlgorithm);\n  }\n\n  function pipeLoop() {\n    return new Promise((resolveLoop\x2C rejectLoop) => {\n      /** @param {boolean} done */\n      function next(done) {\n        if (done) {\n          resolveLoop();\n        } else {\n          uponPromise(pipeStep()\x2C next\x2C rejectLoop);\n        }\n      }\n      next(false);\n    });\n  }\n\n  /** @returns {Promise<boolean>} */\n  function pipeStep() {\n    if (shuttingDown === true) {\n      return PromiseResolve(true);\n    }\n\n    return transformPromiseWith(writer[_readyPromise].promise\x2C () => {\n      return new Promise((resolveRead\x2C rejectRead) => {\n        readableStreamDefaultReaderRead(\n          reader\x2C\n          {\n            chunkSteps(chunk) {\n              currentWrite = transformPromiseWith(\n                writableStreamDefaultWriterWrite(writer\x2C chunk)\x2C\n                undefined\x2C\n                () => {}\x2C\n              );\n              resolveRead(false);\n            }\x2C\n            closeSteps() {\n              resolveRead(true);\n            }\x2C\n            errorSteps: rejectRead\x2C\n          }\x2C\n        );\n      });\n    });\n  }\n\n  isOrBecomesErrored(\n    source\x2C\n    reader[_closedPromise].promise\x2C\n    (storedError) => {\n      if (preventAbort === false) {\n        shutdownWithAction(\n          () => writableStreamAbort(dest\x2C storedError)\x2C\n          true\x2C\n          storedError\x2C\n        );\n      } else {\n        shutdown(true\x2C storedError);\n      }\n    }\x2C\n  );\n\n  isOrBecomesErrored(dest\x2C writer[_closedPromise].promise\x2C (storedError) => {\n    if (preventCancel === false) {\n      shutdownWithAction(\n        () => readableStreamCancel(source\x2C storedError)\x2C\n        true\x2C\n        storedError\x2C\n      );\n    } else {\n      shutdown(true\x2C storedError);\n    }\n  });\n\n  isOrBecomesClosed(source\x2C reader[_closedPromise].promise\x2C () => {\n    if (preventClose === false) {\n      shutdownWithAction(() =>\n        writableStreamDefaultWriterCloseWithErrorPropagation(writer)\n      );\n    } else {\n      shutdown();\n    }\n  });\n\n  if (\n    writableStreamCloseQueuedOrInFlight(dest) === true ||\n    dest[_state] === "closed"\n  ) {\n    const destClosed = new TypeError(\n      "The destination writable stream closed before all the data could be piped to it."\x2C\n    );\n    if (preventCancel === false) {\n      shutdownWithAction(\n        () => readableStreamCancel(source\x2C destClosed)\x2C\n        true\x2C\n        destClosed\x2C\n      );\n    } else {\n      shutdown(true\x2C destClosed);\n    }\n  }\n\n  setPromiseIsHandledToTrue(pipeLoop());\n\n  return promise.promise;\n\n  /** @returns {Promise<void>} */\n  function waitForWritesToFinish() {\n    const oldCurrentWrite = currentWrite;\n    return transformPromiseWith(\n      currentWrite\x2C\n      () =>\n        oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined\x2C\n    );\n  }\n\n  /**\n   * @param {ReadableStream | WritableStream} stream\n   * @param {Promise<any>} promise\n   * @param {(e: any) => void} action\n   */\n  function isOrBecomesErrored(stream\x2C promise\x2C action) {\n    if (stream[_state] === "errored") {\n      action(stream[_storedError]);\n    } else {\n      uponRejection(promise\x2C action);\n    }\n  }\n\n  /**\n   * @param {ReadableStream} stream\n   * @param {Promise<any>} promise\n   * @param {() => void} action\n   */\n  function isOrBecomesClosed(stream\x2C promise\x2C action) {\n    if (stream[_state] === "closed") {\n      action();\n    } else {\n      uponFulfillment(promise\x2C action);\n    }\n  }\n\n  /**\n   * @param {() => Promise<void[] | void>} action\n   * @param {boolean=} originalIsError\n   * @param {any=} originalError\n   */\n  function shutdownWithAction(action\x2C originalIsError\x2C originalError) {\n    function doTheRest() {\n      uponPromise(\n        action()\x2C\n        () => finalize(originalIsError\x2C originalError)\x2C\n        (newError) => finalize(true\x2C newError)\x2C\n      );\n    }\n\n    if (shuttingDown === true) {\n      return;\n    }\n    shuttingDown = true;\n\n    if (\n      dest[_state] === "writable" &&\n      writableStreamCloseQueuedOrInFlight(dest) === false\n    ) {\n      uponFulfillment(waitForWritesToFinish()\x2C doTheRest);\n    } else {\n      doTheRest();\n    }\n  }\n\n  /**\n   * @param {boolean=} isError\n   * @param {any=} error\n   */\n  function shutdown(isError\x2C error) {\n    if (shuttingDown) {\n      return;\n    }\n    shuttingDown = true;\n    if (\n      dest[_state] === "writable" &&\n      writableStreamCloseQueuedOrInFlight(dest) === false\n    ) {\n      uponFulfillment(\n        waitForWritesToFinish()\x2C\n        () => finalize(isError\x2C error)\x2C\n      );\n    } else {\n      finalize(isError\x2C error);\n    }\n  }\n\n  /**\n   * @param {boolean=} isError\n   * @param {any=} error\n   */\n  function finalize(isError\x2C error) {\n    writableStreamDefaultWriterRelease(writer);\n    readableStreamDefaultReaderRelease(reader);\n\n    if (signal !== undefined) {\n      signal[remove](abortAlgorithm);\n    }\n    if (isError) {\n      promise.reject(error);\n    } else {\n      promise.resolve(undefined);\n    }\n  }\n}\n\n/**\n * @param {ReadableStreamGenericReader<any> | ReadableStreamBYOBReader} reader\n * @param {any} reason\n * @returns {Promise<void>}\n */\nfunction readableStreamReaderGenericCancel(reader\x2C reason) {\n  const stream = reader[_stream];\n  assert(stream !== undefined);\n  return readableStreamCancel(stream\x2C reason);\n}\n\n/**\n * @template R\n * @param {ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader} reader\n * @param {ReadableStream<R>} stream\n */\nfunction readableStreamReaderGenericInitialize(reader\x2C stream) {\n  reader[_stream] = stream;\n  stream[_reader] = reader;\n  if (stream[_state] === "readable") {\n    reader[_closedPromise] = new Deferred();\n  } else if (stream[_state] === "closed") {\n    reader[_closedPromise] = new Deferred();\n    reader[_closedPromise].resolve(undefined);\n  } else {\n    assert(stream[_state] === "errored");\n    reader[_closedPromise] = new Deferred();\n    reader[_closedPromise].reject(stream[_storedError]);\n    setPromiseIsHandledToTrue(reader[_closedPromise].promise);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStreamGenericReader<R> | ReadableStreamBYOBReader} reader\n */\nfunction readableStreamReaderGenericRelease(reader) {\n  const stream = reader[_stream];\n  assert(stream !== undefined);\n  assert(stream[_reader] === reader);\n  if (stream[_state] === "readable") {\n    reader[_closedPromise].reject(\n      new TypeError(\n        "Reader was released and can no longer be used to monitor the stream's closedness."\x2C\n      )\x2C\n    );\n  } else {\n    reader[_closedPromise] = new Deferred();\n    reader[_closedPromise].reject(\n      new TypeError(\n        "Reader was released and can no longer be used to monitor the stream's closedness."\x2C\n      )\x2C\n    );\n  }\n  setPromiseIsHandledToTrue(reader[_closedPromise].promise);\n  stream[_controller][_releaseSteps]();\n  stream[_reader] = undefined;\n  reader[_stream] = undefined;\n}\n\n/**\n * @param {ReadableStreamBYOBReader} reader\n * @param {any} e\n */\nfunction readableStreamBYOBReaderErrorReadIntoRequests(reader\x2C e) {\n  const readIntoRequests = reader[_readIntoRequests];\n  reader[_readIntoRequests] = [];\n  for (let i = 0; i < readIntoRequests.length; ++i) {\n    const readIntoRequest = readIntoRequests[i];\n    readIntoRequest.errorSteps(e);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {boolean} cloneForBranch2\n * @returns {[ReadableStream<R>\x2C ReadableStream<R>]}\n */\nfunction readableStreamTee(stream\x2C cloneForBranch2) {\n  assert(isReadableStream(stream));\n  assert(typeof cloneForBranch2 === "boolean");\n  if (\n    ObjectPrototypeIsPrototypeOf(\n      ReadableByteStreamControllerPrototype\x2C\n      stream[_controller]\x2C\n    )\n  ) {\n    return readableByteStreamTee(stream);\n  } else {\n    return readableStreamDefaultTee(stream\x2C cloneForBranch2);\n  }\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {boolean} cloneForBranch2\n * @returns {[ReadableStream<R>\x2C ReadableStream<R>]}\n */\nfunction readableStreamDefaultTee(stream\x2C cloneForBranch2) {\n  assert(isReadableStream(stream));\n  assert(typeof cloneForBranch2 === "boolean");\n  const reader = acquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgain = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  /** @type {any} */\n  let reason1;\n  /** @type {any} */\n  let reason2;\n  /** @type {ReadableStream<R>} */\n  // deno-lint-ignore prefer-const\n  let branch1;\n  /** @type {ReadableStream<R>} */\n  // deno-lint-ignore prefer-const\n  let branch2;\n\n  /** @type {Deferred<void>} */\n  const cancelPromise = new Deferred();\n\n  function pullAlgorithm() {\n    if (reading === true) {\n      readAgain = true;\n      return PromiseResolve(undefined);\n    }\n    reading = true;\n    /** @type {ReadRequest<R>} */\n    const readRequest = {\n      chunkSteps(value) {\n        queueMicrotask(() => {\n          readAgain = false;\n          const value1 = value;\n          let value2 = value;\n\n          if (canceled2 === false && cloneForBranch2 === true) {\n            try {\n              value2 = structuredClone(value2);\n            } catch (cloneError) {\n              readableStreamDefaultControllerError(\n                branch1[_controller]\x2C\n                cloneError\x2C\n              );\n              readableStreamDefaultControllerError(\n                branch2[_controller]\x2C\n                cloneError\x2C\n              );\n              cancelPromise.resolve(readableStreamCancel(stream\x2C cloneError));\n              return;\n            }\n          }\n\n          if (canceled1 === false) {\n            readableStreamDefaultControllerEnqueue(\n              /** @type {ReadableStreamDefaultController<any>} */ branch1[\n                _controller\n              ]\x2C\n              value1\x2C\n            );\n          }\n          if (canceled2 === false) {\n            readableStreamDefaultControllerEnqueue(\n              /** @type {ReadableStreamDefaultController<any>} */ branch2[\n                _controller\n              ]\x2C\n              value2\x2C\n            );\n          }\n\n          reading = false;\n          if (readAgain === true) {\n            pullAlgorithm();\n          }\n        });\n      }\x2C\n      closeSteps() {\n        reading = false;\n        if (canceled1 === false) {\n          readableStreamDefaultControllerClose(\n            /** @type {ReadableStreamDefaultController<any>} */ branch1[\n              _controller\n            ]\x2C\n          );\n        }\n        if (canceled2 === false) {\n          readableStreamDefaultControllerClose(\n            /** @type {ReadableStreamDefaultController<any>} */ branch2[\n              _controller\n            ]\x2C\n          );\n        }\n        if (canceled1 === false || canceled2 === false) {\n          cancelPromise.resolve(undefined);\n        }\n      }\x2C\n      errorSteps() {\n        reading = false;\n      }\x2C\n    };\n    readableStreamDefaultReaderRead(reader\x2C readRequest);\n    return PromiseResolve(undefined);\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2 === true) {\n      const compositeReason = [reason1\x2C reason2];\n      const cancelResult = readableStreamCancel(stream\x2C compositeReason);\n      cancelPromise.resolve(cancelResult);\n    }\n    return cancelPromise.promise;\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1 === true) {\n      const compositeReason = [reason1\x2C reason2];\n      const cancelResult = readableStreamCancel(stream\x2C compositeReason);\n      cancelPromise.resolve(cancelResult);\n    }\n    return cancelPromise.promise;\n  }\n\n  function startAlgorithm() {}\n\n  branch1 = createReadableStream(\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancel1Algorithm\x2C\n  );\n  branch2 = createReadableStream(\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancel2Algorithm\x2C\n  );\n\n  uponRejection(reader[_closedPromise].promise\x2C (r) => {\n    readableStreamDefaultControllerError(\n      /** @type {ReadableStreamDefaultController<any>} */ branch1[\n        _controller\n      ]\x2C\n      r\x2C\n    );\n    readableStreamDefaultControllerError(\n      /** @type {ReadableStreamDefaultController<any>} */ branch2[\n        _controller\n      ]\x2C\n      r\x2C\n    );\n    if (canceled1 === false || canceled2 === false) {\n      cancelPromise.resolve(undefined);\n    }\n  });\n\n  return [branch1\x2C branch2];\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @returns {[ReadableStream<R>\x2C ReadableStream<R>]}\n */\nfunction readableByteStreamTee(stream) {\n  assert(isReadableStream(stream));\n  assert(\n    ObjectPrototypeIsPrototypeOf(\n      ReadableByteStreamControllerPrototype\x2C\n      stream[_controller]\x2C\n    )\x2C\n  );\n  let reader = acquireReadableStreamDefaultReader(stream);\n  let reading = false;\n  let readAgainForBranch1 = false;\n  let readAgainForBranch2 = false;\n  let canceled1 = false;\n  let canceled2 = false;\n  let reason1 = undefined;\n  let reason2 = undefined;\n  let branch1 = undefined;\n  let branch2 = undefined;\n  /** @type {Deferred<void>} */\n  const cancelPromise = new Deferred();\n\n  /**\n   * @param {ReadableStreamBYOBReader} thisReader\n   */\n  function forwardReaderError(thisReader) {\n    PromisePrototypeCatch(thisReader[_closedPromise].promise\x2C (e) => {\n      if (thisReader !== reader) {\n        return;\n      }\n      readableByteStreamControllerError(branch1[_controller]\x2C e);\n      readableByteStreamControllerError(branch2[_controller]\x2C e);\n      if (!canceled1 || !canceled2) {\n        cancelPromise.resolve(undefined);\n      }\n    });\n  }\n\n  function pullWithDefaultReader() {\n    if (isReadableStreamBYOBReader(reader)) {\n      assert(reader[_readIntoRequests].length === 0);\n      readableStreamBYOBReaderRelease(reader);\n      reader = acquireReadableStreamDefaultReader(stream);\n      forwardReaderError(reader);\n    }\n\n    /** @type {ReadRequest} */\n    const readRequest = {\n      chunkSteps(chunk) {\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n          const chunk1 = chunk;\n          let chunk2 = chunk;\n          if (!canceled1 && !canceled2) {\n            try {\n              chunk2 = cloneAsUint8Array(chunk);\n            } catch (e) {\n              readableByteStreamControllerError(branch1[_controller]\x2C e);\n              readableByteStreamControllerError(branch2[_controller]\x2C e);\n              cancelPromise.resolve(readableStreamCancel(stream\x2C e));\n              return;\n            }\n          }\n          if (!canceled1) {\n            readableByteStreamControllerEnqueue(branch1[_controller]\x2C chunk1);\n          }\n          if (!canceled2) {\n            readableByteStreamControllerEnqueue(branch2[_controller]\x2C chunk2);\n          }\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      }\x2C\n      closeSteps() {\n        reading = false;\n        if (!canceled1) {\n          readableByteStreamControllerClose(branch1[_controller]);\n        }\n        if (!canceled2) {\n          readableByteStreamControllerClose(branch2[_controller]);\n        }\n        if (branch1[_controller][_pendingPullIntos].length !== 0) {\n          readableByteStreamControllerRespond(branch1[_controller]\x2C 0);\n        }\n        if (branch2[_controller][_pendingPullIntos].length !== 0) {\n          readableByteStreamControllerRespond(branch2[_controller]\x2C 0);\n        }\n        if (!canceled1 || !canceled2) {\n          cancelPromise.resolve(undefined);\n        }\n      }\x2C\n      errorSteps() {\n        reading = false;\n      }\x2C\n    };\n    readableStreamDefaultReaderRead(reader\x2C readRequest);\n  }\n\n  function pullWithBYOBReader(view\x2C forBranch2) {\n    if (isReadableStreamDefaultReader(reader)) {\n      assert(reader[_readRequests].size === 0);\n      readableStreamDefaultReaderRelease(reader);\n      reader = acquireReadableStreamBYOBReader(stream);\n      forwardReaderError(reader);\n    }\n    const byobBranch = forBranch2 ? branch2 : branch1;\n    const otherBranch = forBranch2 ? branch1 : branch2;\n\n    /** @type {ReadIntoRequest} */\n    const readIntoRequest = {\n      chunkSteps(chunk) {\n        queueMicrotask(() => {\n          readAgainForBranch1 = false;\n          readAgainForBranch2 = false;\n          const byobCanceled = forBranch2 ? canceled2 : canceled1;\n          const otherCanceled = forBranch2 ? canceled1 : canceled2;\n          if (!otherCanceled) {\n            let clonedChunk;\n            try {\n              clonedChunk = cloneAsUint8Array(chunk);\n            } catch (e) {\n              readableByteStreamControllerError(byobBranch[_controller]\x2C e);\n              readableByteStreamControllerError(otherBranch[_controller]\x2C e);\n              cancelPromise.resolve(readableStreamCancel(stream\x2C e));\n              return;\n            }\n            if (!byobCanceled) {\n              readableByteStreamControllerRespondWithNewView(\n                byobBranch[_controller]\x2C\n                chunk\x2C\n              );\n            }\n            readableByteStreamControllerEnqueue(\n              otherBranch[_controller]\x2C\n              clonedChunk\x2C\n            );\n          } else if (!byobCanceled) {\n            readableByteStreamControllerRespondWithNewView(\n              byobBranch[_controller]\x2C\n              chunk\x2C\n            );\n          }\n          reading = false;\n          if (readAgainForBranch1) {\n            pull1Algorithm();\n          } else if (readAgainForBranch2) {\n            pull2Algorithm();\n          }\n        });\n      }\x2C\n      closeSteps(chunk) {\n        reading = false;\n        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n        if (!byobCanceled) {\n          readableByteStreamControllerClose(byobBranch[_controller]);\n        }\n        if (!otherCanceled) {\n          readableByteStreamControllerClose(otherBranch[_controller]);\n        }\n        if (chunk !== undefined) {\n          let byteLength;\n          if (isTypedArray(chunk)) {\n            byteLength = TypedArrayPrototypeGetByteLength(\n              /** @type {Uint8Array} */ (chunk)\x2C\n            );\n          } else {\n            byteLength = DataViewPrototypeGetByteLength(\n              /** @type {DataView} */ (chunk)\x2C\n            );\n          }\n          assert(byteLength === 0);\n          if (!byobCanceled) {\n            readableByteStreamControllerRespondWithNewView(\n              byobBranch[_controller]\x2C\n              chunk\x2C\n            );\n          }\n          if (\n            !otherCanceled &&\n            otherBranch[_controller][_pendingPullIntos].length !== 0\n          ) {\n            readableByteStreamControllerRespond(otherBranch[_controller]\x2C 0);\n          }\n        }\n        if (!byobCanceled || !otherCanceled) {\n          cancelPromise.resolve(undefined);\n        }\n      }\x2C\n      errorSteps() {\n        reading = false;\n      }\x2C\n    };\n    readableStreamBYOBReaderRead(reader\x2C view\x2C 1\x2C readIntoRequest);\n  }\n\n  function pull1Algorithm() {\n    if (reading) {\n      readAgainForBranch1 = true;\n      return PromiseResolve(undefined);\n    }\n    reading = true;\n    const byobRequest = readableByteStreamControllerGetBYOBRequest(\n      branch1[_controller]\x2C\n    );\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest[_view]\x2C false);\n    }\n    return PromiseResolve(undefined);\n  }\n\n  function pull2Algorithm() {\n    if (reading) {\n      readAgainForBranch2 = true;\n      return PromiseResolve(undefined);\n    }\n    reading = true;\n    const byobRequest = readableByteStreamControllerGetBYOBRequest(\n      branch2[_controller]\x2C\n    );\n    if (byobRequest === null) {\n      pullWithDefaultReader();\n    } else {\n      pullWithBYOBReader(byobRequest[_view]\x2C true);\n    }\n    return PromiseResolve(undefined);\n  }\n\n  function cancel1Algorithm(reason) {\n    canceled1 = true;\n    reason1 = reason;\n    if (canceled2) {\n      const compositeReason = [reason1\x2C reason2];\n      const cancelResult = readableStreamCancel(stream\x2C compositeReason);\n      cancelPromise.resolve(cancelResult);\n    }\n    return cancelPromise.promise;\n  }\n\n  function cancel2Algorithm(reason) {\n    canceled2 = true;\n    reason2 = reason;\n    if (canceled1) {\n      const compositeReason = [reason1\x2C reason2];\n      const cancelResult = readableStreamCancel(stream\x2C compositeReason);\n      cancelPromise.resolve(cancelResult);\n    }\n    return cancelPromise.promise;\n  }\n\n  function startAlgorithm() {\n    return undefined;\n  }\n\n  branch1 = createReadableByteStream(\n    startAlgorithm\x2C\n    pull1Algorithm\x2C\n    cancel1Algorithm\x2C\n  );\n  branch2 = createReadableByteStream(\n    startAlgorithm\x2C\n    pull2Algorithm\x2C\n    cancel2Algorithm\x2C\n  );\n\n  branch1[_original] = stream;\n  branch2[_original] = stream;\n\n  forwardReaderError(reader);\n  return [branch1\x2C branch2];\n}\n\n/**\n * @param {ReadableStream<ArrayBuffer>} stream\n * @param {ReadableByteStreamController} controller\n * @param {() => void} startAlgorithm\n * @param {() => Promise<void>} pullAlgorithm\n * @param {(reason: any) => Promise<void>} cancelAlgorithm\n * @param {number} highWaterMark\n * @param {number | undefined} autoAllocateChunkSize\n */\nfunction setUpReadableByteStreamController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n  highWaterMark\x2C\n  autoAllocateChunkSize\x2C\n) {\n  assert(stream[_controller] === undefined);\n  if (autoAllocateChunkSize !== undefined) {\n    assert(NumberIsInteger(autoAllocateChunkSize));\n    assert(autoAllocateChunkSize >= 0);\n  }\n  controller[_stream] = stream;\n  controller[_pullAgain] = controller[_pulling] = false;\n  controller[_byobRequest] = null;\n  resetQueue(controller);\n  controller[_closeRequested] = controller[_started] = false;\n  controller[_strategyHWM] = highWaterMark;\n  controller[_pullAlgorithm] = pullAlgorithm;\n  controller[_cancelAlgorithm] = cancelAlgorithm;\n  controller[_autoAllocateChunkSize] = autoAllocateChunkSize;\n  controller[_pendingPullIntos] = [];\n  stream[_controller] = controller;\n  const startResult = startAlgorithm();\n  const startPromise = PromiseResolve(startResult);\n  setPromiseIsHandledToTrue(\n    PromisePrototypeThen(\n      startPromise\x2C\n      () => {\n        controller[_started] = true;\n        assert(controller[_pulling] === false);\n        assert(controller[_pullAgain] === false);\n        readableByteStreamControllerCallPullIfNeeded(controller);\n      }\x2C\n      (r) => {\n        readableByteStreamControllerError(controller\x2C r);\n      }\x2C\n    )\x2C\n  );\n}\n\n/**\n * @param {ReadableStream<ArrayBuffer>} stream\n * @param {UnderlyingSource<ArrayBuffer>} underlyingSource\n * @param {UnderlyingSource<ArrayBuffer>} underlyingSourceDict\n * @param {number} highWaterMark\n */\nfunction setUpReadableByteStreamControllerFromUnderlyingSource(\n  stream\x2C\n  underlyingSource\x2C\n  underlyingSourceDict\x2C\n  highWaterMark\x2C\n) {\n  const controller = new ReadableByteStreamController(_brand);\n  /** @type {() => void} */\n  let startAlgorithm = _defaultStartAlgorithm;\n  /** @type {() => Promise<void>} */\n  let pullAlgorithm = _defaultPullAlgorithm;\n  /** @type {(reason: any) => Promise<void>} */\n  let cancelAlgorithm = _defaultCancelAlgorithm;\n  if (underlyingSourceDict.start !== undefined) {\n    startAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.start\x2C\n        [controller]\x2C\n        underlyingSource\x2C\n        webidl.converters.any\x2C\n        "Failed to execute 'startAlgorithm' on 'ReadableByteStreamController'"\x2C\n      );\n  }\n  if (underlyingSourceDict.pull !== undefined) {\n    pullAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.pull\x2C\n        [controller]\x2C\n        underlyingSource\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'pullAlgorithm' on 'ReadableByteStreamController'"\x2C\n        true\x2C\n      );\n  }\n  if (underlyingSourceDict.cancel !== undefined) {\n    cancelAlgorithm = (reason) =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.cancel\x2C\n        [reason]\x2C\n        underlyingSource\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'cancelAlgorithm' on 'ReadableByteStreamController'"\x2C\n        true\x2C\n      );\n  }\n  const autoAllocateChunkSize = underlyingSourceDict["autoAllocateChunkSize"];\n  if (autoAllocateChunkSize === 0) {\n    throw new TypeError("autoAllocateChunkSize must be greater than 0");\n  }\n  setUpReadableByteStreamController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    highWaterMark\x2C\n    autoAllocateChunkSize\x2C\n  );\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {ReadableStreamDefaultController<R>} controller\n * @param {(controller: ReadableStreamDefaultController<R>) => void | Promise<void>} startAlgorithm\n * @param {(controller: ReadableStreamDefaultController<R>) => Promise<void>} pullAlgorithm\n * @param {(reason: any) => Promise<void>} cancelAlgorithm\n * @param {number} highWaterMark\n * @param {(chunk: R) => number} sizeAlgorithm\n */\nfunction setUpReadableStreamDefaultController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  pullAlgorithm\x2C\n  cancelAlgorithm\x2C\n  highWaterMark\x2C\n  sizeAlgorithm\x2C\n) {\n  assert(stream[_controller] === undefined);\n  controller[_stream] = stream;\n  resetQueue(controller);\n  controller[_started] =\n    controller[_closeRequested] =\n    controller[_pullAgain] =\n    controller[_pulling] =\n      false;\n  controller[_strategySizeAlgorithm] = sizeAlgorithm;\n  controller[_strategyHWM] = highWaterMark;\n  controller[_pullAlgorithm] = pullAlgorithm;\n  controller[_cancelAlgorithm] = cancelAlgorithm;\n  stream[_controller] = controller;\n  const startResult = startAlgorithm(controller);\n  const startPromise = PromiseResolve(startResult);\n  uponPromise(startPromise\x2C () => {\n    controller[_started] = true;\n    assert(controller[_pulling] === false);\n    assert(controller[_pullAgain] === false);\n    readableStreamDefaultControllerCallPullIfNeeded(controller);\n  }\x2C (r) => {\n    readableStreamDefaultControllerError(controller\x2C r);\n  });\n}\n\n/**\n * @template R\n * @param {ReadableStream<R>} stream\n * @param {UnderlyingSource<R>} underlyingSource\n * @param {UnderlyingSource<R>} underlyingSourceDict\n * @param {number} highWaterMark\n * @param {(chunk: R) => number} sizeAlgorithm\n */\nfunction setUpReadableStreamDefaultControllerFromUnderlyingSource(\n  stream\x2C\n  underlyingSource\x2C\n  underlyingSourceDict\x2C\n  highWaterMark\x2C\n  sizeAlgorithm\x2C\n) {\n  const controller = new ReadableStreamDefaultController(_brand);\n  /** @type {() => Promise<void>} */\n  let startAlgorithm = _defaultStartAlgorithm;\n  /** @type {() => Promise<void>} */\n  let pullAlgorithm = _defaultPullAlgorithm;\n  /** @type {(reason?: any) => Promise<void>} */\n  let cancelAlgorithm = _defaultCancelAlgorithm;\n  if (underlyingSourceDict.start !== undefined) {\n    startAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.start\x2C\n        [controller]\x2C\n        underlyingSource\x2C\n        webidl.converters.any\x2C\n        "Failed to execute 'startAlgorithm' on 'ReadableStreamDefaultController'"\x2C\n      );\n  }\n  if (underlyingSourceDict.pull !== undefined) {\n    pullAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.pull\x2C\n        [controller]\x2C\n        underlyingSource\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'pullAlgorithm' on 'ReadableStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  if (underlyingSourceDict.cancel !== undefined) {\n    cancelAlgorithm = (reason) =>\n      webidl.invokeCallbackFunction(\n        underlyingSourceDict.cancel\x2C\n        [reason]\x2C\n        underlyingSource\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'cancelAlgorithm' on 'ReadableStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  setUpReadableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    pullAlgorithm\x2C\n    cancelAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm\x2C\n  );\n}\n\n/**\n * @template R\n * @param {ReadableStreamBYOBReader} reader\n * @param {ReadableStream<R>} stream\n */\nfunction setUpReadableStreamBYOBReader(reader\x2C stream) {\n  if (isReadableStreamLocked(stream)) {\n    throw new TypeError("ReadableStream is locked.");\n  }\n  if (\n    !(ObjectPrototypeIsPrototypeOf(\n      ReadableByteStreamControllerPrototype\x2C\n      stream[_controller]\x2C\n    ))\n  ) {\n    throw new TypeError("Cannot use a BYOB reader with a non-byte stream");\n  }\n  readableStreamReaderGenericInitialize(reader\x2C stream);\n  reader[_readIntoRequests] = [];\n}\n\n/**\n * @template R\n * @param {ReadableStreamDefaultReader<R>} reader\n * @param {ReadableStream<R>} stream\n */\nfunction setUpReadableStreamDefaultReader(reader\x2C stream) {\n  if (isReadableStreamLocked(stream)) {\n    throw new TypeError("ReadableStream is locked.");\n  }\n  readableStreamReaderGenericInitialize(reader\x2C stream);\n  reader[_readRequests] = new Queue();\n}\n\n/**\n * @template O\n * @param {TransformStream<any\x2C O>} stream\n * @param {TransformStreamDefaultController<O>} controller\n * @param {(chunk: O\x2C controller: TransformStreamDefaultController<O>) => Promise<void>} transformAlgorithm\n * @param {(controller: TransformStreamDefaultController<O>) => Promise<void>} flushAlgorithm\n * @param {(reason: any) => Promise<void>} cancelAlgorithm\n */\nfunction setUpTransformStreamDefaultController(\n  stream\x2C\n  controller\x2C\n  transformAlgorithm\x2C\n  flushAlgorithm\x2C\n  cancelAlgorithm\x2C\n) {\n  assert(ObjectPrototypeIsPrototypeOf(TransformStreamPrototype\x2C stream));\n  assert(stream[_controller] === undefined);\n  controller[_stream] = stream;\n  stream[_controller] = controller;\n  controller[_transformAlgorithm] = transformAlgorithm;\n  controller[_flushAlgorithm] = flushAlgorithm;\n  controller[_cancelAlgorithm] = cancelAlgorithm;\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @param {Transformer<I\x2C O>} transformer\n * @param {Transformer<I\x2C O>} transformerDict\n */\nfunction setUpTransformStreamDefaultControllerFromTransformer(\n  stream\x2C\n  transformer\x2C\n  transformerDict\x2C\n) {\n  /** @type {TransformStreamDefaultController<O>} */\n  const controller = new TransformStreamDefaultController(_brand);\n  /** @type {(chunk: O\x2C controller: TransformStreamDefaultController<O>) => Promise<void>} */\n  let transformAlgorithm = (chunk) => {\n    try {\n      transformStreamDefaultControllerEnqueue(controller\x2C chunk);\n    } catch (e) {\n      return PromiseReject(e);\n    }\n    return PromiseResolve(undefined);\n  };\n  /** @type {(controller: TransformStreamDefaultController<O>) => Promise<void>} */\n  let flushAlgorithm = _defaultFlushAlgorithm;\n  let cancelAlgorithm = _defaultCancelAlgorithm;\n  if (transformerDict.transform !== undefined) {\n    transformAlgorithm = (chunk\x2C controller) =>\n      webidl.invokeCallbackFunction(\n        transformerDict.transform\x2C\n        [chunk\x2C controller]\x2C\n        transformer\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'transformAlgorithm' on 'TransformStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  if (transformerDict.flush !== undefined) {\n    flushAlgorithm = (controller) =>\n      webidl.invokeCallbackFunction(\n        transformerDict.flush\x2C\n        [controller]\x2C\n        transformer\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'flushAlgorithm' on 'TransformStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  if (transformerDict.cancel !== undefined) {\n    cancelAlgorithm = (reason) =>\n      webidl.invokeCallbackFunction(\n        transformerDict.cancel\x2C\n        [reason]\x2C\n        transformer\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'cancelAlgorithm' on 'TransformStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  setUpTransformStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    transformAlgorithm\x2C\n    flushAlgorithm\x2C\n    cancelAlgorithm\x2C\n  );\n}\n\n/**\n * @template W\n * @param {WritableStream<W>} stream\n * @param {WritableStreamDefaultController<W>} controller\n * @param {(controller: WritableStreamDefaultController<W>) => Promise<void>} startAlgorithm\n * @param {(chunk: W\x2C controller: WritableStreamDefaultController<W>) => Promise<void>} writeAlgorithm\n * @param {() => Promise<void>} closeAlgorithm\n * @param {(reason?: any) => Promise<void>} abortAlgorithm\n * @param {number} highWaterMark\n * @param {(chunk: W) => number} sizeAlgorithm\n */\nfunction setUpWritableStreamDefaultController(\n  stream\x2C\n  controller\x2C\n  startAlgorithm\x2C\n  writeAlgorithm\x2C\n  closeAlgorithm\x2C\n  abortAlgorithm\x2C\n  highWaterMark\x2C\n  sizeAlgorithm\x2C\n) {\n  assert(isWritableStream(stream));\n  assert(stream[_controller] === undefined);\n  controller[_stream] = stream;\n  stream[_controller] = controller;\n  resetQueue(controller);\n  controller[_signal] = newSignal();\n  controller[_started] = false;\n  controller[_strategySizeAlgorithm] = sizeAlgorithm;\n  controller[_strategyHWM] = highWaterMark;\n  controller[_writeAlgorithm] = writeAlgorithm;\n  controller[_closeAlgorithm] = closeAlgorithm;\n  controller[_abortAlgorithm] = abortAlgorithm;\n  const backpressure = writableStreamDefaultControllerGetBackpressure(\n    controller\x2C\n  );\n  writableStreamUpdateBackpressure(stream\x2C backpressure);\n  const startResult = startAlgorithm(controller);\n  const startPromise = resolvePromiseWith(startResult);\n  uponPromise(startPromise\x2C () => {\n    assert(stream[_state] === "writable" || stream[_state] === "erroring");\n    controller[_started] = true;\n    writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\x2C (r) => {\n    assert(stream[_state] === "writable" || stream[_state] === "erroring");\n    controller[_started] = true;\n    writableStreamDealWithRejection(stream\x2C r);\n  });\n}\n\n/**\n * @template W\n * @param {WritableStream<W>} stream\n * @param {UnderlyingSink<W>} underlyingSink\n * @param {UnderlyingSink<W>} underlyingSinkDict\n * @param {number} highWaterMark\n * @param {(chunk: W) => number} sizeAlgorithm\n */\nfunction setUpWritableStreamDefaultControllerFromUnderlyingSink(\n  stream\x2C\n  underlyingSink\x2C\n  underlyingSinkDict\x2C\n  highWaterMark\x2C\n  sizeAlgorithm\x2C\n) {\n  const controller = new WritableStreamDefaultController(_brand);\n  /** @type {(controller: WritableStreamDefaultController<W>) => any} */\n  let startAlgorithm = _defaultStartAlgorithm;\n  /** @type {(chunk: W\x2C controller: WritableStreamDefaultController<W>) => Promise<void>} */\n  let writeAlgorithm = _defaultWriteAlgorithm;\n  let closeAlgorithm = _defaultCloseAlgorithm;\n  /** @type {(reason?: any) => Promise<void>} */\n  let abortAlgorithm = _defaultAbortAlgorithm;\n\n  if (underlyingSinkDict.start !== undefined) {\n    startAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSinkDict.start\x2C\n        [controller]\x2C\n        underlyingSink\x2C\n        webidl.converters.any\x2C\n        "Failed to execute 'startAlgorithm' on 'WritableStreamDefaultController'"\x2C\n      );\n  }\n  if (underlyingSinkDict.write !== undefined) {\n    writeAlgorithm = (chunk) =>\n      webidl.invokeCallbackFunction(\n        underlyingSinkDict.write\x2C\n        [chunk\x2C controller]\x2C\n        underlyingSink\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'writeAlgorithm' on 'WritableStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  if (underlyingSinkDict.close !== undefined) {\n    closeAlgorithm = () =>\n      webidl.invokeCallbackFunction(\n        underlyingSinkDict.close\x2C\n        []\x2C\n        underlyingSink\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'closeAlgorithm' on 'WritableStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  if (underlyingSinkDict.abort !== undefined) {\n    abortAlgorithm = (reason) =>\n      webidl.invokeCallbackFunction(\n        underlyingSinkDict.abort\x2C\n        [reason]\x2C\n        underlyingSink\x2C\n        webidl.converters["Promise<undefined>"]\x2C\n        "Failed to execute 'abortAlgorithm' on 'WritableStreamDefaultController'"\x2C\n        true\x2C\n      );\n  }\n  setUpWritableStreamDefaultController(\n    stream\x2C\n    controller\x2C\n    startAlgorithm\x2C\n    writeAlgorithm\x2C\n    closeAlgorithm\x2C\n    abortAlgorithm\x2C\n    highWaterMark\x2C\n    sizeAlgorithm\x2C\n  );\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultWriter<W>} writer\n * @param {WritableStream<W>} stream\n */\nfunction setUpWritableStreamDefaultWriter(writer\x2C stream) {\n  if (isWritableStreamLocked(stream) === true) {\n    throw new TypeError("The stream is already locked.");\n  }\n  writer[_stream] = stream;\n  stream[_writer] = writer;\n  const state = stream[_state];\n  if (state === "writable") {\n    if (\n      writableStreamCloseQueuedOrInFlight(stream) === false &&\n      stream[_backpressure] === true\n    ) {\n      writer[_readyPromise] = new Deferred();\n    } else {\n      writer[_readyPromise] = new Deferred();\n      writer[_readyPromise].resolve(undefined);\n    }\n    writer[_closedPromise] = new Deferred();\n  } else if (state === "erroring") {\n    writer[_readyPromise] = new Deferred();\n    writer[_readyPromise].reject(stream[_storedError]);\n    setPromiseIsHandledToTrue(writer[_readyPromise].promise);\n    writer[_closedPromise] = new Deferred();\n  } else if (state === "closed") {\n    writer[_readyPromise] = new Deferred();\n    writer[_readyPromise].resolve(undefined);\n    writer[_closedPromise] = new Deferred();\n    writer[_closedPromise].resolve(undefined);\n  } else {\n    assert(state === "errored");\n    const storedError = stream[_storedError];\n    writer[_readyPromise] = new Deferred();\n    writer[_readyPromise].reject(storedError);\n    setPromiseIsHandledToTrue(writer[_readyPromise].promise);\n    writer[_closedPromise] = new Deferred();\n    writer[_closedPromise].reject(storedError);\n    setPromiseIsHandledToTrue(writer[_closedPromise].promise);\n  }\n}\n\n/** @param {TransformStreamDefaultController} controller */\nfunction transformStreamDefaultControllerClearAlgorithms(controller) {\n  controller[_transformAlgorithm] = undefined;\n  controller[_flushAlgorithm] = undefined;\n  controller[_cancelAlgorithm] = undefined;\n}\n\n/**\n * @template O\n * @param {TransformStreamDefaultController<O>} controller\n * @param {O} chunk\n */\nfunction transformStreamDefaultControllerEnqueue(controller\x2C chunk) {\n  const stream = controller[_stream];\n  const readableController = stream[_readable][_controller];\n  if (\n    readableStreamDefaultControllerCanCloseOrEnqueue(\n      /** @type {ReadableStreamDefaultController<O>} */ readableController\x2C\n    ) === false\n  ) {\n    throw new TypeError("Readable stream is unavailable.");\n  }\n  try {\n    readableStreamDefaultControllerEnqueue(\n      /** @type {ReadableStreamDefaultController<O>} */ readableController\x2C\n      chunk\x2C\n    );\n  } catch (e) {\n    transformStreamErrorWritableAndUnblockWrite(stream\x2C e);\n    throw stream[_readable][_storedError];\n  }\n  const backpressure = readableStreamDefaultcontrollerHasBackpressure(\n    /** @type {ReadableStreamDefaultController<O>} */ readableController\x2C\n  );\n  if (backpressure !== stream[_backpressure]) {\n    assert(backpressure === true);\n    transformStreamSetBackpressure(stream\x2C true);\n  }\n}\n\n/**\n * @param {TransformStreamDefaultController} controller\n * @param {any=} e\n */\nfunction transformStreamDefaultControllerError(controller\x2C e) {\n  transformStreamError(controller[_stream]\x2C e);\n}\n\n/**\n * @template O\n * @param {TransformStreamDefaultController<O>} controller\n * @param {any} chunk\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultControllerPerformTransform(controller\x2C chunk) {\n  const transformPromise = controller[_transformAlgorithm](chunk\x2C controller);\n  return transformPromiseWith(transformPromise\x2C undefined\x2C (r) => {\n    transformStreamError(controller[_stream]\x2C r);\n    throw r;\n  });\n}\n\n/** @param {TransformStreamDefaultController} controller */\nfunction transformStreamDefaultControllerTerminate(controller) {\n  const stream = controller[_stream];\n  const readableController = stream[_readable][_controller];\n  readableStreamDefaultControllerClose(\n    /** @type {ReadableStreamDefaultController} */ readableController\x2C\n  );\n  const error = new TypeError("The stream has been terminated.");\n  transformStreamErrorWritableAndUnblockWrite(stream\x2C error);\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @param {any=} reason\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultSinkAbortAlgorithm(stream\x2C reason) {\n  const controller = stream[_controller];\n  if (controller[_finishPromise] !== undefined) {\n    return controller[_finishPromise].promise;\n  }\n  const readable = stream[_readable];\n  controller[_finishPromise] = new Deferred();\n  const cancelPromise = controller[_cancelAlgorithm](reason);\n  transformStreamDefaultControllerClearAlgorithms(controller);\n  transformPromiseWith(cancelPromise\x2C () => {\n    if (readable[_state] === "errored") {\n      controller[_finishPromise].reject(readable[_storedError]);\n    } else {\n      readableStreamDefaultControllerError(readable[_controller]\x2C reason);\n      controller[_finishPromise].resolve(undefined);\n    }\n  }\x2C (r) => {\n    readableStreamDefaultControllerError(readable[_controller]\x2C r);\n    controller[_finishPromise].reject(r);\n  });\n  return controller[_finishPromise].promise;\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultSinkCloseAlgorithm(stream) {\n  const controller = stream[_controller];\n  if (controller[_finishPromise] !== undefined) {\n    return controller[_finishPromise].promise;\n  }\n  const readable = stream[_readable];\n  controller[_finishPromise] = new Deferred();\n  const flushPromise = controller[_flushAlgorithm](controller);\n  transformStreamDefaultControllerClearAlgorithms(controller);\n  transformPromiseWith(flushPromise\x2C () => {\n    if (readable[_state] === "errored") {\n      controller[_finishPromise].reject(readable[_storedError]);\n    } else {\n      readableStreamDefaultControllerClose(readable[_controller]);\n      controller[_finishPromise].resolve(undefined);\n    }\n  }\x2C (r) => {\n    readableStreamDefaultControllerError(readable[_controller]\x2C r);\n    controller[_finishPromise].reject(r);\n  });\n  return controller[_finishPromise].promise;\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @param {I} chunk\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultSinkWriteAlgorithm(stream\x2C chunk) {\n  assert(stream[_writable][_state] === "writable");\n  const controller = stream[_controller];\n  if (stream[_backpressure] === true) {\n    const backpressureChangePromise = stream[_backpressureChangePromise];\n    assert(backpressureChangePromise !== undefined);\n    return transformPromiseWith(backpressureChangePromise.promise\x2C () => {\n      const writable = stream[_writable];\n      const state = writable[_state];\n      if (state === "erroring") {\n        throw writable[_storedError];\n      }\n      assert(state === "writable");\n      return transformStreamDefaultControllerPerformTransform(\n        controller\x2C\n        chunk\x2C\n      );\n    });\n  }\n  return transformStreamDefaultControllerPerformTransform(controller\x2C chunk);\n}\n\n/**\n * @template I\n * @template O\n * @param {TransformStream<I\x2C O>} stream\n * @param {any=} reason\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultSourceCancelAlgorithm(stream\x2C reason) {\n  const controller = stream[_controller];\n  if (controller[_finishPromise] !== undefined) {\n    return controller[_finishPromise].promise;\n  }\n  const writable = stream[_writable];\n  controller[_finishPromise] = new Deferred();\n  const cancelPromise = controller[_cancelAlgorithm](reason);\n  transformStreamDefaultControllerClearAlgorithms(controller);\n  transformPromiseWith(cancelPromise\x2C () => {\n    if (writable[_state] === "errored") {\n      controller[_finishPromise].reject(writable[_storedError]);\n    } else {\n      writableStreamDefaultControllerErrorIfNeeded(\n        writable[_controller]\x2C\n        reason\x2C\n      );\n      transformStreamUnblockWrite(stream);\n      controller[_finishPromise].resolve(undefined);\n    }\n  }\x2C (r) => {\n    writableStreamDefaultControllerErrorIfNeeded(writable[_controller]\x2C r);\n    transformStreamUnblockWrite(stream);\n    controller[_finishPromise].reject(r);\n  });\n  return controller[_finishPromise].promise;\n}\n\n/**\n * @param {TransformStream} stream\n * @returns {Promise<void>}\n */\nfunction transformStreamDefaultSourcePullAlgorithm(stream) {\n  assert(stream[_backpressure] === true);\n  assert(stream[_backpressureChangePromise] !== undefined);\n  transformStreamSetBackpressure(stream\x2C false);\n  return stream[_backpressureChangePromise].promise;\n}\n\n/**\n * @param {TransformStream} stream\n * @param {any=} e\n */\nfunction transformStreamError(stream\x2C e) {\n  readableStreamDefaultControllerError(\n    /** @type {ReadableStreamDefaultController} */ stream[_readable][\n      _controller\n    ]\x2C\n    e\x2C\n  );\n  transformStreamErrorWritableAndUnblockWrite(stream\x2C e);\n}\n\n/**\n * @param {TransformStream} stream\n * @param {any=} e\n */\nfunction transformStreamErrorWritableAndUnblockWrite(stream\x2C e) {\n  transformStreamDefaultControllerClearAlgorithms(stream[_controller]);\n  writableStreamDefaultControllerErrorIfNeeded(\n    stream[_writable][_controller]\x2C\n    e\x2C\n  );\n  transformStreamUnblockWrite(stream);\n}\n\n/**\n * @param {TransformStream} stream\n * @param {boolean} backpressure\n */\nfunction transformStreamSetBackpressure(stream\x2C backpressure) {\n  assert(stream[_backpressure] !== backpressure);\n  if (stream[_backpressureChangePromise] !== undefined) {\n    stream[_backpressureChangePromise].resolve(undefined);\n  }\n  stream[_backpressureChangePromise] = new Deferred();\n  stream[_backpressure] = backpressure;\n}\n\n/**\n * @param {TransformStream} stream\n */\nfunction transformStreamUnblockWrite(stream) {\n  if (stream[_backpressure] === true) {\n    transformStreamSetBackpressure(stream\x2C false);\n  }\n}\n\n/**\n * @param {WritableStream} stream\n * @param {any=} reason\n * @returns {Promise<void>}\n */\nfunction writableStreamAbort(stream\x2C reason) {\n  const state = stream[_state];\n  if (state === "closed" || state === "errored") {\n    return PromiseResolve(undefined);\n  }\n  stream[_controller][_signal][signalAbort](reason);\n  if (state === "closed" || state === "errored") {\n    return PromiseResolve(undefined);\n  }\n  if (stream[_pendingAbortRequest] !== undefined) {\n    return stream[_pendingAbortRequest].deferred.promise;\n  }\n  assert(state === "writable" || state === "erroring");\n  let wasAlreadyErroring = false;\n  if (state === "erroring") {\n    wasAlreadyErroring = true;\n    reason = undefined;\n  }\n  /** Deferred<void> */\n  const deferred = new Deferred();\n  stream[_pendingAbortRequest] = {\n    deferred\x2C\n    reason\x2C\n    wasAlreadyErroring\x2C\n  };\n  if (wasAlreadyErroring === false) {\n    writableStreamStartErroring(stream\x2C reason);\n  }\n  return deferred.promise;\n}\n\n/**\n * @param {WritableStream} stream\n * @returns {Promise<void>}\n */\nfunction writableStreamAddWriteRequest(stream) {\n  assert(isWritableStreamLocked(stream) === true);\n  assert(stream[_state] === "writable");\n  /** @type {Deferred<void>} */\n  const deferred = new Deferred();\n  ArrayPrototypePush(stream[_writeRequests]\x2C deferred);\n  return deferred.promise;\n}\n\n/**\n * @param {WritableStream} stream\n * @returns {Promise<void>}\n */\nfunction writableStreamClose(stream) {\n  const state = stream[_state];\n  if (state === "closed" || state === "errored") {\n    return PromiseReject(\n      new TypeError("Writable stream is closed or errored.")\x2C\n    );\n  }\n  assert(state === "writable" || state === "erroring");\n  assert(writableStreamCloseQueuedOrInFlight(stream) === false);\n  /** @type {Deferred<void>} */\n  const deferred = new Deferred();\n  stream[_closeRequest] = deferred;\n  const writer = stream[_writer];\n  if (\n    writer !== undefined && stream[_backpressure] === true &&\n    state === "writable"\n  ) {\n    writer[_readyPromise].resolve(undefined);\n  }\n  writableStreamDefaultControllerClose(stream[_controller]);\n  return deferred.promise;\n}\n\n/**\n * @param {WritableStream} stream\n * @returns {boolean}\n */\nfunction writableStreamCloseQueuedOrInFlight(stream) {\n  if (\n    stream[_closeRequest] === undefined &&\n    stream[_inFlightCloseRequest] === undefined\n  ) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {WritableStream} stream\n * @param {any=} error\n */\nfunction writableStreamDealWithRejection(stream\x2C error) {\n  const state = stream[_state];\n  if (state === "writable") {\n    writableStreamStartErroring(stream\x2C error);\n    return;\n  }\n  assert(state === "erroring");\n  writableStreamFinishErroring(stream);\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultController<W>} controller\n */\nfunction writableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n  const stream = controller[_stream];\n  if (controller[_started] === false) {\n    return;\n  }\n  if (stream[_inFlightWriteRequest] !== undefined) {\n    return;\n  }\n  const state = stream[_state];\n  assert(state !== "closed" && state !== "errored");\n  if (state === "erroring") {\n    writableStreamFinishErroring(stream);\n    return;\n  }\n  if (controller[_queue].size === 0) {\n    return;\n  }\n  const value = peekQueueValue(controller);\n  if (value === _close) {\n    writableStreamDefaultControllerProcessClose(controller);\n  } else {\n    writableStreamDefaultControllerProcessWrite(controller\x2C value);\n  }\n}\n\nfunction writableStreamDefaultControllerClearAlgorithms(controller) {\n  controller[_writeAlgorithm] = undefined;\n  controller[_closeAlgorithm] = undefined;\n  controller[_abortAlgorithm] = undefined;\n  controller[_strategySizeAlgorithm] = undefined;\n}\n\n/** @param {WritableStreamDefaultController} controller */\nfunction writableStreamDefaultControllerClose(controller) {\n  enqueueValueWithSize(controller\x2C _close\x2C 0);\n  writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n/**\n * @param {WritableStreamDefaultController} controller\n * @param {any} error\n */\nfunction writableStreamDefaultControllerError(controller\x2C error) {\n  const stream = controller[_stream];\n  assert(stream[_state] === "writable");\n  writableStreamDefaultControllerClearAlgorithms(controller);\n  writableStreamStartErroring(stream\x2C error);\n}\n\n/**\n * @param {WritableStreamDefaultController} controller\n * @param {any} error\n */\nfunction writableStreamDefaultControllerErrorIfNeeded(controller\x2C error) {\n  if (controller[_stream][_state] === "writable") {\n    writableStreamDefaultControllerError(controller\x2C error);\n  }\n}\n\n/**\n * @param {WritableStreamDefaultController} controller\n * @returns {boolean}\n */\nfunction writableStreamDefaultControllerGetBackpressure(controller) {\n  const desiredSize = writableStreamDefaultControllerGetDesiredSize(\n    controller\x2C\n  );\n  return desiredSize <= 0;\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultController<W>} controller\n * @param {W} chunk\n * @returns {number}\n */\nfunction writableStreamDefaultControllerGetChunkSize(controller\x2C chunk) {\n  let value;\n  try {\n    value = controller[_strategySizeAlgorithm](chunk);\n  } catch (e) {\n    writableStreamDefaultControllerErrorIfNeeded(controller\x2C e);\n    return 1;\n  }\n  return value;\n}\n\n/**\n * @param {WritableStreamDefaultController} controller\n * @returns {number}\n */\nfunction writableStreamDefaultControllerGetDesiredSize(controller) {\n  return controller[_strategyHWM] - controller[_queueTotalSize];\n}\n\n/** @param {WritableStreamDefaultController} controller */\nfunction writableStreamDefaultControllerProcessClose(controller) {\n  const stream = controller[_stream];\n  writableStreamMarkCloseRequestInFlight(stream);\n  dequeueValue(controller);\n  assert(controller[_queue].size === 0);\n  const sinkClosePromise = controller[_closeAlgorithm]();\n  writableStreamDefaultControllerClearAlgorithms(controller);\n  uponPromise(sinkClosePromise\x2C () => {\n    writableStreamFinishInFlightClose(stream);\n  }\x2C (reason) => {\n    writableStreamFinishInFlightCloseWithError(stream\x2C reason);\n  });\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultController<W>} controller\n * @param {W} chunk\n */\nfunction writableStreamDefaultControllerProcessWrite(controller\x2C chunk) {\n  const stream = controller[_stream];\n  writableStreamMarkFirstWriteRequestInFlight(stream);\n  const sinkWritePromise = controller[_writeAlgorithm](chunk\x2C controller);\n  uponPromise(sinkWritePromise\x2C () => {\n    writableStreamFinishInFlightWrite(stream);\n    const state = stream[_state];\n    assert(state === "writable" || state === "erroring");\n    dequeueValue(controller);\n    if (\n      writableStreamCloseQueuedOrInFlight(stream) === false &&\n      state === "writable"\n    ) {\n      const backpressure = writableStreamDefaultControllerGetBackpressure(\n        controller\x2C\n      );\n      writableStreamUpdateBackpressure(stream\x2C backpressure);\n    }\n    writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\x2C (reason) => {\n    if (stream[_state] === "writable") {\n      writableStreamDefaultControllerClearAlgorithms(controller);\n    }\n    writableStreamFinishInFlightWriteWithError(stream\x2C reason);\n  });\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultController<W>} controller\n * @param {W} chunk\n * @param {number} chunkSize\n */\nfunction writableStreamDefaultControllerWrite(controller\x2C chunk\x2C chunkSize) {\n  try {\n    enqueueValueWithSize(controller\x2C chunk\x2C chunkSize);\n  } catch (e) {\n    writableStreamDefaultControllerErrorIfNeeded(controller\x2C e);\n    return;\n  }\n  const stream = controller[_stream];\n  if (\n    writableStreamCloseQueuedOrInFlight(stream) === false &&\n    stream[_state] === "writable"\n  ) {\n    const backpressure = writableStreamDefaultControllerGetBackpressure(\n      controller\x2C\n    );\n    writableStreamUpdateBackpressure(stream\x2C backpressure);\n  }\n  writableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @param {any=} reason\n * @returns {Promise<void>}\n */\nfunction writableStreamDefaultWriterAbort(writer\x2C reason) {\n  const stream = writer[_stream];\n  assert(stream !== undefined);\n  return writableStreamAbort(stream\x2C reason);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @returns {Promise<void>}\n */\nfunction writableStreamDefaultWriterClose(writer) {\n  const stream = writer[_stream];\n  assert(stream !== undefined);\n  return writableStreamClose(stream);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @returns {Promise<void>}\n */\nfunction writableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n  const stream = writer[_stream];\n  assert(stream !== undefined);\n  const state = stream[_state];\n  if (\n    writableStreamCloseQueuedOrInFlight(stream) === true || state === "closed"\n  ) {\n    return PromiseResolve(undefined);\n  }\n  if (state === "errored") {\n    return PromiseReject(stream[_storedError]);\n  }\n  assert(state === "writable" || state === "erroring");\n  return writableStreamDefaultWriterClose(writer);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @param {any=} error\n */\nfunction writableStreamDefaultWriterEnsureClosedPromiseRejected(\n  writer\x2C\n  error\x2C\n) {\n  if (writer[_closedPromise].state === "pending") {\n    writer[_closedPromise].reject(error);\n  } else {\n    writer[_closedPromise] = new Deferred();\n    writer[_closedPromise].reject(error);\n  }\n  setPromiseIsHandledToTrue(writer[_closedPromise].promise);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @param {any=} error\n */\nfunction writableStreamDefaultWriterEnsureReadyPromiseRejected(\n  writer\x2C\n  error\x2C\n) {\n  if (writer[_readyPromise].state === "pending") {\n    writer[_readyPromise].reject(error);\n  } else {\n    writer[_readyPromise] = new Deferred();\n    writer[_readyPromise].reject(error);\n  }\n  setPromiseIsHandledToTrue(writer[_readyPromise].promise);\n}\n\n/**\n * @param {WritableStreamDefaultWriter} writer\n * @returns {number | null}\n */\nfunction writableStreamDefaultWriterGetDesiredSize(writer) {\n  const stream = writer[_stream];\n  const state = stream[_state];\n  if (state === "errored" || state === "erroring") {\n    return null;\n  }\n  if (state === "closed") {\n    return 0;\n  }\n  return writableStreamDefaultControllerGetDesiredSize(stream[_controller]);\n}\n\n/** @param {WritableStreamDefaultWriter} writer */\nfunction writableStreamDefaultWriterRelease(writer) {\n  const stream = writer[_stream];\n  assert(stream !== undefined);\n  assert(stream[_writer] === writer);\n  const releasedError = new TypeError(\n    "The writer has already been released."\x2C\n  );\n  writableStreamDefaultWriterEnsureReadyPromiseRejected(\n    writer\x2C\n    releasedError\x2C\n  );\n  writableStreamDefaultWriterEnsureClosedPromiseRejected(\n    writer\x2C\n    releasedError\x2C\n  );\n  stream[_writer] = undefined;\n  writer[_stream] = undefined;\n}\n\n/**\n * @template W\n * @param {WritableStreamDefaultWriter<W>} writer\n * @param {W} chunk\n * @returns {Promise<void>}\n */\nfunction writableStreamDefaultWriterWrite(writer\x2C chunk) {\n  const stream = writer[_stream];\n  assert(stream !== undefined);\n  const controller = stream[_controller];\n  const chunkSize = writableStreamDefaultControllerGetChunkSize(\n    controller\x2C\n    chunk\x2C\n  );\n  if (stream !== writer[_stream]) {\n    return PromiseReject(new TypeError("Writer's stream is unexpected."));\n  }\n  const state = stream[_state];\n  if (state === "errored") {\n    return PromiseReject(stream[_storedError]);\n  }\n  if (\n    writableStreamCloseQueuedOrInFlight(stream) === true || state === "closed"\n  ) {\n    return PromiseReject(\n      new TypeError("The stream is closing or is closed.")\x2C\n    );\n  }\n  if (state === "erroring") {\n    return PromiseReject(stream[_storedError]);\n  }\n  assert(state === "writable");\n  const promise = writableStreamAddWriteRequest(stream);\n  writableStreamDefaultControllerWrite(controller\x2C chunk\x2C chunkSize);\n  return promise;\n}\n\n/** @param {WritableStream} stream */\nfunction writableStreamFinishErroring(stream) {\n  assert(stream[_state] === "erroring");\n  assert(writableStreamHasOperationMarkedInFlight(stream) === false);\n  stream[_state] = "errored";\n  stream[_controller][_errorSteps]();\n  const storedError = stream[_storedError];\n  const writeRequests = stream[_writeRequests];\n  for (let i = 0; i < writeRequests.length; ++i) {\n    const writeRequest = writeRequests[i];\n    writeRequest.reject(storedError);\n  }\n  stream[_writeRequests] = [];\n  if (stream[_pendingAbortRequest] === undefined) {\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n  const abortRequest = stream[_pendingAbortRequest];\n  stream[_pendingAbortRequest] = undefined;\n  if (abortRequest.wasAlreadyErroring === true) {\n    abortRequest.deferred.reject(storedError);\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    return;\n  }\n  const promise = stream[_controller][_abortSteps](abortRequest.reason);\n  uponPromise(promise\x2C () => {\n    abortRequest.deferred.resolve(undefined);\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n  }\x2C (reason) => {\n    abortRequest.deferred.reject(reason);\n    writableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n  });\n}\n\n/** @param {WritableStream} stream */\nfunction writableStreamFinishInFlightClose(stream) {\n  assert(stream[_inFlightCloseRequest] !== undefined);\n  stream[_inFlightCloseRequest].resolve(undefined);\n  stream[_inFlightCloseRequest] = undefined;\n  const state = stream[_state];\n  assert(state === "writable" || state === "erroring");\n  if (state === "erroring") {\n    stream[_storedError] = undefined;\n    if (stream[_pendingAbortRequest] !== undefined) {\n      stream[_pendingAbortRequest].deferred.resolve(undefined);\n      stream[_pendingAbortRequest] = undefined;\n    }\n  }\n  stream[_state] = "closed";\n  const writer = stream[_writer];\n  if (writer !== undefined) {\n    writer[_closedPromise].resolve(undefined);\n  }\n  assert(stream[_pendingAbortRequest] === undefined);\n  assert(stream[_storedError] === undefined);\n}\n\n/**\n * @param {WritableStream} stream\n * @param {any=} error\n */\nfunction writableStreamFinishInFlightCloseWithError(stream\x2C error) {\n  assert(stream[_inFlightCloseRequest] !== undefined);\n  stream[_inFlightCloseRequest].reject(error);\n  stream[_inFlightCloseRequest] = undefined;\n  assert(stream[_state] === "writable" || stream[_state] === "erroring");\n  if (stream[_pendingAbortRequest] !== undefined) {\n    stream[_pendingAbortRequest].deferred.reject(error);\n    stream[_pendingAbortRequest] = undefined;\n  }\n  writableStreamDealWithRejection(stream\x2C error);\n}\n\n/** @param {WritableStream} stream */\nfunction writableStreamFinishInFlightWrite(stream) {\n  assert(stream[_inFlightWriteRequest] !== undefined);\n  stream[_inFlightWriteRequest].resolve(undefined);\n  stream[_inFlightWriteRequest] = undefined;\n}\n\n/**\n * @param {WritableStream} stream\n * @param {any=} error\n */\nfunction writableStreamFinishInFlightWriteWithError(stream\x2C error) {\n  assert(stream[_inFlightWriteRequest] !== undefined);\n  stream[_inFlightWriteRequest].reject(error);\n  stream[_inFlightWriteRequest] = undefined;\n  assert(stream[_state] === "writable" || stream[_state] === "erroring");\n  writableStreamDealWithRejection(stream\x2C error);\n}\n\n/**\n * @param {WritableStream} stream\n * @returns {boolean}\n */\nfunction writableStreamHasOperationMarkedInFlight(stream) {\n  if (\n    stream[_inFlightWriteRequest] === undefined &&\n    stream[_inFlightCloseRequest] === undefined\n  ) {\n    return false;\n  }\n  return true;\n}\n\n/** @param {WritableStream} stream */\nfunction writableStreamMarkCloseRequestInFlight(stream) {\n  assert(stream[_inFlightCloseRequest] === undefined);\n  assert(stream[_closeRequest] !== undefined);\n  stream[_inFlightCloseRequest] = stream[_closeRequest];\n  stream[_closeRequest] = undefined;\n}\n\n/**\n * @template W\n * @param {WritableStream<W>} stream\n */\nfunction writableStreamMarkFirstWriteRequestInFlight(stream) {\n  assert(stream[_inFlightWriteRequest] === undefined);\n  assert(stream[_writeRequests].length);\n  const writeRequest = ArrayPrototypeShift(stream[_writeRequests]);\n  stream[_inFlightWriteRequest] = writeRequest;\n}\n\n/** @param {WritableStream} stream */\nfunction writableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n  assert(stream[_state] === "errored");\n  if (stream[_closeRequest] !== undefined) {\n    assert(stream[_inFlightCloseRequest] === undefined);\n    stream[_closeRequest].reject(stream[_storedError]);\n    stream[_closeRequest] = undefined;\n  }\n  const writer = stream[_writer];\n  if (writer !== undefined) {\n    writer[_closedPromise].reject(stream[_storedError]);\n    setPromiseIsHandledToTrue(writer[_closedPromise].promise);\n  }\n}\n\n/**\n * @param {WritableStream} stream\n * @param {any=} reason\n */\nfunction writableStreamStartErroring(stream\x2C reason) {\n  assert(stream[_storedError] === undefined);\n  assert(stream[_state] === "writable");\n  const controller = stream[_controller];\n  assert(controller !== undefined);\n  stream[_state] = "erroring";\n  stream[_storedError] = reason;\n  const writer = stream[_writer];\n  if (writer !== undefined) {\n    writableStreamDefaultWriterEnsureReadyPromiseRejected(writer\x2C reason);\n  }\n  if (\n    writableStreamHasOperationMarkedInFlight(stream) === false &&\n    controller[_started] === true\n  ) {\n    writableStreamFinishErroring(stream);\n  }\n}\n\n/**\n * @param {WritableStream} stream\n * @param {boolean} backpressure\n */\nfunction writableStreamUpdateBackpressure(stream\x2C backpressure) {\n  assert(stream[_state] === "writable");\n  assert(writableStreamCloseQueuedOrInFlight(stream) === false);\n  const writer = stream[_writer];\n  if (writer !== undefined && backpressure !== stream[_backpressure]) {\n    if (backpressure === true) {\n      writer[_readyPromise] = new Deferred();\n    } else {\n      assert(backpressure === false);\n      writer[_readyPromise].resolve(undefined);\n    }\n  }\n  stream[_backpressure] = backpressure;\n}\n\n/** @type {AsyncIterator<unknown\x2C unknown>} */\nconst asyncIteratorPrototype = ObjectGetPrototypeOf(AsyncGeneratorPrototype);\n\nconst _iteratorNext = Symbol("[[iteratorNext]]");\nconst _iteratorFinished = Symbol("[[iteratorFinished]]");\n\nclass ReadableStreamAsyncIteratorReadRequest {\n  #reader;\n  #promise;\n\n  constructor(reader\x2C promise) {\n    this.#reader = reader;\n    this.#promise = promise;\n  }\n\n  chunkSteps(chunk) {\n    this.#reader[_iteratorNext] = null;\n    this.#promise.resolve({ value: chunk\x2C done: false });\n  }\n\n  closeSteps() {\n    this.#reader[_iteratorNext] = null;\n    this.#reader[_iteratorFinished] = true;\n    readableStreamDefaultReaderRelease(this.#reader);\n    this.#promise.resolve({ value: undefined\x2C done: true });\n  }\n\n  errorSteps(e) {\n    this.#reader[_iteratorNext] = null;\n    this.#reader[_iteratorFinished] = true;\n    readableStreamDefaultReaderRelease(this.#reader);\n    this.#promise.reject(e);\n  }\n}\n\n/** @type {AsyncIterator<unknown>} */\nconst readableStreamAsyncIteratorPrototype = ObjectSetPrototypeOf({\n  /** @returns {Promise<IteratorResult<unknown>>} */\n  next() {\n    /** @type {ReadableStreamDefaultReader} */\n    const reader = this[_reader];\n    function nextSteps() {\n      if (reader[_iteratorFinished]) {\n        return PromiseResolve({ value: undefined\x2C done: true });\n      }\n\n      if (reader[_stream] === undefined) {\n        return PromiseReject(\n          new TypeError(\n            "Cannot get the next iteration result once the reader has been released."\x2C\n          )\x2C\n        );\n      }\n\n      /** @type {Deferred<IteratorResult<any>>} */\n      const promise = new Deferred();\n      // internal values (_iteratorNext & _iteratorFinished) are modified inside\n      // ReadableStreamAsyncIteratorReadRequest methods\n      // see: https://webidl.spec.whatwg.org/#es-default-asynchronous-iterator-object\n      const readRequest = new ReadableStreamAsyncIteratorReadRequest(\n        reader\x2C\n        promise\x2C\n      );\n\n      readableStreamDefaultReaderRead(reader\x2C readRequest);\n      return PromisePrototypeThen(promise.promise);\n    }\n\n    return reader[_iteratorNext] = reader[_iteratorNext]\n      ? PromisePrototypeThen(reader[_iteratorNext]\x2C nextSteps\x2C nextSteps)\n      : nextSteps();\n  }\x2C\n  /**\n   * @param {unknown} arg\n   * @returns {Promise<IteratorResult<unknown>>}\n   */\n  return(arg) {\n    /** @type {ReadableStreamDefaultReader} */\n    const reader = this[_reader];\n    const returnSteps = () => {\n      if (reader[_iteratorFinished]) {\n        return PromiseResolve({ value: arg\x2C done: true });\n      }\n      reader[_iteratorFinished] = true;\n\n      if (reader[_stream] === undefined) {\n        return PromiseResolve({ value: undefined\x2C done: true });\n      }\n      assert(reader[_readRequests].size === 0);\n      if (this[_preventCancel] === false) {\n        const result = readableStreamReaderGenericCancel(reader\x2C arg);\n        readableStreamDefaultReaderRelease(reader);\n        return result;\n      }\n      readableStreamDefaultReaderRelease(reader);\n      return PromiseResolve({ value: undefined\x2C done: true });\n    };\n\n    reader[_iteratorNext] = reader[_iteratorNext]\n      ? PromisePrototypeThen(reader[_iteratorNext]\x2C returnSteps\x2C returnSteps)\n      : returnSteps();\n    return PromisePrototypeThen(\n      reader[_iteratorNext]\x2C\n      () => ({ value: arg\x2C done: true })\x2C\n    );\n  }\x2C\n}\x2C asyncIteratorPrototype);\n\nclass ByteLengthQueuingStrategy {\n  /** @param {{ highWaterMark: number }} init */\n  constructor(init) {\n    const prefix = "Failed to construct 'ByteLengthQueuingStrategy'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    init = webidl.converters.QueuingStrategyInit(init\x2C prefix\x2C "Argument 1");\n    this[_brand] = _brand;\n    this[_globalObject] = globalThis;\n    this[_highWaterMark] = init.highWaterMark;\n  }\n\n  /** @returns {number} */\n  get highWaterMark() {\n    webidl.assertBranded(this\x2C ByteLengthQueuingStrategyPrototype);\n    return this[_highWaterMark];\n  }\n\n  /** @returns {(chunk: ArrayBufferView) => number} */\n  get size() {\n    webidl.assertBranded(this\x2C ByteLengthQueuingStrategyPrototype);\n    initializeByteLengthSizeFunction(this[_globalObject]);\n    return WeakMapPrototypeGet(byteSizeFunctionWeakMap\x2C this[_globalObject]);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ByteLengthQueuingStrategyPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "highWaterMark"\x2C\n          "size"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(ByteLengthQueuingStrategy);\nconst ByteLengthQueuingStrategyPrototype = ByteLengthQueuingStrategy.prototype;\n\n/** @type {WeakMap<typeof globalThis\x2C (chunk: ArrayBufferView) => number>} */\nconst byteSizeFunctionWeakMap = new SafeWeakMap();\n\nfunction initializeByteLengthSizeFunction(globalObject) {\n  if (WeakMapPrototypeHas(byteSizeFunctionWeakMap\x2C globalObject)) {\n    return;\n  }\n  // deno-lint-ignore prefer-primordials\n  const size = (chunk) => chunk.byteLength;\n  WeakMapPrototypeSet(byteSizeFunctionWeakMap\x2C globalObject\x2C size);\n}\n\nclass CountQueuingStrategy {\n  /** @param {{ highWaterMark: number }} init */\n  constructor(init) {\n    const prefix = "Failed to construct 'CountQueuingStrategy'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    init = webidl.converters.QueuingStrategyInit(init\x2C prefix\x2C "Argument 1");\n    this[_brand] = _brand;\n    this[_globalObject] = globalThis;\n    this[_highWaterMark] = init.highWaterMark;\n  }\n\n  /** @returns {number} */\n  get highWaterMark() {\n    webidl.assertBranded(this\x2C CountQueuingStrategyPrototype);\n    return this[_highWaterMark];\n  }\n\n  /** @returns {(chunk: any) => 1} */\n  get size() {\n    webidl.assertBranded(this\x2C CountQueuingStrategyPrototype);\n    initializeCountSizeFunction(this[_globalObject]);\n    return WeakMapPrototypeGet(countSizeFunctionWeakMap\x2C this[_globalObject]);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          CountQueuingStrategyPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "highWaterMark"\x2C\n          "size"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(CountQueuingStrategy);\nconst CountQueuingStrategyPrototype = CountQueuingStrategy.prototype;\n\n/** @type {WeakMap<typeof globalThis\x2C () => 1>} */\nconst countSizeFunctionWeakMap = new SafeWeakMap();\n\n/** @param {typeof globalThis} globalObject */\nfunction initializeCountSizeFunction(globalObject) {\n  if (WeakMapPrototypeHas(countSizeFunctionWeakMap\x2C globalObject)) {\n    return;\n  }\n  const size = () => 1;\n  WeakMapPrototypeSet(countSizeFunctionWeakMap\x2C globalObject\x2C size);\n}\n\n// Ref: https://tc39.es/ecma262/#sec-getiterator\nfunction getAsyncOrSyncIterator(obj) {\n  let iterator;\n  if (obj[SymbolAsyncIterator] != null) {\n    iterator = obj[SymbolAsyncIterator]();\n    if (!isObject(iterator)) {\n      throw new TypeError(\n        "[Symbol.asyncIterator] returned a non-object value"\x2C\n      );\n    }\n  } else if (obj[SymbolIterator] != null) {\n    iterator = obj[SymbolIterator]();\n    if (!isObject(iterator)) {\n      throw new TypeError("[Symbol.iterator] returned a non-object value");\n    }\n  } else {\n    throw new TypeError("No iterator found");\n  }\n  if (typeof iterator.next !== "function") {\n    throw new TypeError("iterator.next is not a function");\n  }\n  return iterator;\n}\n\nfunction isObject(x) {\n  return (typeof x === "object" && x != null) || typeof x === "function";\n}\n\nconst _resourceBacking = Symbol("[[resourceBacking]]");\n// This distinction exists to prevent unrefable streams being used in\n// regular fast streams that are unaware of refability\nconst _resourceBackingUnrefable = Symbol("[[resourceBackingUnrefable]]");\n/** @template R */\nclass ReadableStream {\n  /** @type {ReadableStreamDefaultController | ReadableByteStreamController} */\n  [_controller];\n  /** @type {boolean} */\n  [_detached];\n  /** @type {boolean} */\n  [_disturbed];\n  /** @type {ReadableStreamDefaultReader | ReadableStreamBYOBReader} */\n  [_reader];\n  /** @type {"readable" | "closed" | "errored"} */\n  [_state];\n  /** @type {any} */\n  [_storedError];\n  /** @type {{ rid: number\x2C autoClose: boolean } | null} */\n  [_resourceBacking] = null;\n\n  /**\n   * @param {UnderlyingSource<R>=} underlyingSource\n   * @param {QueuingStrategy<R>=} strategy\n   */\n  constructor(underlyingSource = undefined\x2C strategy = undefined) {\n    if (underlyingSource === _brand) {\n      this[_brand] = _brand;\n      return;\n    }\n\n    const prefix = "Failed to construct 'ReadableStream'";\n    underlyingSource = underlyingSource !== undefined\n      ? webidl.converters.object(\n        underlyingSource\x2C\n        prefix\x2C\n        "Argument 1"\x2C\n      )\n      : null;\n    strategy = strategy !== undefined\n      ? webidl.converters.QueuingStrategy(\n        strategy\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      )\n      : {};\n\n    const underlyingSourceDict = underlyingSource !== undefined\n      ? webidl.converters.UnderlyingSource(\n        underlyingSource\x2C\n        prefix\x2C\n        "underlyingSource"\x2C\n      )\n      : {};\n    this[_brand] = _brand;\n\n    initializeReadableStream(this);\n    if (underlyingSourceDict.type === "bytes") {\n      if (strategy.size !== undefined) {\n        throw new RangeError(\n          `${prefix}: When underlying source is "bytes"\x2C strategy.size must be undefined.`\x2C\n        );\n      }\n      const highWaterMark = extractHighWaterMark(strategy\x2C 0);\n      setUpReadableByteStreamControllerFromUnderlyingSource(\n        // @ts-ignore cannot easily assert this is ReadableStream<ArrayBuffer>\n        this\x2C\n        underlyingSource\x2C\n        underlyingSourceDict\x2C\n        highWaterMark\x2C\n      );\n    } else {\n      const sizeAlgorithm = extractSizeAlgorithm(strategy);\n      const highWaterMark = extractHighWaterMark(strategy\x2C 1);\n      setUpReadableStreamDefaultControllerFromUnderlyingSource(\n        this\x2C\n        underlyingSource\x2C\n        underlyingSourceDict\x2C\n        highWaterMark\x2C\n        sizeAlgorithm\x2C\n      );\n    }\n  }\n\n  static from(asyncIterable) {\n    webidl.requiredArguments(\n      arguments.length\x2C\n      1\x2C\n      "Failed to execute 'ReadableStream.from'"\x2C\n    );\n    asyncIterable = webidl.converters.any(asyncIterable);\n\n    const iterator = getAsyncOrSyncIterator(asyncIterable);\n\n    const stream = createReadableStream(noop\x2C async () => {\n      // deno-lint-ignore prefer-primordials\n      const res = await iterator.next();\n      if (!isObject(res)) {\n        throw new TypeError("iterator.next value is not an object");\n      }\n      if (res.done) {\n        readableStreamDefaultControllerClose(stream[_controller]);\n      } else {\n        readableStreamDefaultControllerEnqueue(\n          stream[_controller]\x2C\n          await res.value\x2C\n        );\n      }\n    }\x2C async (reason) => {\n      if (iterator.return == null) {\n        return undefined;\n      } else {\n        // deno-lint-ignore prefer-primordials\n        const res = await iterator.return(reason);\n        if (!isObject(res)) {\n          throw new TypeError("iterator.return value is not an object");\n        } else {\n          return undefined;\n        }\n      }\n    }\x2C 0);\n    return stream;\n  }\n\n  /** @returns {boolean} */\n  get locked() {\n    webidl.assertBranded(this\x2C ReadableStreamPrototype);\n    return isReadableStreamLocked(this);\n  }\n\n  /**\n   * @param {any=} reason\n   * @returns {Promise<void>}\n   */\n  cancel(reason = undefined) {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamPrototype);\n      if (reason !== undefined) {\n        reason = webidl.converters.any(reason);\n      }\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (isReadableStreamLocked(this)) {\n      return PromiseReject(\n        new TypeError("Cannot cancel a locked ReadableStream.")\x2C\n      );\n    }\n    return readableStreamCancel(this\x2C reason);\n  }\n\n  /**\n   * @param {ReadableStreamGetReaderOptions=} options\n   * @returns {ReadableStreamDefaultReader<R> | ReadableStreamBYOBReader}\n   */\n  getReader(options = undefined) {\n    webidl.assertBranded(this\x2C ReadableStreamPrototype);\n    const prefix = "Failed to execute 'getReader' on 'ReadableStream'";\n    if (options !== undefined) {\n      options = webidl.converters.ReadableStreamGetReaderOptions(\n        options\x2C\n        prefix\x2C\n        "Argument 1"\x2C\n      );\n    } else {\n      options = { __proto__: null };\n    }\n    if (options.mode === undefined) {\n      return acquireReadableStreamDefaultReader(this);\n    } else {\n      assert(options.mode === "byob");\n      return acquireReadableStreamBYOBReader(this);\n    }\n  }\n\n  /**\n   * @template T\n   * @param {{ readable: ReadableStream<T>\x2C writable: WritableStream<R> }} transform\n   * @param {PipeOptions=} options\n   * @returns {ReadableStream<T>}\n   */\n  pipeThrough(transform\x2C options = { __proto__: null }) {\n    webidl.assertBranded(this\x2C ReadableStreamPrototype);\n    const prefix = "Failed to execute 'pipeThrough' on 'ReadableStream'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    transform = webidl.converters.ReadableWritablePair(\n      transform\x2C\n      prefix\x2C\n      "Argument 1"\x2C\n    );\n    options = webidl.converters.StreamPipeOptions(\n      options\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n    const { readable\x2C writable } = transform;\n    const { preventClose\x2C preventAbort\x2C preventCancel\x2C signal } = options;\n    if (isReadableStreamLocked(this)) {\n      throw new TypeError("ReadableStream is already locked.");\n    }\n    if (isWritableStreamLocked(writable)) {\n      throw new TypeError("Target WritableStream is already locked.");\n    }\n    const promise = readableStreamPipeTo(\n      this\x2C\n      writable\x2C\n      preventClose\x2C\n      preventAbort\x2C\n      preventCancel\x2C\n      signal\x2C\n    );\n    setPromiseIsHandledToTrue(promise);\n    return readable;\n  }\n\n  /**\n   * @param {WritableStream<R>} destination\n   * @param {PipeOptions=} options\n   * @returns {Promise<void>}\n   */\n  pipeTo(destination\x2C options = { __proto__: null }) {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamPrototype);\n      const prefix = "Failed to execute 'pipeTo' on 'ReadableStream'";\n      webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n      destination = webidl.converters.WritableStream(\n        destination\x2C\n        prefix\x2C\n        "Argument 1"\x2C\n      );\n      options = webidl.converters.StreamPipeOptions(\n        options\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      );\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    const { preventClose\x2C preventAbort\x2C preventCancel\x2C signal } = options;\n    if (isReadableStreamLocked(this)) {\n      return PromiseReject(\n        new TypeError("ReadableStream is already locked.")\x2C\n      );\n    }\n    if (isWritableStreamLocked(destination)) {\n      return PromiseReject(\n        new TypeError("destination WritableStream is already locked.")\x2C\n      );\n    }\n    return readableStreamPipeTo(\n      this\x2C\n      destination\x2C\n      preventClose\x2C\n      preventAbort\x2C\n      preventCancel\x2C\n      signal\x2C\n    );\n  }\n\n  /** @returns {[ReadableStream<R>\x2C ReadableStream<R>]} */\n  tee() {\n    webidl.assertBranded(this\x2C ReadableStreamPrototype);\n    return readableStreamTee(this\x2C false);\n  }\n\n  // TODO(lucacasonato): should be moved to webidl crate\n  /**\n   * @param {ReadableStreamIteratorOptions=} options\n   * @returns {AsyncIterableIterator<R>}\n   */\n  values(options = undefined) {\n    webidl.assertBranded(this\x2C ReadableStreamPrototype);\n    let preventCancel = false;\n    if (options !== undefined) {\n      const prefix = "Failed to execute 'values' on 'ReadableStream'";\n      options = webidl.converters.ReadableStreamIteratorOptions(\n        options\x2C\n        prefix\x2C\n        "Argument 1"\x2C\n      );\n      preventCancel = options.preventCancel;\n    }\n    /** @type {AsyncIterableIterator<R>} */\n    const iterator = ObjectCreate(readableStreamAsyncIteratorPrototype);\n    const reader = acquireReadableStreamDefaultReader(this);\n    iterator[_reader] = reader;\n    iterator[_preventCancel] = preventCancel;\n    return iterator;\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ReadableStreamPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["locked"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\n// TODO(lucacasonato): should be moved to webidl crate\nReadableStream.prototype[SymbolAsyncIterator] = ReadableStream.prototype.values;\nObjectDefineProperty(ReadableStream.prototype\x2C SymbolAsyncIterator\x2C {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n});\n\nwebidl.configureInterface(ReadableStream);\nconst ReadableStreamPrototype = ReadableStream.prototype;\n\nfunction errorReadableStream(stream\x2C e) {\n  readableStreamDefaultControllerError(stream[_controller]\x2C e);\n}\n\n/** @template R */\nclass ReadableStreamDefaultReader {\n  /** @type {Deferred<void>} */\n  [_closedPromise];\n  /** @type {ReadableStream<R> | undefined} */\n  [_stream];\n  /** @type {ReadRequest[]} */\n  [_readRequests];\n\n  /** @param {ReadableStream<R>} stream */\n  constructor(stream) {\n    if (stream === _brand) {\n      this[_brand] = _brand;\n      return;\n    }\n    const prefix = "Failed to construct 'ReadableStreamDefaultReader'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    stream = webidl.converters.ReadableStream(stream\x2C prefix\x2C "Argument 1");\n    this[_brand] = _brand;\n    setUpReadableStreamDefaultReader(this\x2C stream);\n  }\n\n  /** @returns {Promise<ReadableStreamReadResult<R>>} */\n  read() {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamDefaultReaderPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("Reader has no associated stream.")\x2C\n      );\n    }\n    /** @type {Deferred<ReadableStreamReadResult<R>>} */\n    const promise = new Deferred();\n    /** @type {ReadRequest<R>} */\n    const readRequest = {\n      chunkSteps(chunk) {\n        promise.resolve({ value: chunk\x2C done: false });\n      }\x2C\n      closeSteps() {\n        promise.resolve({ value: undefined\x2C done: true });\n      }\x2C\n      errorSteps(e) {\n        promise.reject(e);\n      }\x2C\n    };\n    readableStreamDefaultReaderRead(this\x2C readRequest);\n    return promise.promise;\n  }\n\n  /** @returns {void} */\n  releaseLock() {\n    webidl.assertBranded(this\x2C ReadableStreamDefaultReaderPrototype);\n    if (this[_stream] === undefined) {\n      return;\n    }\n    readableStreamDefaultReaderRelease(this);\n  }\n\n  get closed() {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamDefaultReaderPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    return this[_closedPromise].promise;\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  cancel(reason = undefined) {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamDefaultReaderPrototype);\n      if (reason !== undefined) {\n        reason = webidl.converters.any(reason);\n      }\n    } catch (err) {\n      return PromiseReject(err);\n    }\n\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("Reader has no associated stream.")\x2C\n      );\n    }\n    return readableStreamReaderGenericCancel(this\x2C reason);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ReadableStreamDefaultReaderPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["closed"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(ReadableStreamDefaultReader);\nconst ReadableStreamDefaultReaderPrototype =\n  ReadableStreamDefaultReader.prototype;\n\n/** @template R */\nclass ReadableStreamBYOBReader {\n  /** @type {Deferred<void>} */\n  [_closedPromise];\n  /** @type {ReadableStream<R> | undefined} */\n  [_stream];\n  /** @type {ReadIntoRequest[]} */\n  [_readIntoRequests];\n\n  /** @param {ReadableStream<R>} stream */\n  constructor(stream) {\n    if (stream === _brand) {\n      this[_brand] = _brand;\n      return;\n    }\n    const prefix = "Failed to construct 'ReadableStreamBYOBReader'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    stream = webidl.converters.ReadableStream(stream\x2C prefix\x2C "Argument 1");\n    this[_brand] = _brand;\n    setUpReadableStreamBYOBReader(this\x2C stream);\n  }\n\n  /**\n   * @param {ArrayBufferView} view\n   * @param {ReadableStreamBYOBReaderReadOptions} options\n   *  @returns {Promise<ReadableStreamBYOBReadResult>}\n   */\n  read(view\x2C options = { __proto__: null }) {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamBYOBReaderPrototype);\n      const prefix = "Failed to execute 'read' on 'ReadableStreamBYOBReader'";\n      view = webidl.converters.ArrayBufferView(view\x2C prefix\x2C "Argument 1");\n      options = webidl.converters.ReadableStreamBYOBReaderReadOptions(\n        options\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      );\n    } catch (err) {\n      return PromiseReject(err);\n    }\n\n    let buffer\x2C byteLength;\n    if (isTypedArray(view)) {\n      buffer = TypedArrayPrototypeGetBuffer(/** @type {Uint8Array} */ (view));\n      byteLength = TypedArrayPrototypeGetByteLength(\n        /** @type {Uint8Array} */ (view)\x2C\n      );\n    } else {\n      buffer = DataViewPrototypeGetBuffer(/** @type {DataView} */ (view));\n      byteLength = DataViewPrototypeGetByteLength(\n        /** @type {DataView} */ (view)\x2C\n      );\n    }\n    if (byteLength === 0) {\n      return PromiseReject(\n        new TypeError("view must have non-zero byteLength")\x2C\n      );\n    }\n\n    if (getArrayBufferByteLength(buffer) === 0) {\n      if (isDetachedBuffer(buffer)) {\n        return PromiseReject(\n          new TypeError("view's buffer has been detached")\x2C\n        );\n      }\n\n      return PromiseReject(\n        new TypeError("view's buffer must have non-zero byteLength")\x2C\n      );\n    }\n\n    if (options.min === 0) {\n      return PromiseReject(new TypeError("options.min must be non-zero"));\n    }\n    if (isTypedArray(view)) {\n      if (options.min > TypedArrayPrototypeGetLength(view)) {\n        return PromiseReject(\n          new RangeError("options.min must be smaller or equal to view's size")\x2C\n        );\n      }\n    } else {\n      if (options.min > DataViewPrototypeGetByteLength(view)) {\n        return PromiseReject(\n          new RangeError("options.min must be smaller or equal to view's size")\x2C\n        );\n      }\n    }\n\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("Reader has no associated stream.")\x2C\n      );\n    }\n    /** @type {Deferred<ReadableStreamBYOBReadResult>} */\n    const promise = new Deferred();\n    /** @type {ReadIntoRequest} */\n    const readIntoRequest = {\n      chunkSteps(chunk) {\n        promise.resolve({ value: chunk\x2C done: false });\n      }\x2C\n      closeSteps(chunk) {\n        promise.resolve({ value: chunk\x2C done: true });\n      }\x2C\n      errorSteps(e) {\n        promise.reject(e);\n      }\x2C\n    };\n    readableStreamBYOBReaderRead(this\x2C view\x2C options.min\x2C readIntoRequest);\n    return promise.promise;\n  }\n\n  /** @returns {void} */\n  releaseLock() {\n    webidl.assertBranded(this\x2C ReadableStreamBYOBReaderPrototype);\n    if (this[_stream] === undefined) {\n      return;\n    }\n    readableStreamBYOBReaderRelease(this);\n  }\n\n  get closed() {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamBYOBReaderPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    return this[_closedPromise].promise;\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  cancel(reason = undefined) {\n    try {\n      webidl.assertBranded(this\x2C ReadableStreamBYOBReaderPrototype);\n      if (reason !== undefined) {\n        reason = webidl.converters.any(reason);\n      }\n    } catch (err) {\n      return PromiseReject(err);\n    }\n\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("Reader has no associated stream.")\x2C\n      );\n    }\n    return readableStreamReaderGenericCancel(this\x2C reason);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ReadableStreamBYOBReaderPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["closed"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(ReadableStreamBYOBReader);\nconst ReadableStreamBYOBReaderPrototype = ReadableStreamBYOBReader.prototype;\n\nclass ReadableStreamBYOBRequest {\n  /** @type {ReadableByteStreamController} */\n  [_controller];\n  /** @type {ArrayBufferView | null} */\n  [_view];\n\n  /** @returns {ArrayBufferView | null} */\n  get view() {\n    webidl.assertBranded(this\x2C ReadableStreamBYOBRequestPrototype);\n    return this[_view];\n  }\n\n  constructor(brand = undefined) {\n    if (brand !== _brand) {\n      webidl.illegalConstructor();\n    }\n    this[_brand] = _brand;\n  }\n\n  respond(bytesWritten) {\n    webidl.assertBranded(this\x2C ReadableStreamBYOBRequestPrototype);\n    const prefix = "Failed to execute 'respond' on 'ReadableStreamBYOBRequest'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    bytesWritten = webidl.converters["unsigned long long"](\n      bytesWritten\x2C\n      prefix\x2C\n      "Argument 1"\x2C\n      {\n        enforceRange: true\x2C\n      }\x2C\n    );\n\n    if (this[_controller] === undefined) {\n      throw new TypeError("This BYOB request has been invalidated");\n    }\n\n    let buffer\x2C byteLength;\n    if (isTypedArray(this[_view])) {\n      buffer = TypedArrayPrototypeGetBuffer(this[_view]);\n      byteLength = TypedArrayPrototypeGetByteLength(this[_view]);\n    } else {\n      buffer = DataViewPrototypeGetBuffer(this[_view]);\n      byteLength = DataViewPrototypeGetByteLength(this[_view]);\n    }\n    if (isDetachedBuffer(buffer)) {\n      throw new TypeError(\n        "The BYOB request's buffer has been detached and so cannot be used as a response"\x2C\n      );\n    }\n    assert(byteLength > 0);\n    assert(getArrayBufferByteLength(buffer) > 0);\n    readableByteStreamControllerRespond(this[_controller]\x2C bytesWritten);\n  }\n\n  respondWithNewView(view) {\n    webidl.assertBranded(this\x2C ReadableStreamBYOBRequestPrototype);\n    const prefix =\n      "Failed to execute 'respondWithNewView' on 'ReadableStreamBYOBRequest'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    view = webidl.converters.ArrayBufferView(view\x2C prefix\x2C "Argument 1");\n\n    if (this[_controller] === undefined) {\n      throw new TypeError("This BYOB request has been invalidated");\n    }\n\n    let buffer;\n    if (isTypedArray(view)) {\n      buffer = TypedArrayPrototypeGetBuffer(view);\n    } else {\n      buffer = DataViewPrototypeGetBuffer(view);\n    }\n    if (isDetachedBuffer(buffer)) {\n      throw new TypeError(\n        "The given view's buffer has been detached and so cannot be used as a response"\x2C\n      );\n    }\n    readableByteStreamControllerRespondWithNewView(this[_controller]\x2C view);\n  }\n}\n\nwebidl.configureInterface(ReadableStreamBYOBRequest);\nconst ReadableStreamBYOBRequestPrototype = ReadableStreamBYOBRequest.prototype;\n\nclass ReadableByteStreamController {\n  /** @type {number | undefined} */\n  [_autoAllocateChunkSize];\n  /** @type {ReadableStreamBYOBRequest | null} */\n  [_byobRequest];\n  /** @type {(reason: any) => Promise<void>} */\n  [_cancelAlgorithm];\n  /** @type {boolean} */\n  [_closeRequested];\n  /** @type {boolean} */\n  [_pullAgain];\n  /** @type {(controller: this) => Promise<void>} */\n  [_pullAlgorithm];\n  /** @type {boolean} */\n  [_pulling];\n  /** @type {PullIntoDescriptor[]} */\n  [_pendingPullIntos];\n  /** @type {ReadableByteStreamQueueEntry[]} */\n  [_queue];\n  /** @type {number} */\n  [_queueTotalSize];\n  /** @type {boolean} */\n  [_started];\n  /** @type {number} */\n  [_strategyHWM];\n  /** @type {ReadableStream<ArrayBuffer>} */\n  [_stream];\n\n  constructor(brand = undefined) {\n    if (brand !== _brand) {\n      webidl.illegalConstructor();\n    }\n    this[_brand] = _brand;\n  }\n\n  /** @returns {ReadableStreamBYOBRequest | null} */\n  get byobRequest() {\n    webidl.assertBranded(this\x2C ReadableByteStreamControllerPrototype);\n    return readableByteStreamControllerGetBYOBRequest(this);\n  }\n\n  /** @returns {number | null} */\n  get desiredSize() {\n    webidl.assertBranded(this\x2C ReadableByteStreamControllerPrototype);\n    return readableByteStreamControllerGetDesiredSize(this);\n  }\n\n  /** @returns {void} */\n  close() {\n    webidl.assertBranded(this\x2C ReadableByteStreamControllerPrototype);\n    if (this[_closeRequested] === true) {\n      throw new TypeError("Closed already requested.");\n    }\n    if (this[_stream][_state] !== "readable") {\n      throw new TypeError(\n        "ReadableByteStreamController's stream is not in a readable state."\x2C\n      );\n    }\n    readableByteStreamControllerClose(this);\n  }\n\n  /**\n   * @param {ArrayBufferView} chunk\n   * @returns {void}\n   */\n  enqueue(chunk) {\n    webidl.assertBranded(this\x2C ReadableByteStreamControllerPrototype);\n    const prefix =\n      "Failed to execute 'enqueue' on 'ReadableByteStreamController'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    const arg1 = "Argument 1";\n    chunk = webidl.converters.ArrayBufferView(chunk\x2C prefix\x2C arg1);\n    let buffer\x2C byteLength;\n    if (isTypedArray(chunk)) {\n      buffer = TypedArrayPrototypeGetBuffer(/** @type {Uint8Array} */ (chunk));\n      byteLength = TypedArrayPrototypeGetByteLength(\n        /** @type {Uint8Array} */ (chunk)\x2C\n      );\n    } else {\n      buffer = DataViewPrototypeGetBuffer(/** @type {DataView} */ (chunk));\n      byteLength = DataViewPrototypeGetByteLength(\n        /** @type {DataView} */ (chunk)\x2C\n      );\n    }\n    if (byteLength === 0) {\n      throw webidl.makeException(\n        TypeError\x2C\n        "length must be non-zero"\x2C\n        prefix\x2C\n        arg1\x2C\n      );\n    }\n    if (getArrayBufferByteLength(buffer) === 0) {\n      throw webidl.makeException(\n        TypeError\x2C\n        "buffer length must be non-zero"\x2C\n        prefix\x2C\n        arg1\x2C\n      );\n    }\n    if (this[_closeRequested] === true) {\n      throw new TypeError(\n        "Cannot enqueue chunk after a close has been requested."\x2C\n      );\n    }\n    if (this[_stream][_state] !== "readable") {\n      throw new TypeError(\n        "Cannot enqueue chunk when underlying stream is not readable."\x2C\n      );\n    }\n    return readableByteStreamControllerEnqueue(this\x2C chunk);\n  }\n\n  /**\n   * @param {any=} e\n   * @returns {void}\n   */\n  error(e = undefined) {\n    webidl.assertBranded(this\x2C ReadableByteStreamControllerPrototype);\n    if (e !== undefined) {\n      e = webidl.converters.any(e);\n    }\n    readableByteStreamControllerError(this\x2C e);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ReadableByteStreamControllerPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["desiredSize"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  [_cancelSteps](reason) {\n    readableByteStreamControllerClearPendingPullIntos(this);\n    resetQueue(this);\n    const result = this[_cancelAlgorithm](reason);\n    readableByteStreamControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /**\n   * @param {ReadRequest<ArrayBuffer>} readRequest\n   * @returns {void}\n   */\n  [_pullSteps](readRequest) {\n    /** @type {ReadableStream<ArrayBuffer>} */\n    const stream = this[_stream];\n    assert(readableStreamHasDefaultReader(stream));\n    if (this[_queueTotalSize] > 0) {\n      assert(readableStreamGetNumReadRequests(stream) === 0);\n      readableByteStreamControllerFillReadRequestFromQueue(this\x2C readRequest);\n      return;\n    }\n    const autoAllocateChunkSize = this[_autoAllocateChunkSize];\n    if (autoAllocateChunkSize !== undefined) {\n      let buffer;\n      try {\n        buffer = new ArrayBuffer(autoAllocateChunkSize);\n      } catch (e) {\n        readRequest.errorSteps(e);\n        return;\n      }\n      /** @type {PullIntoDescriptor} */\n      const pullIntoDescriptor = {\n        buffer\x2C\n        bufferByteLength: autoAllocateChunkSize\x2C\n        byteOffset: 0\x2C\n        byteLength: autoAllocateChunkSize\x2C\n        bytesFilled: 0\x2C\n        elementSize: 1\x2C\n        minimumFill: 1\x2C\n        viewConstructor: Uint8Array\x2C\n        readerType: "default"\x2C\n      };\n      ArrayPrototypePush(this[_pendingPullIntos]\x2C pullIntoDescriptor);\n    }\n    readableStreamAddReadRequest(stream\x2C readRequest);\n    readableByteStreamControllerCallPullIfNeeded(this);\n  }\n\n  [_releaseSteps]() {\n    if (this[_pendingPullIntos].length !== 0) {\n      /** @type {PullIntoDescriptor} */\n      const firstPendingPullInto = this[_pendingPullIntos][0];\n      firstPendingPullInto.readerType = "none";\n      this[_pendingPullIntos] = [firstPendingPullInto];\n    }\n  }\n}\n\nwebidl.configureInterface(ReadableByteStreamController);\nconst ReadableByteStreamControllerPrototype =\n  ReadableByteStreamController.prototype;\n\n/** @template R */\nclass ReadableStreamDefaultController {\n  /** @type {(reason: any) => Promise<void>} */\n  [_cancelAlgorithm];\n  /** @type {boolean} */\n  [_closeRequested];\n  /** @type {boolean} */\n  [_pullAgain];\n  /** @type {(controller: this) => Promise<void>} */\n  [_pullAlgorithm];\n  /** @type {boolean} */\n  [_pulling];\n  /** @type {Array<ValueWithSize<R>>} */\n  [_queue];\n  /** @type {number} */\n  [_queueTotalSize];\n  /** @type {boolean} */\n  [_started];\n  /** @type {number} */\n  [_strategyHWM];\n  /** @type {(chunk: R) => number} */\n  [_strategySizeAlgorithm];\n  /** @type {ReadableStream<R>} */\n  [_stream];\n\n  constructor(brand = undefined) {\n    if (brand !== _brand) {\n      webidl.illegalConstructor();\n    }\n    this[_brand] = _brand;\n  }\n\n  /** @returns {number | null} */\n  get desiredSize() {\n    webidl.assertBranded(this\x2C ReadableStreamDefaultControllerPrototype);\n    return readableStreamDefaultControllerGetDesiredSize(this);\n  }\n\n  /** @returns {void} */\n  close() {\n    webidl.assertBranded(this\x2C ReadableStreamDefaultControllerPrototype);\n    if (readableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError("The stream controller cannot close or enqueue.");\n    }\n    readableStreamDefaultControllerClose(this);\n  }\n\n  /**\n   * @param {R} chunk\n   * @returns {void}\n   */\n  enqueue(chunk = undefined) {\n    webidl.assertBranded(this\x2C ReadableStreamDefaultControllerPrototype);\n    if (chunk !== undefined) {\n      chunk = webidl.converters.any(chunk);\n    }\n    if (readableStreamDefaultControllerCanCloseOrEnqueue(this) === false) {\n      throw new TypeError("The stream controller cannot close or enqueue.");\n    }\n    readableStreamDefaultControllerEnqueue(this\x2C chunk);\n  }\n\n  /**\n   * @param {any=} e\n   * @returns {void}\n   */\n  error(e = undefined) {\n    webidl.assertBranded(this\x2C ReadableStreamDefaultControllerPrototype);\n    if (e !== undefined) {\n      e = webidl.converters.any(e);\n    }\n    readableStreamDefaultControllerError(this\x2C e);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          ReadableStreamDefaultControllerPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["desiredSize"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  [_cancelSteps](reason) {\n    resetQueue(this);\n    const result = this[_cancelAlgorithm](reason);\n    readableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  /**\n   * @param {ReadRequest<R>} readRequest\n   * @returns {void}\n   */\n  [_pullSteps](readRequest) {\n    const stream = this[_stream];\n    if (this[_queue].size) {\n      const chunk = dequeueValue(this);\n      if (this[_closeRequested] && this[_queue].size === 0) {\n        readableStreamDefaultControllerClearAlgorithms(this);\n        readableStreamClose(stream);\n      } else {\n        readableStreamDefaultControllerCallPullIfNeeded(this);\n      }\n      readRequest.chunkSteps(chunk);\n    } else {\n      readableStreamAddReadRequest(stream\x2C readRequest);\n      readableStreamDefaultControllerCallPullIfNeeded(this);\n    }\n  }\n\n  [_releaseSteps]() {\n    return;\n  }\n}\n\nwebidl.configureInterface(ReadableStreamDefaultController);\nconst ReadableStreamDefaultControllerPrototype =\n  ReadableStreamDefaultController.prototype;\n\n/**\n * @template I\n * @template O\n */\nclass TransformStream {\n  /** @type {boolean} */\n  [_backpressure];\n  /** @type {Deferred<void>} */\n  [_backpressureChangePromise];\n  /** @type {TransformStreamDefaultController<O>} */\n  [_controller];\n  /** @type {boolean} */\n  [_detached];\n  /** @type {ReadableStream<O>} */\n  [_readable];\n  /** @type {WritableStream<I>} */\n  [_writable];\n\n  /**\n   * @param {Transformer<I\x2C O>} transformer\n   * @param {QueuingStrategy<I>} writableStrategy\n   * @param {QueuingStrategy<O>} readableStrategy\n   */\n  constructor(\n    transformer = undefined\x2C\n    writableStrategy = { __proto__: null }\x2C\n    readableStrategy = { __proto__: null }\x2C\n  ) {\n    const prefix = "Failed to construct 'TransformStream'";\n    if (transformer !== undefined) {\n      transformer = webidl.converters.object(transformer\x2C prefix\x2C "Argument 1");\n    }\n    writableStrategy = webidl.converters.QueuingStrategy(\n      writableStrategy\x2C\n      prefix\x2C\n      "Argument 2"\x2C\n    );\n    readableStrategy = webidl.converters.QueuingStrategy(\n      readableStrategy\x2C\n      prefix\x2C\n      "Argument 3"\x2C\n    );\n    this[_brand] = _brand;\n    if (transformer === undefined) {\n      transformer = null;\n    }\n    const transformerDict = webidl.converters.Transformer(\n      transformer\x2C\n      prefix\x2C\n      "transformer"\x2C\n    );\n    if (transformerDict.readableType !== undefined) {\n      throw new RangeError(\n        `${prefix}: readableType transformers not supported.`\x2C\n      );\n    }\n    if (transformerDict.writableType !== undefined) {\n      throw new RangeError(\n        `${prefix}: writableType transformers not supported.`\x2C\n      );\n    }\n    const readableHighWaterMark = extractHighWaterMark(readableStrategy\x2C 0);\n    const readableSizeAlgorithm = extractSizeAlgorithm(readableStrategy);\n    const writableHighWaterMark = extractHighWaterMark(writableStrategy\x2C 1);\n    const writableSizeAlgorithm = extractSizeAlgorithm(writableStrategy);\n    /** @type {Deferred<void>} */\n    const startPromise = new Deferred();\n    initializeTransformStream(\n      this\x2C\n      startPromise\x2C\n      writableHighWaterMark\x2C\n      writableSizeAlgorithm\x2C\n      readableHighWaterMark\x2C\n      readableSizeAlgorithm\x2C\n    );\n    setUpTransformStreamDefaultControllerFromTransformer(\n      this\x2C\n      transformer\x2C\n      transformerDict\x2C\n    );\n    if (transformerDict.start) {\n      startPromise.resolve(\n        webidl.invokeCallbackFunction(\n          transformerDict.start\x2C\n          [this[_controller]]\x2C\n          transformer\x2C\n          webidl.converters.any\x2C\n          "Failed to execute 'start' on 'TransformStreamDefaultController'"\x2C\n        )\x2C\n      );\n    } else {\n      startPromise.resolve(undefined);\n    }\n  }\n\n  /** @returns {ReadableStream<O>} */\n  get readable() {\n    webidl.assertBranded(this\x2C TransformStreamPrototype);\n    return this[_readable];\n  }\n\n  /** @returns {WritableStream<I>} */\n  get writable() {\n    webidl.assertBranded(this\x2C TransformStreamPrototype);\n    return this[_writable];\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          TransformStreamPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["readable"\x2C "writable"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(TransformStream);\nconst TransformStreamPrototype = TransformStream.prototype;\n\n/** @template O */\nclass TransformStreamDefaultController {\n  /** @type {(reason: any) => Promise<void>} */\n  [_cancelAlgorithm];\n  /** @type {Promise<void> | undefined} */\n  [_finishPromise];\n  /** @type {(controller: this) => Promise<void>} */\n  [_flushAlgorithm];\n  /** @type {TransformStream<O>} */\n  [_stream];\n  /** @type {(chunk: O\x2C controller: this) => Promise<void>} */\n  [_transformAlgorithm];\n\n  constructor(brand = undefined) {\n    if (brand !== _brand) {\n      webidl.illegalConstructor();\n    }\n    this[_brand] = _brand;\n  }\n\n  /** @returns {number | null} */\n  get desiredSize() {\n    webidl.assertBranded(this\x2C TransformStreamDefaultController.prototype);\n    const readableController = this[_stream][_readable][_controller];\n    return readableStreamDefaultControllerGetDesiredSize(\n      /** @type {ReadableStreamDefaultController<O>} */ readableController\x2C\n    );\n  }\n\n  /**\n   * @param {O} chunk\n   * @returns {void}\n   */\n  enqueue(chunk = undefined) {\n    webidl.assertBranded(this\x2C TransformStreamDefaultController.prototype);\n    if (chunk !== undefined) {\n      chunk = webidl.converters.any(chunk);\n    }\n    transformStreamDefaultControllerEnqueue(this\x2C chunk);\n  }\n\n  /**\n   * @param {any=} reason\n   * @returns {void}\n   */\n  error(reason = undefined) {\n    webidl.assertBranded(this\x2C TransformStreamDefaultController.prototype);\n    if (reason !== undefined) {\n      reason = webidl.converters.any(reason);\n    }\n    transformStreamDefaultControllerError(this\x2C reason);\n  }\n\n  /** @returns {void} */\n  terminate() {\n    webidl.assertBranded(this\x2C TransformStreamDefaultControllerPrototype);\n    transformStreamDefaultControllerTerminate(this);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          TransformStreamDefaultControllerPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["desiredSize"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(TransformStreamDefaultController);\nconst TransformStreamDefaultControllerPrototype =\n  TransformStreamDefaultController.prototype;\n\n/** @template W */\nclass WritableStream {\n  /** @type {boolean} */\n  [_backpressure];\n  /** @type {Deferred<void> | undefined} */\n  [_closeRequest];\n  /** @type {WritableStreamDefaultController<W>} */\n  [_controller];\n  /** @type {boolean} */\n  [_detached];\n  /** @type {Deferred<void> | undefined} */\n  [_inFlightWriteRequest];\n  /** @type {Deferred<void> | undefined} */\n  [_inFlightCloseRequest];\n  /** @type {PendingAbortRequest | undefined} */\n  [_pendingAbortRequest];\n  /** @type {"writable" | "closed" | "erroring" | "errored"} */\n  [_state];\n  /** @type {any} */\n  [_storedError];\n  /** @type {WritableStreamDefaultWriter<W>} */\n  [_writer];\n  /** @type {Deferred<void>[]} */\n  [_writeRequests];\n\n  /**\n   * @param {UnderlyingSink<W>=} underlyingSink\n   * @param {QueuingStrategy<W>=} strategy\n   */\n  constructor(underlyingSink = undefined\x2C strategy = undefined) {\n    if (underlyingSink === _brand) {\n      this[_brand] = _brand;\n      return;\n    }\n    const prefix = "Failed to construct 'WritableStream'";\n    if (underlyingSink !== undefined) {\n      underlyingSink = webidl.converters.object(\n        underlyingSink\x2C\n        prefix\x2C\n        "Argument 1"\x2C\n      );\n    }\n    strategy = strategy !== undefined\n      ? webidl.converters.QueuingStrategy(\n        strategy\x2C\n        prefix\x2C\n        "Argument 2"\x2C\n      )\n      : {};\n    this[_brand] = _brand;\n    if (underlyingSink === undefined) {\n      underlyingSink = null;\n    }\n    const underlyingSinkDict = webidl.converters.UnderlyingSink(\n      underlyingSink\x2C\n      prefix\x2C\n      "underlyingSink"\x2C\n    );\n    if (underlyingSinkDict.type != null) {\n      throw new RangeError(\n        `${prefix}: WritableStream does not support 'type' in the underlying sink.`\x2C\n      );\n    }\n    initializeWritableStream(this);\n    const sizeAlgorithm = extractSizeAlgorithm(strategy);\n    const highWaterMark = extractHighWaterMark(strategy\x2C 1);\n    setUpWritableStreamDefaultControllerFromUnderlyingSink(\n      this\x2C\n      underlyingSink\x2C\n      underlyingSinkDict\x2C\n      highWaterMark\x2C\n      sizeAlgorithm\x2C\n    );\n  }\n\n  /** @returns {boolean} */\n  get locked() {\n    webidl.assertBranded(this\x2C WritableStreamPrototype);\n    return isWritableStreamLocked(this);\n  }\n\n  /**\n   * @param {any=} reason\n   * @returns {Promise<void>}\n   */\n  abort(reason = undefined) {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (reason !== undefined) {\n      reason = webidl.converters.any(reason);\n    }\n    if (isWritableStreamLocked(this)) {\n      return PromiseReject(\n        new TypeError(\n          "The writable stream is locked\x2C therefore cannot be aborted."\x2C\n        )\x2C\n      );\n    }\n    return writableStreamAbort(this\x2C reason);\n  }\n\n  /** @returns {Promise<void>} */\n  close() {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (isWritableStreamLocked(this)) {\n      return PromiseReject(\n        new TypeError(\n          "The writable stream is locked\x2C therefore cannot be closed."\x2C\n        )\x2C\n      );\n    }\n    if (writableStreamCloseQueuedOrInFlight(this) === true) {\n      return PromiseReject(\n        new TypeError("The writable stream is already closing.")\x2C\n      );\n    }\n    return writableStreamClose(this);\n  }\n\n  /** @returns {WritableStreamDefaultWriter<W>} */\n  getWriter() {\n    webidl.assertBranded(this\x2C WritableStreamPrototype);\n    return acquireWritableStreamDefaultWriter(this);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          WritableStreamPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["locked"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(WritableStream);\nconst WritableStreamPrototype = WritableStream.prototype;\n\n/** @template W */\nclass WritableStreamDefaultWriter {\n  /** @type {Deferred<void>} */\n  [_closedPromise];\n\n  /** @type {Deferred<void>} */\n  [_readyPromise];\n\n  /** @type {WritableStream<W>} */\n  [_stream];\n\n  /**\n   * @param {WritableStream<W>} stream\n   */\n  constructor(stream) {\n    const prefix = "Failed to construct 'WritableStreamDefaultWriter'";\n    webidl.requiredArguments(arguments.length\x2C 1\x2C prefix);\n    stream = webidl.converters.WritableStream(stream\x2C prefix\x2C "Argument 1");\n    this[_brand] = _brand;\n    setUpWritableStreamDefaultWriter(this\x2C stream);\n  }\n\n  /** @returns {Promise<void>} */\n  get closed() {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    return this[_closedPromise].promise;\n  }\n\n  /** @returns {number} */\n  get desiredSize() {\n    webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    if (this[_stream] === undefined) {\n      throw new TypeError(\n        "A writable stream is not associated with the writer."\x2C\n      );\n    }\n    return writableStreamDefaultWriterGetDesiredSize(this);\n  }\n\n  /** @returns {Promise<void>} */\n  get ready() {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    return this[_readyPromise].promise;\n  }\n\n  /**\n   * @param {any} reason\n   * @returns {Promise<void>}\n   */\n  abort(reason = undefined) {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (reason !== undefined) {\n      reason = webidl.converters.any(reason);\n    }\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("A writable stream is not associated with the writer.")\x2C\n      );\n    }\n    return writableStreamDefaultWriterAbort(this\x2C reason);\n  }\n\n  /** @returns {Promise<void>} */\n  close() {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    const stream = this[_stream];\n    if (stream === undefined) {\n      return PromiseReject(\n        new TypeError("A writable stream is not associated with the writer.")\x2C\n      );\n    }\n    if (writableStreamCloseQueuedOrInFlight(stream) === true) {\n      return PromiseReject(\n        new TypeError("The associated stream is already closing.")\x2C\n      );\n    }\n    return writableStreamDefaultWriterClose(this);\n  }\n\n  /** @returns {void} */\n  releaseLock() {\n    webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n    const stream = this[_stream];\n    if (stream === undefined) {\n      return;\n    }\n    assert(stream[_writer] !== undefined);\n    writableStreamDefaultWriterRelease(this);\n  }\n\n  /**\n   * @param {W} chunk\n   * @returns {Promise<void>}\n   */\n  write(chunk = undefined) {\n    try {\n      webidl.assertBranded(this\x2C WritableStreamDefaultWriterPrototype);\n      if (chunk !== undefined) {\n        chunk = webidl.converters.any(chunk);\n      }\n    } catch (err) {\n      return PromiseReject(err);\n    }\n    if (this[_stream] === undefined) {\n      return PromiseReject(\n        new TypeError("A writable stream is not associate with the writer.")\x2C\n      );\n    }\n    return writableStreamDefaultWriterWrite(this\x2C chunk);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          WritableStreamDefaultWriterPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: [\n          "closed"\x2C\n          "desiredSize"\x2C\n          "ready"\x2C\n        ]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n}\n\nwebidl.configureInterface(WritableStreamDefaultWriter);\nconst WritableStreamDefaultWriterPrototype =\n  WritableStreamDefaultWriter.prototype;\n\n/** @template W */\nclass WritableStreamDefaultController {\n  /** @type {(reason?: any) => Promise<void>} */\n  [_abortAlgorithm];\n  /** @type {() => Promise<void>} */\n  [_closeAlgorithm];\n  /** @type {ValueWithSize<W | _close>[]} */\n  [_queue];\n  /** @type {number} */\n  [_queueTotalSize];\n  /** @type {boolean} */\n  [_started];\n  /** @type {number} */\n  [_strategyHWM];\n  /** @type {(chunk: W) => number} */\n  [_strategySizeAlgorithm];\n  /** @type {WritableStream<W>} */\n  [_stream];\n  /** @type {(chunk: W\x2C controller: this) => Promise<void>} */\n  [_writeAlgorithm];\n  /** @type {AbortSignal} */\n  [_signal];\n\n  get signal() {\n    webidl.assertBranded(this\x2C WritableStreamDefaultControllerPrototype);\n    return this[_signal];\n  }\n\n  constructor(brand = undefined) {\n    if (brand !== _brand) {\n      webidl.illegalConstructor();\n    }\n    this[_brand] = _brand;\n  }\n\n  /**\n   * @param {any=} e\n   * @returns {void}\n   */\n  error(e = undefined) {\n    webidl.assertBranded(this\x2C WritableStreamDefaultControllerPrototype);\n    if (e !== undefined) {\n      e = webidl.converters.any(e);\n    }\n    const state = this[_stream][_state];\n    if (state !== "writable") {\n      return;\n    }\n    writableStreamDefaultControllerError(this\x2C e);\n  }\n\n  [SymbolFor("Deno.privateCustomInspect")](inspect\x2C inspectOptions) {\n    return inspect(\n      createFilteredInspectProxy({\n        object: this\x2C\n        evaluate: ObjectPrototypeIsPrototypeOf(\n          WritableStreamDefaultControllerPrototype\x2C\n          this\x2C\n        )\x2C\n        keys: ["signal"]\x2C\n      })\x2C\n      inspectOptions\x2C\n    );\n  }\n\n  /**\n   * @param {any=} reason\n   * @returns {Promise<void>}\n   */\n  [_abortSteps](reason) {\n    const result = this[_abortAlgorithm](reason);\n    writableStreamDefaultControllerClearAlgorithms(this);\n    return result;\n  }\n\n  [_errorSteps]() {\n    resetQueue(this);\n  }\n}\n\nwebidl.configureInterface(WritableStreamDefaultController);\nconst WritableStreamDefaultControllerPrototype =\n  WritableStreamDefaultController.prototype;\n\n/**\n * @param {ReadableStream} stream\n */\nfunction createProxy(stream) {\n  return stream.pipeThrough(new TransformStream());\n}\n\nwebidl.converters.ReadableStream = webidl\n  .createInterfaceConverter("ReadableStream"\x2C ReadableStream.prototype);\nwebidl.converters.WritableStream = webidl\n  .createInterfaceConverter("WritableStream"\x2C WritableStream.prototype);\n\nwebidl.converters.ReadableStreamType = webidl.createEnumConverter(\n  "ReadableStreamType"\x2C\n  ["bytes"]\x2C\n);\n\nwebidl.converters.UnderlyingSource = webidl\n  .createDictionaryConverter("UnderlyingSource"\x2C [\n    {\n      key: "start"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "pull"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "cancel"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "type"\x2C\n      converter: webidl.converters.ReadableStreamType\x2C\n    }\x2C\n    {\n      key: "autoAllocateChunkSize"\x2C\n      converter: (V\x2C prefix\x2C context\x2C opts) =>\n        webidl.converters["unsigned long long"](V\x2C prefix\x2C context\x2C {\n          ...opts\x2C\n          enforceRange: true\x2C\n        })\x2C\n    }\x2C\n  ]);\nwebidl.converters.UnderlyingSink = webidl\n  .createDictionaryConverter("UnderlyingSink"\x2C [\n    {\n      key: "start"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "write"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "close"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "abort"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "type"\x2C\n      converter: webidl.converters.any\x2C\n    }\x2C\n  ]);\nwebidl.converters.Transformer = webidl\n  .createDictionaryConverter("Transformer"\x2C [\n    {\n      key: "start"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "transform"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "flush"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "cancel"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n    {\n      key: "readableType"\x2C\n      converter: webidl.converters.any\x2C\n    }\x2C\n    {\n      key: "writableType"\x2C\n      converter: webidl.converters.any\x2C\n    }\x2C\n  ]);\nwebidl.converters.QueuingStrategy = webidl\n  .createDictionaryConverter("QueuingStrategy"\x2C [\n    {\n      key: "highWaterMark"\x2C\n      converter: webidl.converters["unrestricted double"]\x2C\n    }\x2C\n    {\n      key: "size"\x2C\n      converter: webidl.converters.Function\x2C\n    }\x2C\n  ]);\nwebidl.converters.QueuingStrategyInit = webidl\n  .createDictionaryConverter("QueuingStrategyInit"\x2C [\n    {\n      key: "highWaterMark"\x2C\n      converter: webidl.converters["unrestricted double"]\x2C\n      required: true\x2C\n    }\x2C\n  ]);\n\nwebidl.converters.ReadableStreamIteratorOptions = webidl\n  .createDictionaryConverter("ReadableStreamIteratorOptions"\x2C [\n    {\n      key: "preventCancel"\x2C\n      defaultValue: false\x2C\n      converter: webidl.converters.boolean\x2C\n    }\x2C\n  ]);\n\nwebidl.converters.ReadableStreamReaderMode = webidl\n  .createEnumConverter("ReadableStreamReaderMode"\x2C ["byob"]);\nwebidl.converters.ReadableStreamGetReaderOptions = webidl\n  .createDictionaryConverter("ReadableStreamGetReaderOptions"\x2C [{\n    key: "mode"\x2C\n    converter: webidl.converters.ReadableStreamReaderMode\x2C\n  }]);\n\nwebidl.converters.ReadableStreamBYOBReaderReadOptions = webidl\n  .createDictionaryConverter("ReadableStreamBYOBReaderReadOptions"\x2C [{\n    key: "min"\x2C\n    converter: (V\x2C prefix\x2C context\x2C opts) =>\n      webidl.converters["unsigned long long"](V\x2C prefix\x2C context\x2C {\n        ...opts\x2C\n        enforceRange: true\x2C\n      })\x2C\n    defaultValue: 1\x2C\n  }]);\n\nwebidl.converters.ReadableWritablePair = webidl\n  .createDictionaryConverter("ReadableWritablePair"\x2C [\n    {\n      key: "readable"\x2C\n      converter: webidl.converters.ReadableStream\x2C\n      required: true\x2C\n    }\x2C\n    {\n      key: "writable"\x2C\n      converter: webidl.converters.WritableStream\x2C\n      required: true\x2C\n    }\x2C\n  ]);\nwebidl.converters.StreamPipeOptions = webidl\n  .createDictionaryConverter("StreamPipeOptions"\x2C [\n    {\n      key: "preventClose"\x2C\n      defaultValue: false\x2C\n      converter: webidl.converters.boolean\x2C\n    }\x2C\n    {\n      key: "preventAbort"\x2C\n      defaultValue: false\x2C\n      converter: webidl.converters.boolean\x2C\n    }\x2C\n    {\n      key: "preventCancel"\x2C\n      defaultValue: false\x2C\n      converter: webidl.converters.boolean\x2C\n    }\x2C\n    { key: "signal"\x2C converter: webidl.converters.AbortSignal }\x2C\n  ]);\n\ninternals.resourceForReadableStream = resourceForReadableStream;\n\nexport {\n  // Non-Public\n  _state\x2C\n  // Exposed in global runtime scope\n  ByteLengthQueuingStrategy\x2C\n  CountQueuingStrategy\x2C\n  createProxy\x2C\n  Deferred\x2C\n  errorReadableStream\x2C\n  getReadableStreamResourceBacking\x2C\n  getWritableStreamResourceBacking\x2C\n  isDetachedBuffer\x2C\n  isReadableStreamDisturbed\x2C\n  ReadableByteStreamController\x2C\n  ReadableStream\x2C\n  ReadableStreamBYOBReader\x2C\n  ReadableStreamBYOBRequest\x2C\n  readableStreamClose\x2C\n  readableStreamCollectIntoUint8Array\x2C\n  ReadableStreamDefaultController\x2C\n  ReadableStreamDefaultReader\x2C\n  readableStreamDisturb\x2C\n  readableStreamForRid\x2C\n  readableStreamForRidUnrefable\x2C\n  readableStreamForRidUnrefableRef\x2C\n  readableStreamForRidUnrefableUnref\x2C\n  ReadableStreamPrototype\x2C\n  readableStreamTee\x2C\n  readableStreamThrowIfErrored\x2C\n  resourceForReadableStream\x2C\n  TransformStream\x2C\n  TransformStreamDefaultController\x2C\n  WritableStream\x2C\n  writableStreamClose\x2C\n  WritableStreamDefaultController\x2C\n  WritableStreamDefaultWriter\x2C\n  writableStreamForRid\x2C\n};\n
code-source-info,0x2c37005860f4,21,26253,27384,C0O26253C12O26278C22O26297C27O26278C32O26278C34O26308C41O26315C45O26330C49O26345C56O26352C60O26362C64O26373C75O26380C85O26411C91O26407C95O26462C100O26487C108O27109C120O27180C129O27207C137O27207C141O27243C157O27243C162O27368C164O27382,,
code-creation,JS,9,583142,0x2c3700586248,319,ReadableStream ext:deno_web/06_streams.js:5139:14,0x2c37001e6dc4,~
code-source-info,0x2c3700586248,21,147718,149385,C0O147718C34O147777C38O147802C40O147798C45O147818C50O147831C54O147847C55O147854C56O147881C59O147925C68O147990C73O148001C87O148001C96O148099C105O148148C110O148159C124O148159C133O148286C142O148332C147O148343C161O148343C170O148455C175O148468C179O148483C184O148483C188O148544C195O148549C200O148583C206O148613C215O148648C225O148619C230O148613C231O148774C238O148774C244O148815C261O148815C268O149092C273O149092C278O149152C286O149152C292O149193C312O149193C318O149384,,
tick,0x7d8294c86a8e,583189,0,0x0,9,0x64950db65500,0x2c3700585f70,0x2c3700585db1,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
tick,0x7d8294c86a8e,583198,0,0x0,9,0x64950db65500,0x2c3700585f70,0x2c3700585db1,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
tick,0x7d8294d1c5ad,583202,0,0x0,9,0x64950db65500,0x2c3700585f70,0x2c3700585db1,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
tick,0x64950d02b6e1,583205,0,0x0,9,0x64950db65500,0x2c3700585f70,0x2c3700585db1,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
code-creation,JS,9,583210,0x2c370058643c,46,initializeReadableStream ext:deno_web/06_streams.js:601:34,0x2c37001e32b4,~
code-source-info,0x2c370058643c,21,16028,16155,C0O16048C8O16056C12O16072C14O16079C19O16097C24O16111C30O16088C34O16126C36O16133C40O16145C45O16154,,
code-creation,JS,9,583260,0x2c37005864f8,166,setUpReadableByteStreamControllerFromUnderlyingSource ext:deno_web/06_streams.js:3533:63,0x2c37001e4740,~
code-source-info,0x2c37005864f8,21,98159,99955,C0O98159C16O98257C26O98290C31O98257C36O98257C38O98350C45O98433C52O98528C59O98555C62O98580C68O98607C73O98877C76O98902C82O98928C87O99227C90O99252C96O99280C101O99617C104O99637C109O99666C110O99692C115O99705C127O99711C132O99705C133O99780C159O99780C165O99954,,
code-creation,JS,9,583286,0x2c3700586628,60,ReadableByteStreamController ext:deno_web/06_streams.js:5825:14,0x2c37001e7e18,~
code-source-info,0x2c3700586628,21,167302,167423,C0O167302C24O167328C28O167342C30O167338C35O167358C40O167365C45O167365C49O167397C54O167410C59O167422,,
code-creation,JS,9,583343,0x2c3700586700,318,setUpReadableByteStreamController ext:deno_web/06_streams.js:3484:43,0x2c37001e4704,~
code-source-info,0x2c
code-creation,JS,9,583393,0x2c37005868fc,34,assert ext:deno_web/00_infra.js:372:16,0x2c37001d83b0,~
code-source-info,0x2c37005868fc,12,8847,8938,C14O8885C18O8902C26O8908C31O8902C33O8937,,
code-creation,JS,9,583414,0x2c3700586970,31,resetQueue ext:deno_web/06_streams.js:1541:20,0x2c37001e3984,~
code-source-info,0x2c3700586970,21,42081,42165,C0O42097C2O42107C7O42121C10O42117C15O42115C19O42132C21O42142C25O42159C30O42164,,
code-creation,JS,9,583427,0x2c37005869e0,16,Queue ext:deno_web/06_streams.js:230:1,0x2c37001e5fac,~
code-source-info,0x2c37005869e0,21,5640,5640,C0O5640C15O5640,,
code-creation,JS,9,583450,0x2c3700586a24,2,noop ext:deno_web/06_streams.js:392:14,0x2c37001e2fe4,~
code-source-info,0x2c3700586a24,21,10522,10527,C1O10526,,
code-creation,JS,9,583469,0x2c3700586a68,20,setPromiseIsHandledToTrue ext:deno_web/06_streams.js:174:35,0x2c37001e2e04,~
code-source-info,0x2c3700586a68,21,4118,4207,C0O4132C13O4132C19O4206,,
tick,0x64950e408d3e,583513,0,0x0,3,0x64950db65500,0x2c3700586838,0x2c3700586597,0x2c3700586191,0x2c3700585f70,0x2c3700585db1,0x2c3700585bdc,0x2c3700585b2e,0x2c370058518f,0x64950d873576,0x2c3700582975
code-creation,JS,9,583524,0x2c3700586af4,132,async_op_2 ext:core/00_infra.js:238:33,0x2c37001c9120,~
code-source-info,0x2c3700586af4,4,6921,7449,C3O6951C13O7014C25O7014C31O7048C33O7095C40O7102C44O7130C58O7183C68O7183C73O7236C83O7243C87O7262C88O7285C96O7325C103O7325C107O7368C109O7388C115O7393C118O7382C122O7417C127O7424C131O7439,,
code-creation,JS,9,583587,0x2c3700586c40,329,output ext:runtime/40_process.js:310:15,0x2c37003502a0,~
code-source-info,0x2c3700586c40,297,6259,7099,C4O6259C29O6268C33O6277C39O6284C48O6302C60O6308C65O6302C66O6399C70O6408C76O6415C85O6433C97O6439C102O6433C103O6575C121O6609C140O6643C144O6624C164O6678C168O6659C176O6581C188O6575C213O6542C220O6553C228O6564C233O6701C238O6732C246O6760C254O6787C306O7095,,
code-creation,JS,9,583610,0x2c3700586e10,32,get locked ext:deno_web/06_streams.js:5239:13,0x2c37001e6e3c,~
code-source-info,0x2c3700586e10,21,150581,150687,C0O150590C5O150597C10O150617C16O150597C22O150647C27O150654C31O150683,,
code-creation,JS,9,583627,0x2c3700586e7c,10,isReadableStreamLocked ext:deno_web/06_streams.js:706:32,0x2c37001e342c,~
code-source-info,0x2c3700586e7c,21,18559,18611,C0O18572C2O18586C4O18585C8O18595C9O18609,,
code-creation,JS,9,583646,0x2c3700586ed8,31,collectOutput ext:runtime/40_process.js:214:23,0x2c370034fa40,~
code-source-info,0x2c3700586ed8,297,4363,4557,C0O4384C5O4424C11O4395C18O4476C19O4488C20O4496C26O4503C30O4555,,
code-creation,JS,9,583718,0x2c3700586ff0,575,readableStreamCollectIntoUint8Array ext:deno_web/06_streams.js:1051:51,0x2c37001e5918,~
code-source-info,0x2c3700586ff
code-creation,JS,9,583752,0x2c3700587340,10,getReadableStreamResourceBacking ext:deno_web/06_streams.js:1043:42,0x2c37001e58dc,~
code-source-info,0x2c3700587340,21,28073,28120,C0O28086C4O28100C6O28099C9O28118,,
code-creation,JS,9,583762,0x2c3700587390,10,getReadableStreamResourceBackingUnrefable ext:deno_web/06_streams.js:1047:51,0x2c37001e3600,~
code-source-info,0x2c3700587390,21,28172,28228,C0O28185C4O28199C6O28198C9O28226,,
code-creation,JS,9,583776,0x2c37005873e4,30,acquireReadableStreamDefaultReader ext:deno_web/06_streams.js:407:44,0x2c37001e305c,~
code-source-info,0x2c37005873e4,21,10996,11135,C0O11024C8O11056C13O11024C19O11067C22O11067C27O11119C29O11133,,
code-creation,JS,9,583800,0x2c3700587470,119,ReadableStreamDefaultReader ext:deno_web/06_streams.js:5444:14,0x2c37001e72d0,~
code-source-info,0x2c3700587470,21,156474,156853,C0O156474C16O156489C20O156504C22O156500C27O156520C32O156533C36O156549C37O156556C38O156582C41O156639C46O156646C51O156674C62O156646C67O156698C72O156714C77O156725C91O156725C98O156775C103O156788C107O156802C112O156802C118O156852,,
code-creation,JS,9,583834,0x2c3700587560,54,setUpReadableStreamDefaultReader ext:deno_web/06_streams.js:3728:42,0x2c37001e4830,~
code-source-info,0x2c3700587560,21,104094,104308,C0O104115C3O104119C9O104157C19O104163C24O104157C25O104213C28O104213C33O104270C35O104277C40O104298C43O104294C48O104292C53O104307,,
code-creation,JS,9,583864,0x2c3700587624,201,readableStreamReaderGenericInitialize ext:deno_web/06_streams.js:2940:47,0x2c37001e44ac,~
code-source-info,0x2c3700587624,21,80786,81304,C0O80807C2O80814C7O80823C11O80835C13O80842C18O80851C22O80874C27O80873C33O80882C38O80904C40O80911C43O80933C49O80929C54O80927C60O80965C63O80964C69O80973C74O80993C76O81000C79O81022C85O81018C90O81016C94O81038C96O81044C100O81061C107O81061C114O81096C120O81110C123O81109C129O81118C133O81096C137O81138C139O81145C142O81167C148O81163C153O81161C157O81183C159O81189C163O81206C170O81220C172O81219C176O81206C181O81240C186O81272C190O81289C195O81240C200O81303,,
code-creation,JS,9,583892,0x2c37005877a0,56,Deferred ext:deno_web/06_streams.js:117:14,0x2c37001e5cc8,~
code-source-info,0x2c37005877a0,21,2898,3029,C0O2898C23O2907C35O2927C45O2923C50O2921C55O3028,,
code-creation,JS,9,583910,0x2c3700587814,30, ext:deno_web/06_streams.js:118:33,0x2c370084dc0c,~
code-source-info,0x2c3700587814,21,2935,3023,C0O2964C10O2978C14O2995C24O3008C29O3022,,
code-creation,JS,9,583924,0x2c370058787c,12,readableStreamDisturb ext:deno_web/06_streams.js:1676:31,0x2c37001e5a78,~
code-source-info,0x2c370058787c,21,45848,45889,C0O45861C2O45868C6O45880C11O45888,,
code-creation,JS,9,583951,0x2c37005878d0,16,readableStreamIsUnrefable ext:deno_web/06_streams.js:1019:35,0x2c37001e35c4,~
code-source-info,0x2c37005878d0,21,27420,27471,C0O27433C7O27459C10O27440C15O27469,,
code-creation,JS,9,584004,0x2c370058792c,29,primordials.SafePromiseAll ext:core/00_primordials.js:519:32,0x2c37001c8b1c,~
script-source,3,ext:core/00_primordials.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Based on https://github.com/nodejs/node/blob/889ad35d3d41e376870f785b0c1b669cb732013d/lib/internal/per_context/primordials.js\n// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\n// deno-lint-ignore-file prefer-primordials\n\n"use strict";\n\n(() => {\n  const primordials = {};\n\n  const {\n    defineProperty: ReflectDefineProperty\x2C\n    getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n    ownKeys: ReflectOwnKeys\x2C\n  } = Reflect;\n\n  // `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n  // It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n  // and `Function.prototype.call` after it may have been mutated by users.\n  const { apply\x2C bind\x2C call } = Function.prototype;\n  const uncurryThis = bind.bind(call);\n  primordials.uncurryThis = uncurryThis;\n\n  // `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n  // It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n  // and `Function.prototype.apply` after it may have been mutated by users.\n  const applyBind = bind.bind(apply);\n  primordials.applyBind = applyBind;\n\n  // Methods that accept a variable number of arguments\x2C and thus it's useful to\n  // also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n  // instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n  // destructuring.\n  const varargsMethods = [\n    // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n    // on its own for arrays and array-likes with a truthy\n    // @@isConcatSpreadable symbol property.\n    "ArrayOf"\x2C\n    "ArrayPrototypePush"\x2C\n    "ArrayPrototypeUnshift"\x2C\n    // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n    // and 'FunctionPrototypeApply'.\n    "MathHypot"\x2C\n    "MathMax"\x2C\n    "MathMin"\x2C\n    "StringPrototypeConcat"\x2C\n    "TypedArrayOf"\x2C\n  ];\n\n  function getNewKey(key) {\n    return typeof key === "symbol"\n      ? `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}`\n      : `${key[0].toUpperCase()}${key.slice(1)}`;\n  }\n\n  function copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n    ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n      value: uncurryThis(get)\x2C\n      enumerable\x2C\n    });\n    if (set !== undefined) {\n      ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n        value: uncurryThis(set)\x2C\n        enumerable\x2C\n      });\n    }\n  }\n\n  function copyPropsRenamed(src\x2C dest\x2C prefix) {\n    for (const key of ReflectOwnKeys(src)) {\n      const newKey = getNewKey(key);\n      const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n      if ("get" in desc) {\n        copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n      } else {\n        const name = `${prefix}${newKey}`;\n        ReflectDefineProperty(dest\x2C name\x2C desc);\n        if (varargsMethods.includes(name)) {\n          ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n            // `src` is bound as the `this` so that the static `this` points\n            // to the object it was defined on\x2C\n            // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n            value: applyBind(desc.value\x2C src)\x2C\n          });\n        }\n      }\n    }\n  }\n\n  function copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n    for (const key of ReflectOwnKeys(src)) {\n      const newKey = getNewKey(key);\n      const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n      if ("get" in desc) {\n        copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n      } else {\n        const { value } = desc;\n        if (typeof value === "function") {\n          desc.value = value.bind(src);\n        }\n\n        const name = `${prefix}${newKey}`;\n        ReflectDefineProperty(dest\x2C name\x2C desc);\n        if (varargsMethods.includes(name)) {\n          ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n            value: applyBind(value\x2C src)\x2C\n          });\n        }\n      }\n    }\n  }\n\n  function copyPrototype(src\x2C dest\x2C prefix) {\n    for (const key of ReflectOwnKeys(src)) {\n      const newKey = getNewKey(key);\n      const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n      if ("get" in desc) {\n        copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n      } else {\n        const { value } = desc;\n        if (typeof value === "function") {\n          desc.value = uncurryThis(value);\n        }\n\n        const name = `${prefix}${newKey}`;\n        ReflectDefineProperty(dest\x2C name\x2C desc);\n        if (varargsMethods.includes(name)) {\n          ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n            value: applyBind(value)\x2C\n          });\n        }\n      }\n    }\n  }\n\n  // Create copies of configurable value properties of the global object\n  [\n    "Proxy"\x2C\n    "globalThis"\x2C\n  ].forEach((name) => {\n    primordials[name] = globalThis[name];\n  });\n\n  // Create copy of isNaN\n  primordials[isNaN.name] = isNaN;\n\n  // Create copies of URI handling functions\n  [\n    decodeURI\x2C\n    decodeURIComponent\x2C\n    encodeURI\x2C\n    encodeURIComponent\x2C\n  ].forEach((fn) => {\n    primordials[fn.name] = fn;\n  });\n\n  // Create copies of the namespace objects\n  [\n    "JSON"\x2C\n    "Math"\x2C\n    "Proxy"\x2C\n    "Reflect"\x2C\n  ].forEach((name) => {\n    copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n  });\n\n  // Create copies of intrinsic objects\n  [\n    "AggregateError"\x2C\n    "Array"\x2C\n    "ArrayBuffer"\x2C\n    "BigInt"\x2C\n    "BigInt64Array"\x2C\n    "BigUint64Array"\x2C\n    "Boolean"\x2C\n    "DataView"\x2C\n    "Date"\x2C\n    "Error"\x2C\n    "EvalError"\x2C\n    "FinalizationRegistry"\x2C\n    "Float32Array"\x2C\n    "Float64Array"\x2C\n    "Function"\x2C\n    "Int16Array"\x2C\n    "Int32Array"\x2C\n    "Int8Array"\x2C\n    "Map"\x2C\n    "Number"\x2C\n    "Object"\x2C\n    "RangeError"\x2C\n    "ReferenceError"\x2C\n    "RegExp"\x2C\n    "Set"\x2C\n    "String"\x2C\n    "Symbol"\x2C\n    "SyntaxError"\x2C\n    "TypeError"\x2C\n    "URIError"\x2C\n    "Uint16Array"\x2C\n    "Uint32Array"\x2C\n    "Uint8Array"\x2C\n    "Uint8ClampedArray"\x2C\n    "WeakMap"\x2C\n    "WeakRef"\x2C\n    "WeakSet"\x2C\n  ].forEach((name) => {\n    const original = globalThis[name];\n    primordials[name] = original;\n    copyPropsRenamed(original\x2C primordials\x2C name);\n    copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n  });\n\n  // Create copies of intrinsic objects that require a valid `this` to call\n  // static methods.\n  // Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n  [\n    "Promise"\x2C\n  ].forEach((name) => {\n    const original = globalThis[name];\n    primordials[name] = original;\n    copyPropsRenamedBound(original\x2C primordials\x2C name);\n    copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n  });\n\n  // Create copies of abstract intrinsic objects that are not directly exposed\n  // on the global object.\n  // Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n  [\n    { name: "TypedArray"\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n    {\n      name: "ArrayIterator"\x2C\n      original: {\n        prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n      }\x2C\n    }\x2C\n    {\n      name: "SetIterator"\x2C\n      original: {\n        prototype: Reflect.getPrototypeOf(new Set()[Symbol.iterator]())\x2C\n      }\x2C\n    }\x2C\n    {\n      name: "MapIterator"\x2C\n      original: {\n        prototype: Reflect.getPrototypeOf(new Map()[Symbol.iterator]())\x2C\n      }\x2C\n    }\x2C\n    {\n      name: "StringIterator"\x2C\n      original: {\n        prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n      }\x2C\n    }\x2C\n    { name: "Generator"\x2C original: Reflect.getPrototypeOf(function* () {}) }\x2C\n    {\n      name: "AsyncGenerator"\x2C\n      original: Reflect.getPrototypeOf(async function* () {})\x2C\n    }\x2C\n  ].forEach(({ name\x2C original }) => {\n    primordials[name] = original;\n    // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n    // as they need a subclass constructor as the receiver:\n    copyPrototype(original\x2C primordials\x2C name);\n    copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n  });\n\n  const {\n    ArrayPrototypeForEach\x2C\n    ArrayPrototypeJoin\x2C\n    ArrayPrototypeMap\x2C\n    FunctionPrototypeCall\x2C\n    ObjectDefineProperty\x2C\n    ObjectFreeze\x2C\n    ObjectPrototypeIsPrototypeOf\x2C\n    ObjectSetPrototypeOf\x2C\n    Promise\x2C\n    PromisePrototype\x2C\n    PromisePrototypeThen\x2C\n    SymbolIterator\x2C\n    TypedArrayPrototypeJoin\x2C\n  } = primordials;\n\n  // Because these functions are used by `makeSafe`\x2C which is exposed\n  // on the `primordials` object\x2C it's important to use const references\n  // to the primordials that they use:\n  const createSafeIterator = (factory\x2C next) => {\n    class SafeIterator {\n      constructor(iterable) {\n        this._iterator = factory(iterable);\n      }\n      next() {\n        return next(this._iterator);\n      }\n      [SymbolIterator]() {\n        return this;\n      }\n    }\n    ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n    ObjectFreeze(SafeIterator.prototype);\n    ObjectFreeze(SafeIterator);\n    return SafeIterator;\n  };\n\n  const SafeArrayIterator = createSafeIterator(\n    primordials.ArrayPrototypeSymbolIterator\x2C\n    primordials.ArrayIteratorPrototypeNext\x2C\n  );\n  primordials.SafeArrayIterator = SafeArrayIterator;\n  primordials.SafeSetIterator = createSafeIterator(\n    primordials.SetPrototypeSymbolIterator\x2C\n    primordials.SetIteratorPrototypeNext\x2C\n  );\n  primordials.SafeMapIterator = createSafeIterator(\n    primordials.MapPrototypeSymbolIterator\x2C\n    primordials.MapIteratorPrototypeNext\x2C\n  );\n  primordials.SafeStringIterator = createSafeIterator(\n    primordials.StringPrototypeSymbolIterator\x2C\n    primordials.StringIteratorPrototypeNext\x2C\n  );\n\n  const copyProps = (src\x2C dest) => {\n    ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n        ReflectDefineProperty(\n          dest\x2C\n          key\x2C\n          ReflectGetOwnPropertyDescriptor(src\x2C key)\x2C\n        );\n      }\n    });\n  };\n\n  /**\n   * @type {typeof primordials.makeSafe}\n   */\n  const makeSafe = (unsafe\x2C safe) => {\n    if (SymbolIterator in unsafe.prototype) {\n      const dummy = new unsafe();\n      let next; // We can reuse the same `next` method.\n\n      ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n        if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n          const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n          if (\n            typeof desc.value === "function" &&\n            desc.value.length === 0 &&\n            SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n          ) {\n            const createIterator = uncurryThis(desc.value);\n            next ??= uncurryThis(createIterator(dummy).next);\n            const SafeIterator = createSafeIterator(createIterator\x2C next);\n            desc.value = function () {\n              return new SafeIterator(this);\n            };\n          }\n          ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\n        }\n      });\n    } else {\n      copyProps(unsafe.prototype\x2C safe.prototype);\n    }\n    copyProps(unsafe\x2C safe);\n\n    ObjectSetPrototypeOf(safe.prototype\x2C null);\n    ObjectFreeze(safe.prototype);\n    ObjectFreeze(safe);\n    return safe;\n  };\n  primordials.makeSafe = makeSafe;\n\n  // Subclass the constructors because we need to use their prototype\n  // methods later.\n  // Defining the `constructor` is necessary here to avoid the default\n  // constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\n  primordials.SafeMap = makeSafe(\n    Map\x2C\n    class SafeMap extends Map {\n      constructor(i) {\n        if (i == null) {\n          super();\n          return;\n        }\n        super(new SafeArrayIterator(i));\n      }\n    }\x2C\n  );\n  primordials.SafeWeakMap = makeSafe(\n    WeakMap\x2C\n    class SafeWeakMap extends WeakMap {\n      constructor(i) {\n        if (i == null) {\n          super();\n          return;\n        }\n        super(new SafeArrayIterator(i));\n      }\n    }\x2C\n  );\n\n  primordials.SafeSet = makeSafe(\n    Set\x2C\n    class SafeSet extends Set {\n      constructor(i) {\n        if (i == null) {\n          super();\n          return;\n        }\n        super(new SafeArrayIterator(i));\n      }\n    }\x2C\n  );\n  primordials.SafeWeakSet = makeSafe(\n    WeakSet\x2C\n    class SafeWeakSet extends WeakSet {\n      constructor(i) {\n        if (i == null) {\n          super();\n          return;\n        }\n        super(new SafeArrayIterator(i));\n      }\n    }\x2C\n  );\n\n  primordials.SafeRegExp = makeSafe(\n    RegExp\x2C\n    class SafeRegExp extends RegExp {\n      constructor(pattern\x2C flags) {\n        super(pattern\x2C flags);\n      }\n    }\x2C\n  );\n\n  primordials.SafeFinalizationRegistry = makeSafe(\n    FinalizationRegistry\x2C\n    class SafeFinalizationRegistry extends FinalizationRegistry {\n      constructor(cleanupCallback) {\n        super(cleanupCallback);\n      }\n    }\x2C\n  );\n\n  primordials.SafeWeakRef = makeSafe(\n    WeakRef\x2C\n    class SafeWeakRef extends WeakRef {\n      constructor(target) {\n        super(target);\n      }\n    }\x2C\n  );\n\n  const SafePromise = makeSafe(\n    Promise\x2C\n    class SafePromise extends Promise {\n      constructor(executor) {\n        super(executor);\n      }\n    }\x2C\n  );\n\n  primordials.ArrayPrototypeToString = (thisArray) =>\n    ArrayPrototypeJoin(thisArray);\n\n  primordials.TypedArrayPrototypeToString = (thisArray) =>\n    TypedArrayPrototypeJoin(thisArray);\n\n  primordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\n    PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\n\n  const arrayToSafePromiseIterable = (array) =>\n    new SafeArrayIterator(\n      ArrayPrototypeMap(\n        array\x2C\n        (p) => {\n          if (ObjectPrototypeIsPrototypeOf(PromisePrototype\x2C p)) {\n            return new SafePromise((c\x2C d) => PromisePrototypeThen(p\x2C c\x2C d));\n          }\n          return p;\n        }\x2C\n      )\x2C\n    );\n\n  /**\n   * Creates a Promise that is resolved with an array of results when all of the\n   * provided Promises resolve\x2C or rejected when any Promise is rejected.\n   * @template T\n   * @param {Array<T | PromiseLike<T>>} values\n   * @returns {Promise<Awaited<T>[]>}\n   */\n  primordials.SafePromiseAll = (values) =>\n    // Wrapping on a new Promise is necessary to not expose the SafePromise\n    // prototype to user-land.\n    new Promise((a\x2C b) =>\n      SafePromise.all(arrayToSafePromiseIterable(values)).then(a\x2C b)\n    );\n\n  // NOTE: Uncomment the following functions when you need to use them\n\n  // /**\n  //  * Creates a Promise that is resolved with an array of results when all\n  //  * of the provided Promises resolve or reject.\n  //  * @template T\n  //  * @param {Array<T | PromiseLike<T>>} values\n  //  * @returns {Promise<PromiseSettledResult<T>[]>}\n  //  */\n  // primordials.SafePromiseAllSettled = (values) =>\n  //   // Wrapping on a new Promise is necessary to not expose the SafePromise\n  //   // prototype to user-land.\n  //   new Promise((a\x2C b) =>\n  //     SafePromise.allSettled(arrayToSafePromiseIterable(values)).then(a\x2C b)\n  //   );\n\n  // /**\n  //  * The any function returns a promise that is fulfilled by the first given\n  //  * promise to be fulfilled\x2C or rejected with an AggregateError containing\n  //  * an array of rejection reasons if all of the given promises are rejected.\n  //  * It resolves all elements of the passed iterable to promises as it runs\n  //  * this algorithm.\n  //  * @template T\n  //  * @param {T} values\n  //  * @returns {Promise<Awaited<T[number]>>}\n  //  */\n  // primordials.SafePromiseAny = (values) =>\n  //   // Wrapping on a new Promise is necessary to not expose the SafePromise\n  //   // prototype to user-land.\n  //   new Promise((a\x2C b) =>\n  //     SafePromise.any(arrayToSafePromiseIterable(values)).then(a\x2C b)\n  //   );\n\n  // /**\n  //  * Creates a Promise that is resolved or rejected when any of the provided\n  //  * Promises are resolved or rejected.\n  //  * @template T\n  //  * @param {T} values\n  //  * @returns {Promise<Awaited<T[number]>>}\n  //  */\n  // primordials.SafePromiseRace = (values) =>\n  //   // Wrapping on a new Promise is necessary to not expose the SafePromise\n  //   // prototype to user-land.\n  //   new Promise((a\x2C b) =>\n  //     SafePromise.race(arrayToSafePromiseIterable(values)).then(a\x2C b)\n  //   );\n\n  /**\n   * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n   * rejected). The resolved value cannot be modified from the callback.\n   * Prefer using async functions when possible.\n   * @param {Promise<any>} thisPromise\n   * @param {() => void) | undefined | null} onFinally The callback to execute\n   *        when the Promise is settled (fulfilled or rejected).\n   * @returns A Promise for the completion of the callback.\n   */\n  primordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n    // Wrapping on a new Promise is necessary to not expose the SafePromise\n    // prototype to user-land.\n    new Promise((a\x2C b) =>\n      new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n        .finally(onFinally)\n        .then(a\x2C b)\n    );\n\n  // Create getter and setter for `queueMicrotask`\x2C it hasn't been bound yet.\n  let queueMicrotask = undefined;\n  ObjectDefineProperty(primordials\x2C "queueMicrotask"\x2C {\n    get() {\n      return queueMicrotask;\n    }\x2C\n  });\n  primordials.setQueueMicrotask = (value) => {\n    if (queueMicrotask !== undefined) {\n      throw new Error("queueMicrotask is already defined");\n    }\n    queueMicrotask = value;\n  };\n\n  // Renaming from `eval` is necessary because otherwise it would perform direct\n  // evaluation\x2C allowing user-land access to local variables.\n  // This is because the identifier `eval` is somewhat treated as a keyword\n  primordials.indirectEval = eval;\n\n  ObjectSetPrototypeOf(primordials\x2C null);\n  ObjectFreeze(primordials);\n\n  // Provide bootstrap namespace\n  globalThis.__bootstrap ??= {};\n  globalThis.__bootstrap.primordials = primordials;\n})();\n
code-source-info,0x2c370058792c,3,15485,15704,C0O15485C9O15608C23O15608C28O15704,,
code-creation,JS,9,584465,0x2c37005879a0,45, ext:core/00_primordials.js:522:17,0x2c370084de70,~
code-source-info,0x2c37005879a0,3,15620,15698,C0O15688C7O15648C16O15652C22O15652C27O15648C33O15687C38O15688C44O15698,,
code-creation,JS,9,584483,0x2c3700587a28,29,arrayToSafePromiseIterable ext:core/00_primordials.js:499:38,0x2c37001c8ae0,~
code-source-info,0x2c3700587a28,3,14886,15182,C0O14901C7O14930C10O14957C15O14930C23O14901C28O15182,,
code-creation,JS,9,584500,0x2c3700587aa4,56, ext:core/00_primordials.js:503:9,0x2c370084e8f8,~
code-source-info,0x2c3700587aa4,3,14972,15166,C0O14972C9O14991C20O15024C26O14995C33O15060C47O15067C52O15124C53O15147C55O15156,,
code-creation,JS,9,584514,0x2c3700587b24,43,SafePromise ext:core/00_primordials.js:484:18,0x2c37001c8978,~
code-source-info,0x2c3700587b24,3,14470,14515,C3O14491C27O14491C42O14514,,
code-creation,JS,9,584528,0x2c3700587b94,22, ext:core/00_primordials.js:505:36,0x2c370084e990,~
code-source-info,0x2c3700587b94,3,15083,15122,C0O15093C16O15093C21O15122,,
code-creation,JS,9,584563,0x2c3700587bfc,81, ext:deno_web/06_streams.js:3514:7,0x2c370084d11c,~
code-source-info,0x2c3700587bfc,21,97572,97788,C0O97588C7O97599C11O97609C15O97625C28O97643C30O97642C38O97625C42O97673C53O97691C55O97690C63O97673C67O97723C75O97723C80O97787,,
code-creation,JS,9,584596,0x2c3700587cc8,156,readableByteStreamControllerCallPullIfNeeded ext:deno_web/06_streams.js:1221:54,0x2c37001e36f0,~
code-source-info,0x2c3700587cc8,21,32743,33509,C0O32743C9O32779C17O32779C22O32837C24O32860C25O32867C26O32874C33O32889C35O32888C40O32906C47O32917C51O32929C55O32941C56O32948C57O32955C70O32973C72O32972C80O32955C84O32999C93O33020C97O33081C104O33092C106O33091C113O33107C119O33123C128O33154C131O33182C144O33154C150O33123C155O33508,,
code-creation,JS,9,584638,0x2c3700587df8,122,readableByteStreamControllerShouldCallPull ext:deno_web/06_streams.js:1566:52,0x2c37001e39fc,~
code-source-info,0x2c3700587df8,21,42770,43397,C0O42847C2O42858C4O42857C8O42886C13O42885C19O42894C26O42927C28O42926C35O42963C37O42962C42O42983C43O42996C44O43003C47O43012C56O43058C62O43099C67O43113C68O43125C69O43132C72O43141C81O43184C87O43229C92O43243C93O43255C94O43282C97O43282C102O43340C111O43359C113O43340C117O43372C118O43391C121O43395,,
code-creation,JS,9,584665,0x2c3700587efc,25,readableStreamHasDefaultReader ext:deno_web/06_streams.js:2625:40,0x2c37001e4320,~
code-source-info,0x2c3700587efc,21,72837,73019,C0O72865C2O72872C4O72871C8O72884C10O72916C11O72929C12O72936C15O72940C21O72985C22O72997C23O73004C24O73017,,
code-creation,JS,9,584681,0x2c3700587f70,22,isReadableStreamDefaultReader ext:deno_web/06_streams.js:714:39,0x2c37001e3468,~
code-source-info,0x2c3700587f70,21,18736,18833,C0O18748C4O18770C14O18815C16O18814C21O18831,,
code-creation,JS,9,584699,0x2c3700587fdc,43,readableStreamGetNumReadRequests ext:deno_web/06_streams.js:2601:42,0x2c37001e42a8,~
code-source-info,0x2c3700587fdc,21,72334,72451,C0O72347C9O72354C18O72347C22O72406C24O72420C26O72419C32O72429C34O72428C38O72444C42O72449,,
code-creation,JS,9,584714,0x2c3700588050,6,get size ext:deno_web/06_streams.js:269:11,0x2c37001e609c,~
code-source-info,0x2c3700588050,21,6298,6329,C0O6307C2O6319C5O6325,,
tick,0x64950d1802c7,584725,0,0x0,0,0x64950db65500,0x2c3700587c47,0x2c3700582975
code-creation,JS,9,584737,0x2c370058809c,25,readableStreamHasBYOBReader ext:deno_web/06_streams.js:2610:37,0x2c37001e42e4,~
code-source-info,0x2c370058809c,21,72553,72732,C0O72581C2O72588C4O72587C8O72600C10O72632C11O72645C12O72652C15O72656C21O72698C22O72710C23O72717C24O72730,,
code-creation,JS,9,584754,0x2c3700588114,30,isReadableStreamBYOBReader ext:deno_web/06_streams.js:723:36,0x2c37001e34a4,~
code-source-info,0x2c3700588114,21,18952,19065,C0O18964C4O18986C14O19025C19O19043C22O19025C29O19063,,
code-creation,JS,9,584774,0x2c3700588194,54,readableByteStreamControllerGetDesiredSize ext:deno_web/06_streams.js:1526:52,0x2c37001e3948,~
code-source-info,0x2c3700588194,21,41742,41964,C0O41773C2O41784C4O41783C8O41793C13O41792C17O41804C19O41814C24O41835C25O41847C26O41854C28O41864C33O41884C34O41893C35O41900C37O41918C39O41917C45O41945C47O41944C50O41932C53O41962,,
tick,0x7d8294d2a042,585894,0,0x0,6
tick,0x7d8294d2a042,586960,0,0x0,6
tick,0x7d8294d2a042,588174,0,0x0,6
tick,0x7d8294d2a042,589335,0,0x0,6
tick,0x7d8294d2a042,590430,0,0x0,6
tick,0x7d8294d2a042,591576,0,0x0,6
tick,0x7d8294d2a042,592814,0,0x0,6
tick,0x7d8294d2a042,593955,0,0x0,6
tick,0x7d8294d2a042,594857,0,0x0,6
tick,0x7d8294d2a042,596086,0,0x0,6
tick,0x7d8294d2a042,597154,0,0x0,6
tick,0x7d8294d2a042,598245,0,0x0,6
tick,0x7d8294d2a042,599329,0,0x0,6
tick,0x7d8294d2a042,600354,0,0x0,6
tick,0x7d8294d2a042,601427,0,0x0,6
tick,0x7d8294d2a042,602569,0,0x0,6
tick,0x7d8294d2a042,603561,0,0x0,6
tick,0x7d8294d2a042,604690,0,0x0,6
tick,0x7d8294d2a042,605780,0,0x0,6
tick,0x7d8294d2a042,606791,0,0x0,6
tick,0x7d8294d2a042,607947,0,0x0,6
tick,0x7d8294d2a042,608942,0,0x0,6
tick,0x7d8294d2a042,610082,0,0x0,6
tick,0x7d8294d2a042,611226,0,0x0,6
tick,0x7d8294d2a042,612291,0,0x0,6
tick,0x7d8294d2a042,613375,0,0x0,6
tick,0x7d8294d2a042,614395,0,0x0,6
tick,0x7d8294d2a042,615579,0,0x0,6
tick,0x7d8294d2a042,616778,0,0x0,6
tick,0x7d8294d2a042,617804,0,0x0,6
tick,0x7d8294d2a042,618873,0,0x0,6
tick,0x7d8294d2a042,620010,0,0x0,6
tick,0x7d8294d2a042,621103,0,0x0,6
tick,0x7d8294d2a042,622178,0,0x0,6
tick,0x7d8294d2a042,623325,0,0x0,6
tick,0x7d8294d2a042,624539,0,0x0,6
tick,0x7d8294d2a042,625669,0,0x0,6
tick,0x7d8294d2a042,626801,0,0x0,6
tick,0x7d8294d2a042,627852,0,0x0,6
tick,0x7d8294d2a042,628935,0,0x0,6
tick,0x7d8294d2a042,630025,0,0x0,6
tick,0x7d8294d2a042,631097,0,0x0,6
tick,0x7d8294d2a042,632303,0,0x0,6
tick,0x7d8294d2a042,633400,0,0x0,6
tick,0x7d8294d2a042,634477,0,0x0,6
tick,0x7d8294d2a042,635614,0,0x0,6
tick,0x7d8294d2a042,636819,0,0x0,6
tick,0x7d8294d2a042,637991,0,0x0,6
tick,0x7d8294d2a042,638972,0,0x0,6
tick,0x7d8294d2a042,640132,0,0x0,6
tick,0x7d8294d2a042,641304,0,0x0,6
tick,0x7d8294d2a042,642525,0,0x0,6
tick,0x7d8294d2a042,643650,0,0x0,6
tick,0x7d8294d2a042,644864,0,0x0,6
tick,0x7d8294d2a042,645953,0,0x0,6
tick,0x7d8294d2a042,647051,0,0x0,6
tick,0x7d8294d2a042,648121,0,0x0,6
tick,0x7d8294d2a042,649277,0,0x0,6
tick,0x7d8294d2a042,650442,0,0x0,6
tick,0x7d8294d2a042,651608,0,0x0,6
tick,0x7d8294d2a042,652799,0,0x0,6
tick,0x7d8294d2a042,653922,0,0x0,6
tick,0x7d8294d2a042,654996,0,0x0,6
tick,0x7d8294d2a042,656137,0,0x0,6
tick,0x7d8294d2a042,657308,0,0x0,6
tick,0x7d8294d2a042,658425,0,0x0,6
tick,0x7d8294d2a042,659502,0,0x0,6
tick,0x7d8294d2a042,660596,0,0x0,6
tick,0x7d8294d2a042,661796,0,0x0,6
tick,0x7d8294d2a042,662871,0,0x0,6
tick,0x7d8294d2a042,664008,0,0x0,6
tick,0x7d8294d2a042,665216,0,0x0,6
tick,0x7d8294d2a042,666304,0,0x0,6
tick,0x7d8294d2a042,667462,0,0x0,6
tick,0x7d8294d2a042,668613,0,0x0,6
tick,0x7d8294d2a042,669678,0,0x0,6
tick,0x7d8294d2a042,670780,0,0x0,6
tick,0x7d8294d2a042,671805,0,0x0,6
tick,0x7d8294d2a042,672908,0,0x0,6
tick,0x7d8294d2a042,674069,0,0x0,6
tick,0x7d8294d2a042,675219,0,0x0,6
tick,0x7d8294d2a042,676276,0,0x0,6
tick,0x7d8294d2a042,677453,0,0x0,6
tick,0x7d8294d2a042,678612,0,0x0,6
tick,0x7d8294d2a042,679612,0,0x0,6
tick,0x7d8294d2a042,680867,0,0x0,6
tick,0x7d8294d2a042,681976,0,0x0,6
tick,0x7d8294d2a042,683052,0,0x0,6
tick,0x7d8294d2a042,684155,0,0x0,6
tick,0x7d8294d2a042,685300,0,0x0,6
tick,0x7d8294d2a042,686455,0,0x0,6
tick,0x7d8294d2a042,687626,0,0x0,6
tick,0x7d8294d2a042,688730,0,0x0,6
tick,0x7d8294d2a042,689894,0,0x0,6
tick,0x7d8294d2a042,691066,0,0x0,6
tick,0x7d8294d2a042,692189,0,0x0,6
tick,0x7d8294d2a042,693362,0,0x0,6
tick,0x7d8294d2a042,694562,0,0x0,6
tick,0x7d8294d2a042,695650,0,0x0,6
tick,0x7d8294d2a042,696894,0,0x0,6
tick,0x7d8294d2a042,697983,0,0x0,6
tick,0x7d8294d2a042,699013,0,0x0,6
tick,0x7d8294d2a042,700117,0,0x0,6
tick,0x7d8294d2a042,701175,0,0x0,6
tick,0x7d8294d2a042,702285,0,0x0,6
tick,0x7d8294d2a042,703333,0,0x0,6
tick,0x7d8294d2a042,704492,0,0x0,6
tick,0x7d8294d2a042,705526,0,0x0,6
tick,0x7d8294d2a042,706562,0,0x0,6
tick,0x7d8294d2a042,707617,0,0x0,6
tick,0x7d8294d2a042,708696,0,0x0,6
tick,0x7d8294d2a042,709773,0,0x0,6
tick,0x7d8294d2a042,710851,0,0x0,6
tick,0x7d8294d2a042,711935,0,0x0,6
tick,0x7d8294d2a042,713022,0,0x0,6
tick,0x7d8294d2a042,714094,0,0x0,6
tick,0x7d8294d2a042,715178,0,0x0,6
tick,0x7d8294d2a042,716420,0,0x0,6
tick,0x7d8294d2a042,717587,0,0x0,6
tick,0x7d8294d2a042,718662,0,0x0,6
tick,0x7d8294d2a042,719834,0,0x0,6
tick,0x7d8294d2a042,720956,0,0x0,6
tick,0x7d8294d2a042,722015,0,0x0,6
tick,0x7d8294d2a042,723005,0,0x0,6
tick,0x7d8294d2a042,724124,0,0x0,6
tick,0x7d8294d2a042,725196,0,0x0,6
tick,0x7d8294d2a042,726174,0,0x0,6
tick,0x7d8294d2a042,727227,0,0x0,6
tick,0x7d8294d2a042,728370,0,0x0,6
tick,0x7d8294d2a042,729484,0,0x0,6
tick,0x7d8294d2a042,730474,0,0x0,6
tick,0x7d8294d2a042,731544,0,0x0,6
tick,0x7d8294d2a042,732677,0,0x0,6
tick,0x7d8294d2a042,733765,0,0x0,6
tick,0x7d8294d2a042,734751,0,0x0,6
tick,0x7d8294d2a042,735871,0,0x0,6
tick,0x7d8294d2a042,736935,0,0x0,6
tick,0x7d8294d2a042,737976,0,0x0,6
tick,0x7d8294d2a042,738962,0,0x0,6
tick,0x7d8294d2a042,740092,0,0x0,6
tick,0x7d8294d2a042,741146,0,0x0,6
tick,0x7d8294d2a042,742213,0,0x0,6
tick,0x7d8294d2a042,743253,0,0x0,6
tick,0x7d8294d2a042,744321,0,0x0,6
tick,0x7d8294d2a042,745364,0,0x0,6
tick,0x7d8294d2a042,746346,0,0x0,6
tick,0x7d8294d2a042,747402,0,0x0,6
tick,0x7d8294d2a042,748468,0,0x0,6
tick,0x7d8294d2a042,749584,0,0x0,6
tick,0x7d8294d2a042,750637,0,0x0,6
tick,0x7d8294d2a042,751654,0,0x0,6
tick,0x7d8294d2a042,752747,0,0x0,6
tick,0x7d8294d2a042,753799,0,0x0,6
tick,0x7d8294d2a042,754785,0,0x0,6
tick,0x7d8294d2a042,755838,0,0x0,6
tick,0x7d8294d2a042,756930,0,0x0,6
tick,0x7d8294d2a042,757977,0,0x0,6
tick,0x7d8294d2a042,759106,0,0x0,6
tick,0x7d8294d2a042,760169,0,0x0,6
tick,0x7d8294d2a042,761211,0,0x0,6
tick,0x7d8294d2a042,762268,0,0x0,6
tick,0x7d8294d2a042,763324,0,0x0,6
tick,0x7d8294d2a042,764372,0,0x0,6
tick,0x7d8294d2a042,765354,0,0x0,6
tick,0x7d8294d2a042,766407,0,0x0,6
tick,0x7d8294d2a042,767473,0,0x0,6
tick,0x7d8294d2a042,768593,0,0x0,6
tick,0x7d8294d2a042,769641,0,0x0,6
tick,0x7d8294d2a042,770700,0,0x0,6
tick,0x7d8294d2a042,771773,0,0x0,6
tick,0x7d8294d2a042,772810,0,0x0,6
tick,0x7d8294d2a042,773862,0,0x0,6
tick,0x7d8294d2a042,774924,0,0x0,6
tick,0x7d8294d2a042,775970,0,0x0,6
tick,0x7d8294d2a042,777024,0,0x0,6
tick,0x7d8294d2a042,778075,0,0x0,6
tick,0x7d8294d2a042,779132,0,0x0,6
tick,0x7d8294d2a042,780191,0,0x0,6
tick,0x7d8294d2a042,781243,0,0x0,6
tick,0x7d8294d2a042,782293,0,0x0,6
tick,0x7d8294d2a042,783359,0,0x0,6
tick,0x7d8294d2a042,784405,0,0x0,6
tick,0x7d8294d2a042,785460,0,0x0,6
tick,0x7d8294d2a042,786436,0,0x0,6
tick,0x7d8294d2a042,787471,0,0x0,6
tick,0x7d8294d2a042,788620,0,0x0,6
tick,0x7d8294d2a042,789687,0,0x0,6
tick,0x7d8294d2a042,790730,0,0x0,6
tick,0x7d8294d2a042,791791,0,0x0,6
tick,0x7d8294d2a042,792867,0,0x0,6
tick,0x7d8294d2a042,793938,0,0x0,6
tick,0x7d8294d2a042,795025,0,0x0,6
tick,0x7d8294d2a042,796098,0,0x0,6
tick,0x7d8294d2a042,797181,0,0x0,6
tick,0x7d8294d2a042,798259,0,0x0,6
tick,0x7d8294d2a042,799345,0,0x0,6
tick,0x7d8294d2a042,800426,0,0x0,6
tick,0x7d8294d2a042,801587,0,0x0,6
tick,0x7d8294d2a042,802592,0,0x0,6
tick,0x7d8294d2a042,803628,0,0x0,6
tick,0x7d8294d2a042,804828,0,0x0,6
tick,0x7d8294d2a042,805981,0,0x0,6
tick,0x7d8294d2a042,807066,0,0x0,6
tick,0x7d8294d2a042,808144,0,0x0,6
tick,0x7d8294d2a042,809219,0,0x0,6
tick,0x7d8294d2a042,810297,0,0x0,6
tick,0x7d8294d2a042,811386,0,0x0,6
tick,0x7d8294d2a042,812531,0,0x0,6
tick,0x7d8294d2a042,813617,0,0x0,6
tick,0x7d8294d2a042,814702,0,0x0,6
tick,0x7d8294d2a042,815783,0,0x0,6
tick,0x7d8294d2a042,816923,0,0x0,6
tick,0x7d8294d2a042,818083,0,0x0,6
tick,0x7d8294d2a042,819225,0,0x0,6
tick,0x7d8294d2a042,820235,0,0x0,6
tick,0x7d8294d2a042,821401,0,0x0,6
tick,0x7d8294d2a042,822471,0,0x0,6
tick,0x7d8294d2a042,823569,0,0x0,6
tick,0x7d8294d2a042,824640,0,0x0,6
tick,0x7d8294d2a042,825705,0,0x0,6
tick,0x7d8294d2a042,826847,0,0x0,6
tick,0x7d8294d2a042,827902,0,0x0,6
tick,0x7d8294d2a042,829021,0,0x0,6
tick,0x7d8294d2a042,830098,0,0x0,6
tick,0x7d8294d2a042,831245,0,0x0,6
tick,0x7d8294d2a042,832470,0,0x0,6
tick,0x7d8294d2a042,833477,0,0x0,6
tick,0x7d8294d2a042,834580,0,0x0,6
tick,0x7d8294d2a042,835647,0,0x0,6
tick,0x7d8294d2a042,836812,0,0x0,6
tick,0x7d8294d2a042,837877,0,0x0,6
tick,0x7d8294d2a042,838882,0,0x0,6
tick,0x7d8294d2a042,840031,0,0x0,6
tick,0x7d8294d2a042,841104,0,0x0,6
tick,0x7d8294d2a042,842189,0,0x0,6
tick,0x7d8294d2a042,843262,0,0x0,6
tick,0x7d8294d2a042,844373,0,0x0,6
tick,0x7d8294d2a042,845449,0,0x0,6
tick,0x7d8294d2a042,846547,0,0x0,6
tick,0x7d8294d2a042,847568,0,0x0,6
tick,0x7d8294d2a042,848760,0,0x0,6
tick,0x7d8294d2a042,849893,0,0x0,6
tick,0x7d8294d2a042,850867,0,0x0,6
tick,0x7d8294d2a042,851936,0,0x0,6
tick,0x7d8294d2a042,853021,0,0x0,6
tick,0x7d8294d2a042,854161,0,0x0,6
tick,0x7d8294d2a042,855239,0,0x0,6
tick,0x7d8294d2a042,856321,0,0x0,6
tick,0x7d8294d2a042,857404,0,0x0,6
tick,0x7d8294d2a042,858410,0,0x0,6
tick,0x7d8294d2a042,859473,0,0x0,6
tick,0x7d8294d2a042,860737,0,0x0,6
tick,0x7d8294d2a042,861898,0,0x0,6
tick,0x7d8294d2a042,862962,0,0x0,6
tick,0x7d8294d2a042,864098,0,0x0,6
tick,0x7d8294d2a042,865159,0,0x0,6
tick,0x7d8294d2a042,866303,0,0x0,6
tick,0x7d8294d2a042,867451,0,0x0,6
tick,0x7d8294d2a042,868514,0,0x0,6
tick,0x7d8294d2a042,869507,0,0x0,6
tick,0x7d8294d2a042,870658,0,0x0,6
tick,0x7d8294d2a042,871785,0,0x0,6
tick,0x7d8294d2a042,872922,0,0x0,6
tick,0x7d8294d2a042,874088,0,0x0,6
tick,0x7d8294d2a042,875161,0,0x0,6
tick,0x7d8294d2a042,876219,0,0x0,6
tick,0x7d8294d2a042,877304,0,0x0,6
tick,0x7d8294d2a042,878374,0,0x0,6
tick,0x7d8294d2a042,879493,0,0x0,6
tick,0x7d8294d2a042,880634,0,0x0,6
tick,0x7d8294d2a042,881712,0,0x0,6
tick,0x7d8294d2a042,882784,0,0x0,6
tick,0x7d8294d2a042,883951,0,0x0,6
tick,0x7d8294d2a042,885083,0,0x0,6
tick,0x7d8294d2a042,886176,0,0x0,6
tick,0x7d8294d2a042,887243,0,0x0,6
tick,0x7d8294d2a042,888370,0,0x0,6
tick,0x7d8294d2a042,889465,0,0x0,6
tick,0x7d8294d2a042,890538,0,0x0,6
tick,0x7d8294d2a042,891615,0,0x0,6
tick,0x7d8294d2a042,892758,0,0x0,6
tick,0x7d8294d2a042,893908,0,0x0,6
tick,0x7d8294d2a042,895046,0,0x0,6
tick,0x7d8294d2a042,896112,0,0x0,6
tick,0x7d8294d2a042,897186,0,0x0,6
tick,0x7d8294d2a042,898266,0,0x0,6
tick,0x7d8294d2a042,899325,0,0x0,6
tick,0x7d8294d2a042,900366,0,0x0,6
tick,0x7d8294d2a042,901384,0,0x0,6
tick,0x7d8294d2a042,902458,0,0x0,6
tick,0x7d8294d2a042,903556,0,0x0,6
tick,0x7d8294d2a042,904743,0,0x0,6
tick,0x7d8294d2a042,905812,0,0x0,6
tick,0x7d8294d2a042,906934,0,0x0,6
tick,0x7d8294d2a042,908055,0,0x0,6
tick,0x7d8294d2a042,909198,0,0x0,6
tick,0x7d8294d2a042,910344,0,0x0,6
tick,0x7d8294d2a042,911485,0,0x0,6
tick,0x7d8294d2a042,912554,0,0x0,6
tick,0x7d8294d2a042,913580,0,0x0,6
tick,0x7d8294d2a042,914683,0,0x0,6
tick,0x7d8294d2a042,915818,0,0x0,6
tick,0x7d8294d2a042,916949,0,0x0,6
tick,0x7d8294d2a042,918106,0,0x0,6
tick,0x7d8294d2a042,919235,0,0x0,6
tick,0x7d8294d2a042,920313,0,0x0,6
tick,0x7d8294d2a042,921405,0,0x0,6
tick,0x7d8294d2a042,922481,0,0x0,6
tick,0x7d8294d2a042,923534,0,0x0,6
tick,0x7d8294d2a042,924756,0,0x0,6
tick,0x7d8294d2a042,925856,0,0x0,6
tick,0x7d8294d2a042,926947,0,0x0,6
tick,0x7d8294d2a042,927975,0,0x0,6
tick,0x7d8294d2a042,929114,0,0x0,6
tick,0x7d8294d2a042,930267,0,0x0,6
tick,0x7d8294d2a042,931329,0,0x0,6
tick,0x7d8294d2a042,932432,0,0x0,6
tick,0x7d8294d2a042,933477,0,0x0,6
tick,0x7d8294d2a042,934499,0,0x0,6
tick,0x7d8294d2a042,935580,0,0x0,6
tick,0x7d8294d2a042,936709,0,0x0,6
tick,0x7d8294d2a042,937772,0,0x0,6
tick,0x7d8294d2a042,938930,0,0x0,6
tick,0x7d8294d2a042,940061,0,0x0,6
tick,0x7d8294d2a042,941091,0,0x0,6
tick,0x7d8294d2a042,942138,0,0x0,6
tick,0x7d8294d2a042,943196,0,0x0,6
tick,0x7d8294d2a042,944205,0,0x0,6
tick,0x7d8294d2a042,945411,0,0x0,6
tick,0x7d8294d2a042,946424,0,0x0,6
tick,0x7d8294d2a042,947487,0,0x0,6
tick,0x7d8294d2a042,948551,0,0x0,6
tick,0x7d8294d2a042,949735,0,0x0,6
tick,0x7d8294d2a042,950881,0,0x0,6
tick,0x7d8294d2a042,951964,0,0x0,6
tick,0x7d8294d2a042,953126,0,0x0,6
tick,0x7d8294d2a042,954285,0,0x0,6
tick,0x7d8294d2a042,955456,0,0x0,6
tick,0x7d8294d2a042,956570,0,0x0,6
tick,0x7d8294d2a042,957588,0,0x0,6
tick,0x7d8294d2a042,958653,0,0x0,6
tick,0x7d8294d2a042,959760,0,0x0,6
tick,0x7d8294d2a042,960938,0,0x0,6
tick,0x7d8294d2a042,962083,0,0x0,6
tick,0x7d8294d2a042,963210,0,0x0,6
tick,0x7d8294d2a042,964293,0,0x0,6
tick,0x7d8294d2a042,965391,0,0x0,6
tick,0x7d8294d2a042,966520,0,0x0,6
tick,0x7d8294d2a042,967643,0,0x0,6
tick,0x7d8294d2a042,968835,0,0x0,6
tick,0x7d8294d2a042,969903,0,0x0,6
tick,0x7d8294d2a042,971046,0,0x0,6
tick,0x7d8294d2a042,972206,0,0x0,6
tick,0x7d8294d2a042,973292,0,0x0,6
tick,0x7d8294d2a042,974438,0,0x0,6
tick,0x7d8294d2a042,975539,0,0x0,6
tick,0x7d8294d2a042,976558,0,0x0,6
tick,0x7d8294d2a042,977562,0,0x0,6
tick,0x7d8294d2a042,978516,0,0x0,6
tick,0x7d8294d2a042,979626,0,0x0,6
tick,0x7d8294d2a042,980770,0,0x0,6
tick,0x7d8294d2a042,981831,0,0x0,6
tick,0x7d8294d2a042,982942,0,0x0,6
tick,0x7d8294d2a042,983971,0,0x0,6
tick,0x7d8294d2a042,985042,0,0x0,6
tick,0x7d8294d2a042,986132,0,0x0,6
tick,0x7d8294d2a042,987274,0,0x0,6
tick,0x7d8294d2a042,988304,0,0x0,6
tick,0x7d8294d2a042,989441,0,0x0,6
tick,0x7d8294d2a042,990506,0,0x0,6
tick,0x7d8294d2a042,991556,0,0x0,6
tick,0x7d8294d2a042,992691,0,0x0,6
tick,0x7d8294d2a042,993832,0,0x0,6
tick,0x7d8294d2a042,994934,0,0x0,6
tick,0x7d8294d2a042,996062,0,0x0,6
tick,0x7d8294d2a042,997152,0,0x0,6
tick,0x7d8294d2a042,998385,0,0x0,6
tick,0x7d8294d2a042,999467,0,0x0,6
tick,0x7d8294d2a042,1000617,0,0x0,6
tick,0x7d8294d2a042,1001689,0,0x0,6
tick,0x7d8294d2a042,1002847,0,0x0,6
tick,0x7d8294d2a042,1003983,0,0x0,6
tick,0x7d8294d2a042,1005154,0,0x0,6
tick,0x7d8294d2a042,1006278,0,0x0,6
tick,0x7d8294d2a042,1007344,0,0x0,6
tick,0x7d8294d2a042,1008578,0,0x0,6
tick,0x7d8294d2a042,1009667,0,0x0,6
tick,0x7d8294d2a042,1010751,0,0x0,6
tick,0x7d8294d2a042,1011923,0,0x0,6
tick,0x7d8294d2a042,1013055,0,0x0,6
tick,0x7d8294d2a042,1014157,0,0x0,6
tick,0x7d8294d2a042,1015186,0,0x0,6
tick,0x7d8294d2a042,1016249,0,0x0,6
tick,0x7d8294d2a042,1017330,0,0x0,6
tick,0x7d8294d2a042,1018499,0,0x0,6
tick,0x7d8294d2a042,1019657,0,0x0,6
tick,0x7d8294d2a042,1020741,0,0x0,6
tick,0x7d8294d2a042,1021869,0,0x0,6
tick,0x7d8294d2a042,1023014,0,0x0,6
tick,0x7d8294d2a042,1024096,0,0x0,6
tick,0x7d8294d2a042,1025263,0,0x0,6
tick,0x7d8294d2a042,1026383,0,0x0,6
tick,0x7d8294d2a042,1027448,0,0x0,6
tick,0x7d8294d2a042,1028598,0,0x0,6
tick,0x7d8294d2a042,1029604,0,0x0,6
tick,0x7d8294d2a042,1030681,0,0x0,6
tick,0x7d8294d2a042,1031678,0,0x0,6
tick,0x7d8294d2a042,1032968,0,0x0,6
tick,0x7d8294d2a042,1034132,0,0x0,6
tick,0x7d8294d2a042,1035241,0,0x0,6
tick,0x7d8294d2a042,1036333,0,0x0,6
tick,0x7d8294d2a042,1037430,0,0x0,6
tick,0x7d8294d2a042,1038574,0,0x0,6
tick,0x7d8294d2a042,1039655,0,0x0,6
tick,0x7d8294d2a042,1040823,0,0x0,6
tick,0x7d8294d2a042,1041885,0,0x0,6
tick,0x7d8294d2a042,1043046,0,0x0,6
tick,0x7d8294d2a042,1044170,0,0x0,6
tick,0x7d8294d2a042,1045329,0,0x0,6
tick,0x7d8294d2a042,1046483,0,0x0,6
tick,0x7d8294d2a042,1047596,0,0x0,6
tick,0x7d8294d2a042,1048788,0,0x0,6
tick,0x7d8294d2a042,1049885,0,0x0,6
tick,0x7d8294d2a042,1051034,0,0x0,6
tick,0x7d8294d2a042,1052184,0,0x0,6
tick,0x7d8294d2a042,1053316,0,0x0,6
tick,0x7d8294d2a042,1054415,0,0x0,6
tick,0x7d8294d2a042,1055515,0,0x0,6
tick,0x7d8294d2a042,1056496,0,0x0,6
tick,0x7d8294d2a042,1057572,0,0x0,6
tick,0x7d8294d2a042,1058704,0,0x0,6
tick,0x7d8294d2a042,1059649,0,0x0,6
tick,0x7d8294d2a042,1060816,0,0x0,6
tick,0x7d8294d2a042,1061897,0,0x0,6
tick,0x7d8294d2a042,1062981,0,0x0,6
tick,0x7d8294d2a042,1064071,0,0x0,6
tick,0x7d8294d2a042,1065125,0,0x0,6
tick,0x7d8294d2a042,1066208,0,0x0,6
tick,0x7d8294d2a042,1067297,0,0x0,6
tick,0x7d8294d2a042,1068359,0,0x0,6
tick,0x7d8294d2a042,1069462,0,0x0,6
tick,0x7d8294d2a042,1070641,0,0x0,6
tick,0x7d8294d2a042,1071669,0,0x0,6
tick,0x7d8294d2a042,1072838,0,0x0,6
tick,0x7d8294d2a042,1074009,0,0x0,6
tick,0x7d8294d2a042,1075090,0,0x0,6
tick,0x7d8294d2a042,1076170,0,0x0,6
tick,0x7d8294d2a042,1077243,0,0x0,6
tick,0x7d8294d2a042,1078464,0,0x0,6
tick,0x7d8294d2a042,1079641,0,0x0,6
tick,0x7d8294d2a042,1080784,0,0x0,6
tick,0x7d8294d2a042,1081902,0,0x0,6
tick,0x7d8294d2a042,1083069,0,0x0,6
tick,0x7d8294d2a042,1084066,0,0x0,6
tick,0x7d8294d2a042,1085276,0,0x0,6
tick,0x7d8294d2a042,1086400,0,0x0,6
tick,0x7d8294d2a042,1087572,0,0x0,6
tick,0x7d8294d2a042,1088623,0,0x0,6
tick,0x7d8294d2a042,1089695,0,0x0,6
tick,0x7d8294d2a042,1090781,0,0x0,6
tick,0x7d8294d2a042,1091817,0,0x0,6
tick,0x7d8294d2a042,1092922,0,0x0,6
tick,0x7d8294d2a042,1094061,0,0x0,6
tick,0x7d8294d2a042,1095162,0,0x0,6
tick,0x7d8294d2a042,1096332,0,0x0,6
tick,0x7d8294d2a042,1097452,0,0x0,6
tick,0x7d8294d2a042,1098606,0,0x0,6
tick,0x7d8294d2a042,1099634,0,0x0,6
tick,0x7d8294d2a042,1100840,0,0x0,6
tick,0x7d8294d2a042,1101921,0,0x0,6
tick,0x7d8294d2a042,1103125,0,0x0,6
tick,0x7d8294d2a042,1104171,0,0x0,6
tick,0x7d8294d2a042,1105289,0,0x0,6
tick,0x7d8294d2a042,1106345,0,0x0,6
tick,0x7d8294d2a042,1107470,0,0x0,6
tick,0x7d8294d2a042,1108615,0,0x0,6
tick,0x7d8294d2a042,1109698,0,0x0,6
tick,0x7d8294d2a042,1110720,0,0x0,6
tick,0x7d8294d2a042,1111778,0,0x0,6
tick,0x7d8294d2a042,1113004,0,0x0,6
tick,0x7d8294d2a042,1114215,0,0x0,6
tick,0x7d8294d2a042,1115323,0,0x0,6
tick,0x7d8294d2a042,1116475,0,0x0,6
tick,0x7d8294d2a042,1117566,0,0x0,6
tick,0x7d8294d2a042,1118654,0,0x0,6
tick,0x7d8294d2a042,1119717,0,0x0,6
tick,0x7d8294d2a042,1120909,0,0x0,6
tick,0x7d8294d2a042,1122097,0,0x0,6
tick,0x7d8294d2a042,1123180,0,0x0,6
tick,0x7d8294d2a042,1124240,0,0x0,6
tick,0x7d8294d2a042,1125313,0,0x0,6
tick,0x7d8294d2a042,1126503,0,0x0,6
tick,0x7d8294d2a042,1127579,0,0x0,6
tick,0x7d8294d2a042,1128830,0,0x0,6
tick,0x7d8294d2a042,1129995,0,0x0,6
tick,0x7d8294d2a042,1131091,0,0x0,6
tick,0x7d8294d2a042,1132210,0,0x0,6
tick,0x7d8294d2a042,1133367,0,0x0,6
tick,0x7d8294d2a042,1134493,0,0x0,6
tick,0x7d8294d2a042,1135594,0,0x0,6
tick,0x7d8294d2a042,1136860,0,0x0,6
tick,0x7d8294d2a042,1138018,0,0x0,6
tick,0x7d8294d2a042,1139117,0,0x0,6
tick,0x7d8294d2a042,1140242,0,0x0,6
tick,0x7d8294d2a042,1141396,0,0x0,6
tick,0x7d8294d2a042,1142471,0,0x0,6
tick,0x7d8294d2a042,1143551,0,0x0,6
tick,0x7d8294d2a042,1144885,0,0x0,6
tick,0x7d8294d2a042,1146050,0,0x0,6
tick,0x7d8294d2a042,1147138,0,0x0,6
tick,0x7d8294d2a042,1148207,0,0x0,6
tick,0x7d8294d2a042,1149347,0,0x0,6
tick,0x7d8294d2a042,1150503,0,0x0,6
tick,0x7d8294d2a042,1151511,0,0x0,6
tick,0x7d8294d2a042,1152798,0,0x0,6
tick,0x7d8294d2a042,1153992,0,0x0,6
tick,0x7d8294d2a042,1155114,0,0x0,6
tick,0x7d8294d2a042,1156167,0,0x0,6
tick,0x7d8294d2a042,1157330,0,0x0,6
tick,0x7d8294d2a042,1158410,0,0x0,6
tick,0x7d8294d2a042,1159471,0,0x0,6
tick,0x7d8294d2a042,1160677,0,0x0,6
tick,0x7d8294d2a042,1161690,0,0x0,6
tick,0x7d8294d2a042,1162736,0,0x0,6
tick,0x7d8294d2a042,1163915,0,0x0,6
tick,0x7d8294d2a042,1165055,0,0x0,6
tick,0x7d8294d2a042,1166213,0,0x0,6
tick,0x7d8294d2a042,1167368,0,0x0,6
tick,0x7d8294d2a042,1168498,0,0x0,6
tick,0x7d8294d2a042,1169599,0,0x0,6
tick,0x7d8294d2a042,1170735,0,0x0,6
tick,0x7d8294d2a042,1171709,0,0x0,6
tick,0x7d8294d2a042,1172940,0,0x0,6
tick,0x7d8294d2a042,1174063,0,0x0,6
tick,0x7d8294d2a042,1175242,0,0x0,6
tick,0x7d8294d2a042,1176299,0,0x0,6
tick,0x7d8294d2a042,1177421,0,0x0,6
tick,0x7d8294d2a042,1178531,0,0x0,6
tick,0x7d8294d2a042,1179642,0,0x0,6
tick,0x7d8294d2a042,1180856,0,0x0,6
tick,0x7d8294d2a042,1181972,0,0x0,6
tick,0x7d8294d2a042,1183121,0,0x0,6
tick,0x7d8294d2a042,1184212,0,0x0,6
tick,0x7d8294d2a042,1185302,0,0x0,6
tick,0x7d8294d2a042,1186450,0,0x0,6
tick,0x7d8294d2a042,1187560,0,0x0,6
tick,0x7d8294d2a042,1188869,0,0x0,6
tick,0x7d8294d2a042,1189996,0,0x0,6
tick,0x7d8294d2a042,1191159,0,0x0,6
tick,0x7d8294d2a042,1192143,0,0x0,6
tick,0x7d8294d2a042,1193296,0,0x0,6
tick,0x7d8294d2a042,1194451,0,0x0,6
tick,0x7d8294d2a042,1195389,0,0x0,6
tick,0x7d8294d2a042,1196558,0,0x0,6
tick,0x7d8294d2a042,1197565,0,0x0,6
tick,0x7d8294d2a042,1198641,0,0x0,6
tick,0x7d8294d2a042,1199737,0,0x0,6
tick,0x7d8294d2a042,1200820,0,0x0,6
tick,0x7d8294d2a042,1201895,0,0x0,6
tick,0x7d8294d2a042,1202982,0,0x0,6
tick,0x7d8294d2a042,1204062,0,0x0,6
tick,0x7d8294d2a042,1205133,0,0x0,6
tick,0x7d8294d2a042,1206231,0,0x0,6
tick,0x7d8294d2a042,1207288,0,0x0,6
tick,0x7d8294d2a042,1208300,0,0x0,6
tick,0x7d8294d2a042,1209395,0,0x0,6
tick,0x7d8294d2a042,1210449,0,0x0,6
tick,0x7d8294d2a042,1211518,0,0x0,6
tick,0x7d8294d2a042,1212742,0,0x0,6
tick,0x7d8294d2a042,1213814,0,0x0,6
tick,0x7d8294d2a042,1214978,0,0x0,6
tick,0x7d8294d2a042,1216132,0,0x0,6
tick,0x7d8294d2a042,1217286,0,0x0,6
tick,0x7d8294d2a042,1218296,0,0x0,6
tick,0x7d8294d2a042,1219339,0,0x0,6
tick,0x7d8294d2a042,1220509,0,0x0,6
tick,0x7d8294d2a042,1221565,0,0x0,6
tick,0x7d8294d2a042,1222541,0,0x0,6
tick,0x7d8294d2a042,1223629,0,0x0,6
tick,0x7d8294d2a042,1224738,0,0x0,6
tick,0x7d8294d2a042,1225728,0,0x0,6
tick,0x7d8294d2a042,1226782,0,0x0,6
tick,0x7d8294d2a042,1227902,0,0x0,6
tick,0x7d8294d2a042,1228973,0,0x0,6
tick,0x7d8294d2a042,1229948,0,0x0,6
tick,0x7d8294d2a042,1231019,0,0x0,6
tick,0x7d8294d2a042,1232153,0,0x0,6
tick,0x7d8294d2a042,1233204,0,0x0,6
tick,0x7d8294d2a042,1234197,0,0x0,6
tick,0x7d8294d2a042,1235253,0,0x0,6
tick,0x7d8294d2a042,1236382,0,0x0,6
tick,0x7d8294d2a042,1237437,0,0x0,6
tick,0x7d8294d2a042,1238420,0,0x0,6
tick,0x7d8294d2a042,1239527,0,0x0,6
tick,0x7d8294d2a042,1240612,0,0x0,6
tick,0x7d8294d2a042,1241671,0,0x0,6
tick,0x7d8294d2a042,1242656,0,0x0,6
tick,0x7d8294d2a042,1243792,0,0x0,6
tick,0x7d8294d2a042,1244848,0,0x0,6
tick,0x7d8294d2a042,1245834,0,0x0,6
tick,0x7d8294d2a042,1246908,0,0x0,6
tick,0x7d8294d2a042,1248018,0,0x0,6
tick,0x7d8294d2a042,1249092,0,0x0,6
tick,0x7d8294d2a042,1250148,0,0x0,6
tick,0x7d8294d2a042,1251204,0,0x0,6
tick,0x7d8294d2a042,1252254,0,0x0,6
tick,0x7d8294d2a042,1253257,0,0x0,6
tick,0x7d8294d2a042,1254315,0,0x0,6
tick,0x7d8294d2a042,1255389,0,0x0,6
tick,0x7d8294d2a042,1256496,0,0x0,6
tick,0x7d8294d2a042,1257556,0,0x0,6
tick,0x7d8294d2a042,1258610,0,0x0,6
tick,0x7d8294d2a042,1259605,0,0x0,6
tick,0x7d8294d2a042,1260778,0,0x0,6
tick,0x7d8294d2a042,1261786,0,0x0,6
tick,0x7d8294d2a042,1262813,0,0x0,6
tick,0x7d8294d2a042,1263828,0,0x0,6
tick,0x7d8294d2a042,1264893,0,0x0,6
tick,0x7d8294d2a042,1266022,0,0x0,6
tick,0x7d8294d2a042,1267080,0,0x0,6
tick,0x7d8294d2a042,1268126,0,0x0,6
tick,0x7d8294d2a042,1269129,0,0x0,6
tick,0x7d8294d2a042,1270179,0,0x0,6
tick,0x7d8294d2a042,1271245,0,0x0,6
tick,0x7d8294d2a042,1272370,0,0x0,6
tick,0x7d8294d2a042,1273445,0,0x0,6
tick,0x7d8294d2a042,1274478,0,0x0,6
tick,0x7d8294d2a042,1275563,0,0x0,6
tick,0x7d8294d2a042,1276609,0,0x0,6
tick,0x7d8294d2a042,1277657,0,0x0,6
tick,0x7d8294d2a042,1278641,0,0x0,6
tick,0x7d8294d2a042,1279700,0,0x0,6
tick,0x7d8294d2a042,1280837,0,0x0,6
tick,0x7d8294d2a042,1281892,0,0x0,6
tick,0x7d8294d2a042,1282945,0,0x0,6
tick,0x7d8294d2a042,1284024,0,0x0,6
tick,0x7d8294d2a042,1284974,0,0x0,6
tick,0x7d8294d2a042,1286127,0,0x0,6
tick,0x7d8294d2a042,1287090,0,0x0,6
tick,0x7d8294d2a042,1288250,0,0x0,6
tick,0x7d8294d2a042,1289309,0,0x0,6
tick,0x7d8294d2a042,1290296,0,0x0,6
tick,0x7d8294d2a042,1291343,0,0x0,6
tick,0x7d8294d2a042,1292471,0,0x0,6
tick,0x7d8294d2a042,1293521,0,0x0,6
tick,0x7d8294d2a042,1294508,0,0x0,6
tick,0x7d8294d2a042,1295589,0,0x0,6
tick,0x7d8294d2a042,1296689,0,0x0,6
tick,0x7d8294d2a042,1297753,0,0x0,6
tick,0x7d8294d2a042,1298804,0,0x0,6
tick,0x7d8294d2a042,1299862,0,0x0,6
tick,0x7d8294d2a042,1300932,0,0x0,6
tick,0x7d8294d2a042,1301979,0,0x0,6
tick,0x7d8294d2a042,1303039,0,0x0,6
tick,0x7d8294d2a042,1304026,0,0x0,6
tick,0x7d8294d2a042,1305088,0,0x0,6
tick,0x7d8294d2a042,1306213,0,0x0,6
tick,0x7d8294d2a042,1307273,0,0x0,6
tick,0x7d8294d2a042,1308336,0,0x0,6
tick,0x7d8294d2a042,1309317,0,0x0,6
tick,0x7d8294d2a042,1310375,0,0x0,6
tick,0x7d8294d2a042,1311401,0,0x0,6
tick,0x7d8294d2a042,1312547,0,0x0,6
tick,0x7d8294d2a042,1313605,0,0x0,6
tick,0x7d8294d2a042,1314595,0,0x0,6
tick,0x7d8294d2a042,1315722,0,0x0,6
tick,0x7d8294d2a042,1316779,0,0x0,6
tick,0x7d8294d2a042,1317845,0,0x0,6
tick,0x7d8294d2a042,1318914,0,0x0,6
tick,0x7d8294d2a042,1319885,0,0x0,6
tick,0x7d8294d2a042,1320948,0,0x0,6
tick,0x7d8294d2a042,1322093,0,0x0,6
tick,0x7d8294d2a042,1323143,0,0x0,6
tick,0x7d8294d2a042,1324199,0,0x0,6
tick,0x7d8294d2a042,1325266,0,0x0,6
tick,0x7d8294d2a042,1326328,0,0x0,6
tick,0x7d8294d2a042,1327391,0,0x0,6
tick,0x7d8294d2a042,1328440,0,0x0,6
tick,0x7d8294d2a042,1329499,0,0x0,6
tick,0x7d8294d2a042,1330558,0,0x0,6
tick,0x7d8294d2a042,1331570,0,0x0,6
tick,0x7d8294d2a042,1332691,0,0x0,6
tick,0x7d8294d2a042,1333756,0,0x0,6
tick,0x7d8294d2a042,1334804,0,0x0,6
tick,0x7d8294d2a042,1335849,0,0x0,6
tick,0x7d8294d2a042,1336919,0,0x0,6
tick,0x7d8294d2a042,1337976,0,0x0,6
tick,0x7d8294d2a042,1339038,0,0x0,6
tick,0x7d8294d2a042,1340103,0,0x0,6
tick,0x7d8294d2a042,1341158,0,0x0,6
tick,0x7d8294d2a042,1342220,0,0x0,6
tick,0x7d8294d2a042,1343288,0,0x0,6
tick,0x7d8294d2a042,1344339,0,0x0,6
tick,0x7d8294d2a042,1345399,0,0x0,6
tick,0x7d8294d2a042,1346383,0,0x0,6
tick,0x7d8294d2a042,1347490,0,0x0,6
tick,0x7d8294d2a042,1348547,0,0x0,6
tick,0x7d8294d2a042,1349592,0,0x0,6
tick,0x7d8294d2a042,1350652,0,0x0,6
tick,0x7d8294d2a042,1351660,0,0x0,6
tick,0x7d8294d2a042,1352782,0,0x0,6
tick,0x7d8294d2a042,1353835,0,0x0,6
tick,0x7d8294d2a042,1354895,0,0x0,6
tick,0x7d8294d2a042,1355947,0,0x0,6
tick,0x7d8294d2a042,1357021,0,0x0,6
tick,0x7d8294d2a042,1358093,0,0x0,6
tick,0x7d8294d2a042,1359131,0,0x0,6
tick,0x7d8294d2a042,1360196,0,0x0,6
tick,0x7d8294d2a042,1361186,0,0x0,6
tick,0x7d8294d2a042,1362244,0,0x0,6
tick,0x7d8294d2a042,1363305,0,0x0,6
tick,0x7d8294d2a042,1364546,0,0x0,6
tick,0x7d8294d2a042,1365596,0,0x0,6
tick,0x7d8294d2a042,1366649,0,0x0,6
tick,0x7d8294d2a042,1367650,0,0x0,6
tick,0x7d8294d2a042,1368784,0,0x0,6
tick,0x7d8294d2a042,1369820,0,0x0,6
tick,0x7d8294d2a042,1370813,0,0x0,6
tick,0x7d8294d2a042,1371871,0,0x0,6
tick,0x7d8294d2a042,1373015,0,0x0,6
tick,0x7d8294d2a042,1374065,0,0x0,6
tick,0x7d8294d2a042,1375123,0,0x0,6
tick,0x7d8294d2a042,1376185,0,0x0,6
tick,0x7d8294d2a042,1377243,0,0x0,6
tick,0x7d8294d2a042,1378232,0,0x0,6
tick,0x7d8294d2a042,1379293,0,0x0,6
tick,0x7d8294d2a042,1380360,0,0x0,6
tick,0x7d8294d2a042,1381503,0,0x0,6
tick,0x7d8294d2a042,1382476,0,0x0,6
tick,0x7d8294d2a042,1383667,0,0x0,6
tick,0x7d8294d2a042,1384664,0,0x0,6
tick,0x7d8294d2a042,1385731,0,0x0,6
tick,0x7d8294d2a042,1386800,0,0x0,6
tick,0x7d8294d2a042,1387839,0,0x0,6
tick,0x7d8294d2a042,1388906,0,0x0,6
tick,0x7d8294d2a042,1389982,0,0x0,6
tick,0x7d8294d2a042,1391031,0,0x0,6
tick,0x7d8294d2a042,1392079,0,0x0,6
tick,0x7d8294d2a042,1393148,0,0x0,6
tick,0x7d8294d2a042,1394206,0,0x0,6
tick,0x7d8294d2a042,1395269,0,0x0,6
tick,0x7d8294d2a042,1396328,0,0x0,6
tick,0x7d8294d2a042,1397319,0,0x0,6
tick,0x7d8294d2a042,1398381,0,0x0,6
tick,0x7d8294d2a042,1399398,0,0x0,6
tick,0x7d8294d2a042,1400540,0,0x0,6
tick,0x7d8294d2a042,1401598,0,0x0,6
tick,0x7d8294d2a042,1402665,0,0x0,6
tick,0x7d8294d2a042,1403662,0,0x0,6
tick,0x7d8294d2a042,1404794,0,0x0,6
tick,0x7d8294d2a042,1405841,0,0x0,6
tick,0x7d8294d2a042,1406887,0,0x0,6
tick,0x7d8294d2a042,1407886,0,0x0,6
tick,0x7d8294d2a042,1409012,0,0x0,6
tick,0x7d8294d2a042,1410090,0,0x0,6
tick,0x7d8294d2a042,1411146,0,0x0,6
tick,0x7d8294d2a042,1412196,0,0x0,6
tick,0x7d8294d2a042,1413257,0,0x0,6
tick,0x7d8294d2a042,1414255,0,0x0,6
tick,0x7d8294d2a042,1415307,0,0x0,6
tick,0x7d8294d2a042,1416438,0,0x0,6
tick,0x7d8294d2a042,1417499,0,0x0,6
tick,0x7d8294d2a042,1418562,0,0x0,6
tick,0x7d8294d2a042,1419562,0,0x0,6
tick,0x7d8294d2a042,1420682,0,0x0,6
tick,0x7d8294d2a042,1421737,0,0x0,6
tick,0x7d8294d2a042,1422733,0,0x0,6
tick,0x7d8294d2a042,1423852,0,0x0,6
tick,0x7d8294d2a042,1424921,0,0x0,6
tick,0x7d8294d2a042,1425990,0,0x0,6
tick,0x7d8294d2a042,1427047,0,0x0,6
tick,0x7d8294d2a042,1428097,0,0x0,6
tick,0x7d8294d2a042,1429158,0,0x0,6
tick,0x7d8294d2a042,1430216,0,0x0,6
tick,0x7d8294d2a042,1431275,0,0x0,6
tick,0x7d8294d2a042,1432341,0,0x0,6
tick,0x7d8294d2a042,1433397,0,0x0,6
tick,0x7d8294d2a042,1434456,0,0x0,6
tick,0x7d8294d2a042,1435499,0,0x0,6
tick,0x7d8294d2a042,1436544,0,0x0,6
tick,0x7d8294d2a042,1437594,0,0x0,6
tick,0x7d8294d2a042,1438650,0,0x0,6
tick,0x7d8294d2a042,1439659,0,0x0,6
tick,0x7d8294d2a042,1440774,0,0x0,6
tick,0x7d8294d2a042,1441822,0,0x0,6
tick,0x7d8294d2a042,1442882,0,0x0,6
tick,0x7d8294d2a042,1443870,0,0x0,6
tick,0x7d8294d2a042,1444928,0,0x0,6
tick,0x7d8294d2a042,1446007,0,0x0,6
tick,0x7d8294d2a042,1447111,0,0x0,6
tick,0x7d8294d2a042,1448185,0,0x0,6
tick,0x7d8294d2a042,1449236,0,0x0,6
tick,0x7d8294d2a042,1450222,0,0x0,6
tick,0x7d8294d2a042,1451281,0,0x0,6
tick,0x7d8294d2a042,1452408,0,0x0,6
tick,0x7d8294d2a042,1453464,0,0x0,6
tick,0x7d8294d2a042,1454538,0,0x0,6
tick,0x7d8294d2a042,1455482,0,0x0,6
tick,0x7d8294d2a042,1456647,0,0x0,6
tick,0x7d8294d2a042,1457704,0,0x0,6
tick,0x7d8294d2a042,1458758,0,0x0,6
tick,0x7d8294d2a042,1459803,0,0x0,6
tick,0x7d8294d2a042,1460858,0,0x0,6
tick,0x7d8294d2a042,1461922,0,0x0,6
tick,0x7d8294d2a042,1462988,0,0x0,6
tick,0x7d8294d2a042,1464030,0,0x0,6
tick,0x7d8294d2a042,1465031,0,0x0,6
tick,0x7d8294d2a042,1466089,0,0x0,6
tick,0x7d8294d2a042,1467150,0,0x0,6
tick,0x7d8294d2a042,1468288,0,0x0,6
tick,0x7d8294d2a042,1469331,0,0x0,6
tick,0x7d8294d2a042,1470409,0,0x0,6
tick,0x7d8294d2a042,1471483,0,0x0,6
tick,0x7d8294d2a042,1472598,0,0x0,6
tick,0x7d8294d2a042,1473656,0,0x0,6
tick,0x7d8294d2a042,1474641,0,0x0,6
tick,0x7d8294d2a042,1475699,0,0x0,6
tick,0x7d8294d2a042,1476831,0,0x0,6
tick,0x7d8294d2a042,1477901,0,0x0,6
tick,0x7d8294d2a042,1478950,0,0x0,6
tick,0x7d8294d2a042,1479944,0,0x0,6
tick,0x7d8294d2a042,1481010,0,0x0,6
tick,0x7d8294d2a042,1482053,0,0x0,6
tick,0x7d8294d2a042,1483099,0,0x0,6
tick,0x7d8294d2a042,1484258,0,0x0,6
tick,0x7d8294d2a042,1485390,0,0x0,6
tick,0x7d8294d2a042,1486414,0,0x0,6
tick,0x7d8294d2a042,1487484,0,0x0,6
tick,0x7d8294d2a042,1488538,0,0x0,6
tick,0x7d8294d2a042,1489608,0,0x0,6
tick,0x7d8294d2a042,1490517,0,0x0,6
tick,0x7d8294d2a042,1491623,0,0x0,6
tick,0x7d8294d2a042,1492735,0,0x0,6
tick,0x7d8294d2a042,1493899,0,0x0,6
tick,0x7d8294d2a042,1494918,0,0x0,6
tick,0x7d8294d2a042,1496070,0,0x0,6
tick,0x7d8294d2a042,1497104,0,0x0,6
tick,0x7d8294d2a042,1498131,0,0x0,6
tick,0x7d8294d2a042,1499144,0,0x0,6
tick,0x7d8294d2a042,1500254,0,0x0,6
tick,0x7d8294d2a042,1501335,0,0x0,6
tick,0x7d8294d2a042,1502339,0,0x0,6
tick,0x7d8294d2a042,1503387,0,0x0,6
tick,0x7d8294d2a042,1504472,0,0x0,6
tick,0x7d8294d2a042,1505544,0,0x0,6
tick,0x7d8294d2a042,1506625,0,0x0,6
tick,0x7d8294d2a042,1507628,0,0x0,6
tick,0x7d8294d2a042,1508765,0,0x0,6
tick,0x7d8294d2a042,1509949,0,0x0,6
tick,0x7d8294d2a042,1510954,0,0x0,6
tick,0x7d8294d2a042,1511960,0,0x0,6
tick,0x7d8294d2a042,1513022,0,0x0,6
tick,0x7d8294d2a042,1514092,0,0x0,6
tick,0x7d8294d2a042,1515126,0,0x0,6
tick,0x7d8294d2a042,1516165,0,0x0,6
tick,0x7d8294d2a042,1517312,0,0x0,6
tick,0x7d8294d2a042,1518387,0,0x0,6
tick,0x7d8294d2a042,1519344,0,0x0,6
tick,0x7d8294d2a042,1520481,0,0x0,6
tick,0x7d8294d2a042,1521465,0,0x0,6
tick,0x7d8294d2a042,1522541,0,0x0,6
tick,0x7d8294d2a042,1523548,0,0x0,6
tick,0x7d8294d2a042,1524622,0,0x0,6
tick,0x7d8294d2a042,1525646,0,0x0,6
tick,0x7d8294d2a042,1526741,0,0x0,6
tick,0x7d8294d2a042,1527907,0,0x0,6
tick,0x7d8294d2a042,1528994,0,0x0,6
tick,0x7d8294d2a042,1530021,0,0x0,6
tick,0x7d8294d2a042,1531026,0,0x0,6
tick,0x7d8294d2a042,1532021,0,0x0,6
tick,0x7d8294d2a042,1533161,0,0x0,6
tick,0x7d8294d2a042,1534219,0,0x0,6
tick,0x7d8294d2a042,1535286,0,0x0,6
tick,0x7d8294d2a042,1536396,0,0x0,6
tick,0x7d8294d2a042,1537523,0,0x0,6
tick,0x7d8294d2a042,1538463,0,0x0,6
tick,0x7d8294d2a042,1539490,0,0x0,6
tick,0x7d8294d2a042,1540569,0,0x0,6
tick,0x7d8294d2a042,1541697,0,0x0,6
tick,0x7d8294d2a042,1542614,0,0x0,6
tick,0x7d8294d2a042,1543763,0,0x0,6
tick,0x7d8294d2a042,1544790,0,0x0,6
tick,0x7d8294d2a042,1545984,0,0x0,6
tick,0x7d8294d2a042,1546868,0,0x0,6
tick,0x7d8294d2a042,1547933,0,0x0,6
tick,0x7d8294d2a042,1549028,0,0x0,6
tick,0x7d8294d2a042,1550048,0,0x0,6
tick,0x7d8294d2a042,1551130,0,0x0,6
tick,0x7d8294d2a042,1552157,0,0x0,6
tick,0x7d8294d2a042,1553234,0,0x0,6
tick,0x7d8294d2a042,1554323,0,0x0,6
tick,0x7d8294d2a042,1555359,0,0x0,6
tick,0x7d8294d2a042,1556510,0,0x0,6
tick,0x7d8294d2a042,1557550,0,0x0,6
tick,0x7d8294d2a042,1558557,0,0x0,6
tick,0x7d8294d2a042,1559591,0,0x0,6
tick,0x7d8294d2a042,1560722,0,0x0,6
tick,0x7d8294d2a042,1561788,0,0x0,6
tick,0x7d8294d2a042,1562809,0,0x0,6
tick,0x7d8294d2a042,1563911,0,0x0,6
tick,0x7d8294d2a042,1564968,0,0x0,6
tick,0x7d8294d2a042,1566023,0,0x0,6
tick,0x7d8294d2a042,1566998,0,0x0,6
tick,0x7d8294d2a042,1568074,0,0x0,6
tick,0x7d8294d2a042,1569128,0,0x0,6
tick,0x7d8294d2a042,1570183,0,0x0,6
tick,0x7d8294d2a042,1571321,0,0x0,6
tick,0x7d8294d2a042,1572282,0,0x0,6
tick,0x7d8294d2a042,1573474,0,0x0,6
tick,0x7d8294d2a042,1574551,0,0x0,6
tick,0x7d8294d2a042,1575515,0,0x0,6
tick,0x7d8294d2a042,1576554,0,0x0,6
tick,0x7d8294d2a042,1577598,0,0x0,6
tick,0x7d8294d2a042,1578650,0,0x0,6
tick,0x7d8294d2a042,1579709,0,0x0,6
tick,0x7d8294d2a042,1580844,0,0x0,6
tick,0x7d8294d2a042,1581902,0,0x0,6
tick,0x7d8294d2a042,1582953,0,0x0,6
tick,0x7d8294d2a042,1584001,0,0x0,6
tick,0x7d8294d2a042,1585078,0,0x0,6
tick,0x7d8294d2a042,1586138,0,0x0,6
tick,0x7d8294d2a042,1587189,0,0x0,6
tick,0x7d8294d2a042,1588177,0,0x0,6
tick,0x7d8294d2a042,1589236,0,0x0,6
tick,0x7d8294d2a042,1590353,0,0x0,6
tick,0x7d8294d2a042,1591456,0,0x0,6
tick,0x7d8294d2a042,1592498,0,0x0,6
tick,0x7d8294d2a042,1593523,0,0x0,6
tick,0x7d8294d2a042,1594553,0,0x0,6
tick,0x7d8294d2a042,1595503,0,0x0,6
tick,0x7d8294d2a042,1596747,0,0x0,6
tick,0x7d8294d2a042,1597689,0,0x0,6
tick,0x7d8294d2a042,1598808,0,0x0,6
tick,0x7d8294d2a042,1599900,0,0x0,6
tick,0x7d8294d2a042,1600961,0,0x0,6
tick,0x7d8294d2a042,1601997,0,0x0,6
tick,0x7d8294d2a042,1603026,0,0x0,6
tick,0x7d8294d2a042,1604105,0,0x0,6
tick,0x7d8294d2a042,1605165,0,0x0,6
tick,0x7d8294d2a042,1606225,0,0x0,6
tick,0x7d8294d2a042,1607346,0,0x0,6
tick,0x7d8294d2a042,1608389,0,0x0,6
tick,0x7d8294d2a042,1609444,0,0x0,6
tick,0x7d8294d2a042,1610559,0,0x0,6
tick,0x7d8294d2a042,1611592,0,0x0,6
tick,0x7d8294d2a042,1612606,0,0x0,6
tick,0x7d8294d2a042,1613679,0,0x0,6
tick,0x7d8294d2a042,1614743,0,0x0,6
tick,0x7d8294d2a042,1615664,0,0x0,6
tick,0x7d8294d2a042,1616874,0,0x0,6
tick,0x7d8294d2a042,1617921,0,0x0,6
tick,0x7d8294d2a042,1618979,0,0x0,6
tick,0x7d8294d2a042,1620032,0,0x0,6
tick,0x7d8294d2a042,1621110,0,0x0,6
tick,0x7d8294d2a042,1622167,0,0x0,6
tick,0x7d8294d2a042,1623231,0,0x0,6
tick,0x7d8294d2a042,1624297,0,0x0,6
tick,0x7d8294d2a042,1625346,0,0x0,6
tick,0x7d8294d2a042,1626402,0,0x0,6
tick,0x7d8294d2a042,1627485,0,0x0,6
tick,0x7d8294d2a042,1628527,0,0x0,6
tick,0x7d8294d2a042,1629583,0,0x0,6
tick,0x7d8294d2a042,1630609,0,0x0,6
tick,0x7d8294d2a042,1631660,0,0x0,6
tick,0x7d8294d2a042,1632806,0,0x0,6
tick,0x7d8294d2a042,1633861,0,0x0,6
tick,0x7d8294d2a042,1634934,0,0x0,6
tick,0x7d8294d2a042,1635992,0,0x0,6
tick,0x7d8294d2a042,1637040,0,0x0,6
tick,0x7d8294d2a042,1638120,0,0x0,6
tick,0x7d8294d2a042,1639181,0,0x0,6
tick,0x7d8294d2a042,1640171,0,0x0,6
tick,0x7d8294d2a042,1641200,0,0x0,6
tick,0x7d8294d2a042,1642313,0,0x0,6
tick,0x7d8294d2a042,1643437,0,0x0,6
tick,0x7d8294d2a042,1644344,0,0x0,6
tick,0x7d8294d2a042,1645537,0,0x0,6
tick,0x7d8294d2a042,1646542,0,0x0,6
tick,0x7d8294d2a042,1647581,0,0x0,6
tick,0x7d8294d2a042,1648801,0,0x0,6
tick,0x7d8294d2a042,1649789,0,0x0,6
tick,0x7d8294d2a042,1650858,0,0x0,6
tick,0x7d8294d2a042,1651934,0,0x0,6
tick,0x7d8294d2a042,1653164,0,0x0,6
tick,0x7d8294d2a042,1654261,0,0x0,6
tick,0x7d8294d2a042,1655408,0,0x0,6
tick,0x7d8294d2a042,1656560,0,0x0,6
tick,0x7d8294d2a042,1657569,0,0x0,6
tick,0x7d8294d2a042,1658570,0,0x0,6
tick,0x7d8294d2a042,1659719,0,0x0,6
tick,0x7d8294d2a042,1660930,0,0x0,6
tick,0x7d8294d2a042,1661976,0,0x0,6
tick,0x7d8294d2a042,1663000,0,0x0,6
tick,0x7d8294d2a042,1664076,0,0x0,6
tick,0x7d8294d2a042,1665187,0,0x0,6
tick,0x7d8294d2a042,1666187,0,0x0,6
tick,0x7d8294d2a042,1667273,0,0x0,6
tick,0x7d8294d2a042,1668484,0,0x0,6
tick,0x7d8294d2a042,1669601,0,0x0,6
tick,0x7d8294d2a042,1670591,0,0x0,6
tick,0x7d8294d2a042,1671582,0,0x0,6
tick,0x7d8294d2a042,1672866,0,0x0,6
tick,0x7d8294d2a042,1673973,0,0x0,6
tick,0x7d8294d2a042,1674930,0,0x0,6
tick,0x7d8294d2a042,1676093,0,0x0,6
tick,0x7d8294d2a042,1677189,0,0x0,6
tick,0x7d8294d2a042,1678100,0,0x0,6
tick,0x7d8294d2a042,1679195,0,0x0,6
tick,0x7d8294d2a042,1680333,0,0x0,6
tick,0x7d8294d2a042,1681393,0,0x0,6
tick,0x7d8294d2a042,1682382,0,0x0,6
tick,0x7d8294d2a042,1683427,0,0x0,6
tick,0x7d8294d2a042,1684563,0,0x0,6
tick,0x7d8294d2a042,1685617,0,0x0,6
tick,0x7d8294d2a042,1686707,0,0x0,6
tick,0x7d8294d2a042,1687593,0,0x0,6
tick,0x7d8294d2a042,1688808,0,0x0,6
tick,0x7d8294d2a042,1689863,0,0x0,6
tick,0x7d8294d2a042,1690924,0,0x0,6
tick,0x7d8294d2a042,1691966,0,0x0,6
tick,0x7d8294d2a042,1693023,0,0x0,6
tick,0x7d8294d2a042,1694028,0,0x0,6
tick,0x7d8294d2a042,1695131,0,0x0,6
tick,0x7d8294d2a042,1696182,0,0x0,6
tick,0x7d8294d2a042,1697256,0,0x0,6
tick,0x7d8294d2a042,1698328,0,0x0,6
tick,0x7d8294d2a042,1699387,0,0x0,6
tick,0x7d8294d2a042,1700431,0,0x0,6
tick,0x7d8294d2a042,1701480,0,0x0,6
tick,0x7d8294d2a042,1702487,0,0x0,6
tick,0x7d8294d2a042,1703561,0,0x0,6
tick,0x7d8294d2a042,1704671,0,0x0,6
tick,0x7d8294d2a042,1705732,0,0x0,6
tick,0x7d8294d2a042,1706791,0,0x0,6
tick,0x7d8294d2a042,1707808,0,0x0,6
tick,0x7d8294d2a042,1708871,0,0x0,6
tick,0x7d8294d2a042,1709981,0,0x0,6
tick,0x7d8294d2a042,1710966,0,0x0,6
tick,0x7d8294d2a042,1712099,0,0x0,6
tick,0x7d8294d2a042,1713179,0,0x0,6
tick,0x7d8294d2a042,1714222,0,0x0,6
tick,0x7d8294d2a042,1715197,0,0x0,6
tick,0x7d8294d2a042,1716356,0,0x0,6
tick,0x7d8294d2a042,1717418,0,0x0,6
tick,0x7d8294d2a042,1718339,0,0x0,6
tick,0x7d8294d2a042,1719421,0,0x0,6
tick,0x7d8294d2a042,1720572,0,0x0,6
tick,0x7d8294d2a042,1721661,0,0x0,6
tick,0x7d8294d2a042,1722659,0,0x0,6
tick,0x7d8294d2a042,1723709,0,0x0,6
tick,0x7d8294d2a042,1724841,0,0x0,6
tick,0x7d8294d2a042,1725902,0,0x0,6
tick,0x7d8294d2a042,1726809,0,0x0,6
tick,0x7d8294d2a042,1728042,0,0x0,6
tick,0x7d8294d2a042,1729086,0,0x0,6
tick,0x7d8294d2a042,1730103,0,0x0,6
tick,0x7d8294d2a042,1731150,0,0x0,6
tick,0x7d8294d2a042,1732270,0,0x0,6
tick,0x7d8294d2a042,1733318,0,0x0,6
tick,0x7d8294d2a042,1734323,0,0x0,6
tick,0x7d8294d2a042,1735410,0,0x0,6
tick,0x7d8294d2a042,1736520,0,0x0,6
tick,0x7d8294d2a042,1737509,0,0x0,6
tick,0x7d8294d2a042,1738566,0,0x0,6
tick,0x7d8294d2a042,1739596,0,0x0,6
tick,0x7d8294d2a042,1740767,0,0x0,6
tick,0x7d8294d2a042,1741813,0,0x0,6
tick,0x7d8294d2a042,1742811,0,0x0,6
tick,0x7d8294d2a042,1743927,0,0x0,6
tick,0x7d8294d2a042,1744981,0,0x0,6
tick,0x7d8294d2a042,1745980,0,0x0,6
tick,0x7d8294d2a042,1747002,0,0x0,6
tick,0x7d8294d2a042,1748192,0,0x0,6
tick,0x7d8294d2a042,1749242,0,0x0,6
tick,0x7d8294d2a042,1750228,0,0x0,6
tick,0x7d8294d2a042,1751231,0,0x0,6
tick,0x7d8294d2a042,1752436,0,0x0,6
tick,0x7d8294d2a042,1753407,0,0x0,6
tick,0x7d8294d2a042,1754417,0,0x0,6
tick,0x7d8294d2a042,1755527,0,0x0,6
tick,0x7d8294d2a042,1756680,0,0x0,6
tick,0x7d8294d2a042,1757692,0,0x0,6
tick,0x7d8294d2a042,1758661,0,0x0,6
tick,0x7d8294d2a042,1759879,0,0x0,6
tick,0x7d8294d2a042,1760918,0,0x0,6
tick,0x7d8294d2a042,1761822,0,0x0,6
tick,0x7d8294d2a042,1762899,0,0x0,6
tick,0x7d8294d2a042,1764114,0,0x0,6
tick,0x7d8294d2a042,1765143,0,0x0,6
tick,0x7d8294d2a042,1766087,0,0x0,6
tick,0x7d8294d2a042,1767141,0,0x0,6
tick,0x7d8294d2a042,1768330,0,0x0,6
tick,0x7d8294d2a042,1769400,0,0x0,6
tick,0x7d8294d2a042,1770305,0,0x0,6
tick,0x7d8294d2a042,1771415,0,0x0,6
tick,0x7d8294d2a042,1772585,0,0x0,6
tick,0x7d8294d2a042,1773637,0,0x0,6
tick,0x7d8294d2a042,1774572,0,0x0,6
tick,0x7d8294d2a042,1775671,0,0x0,6
tick,0x7d8294d2a042,1776831,0,0x0,6
tick,0x7d8294d2a042,1777880,0,0x0,6
tick,0x7d8294d2a042,1778945,0,0x0,6
tick,0x7d8294d2a042,1780009,0,0x0,6
tick,0x7d8294d2a042,1781074,0,0x0,6
tick,0x7d8294d2a042,1782132,0,0x0,6
tick,0x7d8294d2a042,1783205,0,0x0,6
tick,0x7d8294d2a042,1784263,0,0x0,6
tick,0x7d8294d2a042,1785311,0,0x0,6
tick,0x7d8294d2a042,1786370,0,0x0,6
tick,0x7d8294d2a042,1787375,0,0x0,6
tick,0x7d8294d2a042,1788500,0,0x0,6
tick,0x7d8294d2a042,1789554,0,0x0,6
tick,0x7d8294d2a042,1790631,0,0x0,6
tick,0x7d8294d2a042,1791497,0,0x0,6
tick,0x7d8294d2a042,1792742,0,0x0,6
tick,0x7d8294d2a042,1793723,0,0x0,6
tick,0x7d8294d2a042,1794799,0,0x0,6
tick,0x7d8294d2a042,1795910,0,0x0,6
tick,0x7d8294d2a042,1796959,0,0x0,6
tick,0x7d8294d2a042,1798127,0,0x0,6
tick,0x7d8294d2a042,1799279,0,0x0,6
tick,0x7d8294d2a042,1800340,0,0x0,6
tick,0x7d8294d2a042,1801322,0,0x0,6
tick,0x7d8294d2a042,1802397,0,0x0,6
tick,0x7d8294d2a042,1803499,0,0x0,6
tick,0x7d8294d2a042,1804553,0,0x0,6
tick,0x7d8294d2a042,1805607,0,0x0,6
tick,0x7d8294d2a042,1806742,0,0x0,6
tick,0x7d8294d2a042,1807788,0,0x0,6
tick,0x7d8294d2a042,1808850,0,0x0,6
tick,0x7d8294d2a042,1809917,0,0x0,6
tick,0x7d8294d2a042,1810960,0,0x0,6
tick,0x7d8294d2a042,1812027,0,0x0,6
tick,0x7d8294d2a042,1813014,0,0x0,6
tick,0x7d8294d2a042,1814079,0,0x0,6
tick,0x7d8294d2a042,1815125,0,0x0,6
tick,0x7d8294d2a042,1816262,0,0x0,6
tick,0x7d8294d2a042,1817310,0,0x0,6
tick,0x7d8294d2a042,1818397,0,0x0,6
tick,0x7d8294d2a042,1819440,0,0x0,6
tick,0x7d8294d2a042,1820513,0,0x0,6
tick,0x7d8294d2a042,1821500,0,0x0,6
tick,0x7d8294d2a042,1822564,0,0x0,6
tick,0x7d8294d2a042,1823587,0,0x0,6
tick,0x7d8294d2a042,1824746,0,0x0,6
tick,0x7d8294d2a042,1825805,0,0x0,6
tick,0x7d8294d2a042,1826879,0,0x0,6
tick,0x7d8294d2a042,1827854,0,0x0,6
tick,0x7d8294d2a042,1828990,0,0x0,6
tick,0x7d8294d2a042,1829991,0,0x0,6
tick,0x7d8294d2a042,1831128,0,0x0,6
tick,0x7d8294d2a042,1832102,0,0x0,6
tick,0x7d8294d2a042,1833239,0,0x0,6
tick,0x7d8294d2a042,1834223,0,0x0,6
tick,0x7d8294d2a042,1835305,0,0x0,6
tick,0x7d8294d2a042,1836439,0,0x0,6
tick,0x7d8294d2a042,1837496,0,0x0,6
tick,0x7d8294d2a042,1838481,0,0x0,6
tick,0x7d8294d2a042,1839510,0,0x0,6
tick,0x7d8294d2a042,1840673,0,0x0,6
tick,0x7d8294d2a042,1841731,0,0x0,6
tick,0x7d8294d2a042,1842794,0,0x0,6
tick,0x7d8294d2a042,1843860,0,0x0,6
tick,0x7d8294d2a042,1844925,0,0x0,6
tick,0x7d8294d2a042,1845977,0,0x0,6
tick,0x7d8294d2a042,1847037,0,0x0,6
tick,0x7d8294d2a042,1848031,0,0x0,6
tick,0x7d8294d2a042,1849162,0,0x0,6
tick,0x7d8294d2a042,1850156,0,0x0,6
tick,0x7d8294d2a042,1851290,0,0x0,6
tick,0x7d8294d2a042,1852350,0,0x0,6
tick,0x7d8294d2a042,1853415,0,0x0,6
tick,0x7d8294d2a042,1854479,0,0x0,6
tick,0x7d8294d2a042,1855503,0,0x0,6
tick,0x7d8294d2a042,1856587,0,0x0,6
tick,0x7d8294d2a042,1857649,0,0x0,6
tick,0x7d8294d2a042,1858728,0,0x0,6
tick,0x7d8294d2a042,1859774,0,0x0,6
tick,0x7d8294d2a042,1860829,0,0x0,6
tick,0x7d8294d2a042,1861894,0,0x0,6
tick,0x7d8294d2a042,1862958,0,0x0,6
tick,0x7d8294d2a042,1864018,0,0x0,6
tick,0x7d8294d2a042,1865071,0,0x0,6
tick,0x7d8294d2a042,1866132,0,0x0,6
tick,0x7d8294d2a042,1867123,0,0x0,6
tick,0x7d8294d2a042,1868259,0,0x0,6
tick,0x7d8294d2a042,1869322,0,0x0,6
tick,0x7d8294d2a042,1870309,0,0x0,6
tick,0x7d8294d2a042,1871381,0,0x0,6
tick,0x7d8294d2a042,1872506,0,0x0,6
tick,0x7d8294d2a042,1873566,0,0x0,6
tick,0x7d8294d2a042,1874630,0,0x0,6
tick,0x7d8294d2a042,1875640,0,0x0,6
tick,0x7d8294d2a042,1876687,0,0x0,6
tick,0x7d8294d2a042,1877810,0,0x0,6
tick,0x7d8294d2a042,1878870,0,0x0,6
tick,0x7d8294d2a042,1879864,0,0x0,6
tick,0x7d8294d2a042,1880924,0,0x0,6
tick,0x7d8294d2a042,1882058,0,0x0,6
tick,0x7d8294d2a042,1883119,0,0x0,6
tick,0x7d8294d2a042,1884179,0,0x0,6
tick,0x7d8294d2a042,1885173,0,0x0,6
tick,0x7d8294d2a042,1886308,0,0x0,6
tick,0x7d8294d2a042,1887378,0,0x0,6
tick,0x7d8294d2a042,1888358,0,0x0,6
tick,0x7d8294d2a042,1889500,0,0x0,6
tick,0x7d8294d2a042,1890480,0,0x0,6
tick,0x7d8294d2a042,1891561,0,0x0,6
tick,0x7d8294d2a042,1892675,0,0x0,6
tick,0x7d8294d2a042,1893732,0,0x0,6
tick,0x7d8294d2a042,1894725,0,0x0,6
tick,0x7d8294d2a042,1895858,0,0x0,6
tick,0x7d8294d2a042,1896922,0,0x0,6
tick,0x7d8294d2a042,1897990,0,0x0,6
tick,0x7d8294d2a042,1899087,0,0x0,6
tick,0x7d8294d2a042,1900119,0,0x0,6
tick,0x7d8294d2a042,1901170,0,0x0,6
tick,0x7d8294d2a042,1902224,0,0x0,6
tick,0x7d8294d2a042,1903285,0,0x0,6
tick,0x7d8294d2a042,1904279,0,0x0,6
tick,0x7d8294d2a042,1905341,0,0x0,6
tick,0x7d8294d2a042,1906473,0,0x0,6
tick,0x7d8294d2a042,1907557,0,0x0,6
tick,0x7d8294d2a042,1908594,0,0x0,6
tick,0x7d8294d2a042,1909665,0,0x0,6
tick,0x7d8294d2a042,1910645,0,0x0,6
tick,0x7d8294d2a042,1911707,0,0x0,6
tick,0x7d8294d2a042,1912840,0,0x0,6
tick,0x7d8294d2a042,1913903,0,0x0,6
tick,0x7d8294d2a042,1914978,0,0x0,6
tick,0x7d8294d2a042,1916027,0,0x0,6
tick,0x7d8294d2a042,1917079,0,0x0,6
tick,0x7d8294d2a042,1918145,0,0x0,6
tick,0x7d8294d2a042,1919203,0,0x0,6
tick,0x7d8294d2a042,1920196,0,0x0,6
tick,0x7d8294d2a042,1921321,0,0x0,6
tick,0x7d8294d2a042,1922382,0,0x0,6
tick,0x7d8294d2a042,1923444,0,0x0,6
tick,0x7d8294d2a042,1924524,0,0x0,6
tick,0x7d8294d2a042,1925571,0,0x0,6
tick,0x7d8294d2a042,1926559,0,0x0,6
tick,0x7d8294d2a042,1927589,0,0x0,6
tick,0x7d8294d2a042,1928755,0,0x0,6
tick,0x7d8294d2a042,1929815,0,0x0,6
tick,0x7d8294d2a042,1930873,0,0x0,6
tick,0x7d8294d2a042,1931949,0,0x0,6
tick,0x7d8294d2a042,1932996,0,0x0,6
tick,0x7d8294d2a042,1934054,0,0x0,6
tick,0x7d8294d2a042,1935117,0,0x0,6
tick,0x7d8294d2a042,1936115,0,0x0,6
tick,0x7d8294d2a042,1937170,0,0x0,6
tick,0x7d8294d2a042,1938304,0,0x0,6
tick,0x7d8294d2a042,1939369,0,0x0,6
tick,0x7d8294d2a042,1940431,0,0x0,6
tick,0x7d8294d2a042,1941485,0,0x0,6
tick,0x7d8294d2a042,1942546,0,0x0,6
tick,0x7d8294d2a042,1943511,0,0x0,6
tick,0x7d8294d2a042,1944688,0,0x0,6
tick,0x7d8294d2a042,1945748,0,0x0,6
tick,0x7d8294d2a042,1946793,0,0x0,6
tick,0x7d8294d2a042,1947851,0,0x0,6
tick,0x7d8294d2a042,1948916,0,0x0,6
tick,0x7d8294d2a042,1949980,0,0x0,6
tick,0x7d8294d2a042,1951047,0,0x0,6
tick,0x7d8294d2a042,1952032,0,0x0,6
tick,0x7d8294d2a042,1953096,0,0x0,6
tick,0x7d8294d2a042,1954225,0,0x0,6
tick,0x7d8294d2a042,1955282,0,0x0,6
tick,0x7d8294d2a042,1956348,0,0x0,6
tick,0x7d8294d2a042,1957412,0,0x0,6
tick,0x7d8294d2a042,1958469,0,0x0,6
tick,0x7d8294d2a042,1959430,0,0x0,6
tick,0x7d8294d2a042,1960598,0,0x0,6
tick,0x7d8294d2a042,1961651,0,0x0,6
tick,0x7d8294d2a042,1962713,0,0x0,6
tick,0x7d8294d2a042,1963764,0,0x0,6
tick,0x7d8294d2a042,1964830,0,0x0,6
tick,0x7d8294d2a042,1965890,0,0x0,6
tick,0x7d8294d2a042,1966951,0,0x0,6
tick,0x7d8294d2a042,1967944,0,0x0,6
tick,0x7d8294d2a042,1969006,0,0x0,6
tick,0x7d8294d2a042,1970137,0,0x0,6
tick,0x7d8294d2a042,1971198,0,0x0,6
tick,0x7d8294d2a042,1972265,0,0x0,6
tick,0x7d8294d2a042,1973321,0,0x0,6
tick,0x7d8294d2a042,1974312,0,0x0,6
tick,0x7d8294d2a042,1975379,0,0x0,6
tick,0x7d8294d2a042,1976511,0,0x0,6
tick,0x7d8294d2a042,1977572,0,0x0,6
tick,0x7d8294d2a042,1978637,0,0x0,6
tick,0x7d8294d2a042,1979634,0,0x0,6
tick,0x7d8294d2a042,1980752,0,0x0,6
tick,0x7d8294d2a042,1981813,0,0x0,6
tick,0x7d8294d2a042,1982879,0,0x0,6
tick,0x7d8294d2a042,1983866,0,0x0,6
tick,0x7d8294d2a042,1984926,0,0x0,6
tick,0x7d8294d2a042,1986058,0,0x0,6
tick,0x7d8294d2a042,1987119,0,0x0,6
tick,0x7d8294d2a042,1988189,0,0x0,6
tick,0x7d8294d2a042,1989173,0,0x0,6
tick,0x7d8294d2a042,1990233,0,0x0,6
tick,0x7d8294d2a042,1991306,0,0x0,6
tick,0x7d8294d2a042,1992430,0,0x0,6
tick,0x7d8294d2a042,1993492,0,0x0,6
tick,0x7d8294d2a042,1994558,0,0x0,6
tick,0x7d8294d2a042,1995560,0,0x0,6
tick,0x7d8294d2a042,1996677,0,0x0,6
tick,0x7d8294d2a042,1997763,0,0x0,6
tick,0x7d8294d2a042,1998726,0,0x0,6
tick,0x7d8294d2a042,1999788,0,0x0,6
tick,0x7d8294d2a042,2000849,0,0x0,6
tick,0x7d8294d2a042,2001984,0,0x0,6
tick,0x7d8294d2a042,2003042,0,0x0,6
tick,0x7d8294d2a042,2004104,0,0x0,6
tick,0x7d8294d2a042,2005165,0,0x0,6
tick,0x7d8294d2a042,2006226,0,0x0,6
tick,0x7d8294d2a042,2007221,0,0x0,6
tick,0x7d8294d2a042,2008376,0,0x0,6
tick,0x7d8294d2a042,2009343,0,0x0,6
tick,0x7d8294d2a042,2010491,0,0x0,6
tick,0x7d8294d2a042,2011482,0,0x0,6
tick,0x7d8294d2a042,2012596,0,0x0,6
tick,0x7d8294d2a042,2013604,0,0x0,6
tick,0x7d8294d2a042,2014730,0,0x0,6
tick,0x7d8294d2a042,2015779,0,0x0,6
tick,0x7d8294d2a042,2016846,0,0x0,6
tick,0x7d8294d2a042,2017916,0,0x0,6
tick,0x7d8294d2a042,2019051,0,0x0,6
tick,0x7d8294d2a042,2020105,0,0x0,6
tick,0x7d8294d2a042,2021182,0,0x0,6
tick,0x7d8294d2a042,2022249,0,0x0,6
tick,0x7d8294d2a042,2023299,0,0x0,6
tick,0x7d8294d2a042,2024289,0,0x0,6
tick,0x7d8294d2a042,2025345,0,0x0,6
tick,0x7d8294d2a042,2026492,0,0x0,6
tick,0x7d8294d2a042,2027471,0,0x0,6
tick,0x7d8294d2a042,2028616,0,0x0,6
tick,0x7d8294d2a042,2029675,0,0x0,6
tick,0x7d8294d2a042,2030723,0,0x0,6
tick,0x7d8294d2a042,2031645,0,0x0,6
tick,0x7d8294d2a042,2032845,0,0x0,6
tick,0x7d8294d2a042,2033911,0,0x0,6
tick,0x7d8294d2a042,2034976,0,0x0,6
tick,0x7d8294d2a042,2036037,0,0x0,6
tick,0x7d8294d2a042,2037105,0,0x0,6
tick,0x7d8294d2a042,2038162,0,0x0,6
tick,0x7d8294d2a042,2039212,0,0x0,6
tick,0x7d8294d2a042,2040206,0,0x0,6
tick,0x7d8294d2a042,2041342,0,0x0,6
tick,0x7d8294d2a042,2042409,0,0x0,6
tick,0x7d8294d2a042,2043469,0,0x0,6
tick,0x7d8294d2a042,2044521,0,0x0,6
tick,0x7d8294d2a042,2045578,0,0x0,6
tick,0x7d8294d2a042,2046581,0,0x0,6
tick,0x7d8294d2a042,2047559,0,0x0,6
tick,0x7d8294d2a042,2048762,0,0x0,6
tick,0x7d8294d2a042,2049824,0,0x0,6
tick,0x7d8294d2a042,2050891,0,0x0,6
tick,0x7d8294d2a042,2051936,0,0x0,6
tick,0x7d8294d2a042,2053019,0,0x0,6
tick,0x7d8294d2a042,2054065,0,0x0,6
tick,0x7d8294d2a042,2055135,0,0x0,6
tick,0x7d8294d2a042,2056116,0,0x0,6
tick,0x7d8294d2a042,2057256,0,0x0,6
tick,0x7d8294d2a042,2058310,0,0x0,6
tick,0x7d8294d2a042,2059372,0,0x0,6
tick,0x7d8294d2a042,2060439,0,0x0,6
tick,0x7d8294d2a042,2061509,0,0x0,6
tick,0x7d8294d2a042,2062492,0,0x0,6
tick,0x7d8294d2a042,2063550,0,0x0,6
tick,0x7d8294d2a042,2064681,0,0x0,6
tick,0x7d8294d2a042,2065754,0,0x0,6
tick,0x7d8294d2a042,2066805,0,0x0,6
tick,0x7d8294d2a042,2067735,0,0x0,6
tick,0x7d8294d2a042,2068907,0,0x0,6
tick,0x7d8294d2a042,2069971,0,0x0,6
tick,0x7d8294d2a042,2071051,0,0x0,6
tick,0x7d8294d2a042,2072098,0,0x0,6
tick,0x7d8294d2a042,2073170,0,0x0,6
tick,0x7d8294d2a042,2074231,0,0x0,6
tick,0x7d8294d2a042,2075284,0,0x0,6
tick,0x7d8294d2a042,2076349,0,0x0,6
tick,0x7d8294d2a042,2077409,0,0x0,6
tick,0x7d8294d2a042,2078404,0,0x0,6
tick,0x7d8294d2a042,2079504,0,0x0,6
tick,0x7d8294d2a042,2080588,0,0x0,6
tick,0x7d8294d2a042,2081587,0,0x0,6
tick,0x7d8294d2a042,2082724,0,0x0,6
tick,0x7d8294d2a042,2083721,0,0x0,6
tick,0x7d8294d2a042,2084849,0,0x0,6
tick,0x7d8294d2a042,2085900,0,0x0,6
tick,0x7d8294d2a042,2086964,0,0x0,6
tick,0x7d8294d2a042,2088026,0,0x0,6
tick,0x7d8294d2a042,2089011,0,0x0,6
tick,0x7d8294d2a042,2090069,0,0x0,6
tick,0x7d8294d2a042,2091132,0,0x0,6
tick,0x7d8294d2a042,2092273,0,0x0,6
tick,0x7d8294d2a042,2093328,0,0x0,6
tick,0x7d8294d2a042,2094396,0,0x0,6
tick,0x7d8294d2a042,2095405,0,0x0,6
tick,0x7d8294d2a042,2096516,0,0x0,6
tick,0x7d8294d2a042,2097573,0,0x0,6
tick,0x7d8294d2a042,2098571,0,0x0,6
tick,0x7d8294d2a042,2099601,0,0x0,6
tick,0x7d8294d2a042,2100758,0,0x0,6
tick,0x7d8294d2a042,2101830,0,0x0,6
tick,0x7d8294d2a042,2102825,0,0x0,6
tick,0x7d8294d2a042,2103878,0,0x0,6
tick,0x7d8294d2a042,2104955,0,0x0,6
tick,0x7d8294d2a042,2106082,0,0x0,6
tick,0x7d8294d2a042,2107137,0,0x0,6
tick,0x7d8294d2a042,2108185,0,0x0,6
tick,0x7d8294d2a042,2109246,0,0x0,6
tick,0x7d8294d2a042,2110316,0,0x0,6
tick,0x7d8294d2a042,2111307,0,0x0,6
tick,0x7d8294d2a042,2112447,0,0x0,6
tick,0x7d8294d2a042,2113449,0,0x0,6
tick,0x7d8294d2a042,2114487,0,0x0,6
tick,0x7d8294d2a042,2115538,0,0x0,6
tick,0x7d8294d2a042,2116695,0,0x0,6
tick,0x7d8294d2a042,2117742,0,0x0,6
tick,0x7d8294d2a042,2118822,0,0x0,6
tick,0x7d8294d2a042,2119771,0,0x0,6
tick,0x7d8294d2a042,2120929,0,0x0,6
tick,0x7d8294d2a042,2121981,0,0x0,6
tick,0x7d8294d2a042,2123048,0,0x0,6
tick,0x7d8294d2a042,2124115,0,0x0,6
tick,0x7d8294d2a042,2125175,0,0x0,6
tick,0x7d8294d2a042,2126187,0,0x0,6
tick,0x7d8294d2a042,2127198,0,0x0,6
tick,0x7d8294d2a042,2128258,0,0x0,6
tick,0x7d8294d2a042,2129324,0,0x0,6
tick,0x7d8294d2a042,2130385,0,0x0,6
tick,0x7d8294d2a042,2131451,0,0x0,6
tick,0x7d8294d2a042,2132508,0,0x0,6
tick,0x7d8294d2a042,2133570,0,0x0,6
tick,0x7d8294d2a042,2134567,0,0x0,6
tick,0x7d8294d2a042,2135635,0,0x0,6
tick,0x7d8294d2a042,2136752,0,0x0,6
tick,0x7d8294d2a042,2137829,0,0x0,6
tick,0x7d8294d2a042,2138877,0,0x0,6
tick,0x7d8294d2a042,2139930,0,0x0,6
tick,0x7d8294d2a042,2141009,0,0x0,6
tick,0x7d8294d2a042,2141989,0,0x0,6
tick,0x7d8294d2a042,2143054,0,0x0,6
tick,0x7d8294d2a042,2144187,0,0x0,6
tick,0x7d8294d2a042,2145255,0,0x0,6
tick,0x7d8294d2a042,2146320,0,0x0,6
tick,0x7d8294d2a042,2147401,0,0x0,6
tick,0x7d8294d2a042,2148446,0,0x0,6
tick,0x7d8294d2a042,2149506,0,0x0,6
tick,0x7d8294d2a042,2150503,0,0x0,6
tick,0x7d8294d2a042,2151577,0,0x0,6
tick,0x7d8294d2a042,2152695,0,0x0,6
tick,0x7d8294d2a042,2153752,0,0x0,6
tick,0x7d8294d2a042,2154813,0,0x0,6
tick,0x7d8294d2a042,2155870,0,0x0,6
tick,0x7d8294d2a042,2156937,0,0x0,6
tick,0x7d8294d2a042,2158001,0,0x0,6
tick,0x7d8294d2a042,2159076,0,0x0,6
tick,0x7d8294d2a042,2160129,0,0x0,6
tick,0x7d8294d2a042,2161246,0,0x0,6
tick,0x7d8294d2a042,2162340,0,0x0,6
tick,0x7d8294d2a042,2163405,0,0x0,6
tick,0x7d8294d2a042,2164475,0,0x0,6
tick,0x7d8294d2a042,2165513,0,0x0,6
tick,0x7d8294d2a042,2166581,0,0x0,6
tick,0x7d8294d2a042,2167542,0,0x0,6
tick,0x7d8294d2a042,2168703,0,0x0,6
tick,0x7d8294d2a042,2169762,0,0x0,6
tick,0x7d8294d2a042,2170828,0,0x0,6
tick,0x7d8294d2a042,2171825,0,0x0,6
tick,0x7d8294d2a042,2172939,0,0x0,6
tick,0x7d8294d2a042,2174012,0,0x0,6
tick,0x7d8294d2a042,2175069,0,0x0,6
tick,0x7d8294d2a042,2176138,0,0x0,6
tick,0x7d8294d2a042,2177185,0,0x0,6
tick,0x7d8294d2a042,2178239,0,0x0,6
tick,0x7d8294d2a042,2179307,0,0x0,6
tick,0x7d8294d2a042,2180365,0,0x0,6
tick,0x7d8294d2a042,2181425,0,0x0,6
tick,0x7d8294d2a042,2182494,0,0x0,6
tick,0x7d8294d2a042,2183477,0,0x0,6
tick,0x7d8294d2a042,2184626,0,0x0,6
tick,0x7d8294d2a042,2185672,0,0x0,6
tick,0x7d8294d2a042,2186744,0,0x0,6
tick,0x7d8294d2a042,2187703,0,0x0,6
tick,0x7d8294d2a042,2188785,0,0x0,6
tick,0x7d8294d2a042,2189846,0,0x0,6
tick,0x7d8294d2a042,2190903,0,0x0,6
tick,0x7d8294d2a042,2192030,0,0x0,6
tick,0x7d8294d2a042,2193126,0,0x0,6
tick,0x7d8294d2a042,2194166,0,0x0,6
tick,0x7d8294d2a042,2195225,0,0x0,6
tick,0x7d8294d2a042,2196292,0,0x0,6
tick,0x7d8294d2a042,2197351,0,0x0,6
tick,0x7d8294d2a042,2198340,0,0x0,6
tick,0x7d8294d2a042,2199394,0,0x0,6
tick,0x7d8294d2a042,2200468,0,0x0,6
tick,0x7d8294d2a042,2201603,0,0x0,6
tick,0x7d8294d2a042,2202654,0,0x0,6
tick,0x7d8294d2a042,2203631,0,0x0,6
tick,0x7d8294d2a042,2204801,0,0x0,6
tick,0x7d8294d2a042,2205832,0,0x0,6
tick,0x7d8294d2a042,2206901,0,0x0,6
tick,0x7d8294d2a042,2207951,0,0x0,6
tick,0x7d8294d2a042,2209026,0,0x0,6
tick,0x7d8294d2a042,2210073,0,0x0,6
tick,0x7d8294d2a042,2211147,0,0x0,6
tick,0x7d8294d2a042,2212236,0,0x0,6
tick,0x7d8294d2a042,2213265,0,0x0,6
tick,0x7d8294d2a042,2214372,0,0x0,6
tick,0x7d8294d2a042,2215392,0,0x0,6
tick,0x7d8294d2a042,2216445,0,0x0,6
tick,0x7d8294d2a042,2217446,0,0x0,6
tick,0x7d8294d2a042,2218587,0,0x0,6
tick,0x7d8294d2a042,2219556,0,0x0,6
tick,0x7d8294d2a042,2220688,0,0x0,6
tick,0x7d8294d2a042,2221763,0,0x0,6
tick,0x7d8294d2a042,2222826,0,0x0,6
tick,0x7d8294d2a042,2223837,0,0x0,6
tick,0x7d8294d2a042,2224927,0,0x0,6
tick,0x7d8294d2a042,2225992,0,0x0,6
tick,0x7d8294d2a042,2227056,0,0x0,6
tick,0x7d8294d2a042,2228099,0,0x0,6
tick,0x7d8294d2a042,2229160,0,0x0,6
tick,0x7d8294d2a042,2230204,0,0x0,6
tick,0x7d8294d2a042,2231263,0,0x0,6
tick,0x7d8294d2a042,2232313,0,0x0,6
tick,0x7d8294d2a042,2233377,0,0x0,6
tick,0x7d8294d2a042,2234429,0,0x0,6
tick,0x7d8294d2a042,2235480,0,0x0,6
tick,0x7d8294d2a042,2236558,0,0x0,6
tick,0x7d8294d2a042,2237619,0,0x0,6
tick,0x7d8294d2a042,2238686,0,0x0,6
tick,0x7d8294d2a042,2239599,0,0x0,6
tick,0x7d8294d2a042,2240798,0,0x0,6
tick,0x7d8294d2a042,2241859,0,0x0,6
tick,0x7d8294d2a042,2242929,0,0x0,6
tick,0x7d8294d2a042,2243963,0,0x0,6
tick,0x7d8294d2a042,2245051,0,0x0,6
tick,0x7d8294d2a042,2246028,0,0x0,6
tick,0x7d8294d2a042,2247093,0,0x0,6
tick,0x7d8294d2a042,2248225,0,0x0,6
tick,0x7d8294d2a042,2249283,0,0x0,6
tick,0x7d8294d2a042,2250275,0,0x0,6
tick,0x7d8294d2a042,2251335,0,0x0,6
tick,0x7d8294d2a042,2252408,0,0x0,6
tick,0x7d8294d2a042,2253533,0,0x0,6
tick,0x7d8294d2a042,2254521,0,0x0,6
tick,0x7d8294d2a042,2255566,0,0x0,6
tick,0x7d8294d2a042,2256713,0,0x0,6
tick,0x7d8294d2a042,2257786,0,0x0,6
tick,0x7d8294d2a042,2258768,0,0x0,6
tick,0x7d8294d2a042,2259895,0,0x0,6
tick,0x7d8294d2a042,2260960,0,0x0,6
tick,0x7d8294d2a042,2262024,0,0x0,6
tick,0x7d8294d2a042,2263091,0,0x0,6
tick,0x7d8294d2a042,2264154,0,0x0,6
tick,0x7d8294d2a042,2265205,0,0x0,6
tick,0x7d8294d2a042,2266266,0,0x0,6
tick,0x7d8294d2a042,2267344,0,0x0,6
tick,0x7d8294d2a042,2268325,0,0x0,6
tick,0x7d8294d2a042,2269381,0,0x0,6
tick,0x7d8294d2a042,2270506,0,0x0,6
tick,0x7d8294d2a042,2271494,0,0x0,6
tick,0x7d8294d2a042,2272635,0,0x0,6
tick,0x7d8294d2a042,2273688,0,0x0,6
tick,0x7d8294d2a042,2274685,0,0x0,6
tick,0x7d8294d2a042,2275627,0,0x0,6
tick,0x7d8294d2a042,2276866,0,0x0,6
tick,0x7d8294d2a042,2277938,0,0x0,6
tick,0x7d8294d2a042,2278995,0,0x0,6
tick,0x7d8294d2a042,2280004,0,0x0,6
tick,0x7d8294d2a042,2281119,0,0x0,6
tick,0x7d8294d2a042,2282182,0,0x0,6
tick,0x7d8294d2a042,2283241,0,0x0,6
tick,0x7d8294d2a042,2284304,0,0x0,6
tick,0x7d8294d2a042,2285374,0,0x0,6
tick,0x7d8294d2a042,2286367,0,0x0,6
tick,0x7d8294d2a042,2287372,0,0x0,6
tick,0x7d8294d2a042,2288546,0,0x0,6
tick,0x7d8294d2a042,2289550,0,0x0,6
tick,0x7d8294d2a042,2290597,0,0x0,6
tick,0x7d8294d2a042,2291633,0,0x0,6
tick,0x7d8294d2a042,2292814,0,0x0,6
tick,0x7d8294d2a042,2293856,0,0x0,6
tick,0x7d8294d2a042,2294926,0,0x0,6
tick,0x7d8294d2a042,2295982,0,0x0,6
tick,0x7d8294d2a042,2297042,0,0x0,6
tick,0x7d8294d2a042,2298114,0,0x0,6
tick,0x7d8294d2a042,2299163,0,0x0,6
tick,0x7d8294d2a042,2300156,0,0x0,6
tick,0x7d8294d2a042,2301289,0,0x0,6
tick,0x7d8294d2a042,2302349,0,0x0,6
tick,0x7d8294d2a042,2303430,0,0x0,6
tick,0x7d8294d2a042,2304484,0,0x0,6
tick,0x7d8294d2a042,2305531,0,0x0,6
tick,0x7d8294d2a042,2306524,0,0x0,6
tick,0x7d8294d2a042,2307611,0,0x0,6
tick,0x7d8294d2a042,2308711,0,0x0,6
tick,0x7d8294d2a042,2309787,0,0x0,6
tick,0x7d8294d2a042,2310788,0,0x0,6
tick,0x7d8294d2a042,2311839,0,0x0,6
tick,0x7d8294d2a042,2312919,0,0x0,6
tick,0x7d8294d2a042,2314018,0,0x0,6
tick,0x7d8294d2a042,2315083,0,0x0,6
tick,0x7d8294d2a042,2316150,0,0x0,6
tick,0x7d8294d2a042,2317136,0,0x0,6
tick,0x7d8294d2a042,2318196,0,0x0,6
tick,0x7d8294d2a042,2319188,0,0x0,6
tick,0x7d8294d2a042,2320401,0,0x0,6
tick,0x7d8294d2a042,2321410,0,0x0,6
tick,0x7d8294d2a042,2322519,0,0x0,6
tick,0x7d8294d2a042,2323567,0,0x0,6
tick,0x7d8294d2a042,2324626,0,0x0,6
tick,0x7d8294d2a042,2325703,0,0x0,6
tick,0x7d8294d2a042,2326680,0,0x0,6
tick,0x7d8294d2a042,2327728,0,0x0,6
tick,0x7d8294d2a042,2328799,0,0x0,6
tick,0x7d8294d2a042,2329934,0,0x0,6
tick,0x7d8294d2a042,2331006,0,0x0,6
tick,0x7d8294d2a042,2332056,0,0x0,6
tick,0x7d8294d2a042,2333121,0,0x0,6
tick,0x7d8294d2a042,2334190,0,0x0,6
tick,0x7d8294d2a042,2335244,0,0x0,6
tick,0x7d8294d2a042,2336246,0,0x0,6
tick,0x7d8294d2a042,2337312,0,0x0,6
tick,0x7d8294d2a042,2338441,0,0x0,6
tick,0x7d8294d2a042,2339480,0,0x0,6
tick,0x7d8294d2a042,2340545,0,0x0,6
tick,0x7d8294d2a042,2341609,0,0x0,6
tick,0x7d8294d2a042,2342609,0,0x0,6
tick,0x7d8294d2a042,2343545,0,0x0,6
tick,0x7d8294d2a042,2344798,0,0x0,6
tick,0x7d8294d2a042,2345863,0,0x0,6
tick,0x7d8294d2a042,2346914,0,0x0,6
tick,0x7d8294d2a042,2347977,0,0x0,6
tick,0x7d8294d2a042,2349046,0,0x0,6
tick,0x7d8294d2a042,2350102,0,0x0,6
tick,0x7d8294d2a042,2351163,0,0x0,6
tick,0x7d8294d2a042,2352085,0,0x0,6
tick,0x7d8294d2a042,2353222,0,0x0,6
tick,0x7d8294d2a042,2354357,0,0x0,6
tick,0x7d8294d2a042,2355271,0,0x0,6
tick,0x7d8294d2a042,2356480,0,0x0,6
tick,0x7d8294d2a042,2357531,0,0x0,6
tick,0x7d8294d2a042,2358620,0,0x0,6
tick,0x7d8294d2a042,2359533,0,0x0,6
tick,0x7d8294d2a042,2360718,0,0x0,6
tick,0x7d8294d2a042,2361803,0,0x0,6
tick,0x7d8294d2a042,2362833,0,0x0,6
tick,0x7d8294d2a042,2363926,0,0x0,6
tick,0x7d8294d2a042,2364916,0,0x0,6
tick,0x7d8294d2a042,2366006,0,0x0,6
tick,0x7d8294d2a042,2367041,0,0x0,6
tick,0x7d8294d2a042,2368106,0,0x0,6
tick,0x7d8294d2a042,2369164,0,0x0,6
tick,0x7d8294d2a042,2370284,0,0x0,6
tick,0x7d8294d2a042,2371306,0,0x0,6
tick,0x7d8294d2a042,2372421,0,0x0,6
tick,0x7d8294d2a042,2373502,0,0x0,6
tick,0x7d8294d2a042,2374531,0,0x0,6
tick,0x7d8294d2a042,2375493,0,0x0,6
tick,0x7d8294d2a042,2376641,0,0x0,6
tick,0x7d8294d2a042,2377692,0,0x0,6
tick,0x7d8294d2a042,2378690,0,0x0,6
tick,0x7d8294d2a042,2379757,0,0x0,6
tick,0x7d8294d2a042,2380882,0,0x0,6
tick,0x7d8294d2a042,2381934,0,0x0,6
tick,0x7d8294d2a042,2383003,0,0x0,6
tick,0x7d8294d2a042,2384045,0,0x0,6
tick,0x7d8294d2a042,2385122,0,0x0,6
tick,0x7d8294d2a042,2386195,0,0x0,6
tick,0x7d8294d2a042,2387251,0,0x0,6
tick,0x7d8294d2a042,2388301,0,0x0,6
tick,0x7d8294d2a042,2389364,0,0x0,6
tick,0x7d8294d2a042,2390430,0,0x0,6
tick,0x7d8294d2a042,2391476,0,0x0,6
tick,0x7d8294d2a042,2392551,0,0x0,6
tick,0x7d8294d2a042,2393563,0,0x0,6
tick,0x7d8294d2a042,2394680,0,0x0,6
tick,0x7d8294d2a042,2395638,0,0x0,6
tick,0x7d8294d2a042,2396799,0,0x0,6
tick,0x7d8294d2a042,2397830,0,0x0,6
tick,0x7d8294d2a042,2398912,0,0x0,6
tick,0x7d8294d2a042,2399976,0,0x0,6
tick,0x7d8294d2a042,2401038,0,0x0,6
tick,0x7d8294d2a042,2402105,0,0x0,6
tick,0x7d8294d2a042,2403076,0,0x0,6
tick,0x7d8294d2a042,2404213,0,0x0,6
tick,0x7d8294d2a042,2405221,0,0x0,6
tick,0x7d8294d2a042,2406205,0,0x0,6
tick,0x7d8294d2a042,2407264,0,0x0,6
tick,0x7d8294d2a042,2408461,0,0x0,6
tick,0x7d8294d2a042,2409526,0,0x0,6
tick,0x7d8294d2a042,2410612,0,0x0,6
tick,0x7d8294d2a042,2411594,0,0x0,6
tick,0x7d8294d2a042,2412702,0,0x0,6
tick,0x7d8294d2a042,2413720,0,0x0,6
tick,0x7d8294d2a042,2414702,0,0x0,6
tick,0x7d8294d2a042,2415831,0,0x0,6
tick,0x7d8294d2a042,2416962,0,0x0,6
tick,0x7d8294d2a042,2418029,0,0x0,6
tick,0x7d8294d2a042,2419078,0,0x0,6
tick,0x7d8294d2a042,2420171,0,0x0,6
tick,0x7d8294d2a042,2421204,0,0x0,6
tick,0x7d8294d2a042,2422206,0,0x0,6
tick,0x7d8294d2a042,2423265,0,0x0,6
tick,0x7d8294d2a042,2424350,0,0x0,6
tick,0x7d8294d2a042,2425385,0,0x0,6
tick,0x7d8294d2a042,2426439,0,0x0,6
tick,0x7d8294d2a042,2427547,0,0x0,6
tick,0x7d8294d2a042,2428637,0,0x0,6
tick,0x7d8294d2a042,2429694,0,0x0,6
tick,0x7d8294d2a042,2430778,0,0x0,6
tick,0x7d8294d2a042,2431759,0,0x0,6
tick,0x7d8294d2a042,2432877,0,0x0,6
tick,0x7d8294d2a042,2433850,0,0x0,6
tick,0x7d8294d2a042,2435004,0,0x0,6
tick,0x7d8294d2a042,2436040,0,0x0,6
tick,0x7d8294d2a042,2437059,0,0x0,6
tick,0x7d8294d2a042,2438101,0,0x0,6
tick,0x7d8294d2a042,2439162,0,0x0,6
tick,0x7d8294d2a042,2440225,0,0x0,6
tick,0x7d8294d2a042,2441363,0,0x0,6
tick,0x7d8294d2a042,2442424,0,0x0,6
tick,0x7d8294d2a042,2443507,0,0x0,6
tick,0x7d8294d2a042,2444544,0,0x0,6
tick,0x7d8294d2a042,2445612,0,0x0,6
tick,0x7d8294d2a042,2446603,0,0x0,6
tick,0x7d8294d2a042,2447584,0,0x0,6
tick,0x7d8294d2a042,2448794,0,0x0,6
tick,0x7d8294d2a042,2449851,0,0x0,6
tick,0x7d8294d2a042,2450918,0,0x0,6
tick,0x7d8294d2a042,2451965,0,0x0,6
tick,0x7d8294d2a042,2453042,0,0x0,6
tick,0x7d8294d2a042,2454095,0,0x0,6
tick,0x7d8294d2a042,2455167,0,0x0,6
tick,0x7d8294d2a042,2456137,0,0x0,6
tick,0x7d8294d2a042,2457279,0,0x0,6
tick,0x7d8294d2a042,2458340,0,0x0,6
tick,0x7d8294d2a042,2459427,0,0x0,6
tick,0x7d8294d2a042,2460479,0,0x0,6
tick,0x7d8294d2a042,2461537,0,0x0,6
tick,0x7d8294d2a042,2462601,0,0x0,6
tick,0x7d8294d2a042,2463527,0,0x0,6
tick,0x7d8294d2a042,2464715,0,0x0,6
tick,0x7d8294d2a042,2465777,0,0x0,6
tick,0x7d8294d2a042,2466829,0,0x0,6
tick,0x7d8294d2a042,2467881,0,0x0,6
tick,0x7d8294d2a042,2468945,0,0x0,6
tick,0x7d8294d2a042,2470004,0,0x0,6
tick,0x7d8294d2a042,2471073,0,0x0,6
tick,0x7d8294d2a042,2472121,0,0x0,6
tick,0x7d8294d2a042,2473188,0,0x0,6
tick,0x7d8294d2a042,2474257,0,0x0,6
tick,0x7d8294d2a042,2475319,0,0x0,6
tick,0x7d8294d2a042,2476370,0,0x0,6
tick,0x7d8294d2a042,2477439,0,0x0,6
tick,0x7d8294d2a042,2478426,0,0x0,6
tick,0x7d8294d2a042,2479504,0,0x0,6
tick,0x7d8294d2a042,2480629,0,0x0,6
tick,0x7d8294d2a042,2481698,0,0x0,6
tick,0x7d8294d2a042,2482750,0,0x0,6
tick,0x7d8294d2a042,2483758,0,0x0,6
tick,0x7d8294d2a042,2484871,0,0x0,6
tick,0x7d8294d2a042,2485930,0,0x0,6
tick,0x7d8294d2a042,2487001,0,0x0,6
tick,0x7d8294d2a042,2487915,0,0x0,6
tick,0x7d8294d2a042,2489136,0,0x0,6
tick,0x7d8294d2a042,2490274,0,0x0,6
tick,0x7d8294d2a042,2491366,0,0x0,6
tick,0x7d8294d2a042,2492470,0,0x0,6
tick,0x7d8294d2a042,2493463,0,0x0,6
tick,0x7d8294d2a042,2494539,0,0x0,6
tick,0x7d8294d2a042,2495591,0,0x0,6
tick,0x7d8294d2a042,2496817,0,0x0,6
tick,0x7d8294d2a042,2497952,0,0x0,6
tick,0x7d8294d2a042,2499051,0,0x0,6
tick,0x7d8294d2a042,2500110,0,0x0,6
tick,0x7d8294d2a042,2501282,0,0x0,6
tick,0x7d8294d2a042,2502456,0,0x0,6
tick,0x7d8294d2a042,2503564,0,0x0,6
tick,0x7d8294d2a042,2504779,0,0x0,6
tick,0x7d8294d2a042,2505870,0,0x0,6
tick,0x7d8294d2a042,2507023,0,0x0,6
tick,0x7d8294d2a042,2508155,0,0x0,6
tick,0x7d8294d2a042,2509298,0,0x0,6
tick,0x7d8294d2a042,2510463,0,0x0,6
tick,0x7d8294d2a042,2511559,0,0x0,6
tick,0x7d8294d2a042,2512760,0,0x0,6
tick,0x7d8294d2a042,2513923,0,0x0,6
tick,0x7d8294d2a042,2515087,0,0x0,6
tick,0x7d8294d2a042,2516081,0,0x0,6
tick,0x7d8294d2a042,2517248,0,0x0,6
tick,0x7d8294d2a042,2518407,0,0x0,6
tick,0x7d8294d2a042,2519588,0,0x0,6
tick,0x7d8294d2a042,2520765,0,0x0,6
tick,0x7d8294d2a042,2521909,0,0x0,6
tick,0x7d8294d2a042,2523057,0,0x0,6
tick,0x7d8294d2a042,2524136,0,0x0,6
tick,0x7d8294d2a042,2525235,0,0x0,6
tick,0x7d8294d2a042,2526456,0,0x0,6
tick,0x7d8294d2a042,2527490,0,0x0,6
tick,0x7d8294d2a042,2528785,0,0x0,6
tick,0x7d8294d2a042,2529853,0,0x0,6
tick,0x7d8294d2a042,2531016,0,0x0,6
tick,0x7d8294d2a042,2532175,0,0x0,6
tick,0x7d8294d2a042,2533321,0,0x0,6
tick,0x7d8294d2a042,2534462,0,0x0,6
tick,0x7d8294d2a042,2535613,0,0x0,6
tick,0x7d8294d2a042,2536815,0,0x0,6
tick,0x7d8294d2a042,2537786,0,0x0,6
tick,0x7d8294d2a042,2539026,0,0x0,6
tick,0x7d8294d2a042,2540163,0,0x0,6
tick,0x7d8294d2a042,2541309,0,0x0,6
tick,0x7d8294d2a042,2542448,0,0x0,6
tick,0x7d8294d2a042,2543622,0,0x0,6
tick,0x7d8294d2a042,2544767,0,0x0,6
tick,0x7d8294d2a042,2545887,0,0x0,6
tick,0x7d8294d2a042,2546965,0,0x0,6
tick,0x7d8294d2a042,2547972,0,0x0,6
tick,0x7d8294d2a042,2549131,0,0x0,6
tick,0x7d8294d2a042,2550376,0,0x0,6
tick,0x7d8294d2a042,2551597,0,0x0,6
tick,0x7d8294d2a042,2552770,0,0x0,6
tick,0x7d8294d2a042,2553902,0,0x0,6
tick,0x7d8294d2a042,2555068,0,0x0,6
tick,0x7d8294d2a042,2556068,0,0x0,6
tick,0x7d8294d2a042,2557229,0,0x0,6
tick,0x7d8294d2a042,2558382,0,0x0,6
tick,0x7d8294d2a042,2559627,0,0x0,6
tick,0x7d8294d2a042,2560809,0,0x0,6
tick,0x7d8294d2a042,2561988,0,0x0,6
tick,0x7d8294d2a042,2563113,0,0x0,6
tick,0x7d8294d2a042,2564174,0,0x0,6
tick,0x7d8294d2a042,2565285,0,0x0,6
tick,0x7d8294d2a042,2566431,0,0x0,6
tick,0x7d8294d2a042,2567624,0,0x0,6
tick,0x7d8294d2a042,2568824,0,0x0,6
tick,0x7d8294d2a042,2569990,0,0x0,6
tick,0x7d8294d2a042,2571131,0,0x0,6
tick,0x7d8294d2a042,2572216,0,0x0,6
tick,0x7d8294d2a042,2573336,0,0x0,6
tick,0x7d8294d2a042,2574460,0,0x0,6
tick,0x7d8294d2a042,2575673,0,0x0,6
tick,0x7d8294d2a042,2576834,0,0x0,6
tick,0x7d8294d2a042,2577905,0,0x0,6
tick,0x7d8294d2a042,2579065,0,0x0,6
tick,0x7d8294d2a042,2580226,0,0x0,6
tick,0x7d8294d2a042,2581363,0,0x0,6
tick,0x7d8294d2a042,2582539,0,0x0,6
tick,0x7d8294d2a042,2583662,0,0x0,6
tick,0x7d8294d2a042,2584858,0,0x0,6
tick,0x7d8294d2a042,2586014,0,0x0,6
tick,0x7d8294d2a042,2587091,0,0x0,6
tick,0x7d8294d2a042,2588166,0,0x0,6
tick,0x7d8294d2a042,2589307,0,0x0,6
tick,0x7d8294d2a042,2590556,0,0x0,6
tick,0x7d8294d2a042,2591645,0,0x0,6
tick,0x7d8294d2a042,2592820,0,0x0,6
tick,0x7d8294d2a042,2593982,0,0x0,6
tick,0x7d8294d2a042,2595148,0,0x0,6
tick,0x7d8294d2a042,2596139,0,0x0,6
tick,0x7d8294d2a042,2597276,0,0x0,6
tick,0x7d8294d2a042,2598429,0,0x0,6
tick,0x7d8294d2a042,2599649,0,0x0,6
tick,0x7d8294d2a042,2600777,0,0x0,6
tick,0x7d8294d2a042,2601938,0,0x0,6
tick,0x7d8294d2a042,2603152,0,0x0,6
tick,0x7d8294d2a042,2604213,0,0x0,6
tick,0x7d8294d2a042,2605286,0,0x0,6
tick,0x7d8294d2a042,2606512,0,0x0,6
tick,0x7d8294d2a042,2607613,0,0x0,6
tick,0x7d8294d2a042,2608844,0,0x0,6
tick,0x7d8294d2a042,2609982,0,0x0,6
tick,0x7d8294d2a042,2611140,0,0x0,6
tick,0x7d8294d2a042,2612201,0,0x0,6
tick,0x7d8294d2a042,2613360,0,0x0,6
tick,0x7d8294d2a042,2614494,0,0x0,6
tick,0x7d8294d2a042,2615591,0,0x0,6
tick,0x7d8294d2a042,2616862,0,0x0,6
tick,0x7d8294d2a042,2617989,0,0x0,6
tick,0x7d8294d2a042,2619235,0,0x0,6
tick,0x7d8294d2a042,2620271,0,0x0,6
tick,0x7d8294d2a042,2621389,0,0x0,6
tick,0x7d8294d2a042,2622539,0,0x0,6
tick,0x7d8294d2a042,2623553,0,0x0,6
tick,0x7d8294d2a042,2624846,0,0x0,6
tick,0x7d8294d2a042,2625991,0,0x0,6
tick,0x7d8294d2a042,2627134,0,0x0,6
tick,0x7d8294d2a042,2628212,0,0x0,6
tick,0x7d8294d2a042,2629380,0,0x0,6
tick,0x7d8294d2a042,2630525,0,0x0,6
tick,0x7d8294d2a042,2631607,0,0x0,6
tick,0x7d8294d2a042,2632836,0,0x0,6
tick,0x7d8294d2a042,2633960,0,0x0,6
tick,0x7d8294d2a042,2635146,0,0x0,6
tick,0x7d8294d2a042,2636222,0,0x0,6
tick,0x7d8294d2a042,2637369,0,0x0,6
tick,0x7d8294d2a042,2638511,0,0x0,6
tick,0x7d8294d2a042,2639609,0,0x0,6
tick,0x7d8294d2a042,2640855,0,0x0,6
tick,0x7d8294d2a042,2641990,0,0x0,6
tick,0x7d8294d2a042,2643154,0,0x0,6
tick,0x7d8294d2a042,2644205,0,0x0,6
tick,0x7d8294d2a042,2645366,0,0x0,6
tick,0x7d8294d2a042,2646520,0,0x0,6
tick,0x7d8294d2a042,2647594,0,0x0,6
tick,0x7d8294d2a042,2648854,0,0x0,6
tick,0x7d8294d2a042,2650009,0,0x0,6
tick,0x7d8294d2a042,2651164,0,0x0,6
tick,0x7d8294d2a042,2652235,0,0x0,6
tick,0x7d8294d2a042,2653395,0,0x0,6
tick,0x7d8294d2a042,2654556,0,0x0,6
tick,0x7d8294d2a042,2655607,0,0x0,6
tick,0x7d8294d2a042,2656850,0,0x0,6
tick,0x7d8294d2a042,2658013,0,0x0,6
tick,0x7d8294d2a042,2659155,0,0x0,6
tick,0x7d8294d2a042,2660275,0,0x0,6
tick,0x7d8294d2a042,2661463,0,0x0,6
tick,0x7d8294d2a042,2662729,0,0x0,6
tick,0x7d8294d2a042,2663649,0,0x0,6
tick,0x7d8294d2a042,2665008,0,0x0,6
tick,0x7d8294d2a042,2666184,0,0x0,6
tick,0x7d8294d2a042,2667294,0,0x0,6
tick,0x7d8294d2a042,2668486,0,0x0,6
tick,0x7d8294d2a042,2669564,0,0x0,6
tick,0x7d8294d2a042,2670718,0,0x0,6
tick,0x7d8294d2a042,2671665,0,0x0,6
tick,0x7d8294d2a042,2672915,0,0x0,6
tick,0x7d8294d2a042,2674067,0,0x0,6
tick,0x7d8294d2a042,2675192,0,0x0,6
tick,0x7d8294d2a042,2676261,0,0x0,6
tick,0x7d8294d2a042,2677355,0,0x0,6
tick,0x7d8294d2a042,2678521,0,0x0,6
tick,0x7d8294d2a042,2679604,0,0x0,6
tick,0x7d8294d2a042,2680868,0,0x0,6
tick,0x7d8294d2a042,2681981,0,0x0,6
tick,0x7d8294d2a042,2683113,0,0x0,6
tick,0x7d8294d2a042,2684206,0,0x0,6
tick,0x7d8294d2a042,2685348,0,0x0,6
tick,0x7d8294d2a042,2686502,0,0x0,6
tick,0x7d8294d2a042,2687562,0,0x0,6
tick,0x7d8294d2a042,2688786,0,0x0,6
tick,0x7d8294d2a042,2689895,0,0x0,6
tick,0x7d8294d2a042,2691116,0,0x0,6
tick,0x7d8294d2a042,2692189,0,0x0,6
tick,0x7d8294d2a042,2693351,0,0x0,6
tick,0x7d8294d2a042,2694509,0,0x0,6
tick,0x7d8294d2a042,2695565,0,0x0,6
tick,0x7d8294d2a042,2696850,0,0x0,6
tick,0x7d8294d2a042,2698009,0,0x0,6
tick,0x7d8294d2a042,2699167,0,0x0,6
tick,0x7d8294d2a042,2700236,0,0x0,6
tick,0x7d8294d2a042,2701381,0,0x0,6
tick,0x7d8294d2a042,2702541,0,0x0,6
tick,0x7d8294d2a042,2703647,0,0x0,6
tick,0x7d8294d2a042,2704836,0,0x0,6
tick,0x7d8294d2a042,2705913,0,0x0,6
tick,0x7d8294d2a042,2707074,0,0x0,6
tick,0x7d8294d2a042,2708198,0,0x0,6
tick,0x7d8294d2a042,2709358,0,0x0,6
tick,0x7d8294d2a042,2710530,0,0x0,6
tick,0x7d8294d2a042,2711635,0,0x0,6
tick,0x7d8294d2a042,2712837,0,0x0,6
tick,0x7d8294d2a042,2713977,0,0x0,6
tick,0x7d8294d2a042,2715069,0,0x0,6
tick,0x7d8294d2a042,2716138,0,0x0,6
tick,0x7d8294d2a042,2717304,0,0x0,6
tick,0x7d8294d2a042,2718546,0,0x0,6
tick,0x7d8294d2a042,2719637,0,0x0,6
tick,0x7d8294d2a042,2720853,0,0x0,6
tick,0x7d8294d2a042,2722009,0,0x0,6
tick,0x7d8294d2a042,2723139,0,0x0,6
tick,0x7d8294d2a042,2724153,0,0x0,6
tick,0x7d8294d2a042,2725311,0,0x0,6
tick,0x7d8294d2a042,2726484,0,0x0,6
tick,0x7d8294d2a042,2727622,0,0x0,6
tick,0x7d8294d2a042,2728826,0,0x0,6
tick,0x7d8294d2a042,2729961,0,0x0,6
tick,0x7d8294d2a042,2731114,0,0x0,6
tick,0x7d8294d2a042,2732194,0,0x0,6
tick,0x7d8294d2a042,2733355,0,0x0,6
tick,0x7d8294d2a042,2734532,0,0x0,6
tick,0x7d8294d2a042,2735613,0,0x0,6
tick,0x7d8294d2a042,2736853,0,0x0,6
tick,0x7d8294d2a042,2738014,0,0x0,6
tick,0x7d8294d2a042,2739193,0,0x0,6
tick,0x7d8294d2a042,2740250,0,0x0,6
tick,0x7d8294d2a042,2741399,0,0x0,6
tick,0x7d8294d2a042,2742551,0,0x0,6
tick,0x7d8294d2a042,2743608,0,0x0,6
tick,0x7d8294d2a042,2744858,0,0x0,6
tick,0x7d8294d2a042,2745995,0,0x0,6
tick,0x7d8294d2a042,2747162,0,0x0,6
tick,0x7d8294d2a042,2748235,0,0x0,6
tick,0x7d8294d2a042,2749395,0,0x0,6
tick,0x7d8294d2a042,2750551,0,0x0,6
tick,0x7d8294d2a042,2751585,0,0x0,6
tick,0x7d8294d2a042,2752842,0,0x0,6
tick,0x7d8294d2a042,2753900,0,0x0,6
tick,0x7d8294d2a042,2755133,0,0x0,6
tick,0x7d8294d2a042,2756223,0,0x0,6
tick,0x7d8294d2a042,2757405,0,0x0,6
tick,0x7d8294d2a042,2758554,0,0x0,6
tick,0x7d8294d2a042,2759620,0,0x0,6
tick,0x7d8294d2a042,2760872,0,0x0,6
tick,0x7d8294d2a042,2762015,0,0x0,6
tick,0x7d8294d2a042,2763183,0,0x0,6
tick,0x7d8294d2a042,2764261,0,0x0,6
tick,0x7d8294d2a042,2765416,0,0x0,6
tick,0x7d8294d2a042,2766569,0,0x0,6
tick,0x7d8294d2a042,2767634,0,0x0,6
tick,0x7d8294d2a042,2768761,0,0x0,6
tick,0x7d8294d2a042,2769922,0,0x0,6
tick,0x7d8294d2a042,2771132,0,0x0,6
tick,0x7d8294d2a042,2772155,0,0x0,6
tick,0x7d8294d2a042,2773377,0,0x0,6
tick,0x7d8294d2a042,2774549,0,0x0,6
tick,0x7d8294d2a042,2775605,0,0x0,6
tick,0x7d8294d2a042,2776858,0,0x0,6
tick,0x7d8294d2a042,2777992,0,0x0,6
tick,0x7d8294d2a042,2779140,0,0x0,6
tick,0x7d8294d2a042,2780215,0,0x0,6
tick,0x7d8294d2a042,2781384,0,0x0,6
tick,0x7d8294d2a042,2782564,0,0x0,6
tick,0x7d8294d2a042,2783595,0,0x0,6
tick,0x7d8294d2a042,2784852,0,0x0,6
tick,0x7d8294d2a042,2786019,0,0x0,6
tick,0x7d8294d2a042,2787167,0,0x0,6
tick,0x7d8294d2a042,2788253,0,0x0,6
tick,0x7d8294d2a042,2789378,0,0x0,6
tick,0x7d8294d2a042,2790551,0,0x0,6
tick,0x7d8294d2a042,2791627,0,0x0,6
tick,0x7d8294d2a042,2792850,0,0x0,6
tick,0x7d8294d2a042,2793989,0,0x0,6
tick,0x7d8294d2a042,2795076,0,0x0,6
tick,0x7d8294d2a042,2796221,0,0x0,6
tick,0x7d8294d2a042,2797357,0,0x0,6
tick,0x7d8294d2a042,2798511,0,0x0,6
tick,0x7d8294d2a042,2799649,0,0x0,6
tick,0x7d8294d2a042,2800847,0,0x0,6
tick,0x7d8294d2a042,2801997,0,0x0,6
tick,0x7d8294d2a042,2803133,0,0x0,6
tick,0x7d8294d2a042,2804217,0,0x0,6
tick,0x7d8294d2a042,2805308,0,0x0,6
tick,0x7d8294d2a042,2806469,0,0x0,6
tick,0x7d8294d2a042,2807595,0,0x0,6
tick,0x7d8294d2a042,2808846,0,0x0,6
tick,0x7d8294d2a042,2810009,0,0x0,6
tick,0x7d8294d2a042,2811152,0,0x0,6
tick,0x7d8294d2a042,2812222,0,0x0,6
tick,0x7d8294d2a042,2813394,0,0x0,6
tick,0x7d8294d2a042,2814528,0,0x0,6
tick,0x7d8294d2a042,2815590,0,0x0,6
tick,0x7d8294d2a042,2816844,0,0x0,6
tick,0x7d8294d2a042,2817998,0,0x0,6
tick,0x7d8294d2a042,2819139,0,0x0,6
tick,0x7d8294d2a042,2820222,0,0x0,6
tick,0x7d8294d2a042,2821394,0,0x0,6
tick,0x7d8294d2a042,2822517,0,0x0,6
tick,0x7d8294d2a042,2823599,0,0x0,6
tick,0x7d8294d2a042,2824836,0,0x0,6
tick,0x7d8294d2a042,2825982,0,0x0,6
tick,0x7d8294d2a042,2827125,0,0x0,6
tick,0x7d8294d2a042,2828198,0,0x0,6
tick,0x7d8294d2a042,2829353,0,0x0,6
tick,0x7d8294d2a042,2830494,0,0x0,6
tick,0x7d8294d2a042,2831579,0,0x0,6
tick,0x7d8294d2a042,2832822,0,0x0,6
tick,0x7d8294d2a042,2833911,0,0x0,6
tick,0x7d8294d2a042,2835111,0,0x0,6
tick,0x7d8294d2a042,2836193,0,0x0,6
tick,0x7d8294d2a042,2837344,0,0x0,6
tick,0x7d8294d2a042,2838489,0,0x0,6
tick,0x7d8294d2a042,2839572,0,0x0,6
tick,0x7d8294d2a042,2840786,0,0x0,6
tick,0x7d8294d2a042,2841919,0,0x0,6
tick,0x7d8294d2a042,2843082,0,0x0,6
tick,0x7d8294d2a042,2844149,0,0x0,6
tick,0x7d8294d2a042,2845300,0,0x0,6
tick,0x7d8294d2a042,2846464,0,0x0,6
tick,0x7d8294d2a042,2847569,0,0x0,6
tick,0x7d8294d2a042,2848752,0,0x0,6
tick,0x7d8294d2a042,2849886,0,0x0,6
tick,0x7d8294d2a042,2851055,0,0x0,6
tick,0x7d8294d2a042,2852121,0,0x0,6
tick,0x7d8294d2a042,2853272,0,0x0,6
tick,0x7d8294d2a042,2854435,0,0x0,6
tick,0x7d8294d2a042,2855561,0,0x0,6
tick,0x7d8294d2a042,2856722,0,0x0,6
tick,0x7d8294d2a042,2857860,0,0x0,6
tick,0x7d8294d2a042,2859027,0,0x0,6
tick,0x7d8294d2a042,2860087,0,0x0,6
tick,0x7d8294d2a042,2861253,0,0x0,6
tick,0x7d8294d2a042,2862385,0,0x0,6
tick,0x7d8294d2a042,2863481,0,0x0,6
tick,0x7d8294d2a042,2864620,0,0x0,6
tick,0x7d8294d2a042,2865632,0,0x0,6
tick,0x7d8294d2a042,2866792,0,0x0,6
tick,0x7d8294d2a042,2867874,0,0x0,6
tick,0x7d8294d2a042,2868982,0,0x0,6
tick,0x7d8294d2a042,2870263,0,0x0,6
tick,0x7d8294d2a042,2871445,0,0x0,6
tick,0x7d8294d2a042,2872550,0,0x0,6
tick,0x7d8294d2a042,2873578,0,0x0,6
tick,0x7d8294d2a042,2874797,0,0x0,6
tick,0x7d8294d2a042,2875870,0,0x0,6
tick,0x7d8294d2a042,2877017,0,0x0,6
tick,0x7d8294d2a042,2878157,0,0x0,6
tick,0x7d8294d2a042,2879202,0,0x0,6
tick,0x7d8294d2a042,2880398,0,0x0,6
tick,0x7d8294d2a042,2881571,0,0x0,6
tick,0x7d8294d2a042,2882711,0,0x0,6
tick,0x7d8294d2a042,2883772,0,0x0,6
tick,0x7d8294d2a042,2884928,0,0x0,6
tick,0x7d8294d2a042,2886101,0,0x0,6
tick,0x7d8294d2a042,2887260,0,0x0,6
tick,0x7d8294d2a042,2888262,0,0x0,6
tick,0x7d8294d2a042,2889350,0,0x0,6
tick,0x7d8294d2a042,2890528,0,0x0,6
tick,0x7d8294d2a042,2891634,0,0x0,6
tick,0x7d8294d2a042,2892816,0,0x0,6
tick,0x7d8294d2a042,2893973,0,0x0,6
tick,0x7d8294d2a042,2895113,0,0x0,6
tick,0x7d8294d2a042,2896216,0,0x0,6
tick,0x7d8294d2a042,2897310,0,0x0,6
tick,0x7d8294d2a042,2898521,0,0x0,6
tick,0x7d8294d2a042,2899570,0,0x0,6
tick,0x7d8294d2a042,2900824,0,0x0,6
tick,0x7d8294d2a042,2901987,0,0x0,6
tick,0x7d8294d2a042,2903142,0,0x0,6
tick,0x7d8294d2a042,2904217,0,0x0,6
tick,0x7d8294d2a042,2905382,0,0x0,6
tick,0x7d8294d2a042,2906548,0,0x0,6
tick,0x7d8294d2a042,2907607,0,0x0,6
tick,0x7d8294d2a042,2908862,0,0x0,6
tick,0x7d8294d2a042,2910025,0,0x0,6
tick,0x7d8294d2a042,2911137,0,0x0,6
tick,0x7d8294d2a042,2912221,0,0x0,6
tick,0x7d8294d2a042,2913390,0,0x0,6
tick,0x7d8294d2a042,2914548,0,0x0,6
tick,0x7d8294d2a042,2915595,0,0x0,6
tick,0x7d8294d2a042,2916864,0,0x0,6
tick,0x7d8294d2a042,2917996,0,0x0,6
tick,0x7d8294d2a042,2919135,0,0x0,6
tick,0x7d8294d2a042,2920223,0,0x0,6
tick,0x7d8294d2a042,2921382,0,0x0,6
tick,0x7d8294d2a042,2922542,0,0x0,6
tick,0x7d8294d2a042,2923610,0,0x0,6
tick,0x7d8294d2a042,2924852,0,0x0,6
tick,0x7d8294d2a042,2925993,0,0x0,6
tick,0x7d8294d2a042,2927138,0,0x0,6
tick,0x7d8294d2a042,2928215,0,0x0,6
tick,0x7d8294d2a042,2929369,0,0x0,6
tick,0x7d8294d2a042,2930525,0,0x0,6
tick,0x7d8294d2a042,2931616,0,0x0,6
tick,0x7d8294d2a042,2932853,0,0x0,6
tick,0x7d8294d2a042,2934010,0,0x0,6
tick,0x7d8294d2a042,2935149,0,0x0,6
tick,0x7d8294d2a042,2936261,0,0x0,6
tick,0x7d8294d2a042,2937386,0,0x0,6
tick,0x7d8294d2a042,2938544,0,0x0,6
tick,0x7d8294d2a042,2939611,0,0x0,6
tick,0x7d8294d2a042,2940834,0,0x0,6
tick,0x7d8294d2a042,2942016,0,0x0,6
tick,0x7d8294d2a042,2943192,0,0x0,6
tick,0x7d8294d2a042,2944264,0,0x0,6
tick,0x7d8294d2a042,2945430,0,0x0,6
tick,0x7d8294d2a042,2946607,0,0x0,6
tick,0x7d8294d2a042,2947623,0,0x0,6
tick,0x7d8294d2a042,2948844,0,0x0,6
tick,0x7d8294d2a042,2949990,0,0x0,6
tick,0x7d8294d2a042,2951135,0,0x0,6
tick,0x7d8294d2a042,2952217,0,0x0,6
tick,0x7d8294d2a042,2953379,0,0x0,6
tick,0x7d8294d2a042,2954540,0,0x0,6
tick,0x7d8294d2a042,2955590,0,0x0,6
tick,0x7d8294d2a042,2956858,0,0x0,6
tick,0x7d8294d2a042,2958014,0,0x0,6
tick,0x7d8294d2a042,2959132,0,0x0,6
tick,0x7d8294d2a042,2960232,0,0x0,6
tick,0x7d8294d2a042,2961379,0,0x0,6
tick,0x7d8294d2a042,2962525,0,0x0,6
tick,0x7d8294d2a042,2963605,0,0x0,6
tick,0x7d8294d2a042,2964845,0,0x0,6
tick,0x7d8294d2a042,2966003,0,0x0,6
tick,0x7d8294d2a042,2967142,0,0x0,6
tick,0x7d8294d2a042,2968226,0,0x0,6
tick,0x7d8294d2a042,2969399,0,0x0,6
tick,0x7d8294d2a042,2970577,0,0x0,6
tick,0x7d8294d2a042,2971602,0,0x0,6
tick,0x7d8294d2a042,2972777,0,0x0,6
tick,0x7d8294d2a042,2973865,0,0x0,6
tick,0x7d8294d2a042,2975012,0,0x0,6
tick,0x7d8294d2a042,2976080,0,0x0,6
tick,0x7d8294d2a042,2977192,0,0x0,6
tick,0x7d8294d2a042,2978182,0,0x0,6
tick,0x7d8294d2a042,2979341,0,0x0,6
tick,0x7d8294d2a042,2980413,0,0x0,6
tick,0x7d8294d2a042,2981506,0,0x0,6
tick,0x7d8294d2a042,2982455,0,0x0,6
tick,0x7d8294d2a042,2983545,0,0x0,6
tick,0x7d8294d2a042,2984637,0,0x0,6
tick,0x7d8294d2a042,2985794,0,0x0,6
tick,0x7d8294d2a042,2986949,0,0x0,6
tick,0x7d8294d2a042,2988013,0,0x0,6
tick,0x7d8294d2a042,2989158,0,0x0,6
tick,0x7d8294d2a042,2990316,0,0x0,6
tick,0x7d8294d2a042,2991454,0,0x0,6
tick,0x7d8294d2a042,2992609,0,0x0,6
tick,0x7d8294d2a042,2993690,0,0x0,6
tick,0x7d8294d2a042,2994766,0,0x0,6
tick,0x7d8294d2a042,2995753,0,0x0,6
tick,0x7d8294d2a042,2996970,0,0x0,6
tick,0x7d8294d2a042,2998035,0,0x0,6
tick,0x7d8294d2a042,2999084,0,0x0,6
tick,0x7d8294d2a042,3000179,0,0x0,6
tick,0x7d8294d2a042,3001269,0,0x0,6
tick,0x7d8294d2a042,3002432,0,0x0,6
tick,0x7d8294d2a042,3003483,0,0x0,6
tick,0x7d8294d2a042,3004665,0,0x0,6
tick,0x7d8294d2a042,3005602,0,0x0,6
tick,0x7d8294d2a042,3006723,0,0x0,6
tick,0x7d8294d2a042,3007783,0,0x0,6
tick,0x7d8294d2a042,3008934,0,0x0,6
tick,0x7d8294d2a042,3010098,0,0x0,6
tick,0x7d8294d2a042,3011251,0,0x0,6
tick,0x7d8294d2a042,3012340,0,0x0,6
tick,0x7d8294d2a042,3013406,0,0x0,6
tick,0x7d8294d2a042,3014420,0,0x0,6
tick,0x7d8294d2a042,3015473,0,0x0,6
tick,0x7d8294d2a042,3016704,0,0x0,6
tick,0x7d8294d2a042,3017851,0,0x0,6
tick,0x7d8294d2a042,3019008,0,0x0,6
tick,0x7d8294d2a042,3020017,0,0x0,6
tick,0x7d8294d2a042,3021085,0,0x0,6
tick,0x7d8294d2a042,3022237,0,0x0,6
tick,0x7d8294d2a042,3023328,0,0x0,6
tick,0x7d8294d2a042,3024488,0,0x0,6
tick,0x7d8294d2a042,3025562,0,0x0,6
tick,0x7d8294d2a042,3026672,0,0x0,6
tick,0x7d8294d2a042,3027712,0,0x0,6
tick,0x7d8294d2a042,3028718,0,0x0,6
tick,0x7d8294d2a042,3029947,0,0x0,6
tick,0x7d8294d2a042,3031044,0,0x0,6
tick,0x7d8294d2a042,3032202,0,0x0,6
tick,0x7d8294d2a042,3033194,0,0x0,6
tick,0x7d8294d2a042,3034427,0,0x0,6
tick,0x7d8294d2a042,3035553,0,0x0,6
tick,0x7d8294d2a042,3036763,0,0x0,6
tick,0x7d8294d2a042,3037908,0,0x0,6
tick,0x7d8294d2a042,3039077,0,0x0,6
tick,0x7d8294d2a042,3040156,0,0x0,6
tick,0x7d8294d2a042,3041309,0,0x0,6
tick,0x7d8294d2a042,3042481,0,0x0,6
tick,0x7d8294d2a042,3043545,0,0x0,6
tick,0x7d8294d2a042,3044737,0,0x0,6
tick,0x7d8294d2a042,3045902,0,0x0,6
tick,0x7d8294d2a042,3047065,0,0x0,6
tick,0x7d8294d2a042,3048135,0,0x0,6
tick,0x7d8294d2a042,3049286,0,0x0,6
tick,0x7d8294d2a042,3050443,0,0x0,6
tick,0x7d8294d2a042,3051551,0,0x0,6
tick,0x7d8294d2a042,3052755,0,0x0,6
tick,0x7d8294d2a042,3053887,0,0x0,6
tick,0x7d8294d2a042,3055040,0,0x0,6
tick,0x7d8294d2a042,3056110,0,0x0,6
tick,0x7d8294d2a042,3057264,0,0x0,6
tick,0x7d8294d2a042,3058435,0,0x0,6
tick,0x7d8294d2a042,3059545,0,0x0,6
tick,0x7d8294d2a042,3060756,0,0x0,6
tick,0x7d8294d2a042,3061902,0,0x0,6
tick,0x7d8294d2a042,3062982,0,0x0,6
tick,0x7d8294d2a042,3064081,0,0x0,6
tick,0x7d8294d2a042,3065162,0,0x0,6
tick,0x7d8294d2a042,3066237,0,0x0,6
tick,0x7d8294d2a042,3067389,0,0x0,6
tick,0x7d8294d2a042,3068548,0,0x0,6
tick,0x7d8294d2a042,3069566,0,0x0,6
tick,0x7d8294d2a042,3070758,0,0x0,6
tick,0x7d8294d2a042,3071820,0,0x0,6
tick,0x7d8294d2a042,3072894,0,0x0,6
tick,0x7d8294d2a042,3073964,0,0x0,6
tick,0x7d8294d2a042,3075056,0,0x0,6
tick,0x7d8294d2a042,3076106,0,0x0,6
tick,0x7d8294d2a042,3077165,0,0x0,6
tick,0x7d8294d2a042,3078294,0,0x0,6
tick,0x7d8294d2a042,3079369,0,0x0,6
tick,0x7d8294d2a042,3080420,0,0x0,6
tick,0x7d8294d2a042,3081495,0,0x0,6
tick,0x7d8294d2a042,3082541,0,0x0,6
tick,0x7d8294d2a042,3083478,0,0x0,6
tick,0x7d8294d2a042,3084630,0,0x0,6
tick,0x7d8294d2a042,3085617,0,0x0,6
tick,0x7d8294d2a042,3086760,0,0x0,6
tick,0x7d8294d2a042,3087769,0,0x0,6
tick,0x64950cfc2a67,3088787,0,0x0,6
tick,0x7d8294d2a042,3089923,0,0x0,6
tick,0x7d8294d2a042,3091004,0,0x0,6
tick,0x7d8294d2a042,3092072,0,0x0,6
tick,0x7d8294d2a042,3093109,0,0x0,6
tick,0x7d8294d2a042,3094179,0,0x0,6
tick,0x7d8294d2a042,3095234,0,0x0,6
tick,0x7d8294d2a042,3096304,0,0x0,6
tick,0x7d8294d2a042,3097352,0,0x0,6
tick,0x7d8294d2a042,3098434,0,0x0,6
tick,0x7d8294d2a042,3099480,0,0x0,6
tick,0x7d8294d2a042,3100549,0,0x0,6
tick,0x7d8294d2a042,3101545,0,0x0,6
tick,0x7d8294d2a042,3102663,0,0x0,6
tick,0x7d8294d2a042,3103617,0,0x0,6
tick,0x7d8294d2a042,3104808,0,0x0,6
tick,0x7d8294d2a042,3105839,0,0x0,6
tick,0x7d8294d2a042,3106901,0,0x0,6
tick,0x7d8294d2a042,3107910,0,0x0,6
tick,0x7d8294d2a042,3109025,0,0x0,6
tick,0x7d8294d2a042,3110086,0,0x0,6
tick,0x7d8294d2a042,3111054,0,0x0,6
tick,0x7d8294d2a042,3112213,0,0x0,6
tick,0x7d8294d2a042,3113272,0,0x0,6
tick,0x7d8294d2a042,3114310,0,0x0,6
tick,0x7d8294d2a042,3115327,0,0x0,6
tick,0x7d8294d2a042,3116470,0,0x0,6
tick,0x7d8294d2a042,3117521,0,0x0,6
tick,0x7d8294d2a042,3118601,0,0x0,6
tick,0x7d8294d2a042,3119593,0,0x0,6
tick,0x7d8294d2a042,3120706,0,0x0,6
tick,0x7d8294d2a042,3121776,0,0x0,6
tick,0x7d8294d2a042,3122799,0,0x0,6
tick,0x7d8294d2a042,3123842,0,0x0,6
tick,0x7d8294d2a042,3124888,0,0x0,6
tick,0x7d8294d2a042,3126025,0,0x0,6
tick,0x7d8294d2a042,3127010,0,0x0,6
tick,0x7d8294d2a042,3128077,0,0x0,6
tick,0x7d8294d2a042,3129129,0,0x0,6
tick,0x7d8294d2a042,3130262,0,0x0,6
tick,0x7d8294d2a042,3131334,0,0x0,6
tick,0x7d8294d2a042,3132392,0,0x0,6
tick,0x7d8294d2a042,3133455,0,0x0,6
tick,0x7d8294d2a042,3134507,0,0x0,6
tick,0x7d8294d2a042,3135498,0,0x0,6
tick,0x7d8294d2a042,3136638,0,0x0,6
tick,0x7d8294d2a042,3137689,0,0x0,6
tick,0x7d8294d2a042,3138771,0,0x0,6
tick,0x7d8294d2a042,3139784,0,0x0,6
tick,0x7d8294d2a042,3140889,0,0x0,6
tick,0x7d8294d2a042,3141933,0,0x0,6
tick,0x7d8294d2a042,3143004,0,0x0,6
tick,0x7d8294d2a042,3143984,0,0x0,6
tick,0x7d8294d2a042,3144992,0,0x0,6
tick,0x7d8294d2a042,3146106,0,0x0,6
tick,0x7d8294d2a042,3147248,0,0x0,6
tick,0x7d8294d2a042,3148286,0,0x0,6
tick,0x7d8294d2a042,3149360,0,0x0,6
tick,0x7d8294d2a042,3150418,0,0x0,6
tick,0x7d8294d2a042,3151484,0,0x0,6
tick,0x7d8294d2a042,3152541,0,0x0,6
tick,0x7d8294d2a042,3153620,0,0x0,6
tick,0x7d8294d2a042,3154671,0,0x0,6
tick,0x7d8294d2a042,3155614,0,0x0,6
tick,0x7d8294d2a042,3156794,0,0x0,6
tick,0x7d8294d2a042,3157842,0,0x0,6
tick,0x7d8294d2a042,3158907,0,0x0,6
tick,0x7d8294d2a042,3159950,0,0x0,6
tick,0x7d8294d2a042,3161028,0,0x0,6
tick,0x7d8294d2a042,3162087,0,0x0,6
tick,0x7d8294d2a042,3163151,0,0x0,6
tick,0x7d8294d2a042,3164187,0,0x0,6
tick,0x7d8294d2a042,3165255,0,0x0,6
tick,0x7d8294d2a042,3166315,0,0x0,6
tick,0x7d8294d2a042,3167413,0,0x0,6
tick,0x7d8294d2a042,3168457,0,0x0,6
tick,0x7d8294d2a042,3169505,0,0x0,6
tick,0x7d8294d2a042,3170567,0,0x0,6
tick,0x7d8294d2a042,3171562,0,0x0,6
tick,0x7d8294d2a042,3172709,0,0x0,6
tick,0x7d8294d2a042,3173755,0,0x0,6
tick,0x7d8294d2a042,3174746,0,0x0,6
tick,0x7d8294d2a042,3175752,0,0x0,6
tick,0x7d8294d2a042,3176932,0,0x0,6
tick,0x7d8294d2a042,3177932,0,0x0,6
tick,0x7d8294d2a042,3178983,0,0x0,6
tick,0x7d8294d2a042,3180124,0,0x0,6
tick,0x7d8294d2a042,3181182,0,0x0,6
tick,0x7d8294d2a042,3182155,0,0x0,6
tick,0x7d8294d2a042,3183236,0,0x0,6
tick,0x7d8294d2a042,3184376,0,0x0,6
tick,0x7d8294d2a042,3185445,0,0x0,6
tick,0x7d8294d2a042,3186431,0,0x0,6
tick,0x7d8294d2a042,3187496,0,0x0,6
tick,0x7d8294d2a042,3188606,0,0x0,6
tick,0x7d8294d2a042,3189668,0,0x0,6
tick,0x7d8294d2a042,3190677,0,0x0,6
tick,0x7d8294d2a042,3191702,0,0x0,6
tick,0x7d8294d2a042,3192861,0,0x0,6
tick,0x7d8294d2a042,3193907,0,0x0,6
tick,0x7d8294d2a042,3194969,0,0x0,6
tick,0x7d8294d2a042,3196026,0,0x0,6
tick,0x7d8294d2a042,3197102,0,0x0,6
tick,0x7d8294d2a042,3198151,0,0x0,6
tick,0x7d8294d2a042,3199222,0,0x0,6
tick,0x7d8294d2a042,3200276,0,0x0,6
tick,0x7d8294d2a042,3201259,0,0x0,6
tick,0x7d8294d2a042,3202317,0,0x0,6
tick,0x7d8294d2a042,3203401,0,0x0,6
tick,0x7d8294d2a042,3204468,0,0x0,6
tick,0x7d8294d2a042,3205596,0,0x0,6
tick,0x7d8294d2a042,3206659,0,0x0,6
tick,0x7d8294d2a042,3207620,0,0x0,6
tick,0x7d8294d2a042,3208772,0,0x0,6
tick,0x7d8294d2a042,3209816,0,0x0,6
tick,0x7d8294d2a042,3210816,0,0x0,6
tick,0x7d8294d2a042,3211867,0,0x0,6
tick,0x7d8294d2a042,3212928,0,0x0,6
tick,0x7d8294d2a042,3214070,0,0x0,6
tick,0x7d8294d2a042,3215122,0,0x0,6
tick,0x7d8294d2a042,3216133,0,0x0,6
tick,0x7d8294d2a042,3217206,0,0x0,6
tick,0x7d8294d2a042,3218243,0,0x0,6
tick,0x7d8294d2a042,3219292,0,0x0,6
tick,0x7d8294d2a042,3220451,0,0x0,6
tick,0x7d8294d2a042,3221417,0,0x0,6
tick,0x7d8294d2a042,3222557,0,0x0,6
tick,0x7d8294d2a042,3223586,0,0x0,6
tick,0x7d8294d2a042,3224626,0,0x0,6
tick,0x7d8294d2a042,3225696,0,0x0,6
tick,0x7d8294d2a042,3226694,0,0x0,6
tick,0x7d8294d2a042,3227659,0,0x0,6
tick,0x7d8294d2a042,3228862,0,0x0,6
tick,0x7d8294d2a042,3229931,0,0x0,6
tick,0x7d8294d2a042,3230983,0,0x0,6
tick,0x7d8294d2a042,3232062,0,0x0,6
tick,0x7d8294d2a042,3233108,0,0x0,6
tick,0x7d8294d2a042,3234170,0,0x0,6
tick,0x7d8294d2a042,3235225,0,0x0,6
tick,0x7d8294d2a042,3236222,0,0x0,6
tick,0x7d8294d2a042,3237308,0,0x0,6
tick,0x7d8294d2a042,3238362,0,0x0,6
tick,0x7d8294d2a042,3239434,0,0x0,6
tick,0x7d8294d2a042,3240533,0,0x0,6
tick,0x7d8294d2a042,3241607,0,0x0,6
tick,0x7d8294d2a042,3242663,0,0x0,6
tick,0x7d8294d2a042,3243632,0,0x0,6
tick,0x7d8294d2a042,3244782,0,0x0,6
tick,0x7d8294d2a042,3245869,0,0x0,6
tick,0x7d8294d2a042,3246861,0,0x0,6
tick,0x7d8294d2a042,3247914,0,0x0,6
tick,0x7d8294d2a042,3248986,0,0x0,6
tick,0x7d8294d2a042,3250088,0,0x0,6
tick,0x7d8294d2a042,3251159,0,0x0,6
tick,0x7d8294d2a042,3252202,0,0x0,6
tick,0x7d8294d2a042,3253289,0,0x0,6
tick,0x7d8294d2a042,3254334,0,0x0,6
tick,0x7d8294d2a042,3255398,0,0x0,6
tick,0x7d8294d2a042,3256489,0,0x0,6
tick,0x7d8294d2a042,3257522,0,0x0,6
tick,0x7d8294d2a042,3258510,0,0x0,6
tick,0x7d8294d2a042,3259558,0,0x0,6
tick,0x7d8294d2a042,3260699,0,0x0,6
tick,0x7d8294d2a042,3261736,0,0x0,6
tick,0x7d8294d2a042,3262749,0,0x0,6
tick,0x7d8294d2a042,3263821,0,0x0,6
tick,0x7d8294d2a042,3264884,0,0x0,6
tick,0x7d8294d2a042,3266013,0,0x0,6
tick,0x7d8294d2a042,3267069,0,0x0,6
tick,0x7d8294d2a042,3268142,0,0x0,6
tick,0x7d8294d2a042,3269122,0,0x0,6
tick,0x7d8294d2a042,3270178,0,0x0,6
tick,0x7d8294d2a042,3271242,0,0x0,6
tick,0x7d8294d2a042,3272390,0,0x0,6
tick,0x7d8294d2a042,3273389,0,0x0,6
tick,0x7d8294d2a042,3274505,0,0x0,6
tick,0x7d8294d2a042,3275489,0,0x0,6
tick,0x7d8294d2a042,3276638,0,0x0,6
tick,0x7d8294d2a042,3277693,0,0x0,6
tick,0x7d8294d2a042,3278760,0,0x0,6
tick,0x7d8294d2a042,3279745,0,0x0,6
tick,0x7d8294d2a042,3280787,0,0x0,6
tick,0x7d8294d2a042,3281933,0,0x0,6
tick,0x7d8294d2a042,3282993,0,0x0,6
tick,0x7d8294d2a042,3284048,0,0x0,6
tick,0x7d8294d2a042,3285122,0,0x0,6
tick,0x7d8294d2a042,3286124,0,0x0,6
tick,0x7d8294d2a042,3287167,0,0x0,6
tick,0x7d8294d2a042,3288220,0,0x0,6
tick,0x7d8294d2a042,3289361,0,0x0,6
tick,0x7d8294d2a042,3290443,0,0x0,6
tick,0x7d8294d2a042,3291444,0,0x0,6
tick,0x7d8294d2a042,3292536,0,0x0,6
tick,0x7d8294d2a042,3293630,0,0x0,6
tick,0x7d8294d2a042,3294688,0,0x0,6
tick,0x7d8294d2a042,3295580,0,0x0,6
tick,0x7d8294d2a042,3296803,0,0x0,6
tick,0x7d8294d2a042,3297849,0,0x0,6
tick,0x7d8294d2a042,3298916,0,0x0,6
tick,0x7d8294d2a042,3299964,0,0x0,6
tick,0x7d8294d2a042,3301033,0,0x0,6
tick,0x7d8294d2a042,3302106,0,0x0,6
tick,0x7d8294d2a042,3303154,0,0x0,6
tick,0x7d8294d2a042,3304155,0,0x0,6
tick,0x7d8294d2a042,3305277,0,0x0,6
tick,0x7d8294d2a042,3306269,0,0x0,6
tick,0x7d8294d2a042,3307413,0,0x0,6
tick,0x7d8294d2a042,3308472,0,0x0,6
tick,0x7d8294d2a042,3309537,0,0x0,6
tick,0x7d8294d2a042,3310588,0,0x0,6
tick,0x7d8294d2a042,3311555,0,0x0,6
tick,0x7d8294d2a042,3312716,0,0x0,6
tick,0x7d8294d2a042,3313788,0,0x0,6
tick,0x7d8294d2a042,3314788,0,0x0,6
tick,0x7d8294d2a042,3315860,0,0x0,6
tick,0x7d8294d2a042,3316962,0,0x0,6
tick,0x7d8294d2a042,3318029,0,0x0,6
tick,0x7d8294d2a042,3319089,0,0x0,6
tick,0x7d8294d2a042,3320146,0,0x0,6
tick,0x7d8294d2a042,3321210,0,0x0,6
tick,0x7d8294d2a042,3322262,0,0x0,6
tick,0x7d8294d2a042,3323327,0,0x0,6
tick,0x7d8294d2a042,3324390,0,0x0,6
tick,0x7d8294d2a042,3325455,0,0x0,6
tick,0x7d8294d2a042,3326435,0,0x0,6
tick,0x7d8294d2a042,3327493,0,0x0,6
tick,0x7d8294d2a042,3328672,0,0x0,6
tick,0x7d8294d2a042,3329704,0,0x0,6
tick,0x7d8294d2a042,3330706,0,0x0,6
tick,0x7d8294d2a042,3331722,0,0x0,6
tick,0x7d8294d2a042,3332896,0,0x0,6
tick,0x7d8294d2a042,3333938,0,0x0,6
tick,0x7d8294d2a042,3335003,0,0x0,6
tick,0x7d8294d2a042,3336052,0,0x0,6
tick,0x7d8294d2a042,3337058,0,0x0,6
tick,0x7d8294d2a042,3338106,0,0x0,6
tick,0x7d8294d2a042,3339168,0,0x0,6
tick,0x7d8294d2a042,3340306,0,0x0,6
tick,0x7d8294d2a042,3341370,0,0x0,6
tick,0x7d8294d2a042,3342428,0,0x0,6
tick,0x7d8294d2a042,3343490,0,0x0,6
tick,0x7d8294d2a042,3344566,0,0x0,6
tick,0x7d8294d2a042,3345616,0,0x0,6
tick,0x7d8294d2a042,3346546,0,0x0,6
tick,0x7d8294d2a042,3347547,0,0x0,6
tick,0x7d8294d2a042,3348798,0,0x0,6
tick,0x7d8294d2a042,3349870,0,0x0,6
tick,0x7d8294d2a042,3350924,0,0x0,6
tick,0x7d8294d2a042,3351973,0,0x0,6
tick,0x7d8294d2a042,3353042,0,0x0,6
tick,0x7d8294d2a042,3354101,0,0x0,6
tick,0x7d8294d2a042,3355164,0,0x0,6
tick,0x7d8294d2a042,3356166,0,0x0,6
tick,0x7d8294d2a042,3357289,0,0x0,6
tick,0x7d8294d2a042,3358349,0,0x0,6
tick,0x7d8294d2a042,3359441,0,0x0,6
tick,0x7d8294d2a042,3360469,0,0x0,6
tick,0x7d8294d2a042,3361526,0,0x0,6
tick,0x7d8294d2a042,3362593,0,0x0,6
tick,0x7d8294d2a042,3363480,0,0x0,6
tick,0x7d8294d2a042,3364710,0,0x0,6
tick,0x7d8294d2a042,3365783,0,0x0,6
tick,0x7d8294d2a042,3366857,0,0x0,6
tick,0x7d8294d2a042,3367891,0,0x0,6
tick,0x7d8294d2a042,3368957,0,0x0,6
tick,0x7d8294d2a042,3370011,0,0x0,6
tick,0x7d8294d2a042,3371081,0,0x0,6
tick,0x7d8294d2a042,3372077,0,0x0,6
tick,0x7d8294d2a042,3373200,0,0x0,6
tick,0x7d8294d2a042,3374197,0,0x0,6
tick,0x7d8294d2a042,3375332,0,0x0,6
tick,0x7d8294d2a042,3376408,0,0x0,6
tick,0x7d8294d2a042,3377378,0,0x0,6
tick,0x7d8294d2a042,3378515,0,0x0,6
tick,0x7d8294d2a042,3379554,0,0x0,6
tick,0x7d8294d2a042,3380627,0,0x0,6
tick,0x7d8294d2a042,3381701,0,0x0,6
tick,0x7d8294d2a042,3382750,0,0x0,6
tick,0x7d8294d2a042,3383730,0,0x0,6
tick,0x7d8294d2a042,3384875,0,0x0,6
tick,0x7d8294d2a042,3385932,0,0x0,6
tick,0x7d8294d2a042,3386999,0,0x0,6
tick,0x7d8294d2a042,3388067,0,0x0,6
tick,0x7d8294d2a042,3389117,0,0x0,6
tick,0x7d8294d2a042,3390180,0,0x0,6
tick,0x7d8294d2a042,3391260,0,0x0,6
tick,0x7d8294d2a042,3392302,0,0x0,6
tick,0x7d8294d2a042,3393381,0,0x0,6
tick,0x7d8294d2a042,3394424,0,0x0,6
tick,0x7d8294d2a042,3395487,0,0x0,6
tick,0x7d8294d2a042,3396491,0,0x0,6
tick,0x7d8294d2a042,3397545,0,0x0,6
tick,0x7d8294d2a042,3398674,0,0x0,6
tick,0x7d8294d2a042,3399611,0,0x0,6
tick,0x7d8294d2a042,3400790,0,0x0,6
tick,0x7d8294d2a042,3401838,0,0x0,6
tick,0x7d8294d2a042,3402900,0,0x0,6
tick,0x7d8294d2a042,3403947,0,0x0,6
tick,0x7d8294d2a042,3404972,0,0x0,6
tick,0x7d8294d2a042,3406080,0,0x0,6
tick,0x7d8294d2a042,3407142,0,0x0,6
tick,0x7d8294d2a042,3408197,0,0x0,6
tick,0x7d8294d2a042,3409280,0,0x0,6
tick,0x7d8294d2a042,3410335,0,0x0,6
tick,0x7d8294d2a042,3411393,0,0x0,6
tick,0x7d8294d2a042,3412388,0,0x0,6
tick,0x7d8294d2a042,3413458,0,0x0,6
tick,0x7d8294d2a042,3414577,0,0x0,6
tick,0x7d8294d2a042,3415546,0,0x0,6
tick,0x7d8294d2a042,3416708,0,0x0,6
tick,0x7d8294d2a042,3417751,0,0x0,6
tick,0x7d8294d2a042,3418820,0,0x0,6
tick,0x7d8294d2a042,3419886,0,0x0,6
tick,0x7d8294d2a042,3420938,0,0x0,6
tick,0x7d8294d2a042,3422012,0,0x0,6
tick,0x7d8294d2a042,3423085,0,0x0,6
tick,0x7d8294d2a042,3424112,0,0x0,6
tick,0x7d8294d2a042,3425186,0,0x0,6
tick,0x7d8294d2a042,3426243,0,0x0,6
tick,0x7d8294d2a042,3427309,0,0x0,6
tick,0x7d8294d2a042,3428376,0,0x0,6
tick,0x7d8294d2a042,3429423,0,0x0,6
tick,0x7d8294d2a042,3430495,0,0x0,6
tick,0x7d8294d2a042,3431676,0,0x0,6
tick,0x7d8294d2a042,3432546,0,0x0,6
tick,0x7d8294d2a042,3433680,0,0x0,6
tick,0x7d8294d2a042,3434678,0,0x0,6
tick,0x7d8294d2a042,3435608,0,0x0,6
tick,0x7d8294d2a042,3436853,0,0x0,6
tick,0x7d8294d2a042,3437928,0,0x0,6
tick,0x7d8294d2a042,3438981,0,0x0,6
tick,0x7d8294d2a042,3440045,0,0x0,6
tick,0x7d8294d2a042,3441100,0,0x0,6
tick,0x7d8294d2a042,3442170,0,0x0,6
tick,0x7d8294d2a042,3443239,0,0x0,6
tick,0x7d8294d2a042,3444217,0,0x0,6
tick,0x7d8294d2a042,3445278,0,0x0,6
tick,0x7d8294d2a042,3446415,0,0x0,6
tick,0x7d8294d2a042,3447471,0,0x0,6
tick,0x7d8294d2a042,3448541,0,0x0,6
tick,0x7d8294d2a042,3449621,0,0x0,6
tick,0x7d8294d2a042,3450606,0,0x0,6
tick,0x7d8294d2a042,3451590,0,0x0,6
tick,0x7d8294d2a042,3452786,0,0x0,6
tick,0x7d8294d2a042,3453843,0,0x0,6
tick,0x7d8294d2a042,3454899,0,0x0,6
tick,0x7d8294d2a042,3455955,0,0x0,6
tick,0x7d8294d2a042,3457033,0,0x0,6
tick,0x7d8294d2a042,3458087,0,0x0,6
tick,0x7d8294d2a042,3459161,0,0x0,6
tick,0x7d8294d2a042,3460086,0,0x0,6
tick,0x7d8294d2a042,3461265,0,0x0,6
tick,0x7d8294d2a042,3462328,0,0x0,6
tick,0x7d8294d2a042,3463320,0,0x0,6
tick,0x7d8294d2a042,3464469,0,0x0,6
tick,0x7d8294d2a042,3465515,0,0x0,6
tick,0x7d8294d2a042,3466582,0,0x0,6
tick,0x7d8294d2a042,3467535,0,0x0,6
tick,0x7d8294d2a042,3468693,0,0x0,6
tick,0x7d8294d2a042,3469762,0,0x0,6
tick,0x7d8294d2a042,3470826,0,0x0,6
tick,0x7d8294d2a042,3471787,0,0x0,6
tick,0x7d8294d2a042,3472875,0,0x0,6
tick,0x7d8294d2a042,3473997,0,0x0,6
tick,0x7d8294d2a042,3475070,0,0x0,6
tick,0x7d8294d2a042,3476058,0,0x0,6
tick,0x7d8294d2a042,3477130,0,0x0,6
tick,0x7d8294d2a042,3478261,0,0x0,6
tick,0x7d8294d2a042,3479314,0,0x0,6
tick,0x7d8294d2a042,3480371,0,0x0,6
tick,0x7d8294d2a042,3481435,0,0x0,6
tick,0x7d8294d2a042,3482487,0,0x0,6
tick,0x7d8294d2a042,3483428,0,0x0,6
tick,0x7d8294d2a042,3484614,0,0x0,6
tick,0x7d8294d2a042,3485696,0,0x0,6
tick,0x7d8294d2a042,3486741,0,0x0,6
tick,0x7d8294d2a042,3487679,0,0x0,6
tick,0x7d8294d2a042,3488860,0,0x0,6
tick,0x7d8294d2a042,3489924,0,0x0,6
tick,0x7d8294d2a042,3490986,0,0x0,6
tick,0x7d8294d2a042,3491975,0,0x0,6
tick,0x7d8294d2a042,3493034,0,0x0,6
tick,0x7d8294d2a042,3494175,0,0x0,6
tick,0x7d8294d2a042,3495235,0,0x0,6
tick,0x7d8294d2a042,3496287,0,0x0,6
tick,0x7d8294d2a042,3497367,0,0x0,6
tick,0x7d8294d2a042,3498411,0,0x0,6
tick,0x7d8294d2a042,3499489,0,0x0,6
tick,0x7d8294d2a042,3500535,0,0x0,6
tick,0x7d8294d2a042,3501610,0,0x0,6
tick,0x7d8294d2a042,3502585,0,0x0,6
tick,0x7d8294d2a042,3503617,0,0x0,6
tick,0x7d8294d2a042,3504790,0,0x0,6
tick,0x7d8294d2a042,3505845,0,0x0,6
tick,0x7d8294d2a042,3506899,0,0x0,6
tick,0x7d8294d2a042,3507957,0,0x0,6
tick,0x7d8294d2a042,3509035,0,0x0,6
tick,0x7d8294d2a042,3510086,0,0x0,6
tick,0x7d8294d2a042,3511168,0,0x0,6
tick,0x7d8294d2a042,3512213,0,0x0,6
tick,0x7d8294d2a042,3513277,0,0x0,6
tick,0x7d8294d2a042,3514331,0,0x0,6
tick,0x7d8294d2a042,3515418,0,0x0,6
tick,0x7d8294d2a042,3516462,0,0x0,6
tick,0x7d8294d2a042,3517537,0,0x0,6
tick,0x7d8294d2a042,3518595,0,0x0,6
tick,0x7d8294d2a042,3519550,0,0x0,6
tick,0x7d8294d2a042,3520704,0,0x0,6
tick,0x7d8294d2a042,3521762,0,0x0,6
tick,0x7d8294d2a042,3522753,0,0x0,6
tick,0x7d8294d2a042,3523764,0,0x0,6
tick,0x7d8294d2a042,3524877,0,0x0,6
tick,0x7d8294d2a042,3526004,0,0x0,6
tick,0x7d8294d2a042,3527085,0,0x0,6
tick,0x7d8294d2a042,3528133,0,0x0,6
tick,0x7d8294d2a042,3529187,0,0x0,6
tick,0x7d8294d2a042,3530253,0,0x0,6
tick,0x7d8294d2a042,3531245,0,0x0,6
tick,0x7d8294d2a042,3532377,0,0x0,6
tick,0x7d8294d2a042,3533380,0,0x0,6
tick,0x7d8294d2a042,3534513,0,0x0,6
tick,0x7d8294d2a042,3535492,0,0x0,6
tick,0x7d8294d2a042,3536637,0,0x0,6
tick,0x7d8294d2a042,3537694,0,0x0,6
tick,0x7d8294d2a042,3538752,0,0x0,6
tick,0x7d8294d2a042,3539625,0,0x0,6
tick,0x7d8294d2a042,3540864,0,0x0,6
tick,0x7d8294d2a042,3541929,0,0x0,6
tick,0x7d8294d2a042,3542989,0,0x0,6
tick,0x7d8294d2a042,3544034,0,0x0,6
tick,0x7d8294d2a042,3545109,0,0x0,6
tick,0x7d8294d2a042,3546162,0,0x0,6
tick,0x7d8294d2a042,3547223,0,0x0,6
tick,0x7d8294d2a042,3548277,0,0x0,6
tick,0x7d8294d2a042,3549344,0,0x0,6
tick,0x7d8294d2a042,3550340,0,0x0,6
tick,0x7d8294d2a042,3551399,0,0x0,6
tick,0x7d8294d2a042,3552536,0,0x0,6
tick,0x7d8294d2a042,3553591,0,0x0,6
tick,0x7d8294d2a042,3554663,0,0x0,6
tick,0x7d8294d2a042,3555604,0,0x0,6
tick,0x7d8294d2a042,3556782,0,0x0,6
tick,0x7d8294d2a042,3557843,0,0x0,6
tick,0x7d8294d2a042,3558900,0,0x0,6
tick,0x7d8294d2a042,3559950,0,0x0,6
tick,0x7d8294d2a042,3561022,0,0x0,6
tick,0x7d8294d2a042,3562077,0,0x0,6
tick,0x7d8294d2a042,3563161,0,0x0,6
tick,0x7d8294d2a042,3564130,0,0x0,6
tick,0x7d8294d2a042,3565264,0,0x0,6
tick,0x7d8294d2a042,3566328,0,0x0,6
tick,0x7d8294d2a042,3567389,0,0x0,6
tick,0x7d8294d2a042,3568458,0,0x0,6
tick,0x7d8294d2a042,3569518,0,0x0,6
tick,0x7d8294d2a042,3570496,0,0x0,6
tick,0x7d8294d2a042,3571503,0,0x0,6
tick,0x7d8294d2a042,3572690,0,0x0,6
tick,0x7d8294d2a042,3573754,0,0x0,6
tick,0x7d8294d2a042,3574809,0,0x0,6
tick,0x7d8294d2a042,3575824,0,0x0,6
tick,0x7d8294d2a042,3576928,0,0x0,6
tick,0x7d8294d2a042,3577984,0,0x0,6
tick,0x7d8294d2a042,3579056,0,0x0,6
tick,0x7d8294d2a042,3580118,0,0x0,6
tick,0x7d8294d2a042,3581168,0,0x0,6
tick,0x7d8294d2a042,3582238,0,0x0,6
tick,0x7d8294d2a042,3583296,0,0x0,6
tick,0x7d8294d2a042,3584356,0,0x0,6
tick,0x7d8294d2a042,3585434,0,0x0,6
tick,0x7d8294d2a042,3586484,0,0x0,6
tick,0x7d8294d2a042,3587476,0,0x0,6
tick,0x7d8294d2a042,3588623,0,0x0,6
tick,0x7d8294d2a042,3589597,0,0x0,6
tick,0x7d8294d2a042,3590735,0,0x0,6
tick,0x7d8294d2a042,3591698,0,0x0,6
tick,0x7d8294d2a042,3592843,0,0x0,6
tick,0x7d8294d2a042,3593908,0,0x0,6
tick,0x7d8294d2a042,3594975,0,0x0,6
tick,0x7d8294d2a042,3596041,0,0x0,6
tick,0x7d8294d2a042,3597109,0,0x0,6
tick,0x7d8294d2a042,3598154,0,0x0,6
tick,0x7d8294d2a042,3599247,0,0x0,6
tick,0x7d8294d2a042,3600267,0,0x0,6
tick,0x7d8294d2a042,3601246,0,0x0,6
tick,0x7d8294d2a042,3602350,0,0x0,6
tick,0x7d8294d2a042,3603300,0,0x0,6
tick,0x7d8294d2a042,3604443,0,0x0,6
tick,0x7d8294d2a042,3605567,0,0x0,6
tick,0x7d8294d2a042,3606648,0,0x0,6
tick,0x7d8294d2a042,3607655,0,0x0,6
tick,0x7d8294d2a042,3608771,0,0x0,6
tick,0x7d8294d2a042,3609821,0,0x0,6
tick,0x7d8294d2a042,3610885,0,0x0,6
tick,0x7d8294d2a042,3611977,0,0x0,6
tick,0x7d8294d2a042,3613011,0,0x0,6
tick,0x7d8294d2a042,3614093,0,0x0,6
tick,0x7d8294d2a042,3615076,0,0x0,6
tick,0x7d8294d2a042,3616209,0,0x0,6
tick,0x7d8294d2a042,3617261,0,0x0,6
tick,0x7d8294d2a042,3618318,0,0x0,6
tick,0x7d8294d2a042,3619406,0,0x0,6
tick,0x7d8294d2a042,3620444,0,0x0,6
tick,0x7d8294d2a042,3621517,0,0x0,6
tick,0x7d8294d2a042,3622496,0,0x0,6
tick,0x7d8294d2a042,3623574,0,0x0,6
tick,0x7d8294d2a042,3624685,0,0x0,6
tick,0x7d8294d2a042,3625758,0,0x0,6
tick,0x7d8294d2a042,3626814,0,0x0,6
tick,0x7d8294d2a042,3627896,0,0x0,6
tick,0x7d8294d2a042,3628936,0,0x0,6
tick,0x7d8294d2a042,3629993,0,0x0,6
tick,0x7d8294d2a042,3631076,0,0x0,6
tick,0x7d8294d2a042,3632110,0,0x0,6
tick,0x7d8294d2a042,3633115,0,0x0,6
tick,0x7d8294d2a042,3634172,0,0x0,6
tick,0x7d8294d2a042,3635230,0,0x0,6
tick,0x7d8294d2a042,3636360,0,0x0,6
tick,0x7d8294d2a042,3637425,0,0x0,6
tick,0x7d8294d2a042,3638495,0,0x0,6
tick,0x7d8294d2a042,3639499,0,0x0,6
tick,0x7d8294d2a042,3640626,0,0x0,6
tick,0x7d8294d2a042,3641678,0,0x0,6
tick,0x7d8294d2a042,3642751,0,0x0,6
tick,0x7d8294d2a042,3643709,0,0x0,6
tick,0x7d8294d2a042,3644787,0,0x0,6
tick,0x7d8294d2a042,3645928,0,0x0,6
tick,0x7d8294d2a042,3646987,0,0x0,6
tick,0x7d8294d2a042,3647965,0,0x0,6
tick,0x7d8294d2a042,3649030,0,0x0,6
tick,0x7d8294d2a042,3650154,0,0x0,6
tick,0x7d8294d2a042,3651222,0,0x0,6
tick,0x7d8294d2a042,3652277,0,0x0,6
tick,0x7d8294d2a042,3653270,0,0x0,6
tick,0x7d8294d2a042,3654405,0,0x0,6
tick,0x7d8294d2a042,3655485,0,0x0,6
tick,0x7d8294d2a042,3656532,0,0x0,6
tick,0x7d8294d2a042,3657586,0,0x0,6
tick,0x7d8294d2a042,3658586,0,0x0,6
tick,0x7d8294d2a042,3659674,0,0x0,6
tick,0x7d8294d2a042,3660783,0,0x0,6
tick,0x7d8294d2a042,3661827,0,0x0,6
tick,0x7d8294d2a042,3662817,0,0x0,6
tick,0x7d8294d2a042,3663937,0,0x0,6
tick,0x7d8294d2a042,3665017,0,0x0,6
tick,0x7d8294d2a042,3666086,0,0x0,6
tick,0x7d8294d2a042,3667134,0,0x0,6
tick,0x7d8294d2a042,3668136,0,0x0,6
tick,0x7d8294d2a042,3669202,0,0x0,6
tick,0x7d8294d2a042,3670321,0,0x0,6
tick,0x7d8294d2a042,3671381,0,0x0,6
tick,0x7d8294d2a042,3672448,0,0x0,6
tick,0x7d8294d2a042,3673441,0,0x0,6
tick,0x7d8294d2a042,3674497,0,0x0,6
tick,0x7d8294d2a042,3675558,0,0x0,6
tick,0x7d8294d2a042,3676688,0,0x0,6
tick,0x7d8294d2a042,3677767,0,0x0,6
tick,0x7d8294d2a042,3678767,0,0x0,6
tick,0x7d8294d2a042,3679893,0,0x0,6
tick,0x7d8294d2a042,3680936,0,0x0,6
tick,0x7d8294d2a042,3682008,0,0x0,6
tick,0x7d8294d2a042,3683068,0,0x0,6
tick,0x7d8294d2a042,3684128,0,0x0,6
tick,0x7d8294d2a042,3685182,0,0x0,6
tick,0x7d8294d2a042,3686243,0,0x0,6
tick,0x7d8294d2a042,3687309,0,0x0,6
tick,0x7d8294d2a042,3688366,0,0x0,6
tick,0x7d8294d2a042,3689432,0,0x0,6
tick,0x7d8294d2a042,3690418,0,0x0,6
tick,0x7d8294d2a042,3691454,0,0x0,6
tick,0x7d8294d2a042,3692637,0,0x0,6
tick,0x7d8294d2a042,3693690,0,0x0,6
tick,0x7d8294d2a042,3694737,0,0x0,6
tick,0x7d8294d2a042,3695777,0,0x0,6
tick,0x7d8294d2a042,3696859,0,0x0,6
tick,0x7d8294d2a042,3697912,0,0x0,6
tick,0x7d8294d2a042,3698978,0,0x0,6
tick,0x7d8294d2a042,3700050,0,0x0,6
tick,0x7d8294d2a042,3701159,0,0x0,6
tick,0x7d8294d2a042,3702208,0,0x0,6
tick,0x7d8294d2a042,3703262,0,0x0,6
tick,0x7d8294d2a042,3704249,0,0x0,6
tick,0x7d8294d2a042,3705330,0,0x0,6
tick,0x7d8294d2a042,3706312,0,0x0,6
tick,0x7d8294d2a042,3707414,0,0x0,6
tick,0x7d8294d2a042,3708517,0,0x0,6
tick,0x7d8294d2a042,3709645,0,0x0,6
tick,0x7d8294d2a042,3710695,0,0x0,6
tick,0x7d8294d2a042,3711780,0,0x0,6
tick,0x7d8294d2a042,3712817,0,0x0,6
tick,0x7d8294d2a042,3713888,0,0x0,6
tick,0x7d8294d2a042,3714945,0,0x0,6
tick,0x7d8294d2a042,3715993,0,0x0,6
tick,0x7d8294d2a042,3717009,0,0x0,6
tick,0x7d8294d2a042,3718068,0,0x0,6
tick,0x7d8294d2a042,3719128,0,0x0,6
tick,0x7d8294d2a042,3720261,0,0x0,6
tick,0x7d8294d2a042,3721309,0,0x0,6
tick,0x7d8294d2a042,3722380,0,0x0,6
tick,0x7d8294d2a042,3723432,0,0x0,6
tick,0x7d8294d2a042,3724504,0,0x0,6
tick,0x7d8294d2a042,3725553,0,0x0,6
tick,0x7d8294d2a042,3726559,0,0x0,6
tick,0x7d8294d2a042,3727597,0,0x0,6
tick,0x7d8294d2a042,3728750,0,0x0,6
tick,0x7d8294d2a042,3729806,0,0x0,6
tick,0x7d8294d2a042,3730812,0,0x0,6
tick,0x7d8294d2a042,3731872,0,0x0,6
tick,0x7d8294d2a042,3732938,0,0x0,6
tick,0x7d8294d2a042,3734046,0,0x0,6
tick,0x7d8294d2a042,3735127,0,0x0,6
tick,0x7d8294d2a042,3736181,0,0x0,6
tick,0x7d8294d2a042,3737235,0,0x0,6
tick,0x7d8294d2a042,3738302,0,0x0,6
tick,0x7d8294d2a042,3739368,0,0x0,6
tick,0x7d8294d2a042,3740422,0,0x0,6
tick,0x7d8294d2a042,3741480,0,0x0,6
tick,0x7d8294d2a042,3742484,0,0x0,6
tick,0x7d8294d2a042,3743493,0,0x0,6
tick,0x7d8294d2a042,3744642,0,0x0,6
tick,0x7d8294d2a042,3745706,0,0x0,6
tick,0x7d8294d2a042,3746719,0,0x0,6
tick,0x7d8294d2a042,3747726,0,0x0,6
tick,0x7d8294d2a042,3748889,0,0x0,6
tick,0x7d8294d2a042,3749940,0,0x0,6
tick,0x7d8294d2a042,3750998,0,0x0,6
tick,0x7d8294d2a042,3752062,0,0x0,6
tick,0x7d8294d2a042,3753136,0,0x0,6
tick,0x7d8294d2a042,3754182,0,0x0,6
tick,0x7d8294d2a042,3755257,0,0x0,6
tick,0x7d8294d2a042,3756243,0,0x0,6
tick,0x7d8294d2a042,3757377,0,0x0,6
tick,0x7d8294d2a042,3758362,0,0x0,6
tick,0x7d8294d2a042,3759426,0,0x0,6
tick,0x7d8294d2a042,3760564,0,0x0,6
tick,0x7d8294d2a042,3761616,0,0x0,6
tick,0x7d8294d2a042,3762688,0,0x0,6
tick,0x7d8294d2a042,3763683,0,0x0,6
tick,0x7d8294d2a042,3764897,0,0x0,6
tick,0x7d8294d2a042,3765913,0,0x0,6
tick,0x7d8294d2a042,3766988,0,0x0,6
tick,0x7d8294d2a042,3767957,0,0x0,6
tick,0x7d8294d2a042,3769013,0,0x0,6
tick,0x7d8294d2a042,3770146,0,0x0,6
tick,0x7d8294d2a042,3771213,0,0x0,6
tick,0x7d8294d2a042,3772267,0,0x0,6
tick,0x7d8294d2a042,3773323,0,0x0,6
tick,0x7d8294d2a042,3774387,0,0x0,6
tick,0x7d8294d2a042,3775436,0,0x0,6
tick,0x7d8294d2a042,3776506,0,0x0,6
tick,0x7d8294d2a042,3777555,0,0x0,6
tick,0x7d8294d2a042,3778551,0,0x0,6
tick,0x7d8294d2a042,3779585,0,0x0,6
tick,0x7d8294d2a042,3780745,0,0x0,6
tick,0x7d8294d2a042,3781793,0,0x0,6
tick,0x7d8294d2a042,3782860,0,0x0,6
tick,0x7d8294d2a042,3783853,0,0x0,6
tick,0x7d8294d2a042,3784901,0,0x0,6
tick,0x7d8294d2a042,3786055,0,0x0,6
tick,0x7d8294d2a042,3787040,0,0x0,6
tick,0x7d8294d2a042,3788151,0,0x0,6
tick,0x7d8294d2a042,3789242,0,0x0,6
tick,0x7d8294d2a042,3790286,0,0x0,6
tick,0x7d8294d2a042,3791354,0,0x0,6
tick,0x7d8294d2a042,3792337,0,0x0,6
tick,0x7d8294d2a042,3793485,0,0x0,6
tick,0x7d8294d2a042,3794396,0,0x0,6
tick,0x7d8294d2a042,3795525,0,0x0,6
tick,0x7d8294d2a042,3796559,0,0x0,6
tick,0x7d8294d2a042,3797695,0,0x0,6
tick,0x7d8294d2a042,3798763,0,0x0,6
tick,0x7d8294d2a042,3799816,0,0x0,6
tick,0x7d8294d2a042,3800876,0,0x0,6
tick,0x7d8294d2a042,3801936,0,0x0,6
tick,0x7d8294d2a042,3802997,0,0x0,6
tick,0x7d8294d2a042,3804058,0,0x0,6
tick,0x7d8294d2a042,3805088,0,0x0,6
tick,0x7d8294d2a042,3806141,0,0x0,6
tick,0x7d8294d2a042,3807201,0,0x0,6
tick,0x7d8294d2a042,3808297,0,0x0,6
tick,0x7d8294d2a042,3809362,0,0x0,6
tick,0x7d8294d2a042,3810443,0,0x0,6
tick,0x7d8294d2a042,3811517,0,0x0,6
tick,0x7d8294d2a042,3812574,0,0x0,6
tick,0x7d8294d2a042,3813628,0,0x0,6
tick,0x7d8294d2a042,3814607,0,0x0,6
tick,0x7d8294d2a042,3815597,0,0x0,6
tick,0x7d8294d2a042,3816809,0,0x0,6
tick,0x7d8294d2a042,3817866,0,0x0,6
tick,0x7d8294d2a042,3818937,0,0x0,6
tick,0x7d8294d2a042,3819980,0,0x0,6
tick,0x7d8294d2a042,3821048,0,0x0,6
tick,0x7d8294d2a042,3822120,0,0x0,6
tick,0x7d8294d2a042,3823186,0,0x0,6
tick,0x7d8294d2a042,3824239,0,0x0,6
tick,0x7d8294d2a042,3825299,0,0x0,6
tick,0x7d8294d2a042,3826359,0,0x0,6
tick,0x7d8294d2a042,3827436,0,0x0,6
tick,0x7d8294d2a042,3828440,0,0x0,6
tick,0x7d8294d2a042,3829564,0,0x0,6
tick,0x7d8294d2a042,3830618,0,0x0,6
tick,0x7d8294d2a042,3831575,0,0x0,6
tick,0x7d8294d2a042,3832733,0,0x0,6
tick,0x7d8294d2a042,3833789,0,0x0,6
tick,0x7d8294d2a042,3834858,0,0x0,6
tick,0x7d8294d2a042,3835913,0,0x0,6
tick,0x7d8294d2a042,3836972,0,0x0,6
tick,0x7d8294d2a042,3838034,0,0x0,6
tick,0x7d8294d2a042,3839107,0,0x0,6
tick,0x7d8294d2a042,3840152,0,0x0,6
tick,0x7d8294d2a042,3841219,0,0x0,6
tick,0x7d8294d2a042,3842281,0,0x0,6
tick,0x7d8294d2a042,3843345,0,0x0,6
tick,0x7d8294d2a042,3844399,0,0x0,6
tick,0x7d8294d2a042,3845475,0,0x0,6
tick,0x7d8294d2a042,3846524,0,0x0,6
tick,0x7d8294d2a042,3847567,0,0x0,6
tick,0x7d8294d2a042,3848572,0,0x0,6
tick,0x7d8294d2a042,3849653,0,0x0,6
tick,0x7d8294d2a042,3850649,0,0x0,6
tick,0x7d8294d2a042,3851832,0,0x0,6
tick,0x7d8294d2a042,3852883,0,0x0,6
tick,0x7d8294d2a042,3853964,0,0x0,6
tick,0x7d8294d2a042,3854999,0,0x0,6
tick,0x7d8294d2a042,3856070,0,0x0,6
tick,0x7d8294d2a042,3857129,0,0x0,6
tick,0x7d8294d2a042,3858198,0,0x0,6
tick,0x7d8294d2a042,3859254,0,0x0,6
tick,0x7d8294d2a042,3860255,0,0x0,6
tick,0x7d8294d2a042,3861321,0,0x0,6
tick,0x7d8294d2a042,3862443,0,0x0,6
tick,0x7d8294d2a042,3863459,0,0x0,6
tick,0x7d8294d2a042,3864575,0,0x0,6
tick,0x7d8294d2a042,3865629,0,0x0,6
tick,0x7d8294d2a042,3866687,0,0x0,6
tick,0x7d8294d2a042,3867764,0,0x0,6
tick,0x7d8294d2a042,3868762,0,0x0,6
tick,0x7d8294d2a042,3869878,0,0x0,6
tick,0x7d8294d2a042,3870865,0,0x0,6
tick,0x7d8294d2a042,3871992,0,0x0,6
tick,0x7d8294d2a042,3873007,0,0x0,6
tick,0x7d8294d2a042,3874122,0,0x0,6
tick,0x7d8294d2a042,3875187,0,0x0,6
tick,0x7d8294d2a042,3876250,0,0x0,6
tick,0x7d8294d2a042,3877314,0,0x0,6
tick,0x7d8294d2a042,3878295,0,0x0,6
tick,0x7d8294d2a042,3879395,0,0x0,6
tick,0x7d8294d2a042,3880488,0,0x0,6
tick,0x7d8294d2a042,3881575,0,0x0,6
tick,0x7d8294d2a042,3882566,0,0x0,6
tick,0x7d8294d2a042,3883511,0,0x0,6
tick,0x7d8294d2a042,3884743,0,0x0,6
tick,0x7d8294d2a042,3885799,0,0x0,6
tick,0x7d8294d2a042,3886860,0,0x0,6
tick,0x7d8294d2a042,3887914,0,0x0,6
tick,0x7d8294d2a042,3888998,0,0x0,6
tick,0x7d8294d2a042,3890039,0,0x0,6
tick,0x7d8294d2a042,3891107,0,0x0,6
tick,0x7d8294d2a042,3892101,0,0x0,6
tick,0x7d8294d2a042,3893177,0,0x0,6
tick,0x7d8294d2a042,3894286,0,0x0,6
tick,0x7d8294d2a042,3895347,0,0x0,6
tick,0x7d8294d2a042,3896414,0,0x0,6
tick,0x7d8294d2a042,3897492,0,0x0,6
tick,0x7d8294d2a042,3898482,0,0x0,6
tick,0x7d8294d2a042,3899559,0,0x0,6
tick,0x7d8294d2a042,3900642,0,0x0,6
tick,0x7d8294d2a042,3901708,0,0x0,6
tick,0x7d8294d2a042,3902715,0,0x0,6
tick,0x7d8294d2a042,3903830,0,0x0,6
tick,0x7d8294d2a042,3904874,0,0x0,6
tick,0x7d8294d2a042,3905943,0,0x0,6
tick,0x7d8294d2a042,3907011,0,0x0,6
tick,0x7d8294d2a042,3908059,0,0x0,6
tick,0x7d8294d2a042,3909130,0,0x0,6
tick,0x7d8294d2a042,3910185,0,0x0,6
tick,0x7d8294d2a042,3911182,0,0x0,6
tick,0x7d8294d2a042,3912307,0,0x0,6
tick,0x7d8294d2a042,3913375,0,0x0,6
tick,0x7d8294d2a042,3914364,0,0x0,6
tick,0x7d8294d2a042,3915504,0,0x0,6
tick,0x7d8294d2a042,3916562,0,0x0,6
tick,0x7d8294d2a042,3917570,0,0x0,6
tick,0x7d8294d2a042,3918689,0,0x0,6
tick,0x7d8294d2a042,3919755,0,0x0,6
tick,0x7d8294d2a042,3920803,0,0x0,6
tick,0x7d8294d2a042,3921891,0,0x0,6
tick,0x7d8294d2a042,3922857,0,0x0,6
tick,0x7d8294d2a042,3923844,0,0x0,6
tick,0x7d8294d2a042,3924903,0,0x0,6
tick,0x7d8294d2a042,3926054,0,0x0,6
tick,0x7d8294d2a042,3927175,0,0x0,6
tick,0x7d8294d2a042,3928242,0,0x0,6
tick,0x7d8294d2a042,3929297,0,0x0,6
tick,0x7d8294d2a042,3930355,0,0x0,6
tick,0x7d8294d2a042,3931348,0,0x0,6
tick,0x7d8294d2a042,3932466,0,0x0,6
tick,0x7d8294d2a042,3933479,0,0x0,6
tick,0x7d8294d2a042,3934559,0,0x0,6
tick,0x7d8294d2a042,3935685,0,0x0,6
tick,0x7d8294d2a042,3936720,0,0x0,6
tick,0x7d8294d2a042,3937795,0,0x0,6
tick,0x7d8294d2a042,3938855,0,0x0,6
tick,0x7d8294d2a042,3939828,0,0x0,6
tick,0x7d8294d2a042,3940886,0,0x0,6
tick,0x7d8294d2a042,3941944,0,0x0,6
tick,0x7d8294d2a042,3943088,0,0x0,6
tick,0x7d8294d2a042,3944150,0,0x0,6
tick,0x7d8294d2a042,3945199,0,0x0,6
tick,0x7d8294d2a042,3946256,0,0x0,6
tick,0x7d8294d2a042,3947327,0,0x0,6
tick,0x7d8294d2a042,3948389,0,0x0,6
tick,0x7d8294d2a042,3949309,0,0x0,6
tick,0x7d8294d2a042,3950363,0,0x0,6
tick,0x7d8294d2a042,3951494,0,0x0,6
tick,0x7d8294d2a042,3952630,0,0x0,6
tick,0x7d8294d2a042,3953704,0,0x0,6
tick,0x7d8294d2a042,3954762,0,0x0,6
tick,0x7d8294d2a042,3955821,0,0x0,6
tick,0x7d8294d2a042,3956872,0,0x0,6
tick,0x7d8294d2a042,3957947,0,0x0,6
tick,0x7d8294d2a042,3958957,0,0x0,6
tick,0x7d8294d2a042,3960002,0,0x0,6
tick,0x7d8294d2a042,3961076,0,0x0,6
tick,0x7d8294d2a042,3962198,0,0x0,6
tick,0x7d8294d2a042,3963248,0,0x0,6
tick,0x7d8294d2a042,3964236,0,0x0,6
tick,0x7d8294d2a042,3965379,0,0x0,6
tick,0x7d8294d2a042,3966368,0,0x0,6
tick,0x7d8294d2a042,3967438,0,0x0,6
tick,0x7d8294d2a042,3968572,0,0x0,6
tick,0x7d8294d2a042,3969565,0,0x0,6
tick,0x7d8294d2a042,3970696,0,0x0,6
tick,0x7d8294d2a042,3971718,0,0x0,6
tick,0x7d8294d2a042,3972829,0,0x0,6
tick,0x7d8294d2a042,3973871,0,0x0,6
tick,0x7d8294d2a042,3974936,0,0x0,6
tick,0x7d8294d2a042,3975936,0,0x0,6
tick,0x7d8294d2a042,3977067,0,0x0,6
tick,0x7d8294d2a042,3978061,0,0x0,6
tick,0x7d8294d2a042,3979181,0,0x0,6
tick,0x7d8294d2a042,3980173,0,0x0,6
tick,0x7d8294d2a042,3981304,0,0x0,6
tick,0x7d8294d2a042,3982464,0,0x0,6
tick,0x7d8294d2a042,3983689,0,0x0,6
tick,0x7d8294d2a042,3984844,0,0x0,6
tick,0x7d8294d2a042,3986125,0,0x0,6
tick,0x7d8294d2a042,3987325,0,0x0,6
tick,0x7d8294d2a042,3988424,0,0x0,6
tick,0x7d8294d2a042,3989555,0,0x0,6
tick,0x7d8294d2a042,3990639,0,0x0,6
tick,0x7d8294d2a042,3991577,0,0x0,6
tick,0x7d8294d2a042,3992728,0,0x0,6
tick,0x7d8294d2a042,3993724,0,0x0,6
tick,0x7d8294d2a042,3994849,0,0x0,6
tick,0x7d8294d2a042,3995901,0,0x0,6
tick,0x7d8294d2a042,3996969,0,0x0,6
tick,0x7d8294d2a042,3998049,0,0x0,6
tick,0x7d8294d2a042,3999103,0,0x0,6
tick,0x7d8294d2a042,4000102,0,0x0,6
tick,0x7d8294d2a042,4001146,0,0x0,6
tick,0x7d8294d2a042,4002215,0,0x0,6
tick,0x7d8294d2a042,4003369,0,0x0,6
tick,0x7d8294d2a042,4004416,0,0x0,6
tick,0x7d8294d2a042,4005399,0,0x0,6
tick,0x7d8294d2a042,4006462,0,0x0,6
tick,0x7d8294d2a042,4007555,0,0x0,6
tick,0x7d8294d2a042,4008640,0,0x0,6
tick,0x7d8294d2a042,4009701,0,0x0,6
tick,0x7d8294d2a042,4010768,0,0x0,6
tick,0x7d8294d2a042,4011780,0,0x0,6
tick,0x7d8294d2a042,4012867,0,0x0,6
tick,0x7d8294d2a042,4013939,0,0x0,6
tick,0x7d8294d2a042,4014998,0,0x0,6
tick,0x7d8294d2a042,4016067,0,0x0,6
tick,0x7d8294d2a042,4017136,0,0x0,6
tick,0x7d8294d2a042,4018191,0,0x0,6
tick,0x7d8294d2a042,4019257,0,0x0,6
tick,0x7d8294d2a042,4020266,0,0x0,6
tick,0x7d8294d2a042,4021370,0,0x0,6
tick,0x7d8294d2a042,4022365,0,0x0,6
tick,0x7d8294d2a042,4023421,0,0x0,6
tick,0x7d8294d2a042,4024524,0,0x0,6
tick,0x7d8294d2a042,4025581,0,0x0,6
tick,0x7d8294d2a042,4026684,0,0x0,6
tick,0x7d8294d2a042,4027690,0,0x0,6
tick,0x7d8294d2a042,4028802,0,0x0,6
tick,0x7d8294d2a042,4029871,0,0x0,6
tick,0x7d8294d2a042,4030935,0,0x0,6
tick,0x7d8294d2a042,4031912,0,0x0,6
tick,0x7d8294d2a042,4032974,0,0x0,6
tick,0x7d8294d2a042,4034115,0,0x0,6
tick,0x7d8294d2a042,4035189,0,0x0,6
tick,0x7d8294d2a042,4036226,0,0x0,6
tick,0x7d8294d2a042,4037298,0,0x0,6
tick,0x7d8294d2a042,4038363,0,0x0,6
tick,0x7d8294d2a042,4039352,0,0x0,6
tick,0x7d8294d2a042,4040512,0,0x0,6
tick,0x7d8294d2a042,4041408,0,0x0,6
tick,0x7d8294d2a042,4042567,0,0x0,6
tick,0x7d8294d2a042,4043596,0,0x0,6
tick,0x7d8294d2a042,4044728,0,0x0,6
tick,0x7d8294d2a042,4045806,0,0x0,6
tick,0x7d8294d2a042,4046882,0,0x0,6
tick,0x7d8294d2a042,4047927,0,0x0,6
tick,0x7d8294d2a042,4048986,0,0x0,6
tick,0x7d8294d2a042,4050044,0,0x0,6
tick,0x7d8294d2a042,4051116,0,0x0,6
tick,0x7d8294d2a042,4052158,0,0x0,6
tick,0x7d8294d2a042,4053231,0,0x0,6
tick,0x7d8294d2a042,4054298,0,0x0,6
tick,0x7d8294d2a042,4055353,0,0x0,6
tick,0x7d8294d2a042,4056415,0,0x0,6
tick,0x7d8294d2a042,4057486,0,0x0,6
tick,0x7d8294d2a042,4058545,0,0x0,6
tick,0x7d8294d2a042,4059564,0,0x0,6
tick,0x7d8294d2a042,4060639,0,0x0,6
tick,0x7d8294d2a042,4061692,0,0x0,6
tick,0x7d8294d2a042,4062767,0,0x0,6
tick,0x7d8294d2a042,4063815,0,0x0,6
tick,0x7d8294d2a042,4064879,0,0x0,6
tick,0x7d8294d2a042,4065936,0,0x0,6
tick,0x7d8294d2a042,4067006,0,0x0,6
tick,0x7d8294d2a042,4068052,0,0x0,6
tick,0x7d8294d2a042,4069126,0,0x0,6
tick,0x7d8294d2a042,4070200,0,0x0,6
tick,0x7d8294d2a042,4071248,0,0x0,6
tick,0x7d8294d2a042,4072305,0,0x0,6
tick,0x7d8294d2a042,4073370,0,0x0,6
tick,0x7d8294d2a042,4074357,0,0x0,6
tick,0x7d8294d2a042,4075422,0,0x0,6
tick,0x7d8294d2a042,4076562,0,0x0,6
tick,0x7d8294d2a042,4077645,0,0x0,6
tick,0x7d8294d2a042,4078690,0,0x0,6
tick,0x7d8294d2a042,4079684,0,0x0,6
tick,0x7d8294d2a042,4080809,0,0x0,6
tick,0x7d8294d2a042,4081865,0,0x0,6
tick,0x7d8294d2a042,4082933,0,0x0,6
tick,0x7d8294d2a042,4083913,0,0x0,6
tick,0x7d8294d2a042,4084975,0,0x0,6
tick,0x7d8294d2a042,4086122,0,0x0,6
tick,0x7d8294d2a042,4087178,0,0x0,6
tick,0x7d8294d2a042,4088238,0,0x0,6
tick,0x7d8294d2a042,4089291,0,0x0,6
tick,0x7d8294d2a042,4090367,0,0x0,6
tick,0x7d8294d2a042,4091349,0,0x0,6
tick,0x7d8294d2a042,4092496,0,0x0,6
tick,0x7d8294d2a042,4093407,0,0x0,6
tick,0x7d8294d2a042,4094559,0,0x0,6
tick,0x7d8294d2a042,4095587,0,0x0,6
tick,0x7d8294d2a042,4096739,0,0x0,6
tick,0x7d8294d2a042,4097798,0,0x0,6
tick,0x7d8294d2a042,4098862,0,0x0,6
tick,0x7d8294d2a042,4099841,0,0x0,6
tick,0x7d8294d2a042,4100900,0,0x0,6
tick,0x7d8294d2a042,4101961,0,0x0,6
tick,0x7d8294d2a042,4103109,0,0x0,6
tick,0x7d8294d2a042,4104170,0,0x0,6
tick,0x7d8294d2a042,4105215,0,0x0,6
tick,0x7d8294d2a042,4106382,0,0x0,6
tick,0x7d8294d2a042,4107654,0,0x0,6
tick,0x7d8294d2a042,4108859,0,0x0,6
tick,0x7d8294d2a042,4110064,0,0x0,6
tick,0x7d8294d2a042,4111306,0,0x0,6
tick,0x7d8294d2a042,4112365,0,0x0,6
tick,0x7d8294d2a042,4113471,0,0x0,6
tick,0x7d8294d2a042,4114478,0,0x0,6
tick,0x7d8294d2a042,4115487,0,0x0,6
tick,0x7d8294d2a042,4116595,0,0x0,6
tick,0x7d8294d2a042,4117611,0,0x0,6
tick,0x7d8294d2a042,4118648,0,0x0,6
tick,0x7d8294d2a042,4119744,0,0x0,6
tick,0x7d8294d2a042,4120840,0,0x0,6
tick,0x7d8294d2a042,4121900,0,0x0,6
tick,0x7d8294d2a042,4122962,0,0x0,6
tick,0x7d8294d2a042,4124020,0,0x0,6
tick,0x7d8294d2a042,4125088,0,0x0,6
tick,0x7d8294d2a042,4126071,0,0x0,6
tick,0x7d8294d2a042,4127145,0,0x0,6
tick,0x7d8294d2a042,4128272,0,0x0,6
tick,0x7d8294d2a042,4129338,0,0x0,6
tick,0x7d8294d2a042,4130404,0,0x0,6
tick,0x7d8294d2a042,4131471,0,0x0,6
tick,0x7d8294d2a042,4132533,0,0x0,6
tick,0x7d8294d2a042,4133445,0,0x0,6
tick,0x7d8294d2a042,4134588,0,0x0,6
tick,0x7d8294d2a042,4135632,0,0x0,6
tick,0x7d8294d2a042,4136708,0,0x0,6
tick,0x7d8294d2a042,4137840,0,0x0,6
tick,0x7d8294d2a042,4138898,0,0x0,6
tick,0x7d8294d2a042,4139955,0,0x0,6
tick,0x7d8294d2a042,4141030,0,0x0,6
tick,0x7d8294d2a042,4142089,0,0x0,6
tick,0x7d8294d2a042,4143145,0,0x0,6
tick,0x7d8294d2a042,4144146,0,0x0,6
tick,0x7d8294d2a042,4145204,0,0x0,6
tick,0x7d8294d2a042,4146329,0,0x0,6
tick,0x7d8294d2a042,4147399,0,0x0,6
tick,0x7d8294d2a042,4148452,0,0x0,6
tick,0x7d8294d2a042,4149446,0,0x0,6
tick,0x7d8294d2a042,4150435,0,0x0,6
tick,0x7d8294d2a042,4151587,0,0x0,6
tick,0x7d8294d2a042,4152702,0,0x0,6
tick,0x7d8294d2a042,4153778,0,0x0,6
tick,0x7d8294d2a042,4154775,0,0x0,6
tick,0x7d8294d2a042,4155884,0,0x0,6
tick,0x7d8294d2a042,4156947,0,0x0,6
tick,0x7d8294d2a042,4158025,0,0x0,6
tick,0x7d8294d2a042,4159082,0,0x0,6
tick,0x7d8294d2a042,4160072,0,0x0,6
tick,0x7d8294d2a042,4161129,0,0x0,6
tick,0x7d8294d2a042,4162276,0,0x0,6
tick,0x7d8294d2a042,4163278,0,0x0,6
tick,0x7d8294d2a042,4164381,0,0x0,6
tick,0x7d8294d2a042,4165455,0,0x0,6
tick,0x7d8294d2a042,4166510,0,0x0,6
tick,0x7d8294d2a042,4167590,0,0x0,6
tick,0x7d8294d2a042,4168556,0,0x0,6
tick,0x7d8294d2a042,4169710,0,0x0,6
tick,0x7d8294d2a042,4170618,0,0x0,6
tick,0x7d8294d2a042,4171859,0,0x0,6
tick,0x7d8294d2a042,4172825,0,0x0,6
tick,0x7d8294d2a042,4173950,0,0x0,6
tick,0x7d8294d2a042,4175017,0,0x0,6
tick,0x7d8294d2a042,4176062,0,0x0,6
tick,0x7d8294d2a042,4177141,0,0x0,6
tick,0x7d8294d2a042,4178194,0,0x0,6
tick,0x7d8294d2a042,4179252,0,0x0,6
tick,0x7d8294d2a042,4180308,0,0x0,6
tick,0x7d8294d2a042,4181372,0,0x0,6
tick,0x7d8294d2a042,4182441,0,0x0,6
tick,0x7d8294d2a042,4183520,0,0x0,6
tick,0x7d8294d2a042,4184588,0,0x0,6
tick,0x7d8294d2a042,4185572,0,0x0,6
tick,0x7d8294d2a042,4186623,0,0x0,6
tick,0x7d8294d2a042,4187649,0,0x0,6
tick,0x7d8294d2a042,4188822,0,0x0,6
tick,0x7d8294d2a042,4189867,0,0x0,6
tick,0x7d8294d2a042,4190938,0,0x0,6
tick,0x7d8294d2a042,4191987,0,0x0,6
tick,0x7d8294d2a042,4193059,0,0x0,6
tick,0x7d8294d2a042,4194117,0,0x0,6
tick,0x7d8294d2a042,4195181,0,0x0,6
tick,0x7d8294d2a042,4196170,0,0x0,6
tick,0x7d8294d2a042,4197299,0,0x0,6
tick,0x7d8294d2a042,4198356,0,0x0,6
tick,0x7d8294d2a042,4199424,0,0x0,6
tick,0x7d8294d2a042,4200608,0,0x0,6
tick,0x7d8294d2a042,4201419,0,0x0,6
tick,0x7d8294d2a042,4202589,0,0x0,6
tick,0x7d8294d2a042,4203558,0,0x0,6
tick,0x7d8294d2a042,4204767,0,0x0,6
tick,0x7d8294d2a042,4205833,0,0x0,6
tick,0x7d8294d2a042,4206888,0,0x0,6
tick,0x7d8294d2a042,4207945,0,0x0,6
tick,0x7d8294d2a042,4209020,0,0x0,6
tick,0x7d8294d2a042,4210000,0,0x0,6
tick,0x7d8294d2a042,4211063,0,0x0,6
tick,0x7d8294d2a042,4212197,0,0x0,6
tick,0x7d8294d2a042,4213219,0,0x0,6
tick,0x7d8294d2a042,4214257,0,0x0,6
tick,0x7d8294d2a042,4215285,0,0x0,6
tick,0x7d8294d2a042,4216447,0,0x0,6
tick,0x7d8294d2a042,4217510,0,0x0,6
tick,0x7d8294d2a042,4218578,0,0x0,6
tick,0x7d8294d2a042,4219541,0,0x0,6
tick,0x7d8294d2a042,4220710,0,0x0,6
tick,0x7d8294d2a042,4221704,0,0x0,6
tick,0x7d8294d2a042,4222823,0,0x0,6
tick,0x7d8294d2a042,4223888,0,0x0,6
tick,0x7d8294d2a042,4224942,0,0x0,6
tick,0x7d8294d2a042,4226003,0,0x0,6
tick,0x7d8294d2a042,4227077,0,0x0,6
tick,0x7d8294d2a042,4228047,0,0x0,6
tick,0x7d8294d2a042,4229109,0,0x0,6
tick,0x7d8294d2a042,4230249,0,0x0,6
tick,0x7d8294d2a042,4231316,0,0x0,6
tick,0x7d8294d2a042,4232386,0,0x0,6
tick,0x7d8294d2a042,4233439,0,0x0,6
tick,0x7d8294d2a042,4234492,0,0x0,6
tick,0x7d8294d2a042,4235503,0,0x0,6
tick,0x7d8294d2a042,4236611,0,0x0,6
tick,0x7d8294d2a042,4237699,0,0x0,6
tick,0x7d8294d2a042,4238696,0,0x0,6
tick,0x7d8294d2a042,4239726,0,0x0,6
tick,0x7d8294d2a042,4240871,0,0x0,6
tick,0x7d8294d2a042,4241927,0,0x0,6
tick,0x7d8294d2a042,4242988,0,0x0,6
tick,0x7d8294d2a042,4243975,0,0x0,6
tick,0x7d8294d2a042,4245038,0,0x0,6
tick,0x7d8294d2a042,4246185,0,0x0,6
tick,0x7d8294d2a042,4247164,0,0x0,6
tick,0x7d8294d2a042,4248296,0,0x0,6
tick,0x7d8294d2a042,4249359,0,0x0,6
tick,0x7d8294d2a042,4250422,0,0x0,6
tick,0x7d8294d2a042,4251487,0,0x0,6
tick,0x7d8294d2a042,4252556,0,0x0,6
tick,0x7d8294d2a042,4253609,0,0x0,6
tick,0x7d8294d2a042,4254606,0,0x0,6
tick,0x7d8294d2a042,4255672,0,0x0,6
tick,0x7d8294d2a042,4256722,0,0x0,6
tick,0x7d8294d2a042,4257857,0,0x0,6
tick,0x7d8294d2a042,4258923,0,0x0,6
tick,0x7d8294d2a042,4259968,0,0x0,6
tick,0x7d8294d2a042,4261036,0,0x0,6
tick,0x7d8294d2a042,4262104,0,0x0,6
tick,0x7d8294d2a042,4263174,0,0x0,6
tick,0x7d8294d2a042,4264163,0,0x0,6
tick,0x7d8294d2a042,4265293,0,0x0,6
tick,0x7d8294d2a042,4266302,0,0x0,6
tick,0x7d8294d2a042,4267434,0,0x0,6
tick,0x7d8294d2a042,4268473,0,0x0,6
tick,0x7d8294d2a042,4269469,0,0x0,6
tick,0x7d8294d2a042,4270525,0,0x0,6
tick,0x7d8294d2a042,4271696,0,0x0,6
tick,0x7d8294d2a042,4272728,0,0x0,6
tick,0x7d8294d2a042,4273789,0,0x0,6
tick,0x7d8294d2a042,4274804,0,0x0,6
tick,0x7d8294d2a042,4275919,0,0x0,6
tick,0x7d8294d2a042,4276969,0,0x0,6
tick,0x7d8294d2a042,4278068,0,0x0,6
tick,0x7d8294d2a042,4279109,0,0x0,6
tick,0x7d8294d2a042,4280153,0,0x0,6
tick,0x7d8294d2a042,4281216,0,0x0,6
tick,0x7d8294d2a042,4282276,0,0x0,6
tick,0x7d8294d2a042,4283345,0,0x0,6
tick,0x7d8294d2a042,4284351,0,0x0,6
tick,0x7d8294d2a042,4285482,0,0x0,6
tick,0x7d8294d2a042,4286526,0,0x0,6
tick,0x7d8294d2a042,4287583,0,0x0,6
tick,0x7d8294d2a042,4288581,0,0x0,6
tick,0x7d8294d2a042,4289690,0,0x0,6
tick,0x7d8294d2a042,4290769,0,0x0,6
tick,0x7d8294d2a042,4291785,0,0x0,6
tick,0x7d8294d2a042,4292871,0,0x0,6
tick,0x7d8294d2a042,4293948,0,0x0,6
tick,0x7d8294d2a042,4294955,0,0x0,6
tick,0x7d8294d2a042,4296061,0,0x0,6
tick,0x7d8294d2a042,4297117,0,0x0,6
tick,0x7d8294d2a042,4298195,0,0x0,6
tick,0x7d8294d2a042,4299248,0,0x0,6
tick,0x7d8294d2a042,4300246,0,0x0,6
tick,0x7d8294d2a042,4301369,0,0x0,6
tick,0x7d8294d2a042,4302435,0,0x0,6
tick,0x7d8294d2a042,4303506,0,0x0,6
tick,0x7d8294d2a042,4304579,0,0x0,6
tick,0x7d8294d2a042,4305569,0,0x0,6
tick,0x7d8294d2a042,4306678,0,0x0,6
tick,0x7d8294d2a042,4307756,0,0x0,6
tick,0x7d8294d2a042,4308802,0,0x0,6
tick,0x7d8294d2a042,4309868,0,0x0,6
tick,0x7d8294d2a042,4310931,0,0x0,6
tick,0x7d8294d2a042,4311913,0,0x0,6
tick,0x7d8294d2a042,4312980,0,0x0,6
tick,0x7d8294d2a042,4314037,0,0x0,6
tick,0x7d8294d2a042,4315177,0,0x0,6
tick,0x7d8294d2a042,4316228,0,0x0,6
tick,0x7d8294d2a042,4317302,0,0x0,6
tick,0x7d8294d2a042,4318359,0,0x0,6
tick,0x7d8294d2a042,4319446,0,0x0,6
tick,0x7d8294d2a042,4320489,0,0x0,6
tick,0x7d8294d2a042,4321559,0,0x0,6
tick,0x7d8294d2a042,4322533,0,0x0,6
tick,0x7d8294d2a042,4323539,0,0x0,6
tick,0x7d8294d2a042,4324717,0,0x0,6
tick,0x7d8294d2a042,4325794,0,0x0,6
tick,0x7d8294d2a042,4326860,0,0x0,6
tick,0x7d8294d2a042,4327908,0,0x0,6
tick,0x7d8294d2a042,4328973,0,0x0,6
tick,0x7d8294d2a042,4330041,0,0x0,6
tick,0x7d8294d2a042,4331106,0,0x0,6
tick,0x7d8294d2a042,4332093,0,0x0,6
tick,0x7d8294d2a042,4333146,0,0x0,6
tick,0x7d8294d2a042,4334203,0,0x0,6
tick,0x7d8294d2a042,4335358,0,0x0,6
tick,0x7d8294d2a042,4336409,0,0x0,6
tick,0x7d8294d2a042,4337477,0,0x0,6
tick,0x7d8294d2a042,4338536,0,0x0,6
tick,0x7d8294d2a042,4339500,0,0x0,6
tick,0x7d8294d2a042,4340579,0,0x0,6
tick,0x7d8294d2a042,4341614,0,0x0,6
tick,0x7d8294d2a042,4342685,0,0x0,6
tick,0x7d8294d2a042,4343815,0,0x0,6
tick,0x7d8294d2a042,4344877,0,0x0,6
tick,0x7d8294d2a042,4345938,0,0x0,6
tick,0x7d8294d2a042,4347007,0,0x0,6
tick,0x7d8294d2a042,4348064,0,0x0,6
tick,0x7d8294d2a042,4349125,0,0x0,6
tick,0x7d8294d2a042,4350193,0,0x0,6
tick,0x7d8294d2a042,4351181,0,0x0,6
tick,0x7d8294d2a042,4352171,0,0x0,6
tick,0x7d8294d2a042,4353228,0,0x0,6
tick,0x7d8294d2a042,4354449,0,0x0,6
tick,0x7d8294d2a042,4355511,0,0x0,6
tick,0x7d8294d2a042,4356570,0,0x0,6
tick,0x7d8294d2a042,4357649,0,0x0,6
tick,0x7d8294d2a042,4358768,0,0x0,6
tick,0x7d8294d2a042,4359708,0,0x0,6
tick,0x7d8294d2a042,4360880,0,0x0,6
tick,0x7d8294d2a042,4361935,0,0x0,6
tick,0x7d8294d2a042,4362997,0,0x0,6
tick,0x7d8294d2a042,4364135,0,0x0,6
tick,0x7d8294d2a042,4365192,0,0x0,6
tick,0x7d8294d2a042,4366256,0,0x0,6
tick,0x7d8294d2a042,4367312,0,0x0,6
tick,0x7d8294d2a042,4368314,0,0x0,6
tick,0x7d8294d2a042,4369441,0,0x0,6
tick,0x7d8294d2a042,4370364,0,0x0,6
tick,0x7d8294d2a042,4371501,0,0x0,6
tick,0x7d8294d2a042,4372624,0,0x0,6
tick,0x7d8294d2a042,4373706,0,0x0,6
tick,0x7d8294d2a042,4374752,0,0x0,6
tick,0x7d8294d2a042,4375761,0,0x0,6
tick,0x7d8294d2a042,4376881,0,0x0,6
tick,0x7d8294d2a042,4377918,0,0x0,6
tick,0x7d8294d2a042,4378978,0,0x0,6
tick,0x7d8294d2a042,4379963,0,0x0,6
tick,0x7d8294d2a042,4381022,0,0x0,6
tick,0x7d8294d2a042,4382150,0,0x0,6
tick,0x7d8294d2a042,4383205,0,0x0,6
tick,0x7d8294d2a042,4384187,0,0x0,6
tick,0x7d8294d2a042,4385270,0,0x0,6
tick,0x7d8294d2a042,4386384,0,0x0,6
tick,0x7d8294d2a042,4387455,0,0x0,6
tick,0x7d8294d2a042,4388513,0,0x0,6
tick,0x7d8294d2a042,4389554,0,0x0,6
tick,0x7d8294d2a042,4390545,0,0x0,6
tick,0x7d8294d2a042,4391645,0,0x0,6
tick,0x7d8294d2a042,4392714,0,0x0,6
tick,0x7d8294d2a042,4393801,0,0x0,6
tick,0x7d8294d2a042,4394844,0,0x0,6
tick,0x7d8294d2a042,4395836,0,0x0,6
tick,0x7d8294d2a042,4396994,0,0x0,6
tick,0x7d8294d2a042,4398035,0,0x0,6
tick,0x7d8294d2a042,4399059,0,0x0,6
tick,0x7d8294d2a042,4400083,0,0x0,6
tick,0x7d8294d2a042,4401143,0,0x0,6
tick,0x7d8294d2a042,4402263,0,0x0,6
tick,0x7d8294d2a042,4403269,0,0x0,6
tick,0x7d8294d2a042,4404374,0,0x0,6
tick,0x7d8294d2a042,4405435,0,0x0,6
tick,0x7d8294d2a042,4406501,0,0x0,6
tick,0x7d8294d2a042,4407529,0,0x0,6
tick,0x7d8294d2a042,4408635,0,0x0,6
tick,0x7d8294d2a042,4409671,0,0x0,6
tick,0x7d8294d2a042,4410664,0,0x0,6
tick,0x7d8294d2a042,4411774,0,0x0,6
tick,0x7d8294d2a042,4412777,0,0x0,6
tick,0x7d8294d2a042,4413907,0,0x0,6
tick,0x7d8294d2a042,4414950,0,0x0,6
tick,0x7d8294d2a042,4415948,0,0x0,6
tick,0x7d8294d2a042,4417003,0,0x0,6
tick,0x7d8294d2a042,4418145,0,0x0,6
tick,0x7d8294d2a042,4419126,0,0x0,6
tick,0x7d8294d2a042,4420253,0,0x0,6
tick,0x7d8294d2a042,4421301,0,0x0,6
tick,0x7d8294d2a042,4422363,0,0x0,6
tick,0x7d8294d2a042,4423457,0,0x0,6
tick,0x7d8294d2a042,4424495,0,0x0,6
tick,0x7d8294d2a042,4425568,0,0x0,6
tick,0x7d8294d2a042,4426618,0,0x0,6
tick,0x7d8294d2a042,4427649,0,0x0,6
tick,0x7d8294d2a042,4428735,0,0x0,6
tick,0x7d8294d2a042,4429792,0,0x0,6
tick,0x7d8294d2a042,4430861,0,0x0,6
tick,0x7d8294d2a042,4431885,0,0x0,6
tick,0x7d8294d2a042,4432980,0,0x0,6
tick,0x7d8294d2a042,4434031,0,0x0,6
tick,0x7d8294d2a042,4435109,0,0x0,6
tick,0x7d8294d2a042,4436154,0,0x0,6
tick,0x7d8294d2a042,4437227,0,0x0,6
tick,0x7d8294d2a042,4438278,0,0x0,6
tick,0x7d8294d2a042,4439341,0,0x0,6
tick,0x7d8294d2a042,4440402,0,0x0,6
tick,0x7d8294d2a042,4441457,0,0x0,6
tick,0x7d8294d2a042,4442524,0,0x0,6
tick,0x7d8294d2a042,4443549,0,0x0,6
tick,0x7d8294d2a042,4444623,0,0x0,6
tick,0x7d8294d2a042,4445691,0,0x0,6
tick,0x7d8294d2a042,4446743,0,0x0,6
tick,0x7d8294d2a042,4447771,0,0x0,6
tick,0x7d8294d2a042,4448868,0,0x0,6
tick,0x7d8294d2a042,4449931,0,0x0,6
tick,0x7d8294d2a042,4450992,0,0x0,6
tick,0x7d8294d2a042,4452040,0,0x0,6
tick,0x7d8294d2a042,4453117,0,0x0,6
tick,0x7d8294d2a042,4454098,0,0x0,6
tick,0x7d8294d2a042,4455154,0,0x0,6
tick,0x7d8294d2a042,4456283,0,0x0,6
tick,0x7d8294d2a042,4457352,0,0x0,6
tick,0x7d8294d2a042,4458416,0,0x0,6
tick,0x7d8294d2a042,4459475,0,0x0,6
tick,0x7d8294d2a042,4460535,0,0x0,6
tick,0x7d8294d2a042,4461588,0,0x0,6
tick,0x7d8294d2a042,4462660,0,0x0,6
tick,0x7d8294d2a042,4463562,0,0x0,6
tick,0x7d8294d2a042,4464762,0,0x0,6
tick,0x7d8294d2a042,4465838,0,0x0,6
tick,0x7d8294d2a042,4466897,0,0x0,6
tick,0x7d8294d2a042,4467947,0,0x0,6
tick,0x7d8294d2a042,4469001,0,0x0,6
tick,0x7d8294d2a042,4470075,0,0x0,6
tick,0x7d8294d2a042,4471139,0,0x0,6
tick,0x7d8294d2a042,4472206,0,0x0,6
tick,0x7d8294d2a042,4473173,0,0x0,6
tick,0x7d8294d2a042,4474229,0,0x0,6
tick,0x7d8294d2a042,4475295,0,0x0,6
tick,0x7d8294d2a042,4476419,0,0x0,6
tick,0x7d8294d2a042,4477487,0,0x0,6
tick,0x7d8294d2a042,4478554,0,0x0,6
tick,0x7d8294d2a042,4479543,0,0x0,6
tick,0x7d8294d2a042,4480639,0,0x0,6
tick,0x7d8294d2a042,4481688,0,0x0,6
tick,0x7d8294d2a042,4482755,0,0x0,6
tick,0x7d8294d2a042,4483745,0,0x0,6
tick,0x7d8294d2a042,4484862,0,0x0,6
tick,0x7d8294d2a042,4485941,0,0x0,6
tick,0x7d8294d2a042,4486987,0,0x0,6
tick,0x7d8294d2a042,4487965,0,0x0,6
tick,0x7d8294d2a042,4489018,0,0x0,6
tick,0x7d8294d2a042,4490159,0,0x0,6
tick,0x7d8294d2a042,4491209,0,0x0,6
tick,0x7d8294d2a042,4492266,0,0x0,6
tick,0x7d8294d2a042,4493322,0,0x0,6
tick,0x7d8294d2a042,4494382,0,0x0,6
tick,0x7d8294d2a042,4495391,0,0x0,6
tick,0x7d8294d2a042,4496498,0,0x0,6
tick,0x7d8294d2a042,4497497,0,0x0,6
tick,0x7d8294d2a042,4498628,0,0x0,6
tick,0x7d8294d2a042,4499633,0,0x0,6
tick,0x7d8294d2a042,4500663,0,0x0,6
tick,0x7d8294d2a042,4501802,0,0x0,6
tick,0x7d8294d2a042,4502853,0,0x0,6
tick,0x7d8294d2a042,4503914,0,0x0,6
tick,0x7d8294d2a042,4504968,0,0x0,6
tick,0x7d8294d2a042,4506026,0,0x0,6
tick,0x7d8294d2a042,4507094,0,0x0,6
tick,0x7d8294d2a042,4508132,0,0x0,6
tick,0x7d8294d2a042,4509209,0,0x0,6
tick,0x7d8294d2a042,4510260,0,0x0,6
tick,0x7d8294d2a042,4511330,0,0x0,6
tick,0x7d8294d2a042,4512382,0,0x0,6
tick,0x7d8294d2a042,4513436,0,0x0,6
tick,0x7d8294d2a042,4514518,0,0x0,6
tick,0x7d8294d2a042,4515484,0,0x0,6
tick,0x7d8294d2a042,4516605,0,0x0,6
tick,0x7d8294d2a042,4517680,0,0x0,6
tick,0x7d8294d2a042,4518589,0,0x0,6
tick,0x7d8294d2a042,4519601,0,0x0,6
tick,0x7d8294d2a042,4520854,0,0x0,6
tick,0x7d8294d2a042,4521920,0,0x0,6
tick,0x7d8294d2a042,4522971,0,0x0,6
tick,0x7d8294d2a042,4524025,0,0x0,6
tick,0x7d8294d2a042,4525102,0,0x0,6
tick,0x7d8294d2a042,4526162,0,0x0,6
tick,0x7d8294d2a042,4527221,0,0x0,6
tick,0x7d8294d2a042,4528203,0,0x0,6
tick,0x7d8294d2a042,4529333,0,0x0,6
tick,0x7d8294d2a042,4530331,0,0x0,6
tick,0x7d8294d2a042,4531466,0,0x0,6
tick,0x7d8294d2a042,4532531,0,0x0,6
tick,0x7d8294d2a042,4533589,0,0x0,6
tick,0x7d8294d2a042,4534590,0,0x0,6
tick,0x7d8294d2a042,4535569,0,0x0,6
tick,0x7d8294d2a042,4536764,0,0x0,6
tick,0x7d8294d2a042,4537824,0,0x0,6
tick,0x7d8294d2a042,4538940,0,0x0,6
tick,0x7d8294d2a042,4539950,0,0x0,6
tick,0x7d8294d2a042,4541000,0,0x0,6
tick,0x7d8294d2a042,4542071,0,0x0,6
tick,0x7d8294d2a042,4543136,0,0x0,6
tick,0x7d8294d2a042,4544171,0,0x0,6
tick,0x7d8294d2a042,4545317,0,0x0,6
tick,0x7d8294d2a042,4546302,0,0x0,6
tick,0x7d8294d2a042,4547371,0,0x0,6
tick,0x7d8294d2a042,4548438,0,0x0,6
tick,0x7d8294d2a042,4549487,0,0x0,6
tick,0x7d8294d2a042,4550548,0,0x0,6
tick,0x7d8294d2a042,4551555,0,0x0,6
tick,0x7d8294d2a042,4552633,0,0x0,6
tick,0x7d8294d2a042,4553688,0,0x0,6
tick,0x7d8294d2a042,4554755,0,0x0,6
tick,0x7d8294d2a042,4555759,0,0x0,6
tick,0x7d8294d2a042,4556879,0,0x0,6
tick,0x7d8294d2a042,4557936,0,0x0,6
tick,0x7d8294d2a042,4559016,0,0x0,6
tick,0x7d8294d2a042,4559979,0,0x0,6
tick,0x7d8294d2a042,4561041,0,0x0,6
tick,0x7d8294d2a042,4562184,0,0x0,6
tick,0x7d8294d2a042,4563236,0,0x0,6
tick,0x7d8294d2a042,4564296,0,0x0,6
tick,0x7d8294d2a042,4565351,0,0x0,6
tick,0x7d8294d2a042,4566394,0,0x0,6
tick,0x7d8294d2a042,4567397,0,0x0,6
tick,0x7d8294d2a042,4568469,0,0x0,6
tick,0x7d8294d2a042,4569602,0,0x0,6
tick,0x7d8294d2a042,4570594,0,0x0,6
tick,0x7d8294d2a042,4571616,0,0x0,6
tick,0x7d8294d2a042,4572783,0,0x0,6
tick,0x7d8294d2a042,4573848,0,0x0,6
tick,0x7d8294d2a042,4574914,0,0x0,6
tick,0x7d8294d2a042,4575958,0,0x0,6
tick,0x7d8294d2a042,4577031,0,0x0,6
tick,0x7d8294d2a042,4578089,0,0x0,6
tick,0x7d8294d2a042,4579162,0,0x0,6
tick,0x7d8294d2a042,4580216,0,0x0,6
tick,0x7d8294d2a042,4581271,0,0x0,6
tick,0x7d8294d2a042,4582330,0,0x0,6
tick,0x7d8294d2a042,4583418,0,0x0,6
tick,0x7d8294d2a042,4584458,0,0x0,6
tick,0x7d8294d2a042,4585448,0,0x0,6
tick,0x7d8294d2a042,4586512,0,0x0,6
tick,0x7d8294d2a042,4587586,0,0x0,6
tick,0x7d8294d2a042,4588693,0,0x0,6
tick,0x7d8294d2a042,4589766,0,0x0,6
tick,0x7d8294d2a042,4590815,0,0x0,6
tick,0x7d8294d2a042,4591822,0,0x0,6
tick,0x7d8294d2a042,4592942,0,0x0,6
tick,0x7d8294d2a042,4594008,0,0x0,6
tick,0x7d8294d2a042,4595082,0,0x0,6
tick,0x7d8294d2a042,4596121,0,0x0,6
tick,0x7d8294d2a042,4597196,0,0x0,6
tick,0x7d8294d2a042,4598248,0,0x0,6
tick,0x7d8294d2a042,4599298,0,0x0,6
tick,0x7d8294d2a042,4600292,0,0x0,6
tick,0x7d8294d2a042,4601438,0,0x0,6
tick,0x7d8294d2a042,4602484,0,0x0,6
tick,0x7d8294d2a042,4603474,0,0x0,6
tick,0x7d8294d2a042,4604605,0,0x0,6
tick,0x7d8294d2a042,4605665,0,0x0,6
tick,0x7d8294d2a042,4606728,0,0x0,6
tick,0x7d8294d2a042,4607708,0,0x0,6
tick,0x7d8294d2a042,4608836,0,0x0,6
tick,0x7d8294d2a042,4609902,0,0x0,6
tick,0x7d8294d2a042,4610962,0,0x0,6
tick,0x7d8294d2a042,4612015,0,0x0,6
tick,0x7d8294d2a042,4613069,0,0x0,6
tick,0x7d8294d2a042,4614125,0,0x0,6
tick,0x7d8294d2a042,4615207,0,0x0,6
tick,0x7d8294d2a042,4616242,0,0x0,6
tick,0x7d8294d2a042,4617302,0,0x0,6
tick,0x7d8294d2a042,4618360,0,0x0,6
tick,0x7d8294d2a042,4619430,0,0x0,6
tick,0x7d8294d2a042,4620488,0,0x0,6
tick,0x7d8294d2a042,4621543,0,0x0,6
tick,0x7d8294d2a042,4622521,0,0x0,6
tick,0x7d8294d2a042,4623496,0,0x0,6
tick,0x7d8294d2a042,4624722,0,0x0,6
tick,0x7d8294d2a042,4625776,0,0x0,6
tick,0x7d8294d2a042,4626767,0,0x0,6
tick,0x7d8294d2a042,4627832,0,0x0,6
tick,0x7d8294d2a042,4628950,0,0x0,6
tick,0x7d8294d2a042,4630002,0,0x0,6
tick,0x7d8294d2a042,4631067,0,0x0,6
tick,0x7d8294d2a042,4632045,0,0x0,6
tick,0x7d8294d2a042,4633105,0,0x0,6
tick,0x7d8294d2a042,4634230,0,0x0,6
tick,0x7d8294d2a042,4635218,0,0x0,6
tick,0x7d8294d2a042,4636349,0,0x0,6
tick,0x7d8294d2a042,4637408,0,0x0,6
tick,0x7d8294d2a042,4638489,0,0x0,6
tick,0x7d8294d2a042,4639475,0,0x0,6
tick,0x7d8294d2a042,4640586,0,0x0,6
tick,0x7d8294d2a042,4641653,0,0x0,6
tick,0x7d8294d2a042,4642557,0,0x0,6
tick,0x7d8294d2a042,4643681,0,0x0,6
tick,0x7d8294d2a042,4644757,0,0x0,6
tick,0x7d8294d2a042,4645840,0,0x0,6
tick,0x7d8294d2a042,4646922,0,0x0,6
tick,0x7d8294d2a042,4647917,0,0x0,6
tick,0x7d8294d2a042,4648948,0,0x0,6
tick,0x7d8294d2a042,4649995,0,0x0,6
tick,0x7d8294d2a042,4651082,0,0x0,6
tick,0x7d8294d2a042,4652181,0,0x0,6
tick,0x7d8294d2a042,4653214,0,0x0,6
tick,0x7d8294d2a042,4654313,0,0x0,6
tick,0x7d8294d2a042,4655328,0,0x0,6
tick,0x7d8294d2a042,4656376,0,0x0,6
tick,0x7d8294d2a042,4657464,0,0x0,6
tick,0x7d8294d2a042,4658490,0,0x0,6
tick,0x7d8294d2a042,4659512,0,0x0,6
tick,0x7d8294d2a042,4660620,0,0x0,6
tick,0x7d8294d2a042,4661767,0,0x0,6
tick,0x7d8294d2a042,4662751,0,0x0,6
tick,0x7d8294d2a042,4663824,0,0x0,6
tick,0x7d8294d2a042,4664925,0,0x0,6
tick,0x7d8294d2a042,4665929,0,0x0,6
tick,0x7d8294d2a042,4667035,0,0x0,6
tick,0x7d8294d2a042,4668133,0,0x0,6
tick,0x7d8294d2a042,4669160,0,0x0,6
tick,0x7d8294d2a042,4670257,0,0x0,6
tick,0x7d8294d2a042,4671314,0,0x0,6
tick,0x7d8294d2a042,4672308,0,0x0,6
tick,0x7d8294d2a042,4673443,0,0x0,6
tick,0x7d8294d2a042,4674400,0,0x0,6
tick,0x7d8294d2a042,4675514,0,0x0,6
tick,0x7d8294d2a042,4676531,0,0x0,6
tick,0x7d8294d2a042,4677681,0,0x0,6
tick,0x7d8294d2a042,4678665,0,0x0,6
tick,0x7d8294d2a042,4679744,0,0x0,6
tick,0x7d8294d2a042,4680841,0,0x0,6
tick,0x7d8294d2a042,4681832,0,0x0,6
tick,0x7d8294d2a042,4682828,0,0x0,6
tick,0x7d8294d2a042,4683939,0,0x0,6
tick,0x7d8294d2a042,4685024,0,0x0,6
tick,0x7d8294d2a042,4686128,0,0x0,6
tick,0x7d8294d2a042,4687200,0,0x0,6
tick,0x7d8294d2a042,4688175,0,0x0,6
tick,0x7d8294d2a042,4689313,0,0x0,6
tick,0x7d8294d2a042,4690366,0,0x0,6
tick,0x7d8294d2a042,4691371,0,0x0,6
tick,0x7d8294d2a042,4692497,0,0x0,6
tick,0x7d8294d2a042,4693543,0,0x0,6
tick,0x7d8294d2a042,4694621,0,0x0,6
tick,0x7d8294d2a042,4695540,0,0x0,6
tick,0x7d8294d2a042,4696723,0,0x0,6
tick,0x7d8294d2a042,4697778,0,0x0,6
tick,0x7d8294d2a042,4698803,0,0x0,6
tick,0x7d8294d2a042,4699843,0,0x0,6
tick,0x7d8294d2a042,4700896,0,0x0,6
tick,0x7d8294d2a042,4701982,0,0x0,6
tick,0x7d8294d2a042,4702981,0,0x0,6
tick,0x7d8294d2a042,4704019,0,0x0,6
tick,0x7d8294d2a042,4705103,0,0x0,6
tick,0x7d8294d2a042,4706164,0,0x0,6
tick,0x7d8294d2a042,4707212,0,0x0,6
tick,0x7d8294d2a042,4708340,0,0x0,6
tick,0x7d8294d2a042,4709383,0,0x0,6
tick,0x7d8294d2a042,4710441,0,0x0,6
tick,0x7d8294d2a042,4711476,0,0x0,6
tick,0x7d8294d2a042,4712585,0,0x0,6
tick,0x7d8294d2a042,4713629,0,0x0,6
tick,0x7d8294d2a042,4714587,0,0x0,6
tick,0x7d8294d2a042,4715605,0,0x0,6
tick,0x7d8294d2a042,4716792,0,0x0,6
tick,0x7d8294d2a042,4717867,0,0x0,6
tick,0x7d8294d2a042,4718923,0,0x0,6
tick,0x7d8294d2a042,4719998,0,0x0,6
tick,0x7d8294d2a042,4721053,0,0x0,6
tick,0x7d8294d2a042,4722107,0,0x0,6
tick,0x7d8294d2a042,4723168,0,0x0,6
tick,0x7d8294d2a042,4724170,0,0x0,6
tick,0x7d8294d2a042,4725218,0,0x0,6
tick,0x7d8294d2a042,4726363,0,0x0,6
tick,0x7d8294d2a042,4727416,0,0x0,6
tick,0x7d8294d2a042,4728505,0,0x0,6
tick,0x7d8294d2a042,4729535,0,0x0,6
tick,0x7d8294d2a042,4730603,0,0x0,6
tick,0x7d8294d2a042,4731531,0,0x0,6
tick,0x7d8294d2a042,4732729,0,0x0,6
tick,0x7d8294d2a042,4733781,0,0x0,6
tick,0x7d8294d2a042,4734847,0,0x0,6
tick,0x7d8294d2a042,4735902,0,0x0,6
tick,0x7d8294d2a042,4736963,0,0x0,6
tick,0x7d8294d2a042,4738028,0,0x0,6
tick,0x7d8294d2a042,4739103,0,0x0,6
tick,0x7d8294d2a042,4740076,0,0x0,6
tick,0x7d8294d2a042,4741135,0,0x0,6
tick,0x7d8294d2a042,4742266,0,0x0,6
tick,0x7d8294d2a042,4743333,0,0x0,6
tick,0x7d8294d2a042,4744385,0,0x0,6
tick,0x7d8294d2a042,4745452,0,0x0,6
tick,0x7d8294d2a042,4746528,0,0x0,6
tick,0x7d8294d2a042,4747566,0,0x0,6
tick,0x7d8294d2a042,4748619,0,0x0,6
tick,0x7d8294d2a042,4749701,0,0x0,6
tick,0x7d8294d2a042,4750682,0,0x0,6
tick,0x7d8294d2a042,4751696,0,0x0,6
tick,0x7d8294d2a042,4752872,0,0x0,6
tick,0x7d8294d2a042,4753933,0,0x0,6
tick,0x7d8294d2a042,4754952,0,0x0,6
tick,0x7d8294d2a042,4756048,0,0x0,6
tick,0x7d8294d2a042,4757114,0,0x0,6
tick,0x7d8294d2a042,4758106,0,0x0,6
tick,0x7d8294d2a042,4759164,0,0x0,6
tick,0x7d8294d2a042,4760293,0,0x0,6
tick,0x7d8294d2a042,4761363,0,0x0,6
tick,0x7d8294d2a042,4762436,0,0x0,6
tick,0x7d8294d2a042,4763478,0,0x0,6
tick,0x7d8294d2a042,4764551,0,0x0,6
tick,0x7d8294d2a042,4765614,0,0x0,6
tick,0x7d8294d2a042,4766666,0,0x0,6
tick,0x7d8294d2a042,4767688,0,0x0,6
tick,0x7d8294d2a042,4768720,0,0x0,6
tick,0x7d8294d2a042,4769849,0,0x0,6
tick,0x7d8294d2a042,4770911,0,0x0,6
tick,0x7d8294d2a042,4771909,0,0x0,6
tick,0x7d8294d2a042,4772960,0,0x0,6
tick,0x7d8294d2a042,4774105,0,0x0,6
tick,0x7d8294d2a042,4775162,0,0x0,6
tick,0x7d8294d2a042,4776226,0,0x0,6
tick,0x7d8294d2a042,4777202,0,0x0,6
tick,0x7d8294d2a042,4778346,0,0x0,6
tick,0x7d8294d2a042,4779419,0,0x0,6
tick,0x7d8294d2a042,4780453,0,0x0,6
tick,0x7d8294d2a042,4781515,0,0x0,6
tick,0x7d8294d2a042,4782507,0,0x0,6
tick,0x7d8294d2a042,4783564,0,0x0,6
tick,0x7d8294d2a042,4784702,0,0x0,6
tick,0x7d8294d2a042,4785760,0,0x0,6
tick,0x7d8294d2a042,4786759,0,0x0,6
tick,0x7d8294d2a042,4787853,0,0x0,6
tick,0x7d8294d2a042,4788950,0,0x0,6
tick,0x7d8294d2a042,4790000,0,0x0,6
tick,0x7d8294d2a042,4791069,0,0x0,6
tick,0x7d8294d2a042,4792127,0,0x0,6
tick,0x7d8294d2a042,4793187,0,0x0,6
tick,0x7d8294d2a042,4794248,0,0x0,6
tick,0x7d8294d2a042,4795310,0,0x0,6
tick,0x7d8294d2a042,4796297,0,0x0,6
tick,0x7d8294d2a042,4797430,0,0x0,6
tick,0x7d8294d2a042,4798490,0,0x0,6
tick,0x7d8294d2a042,4799490,0,0x0,6
tick,0x7d8294d2a042,4800622,0,0x0,6
tick,0x7d8294d2a042,4801687,0,0x0,6
tick,0x7d8294d2a042,4802772,0,0x0,6
tick,0x7d8294d2a042,4803816,0,0x0,6
tick,0x7d8294d2a042,4804859,0,0x0,6
tick,0x7d8294d2a042,4805953,0,0x0,6
tick,0x7d8294d2a042,4806996,0,0x0,6
tick,0x7d8294d2a042,4808062,0,0x0,6
tick,0x7d8294d2a042,4809120,0,0x0,6
tick,0x7d8294d2a042,4810121,0,0x0,6
tick,0x7d8294d2a042,4811180,0,0x0,6
tick,0x7d8294d2a042,4812228,0,0x0,6
tick,0x7d8294d2a042,4813362,0,0x0,6
tick,0x7d8294d2a042,4814446,0,0x0,6
tick,0x7d8294d2a042,4815510,0,0x0,6
tick,0x7d8294d2a042,4816569,0,0x0,6
tick,0x7d8294d2a042,4817611,0,0x0,6
tick,0x7d8294d2a042,4818671,0,0x0,6
tick,0x7d8294d2a042,4819590,0,0x0,6
tick,0x7d8294d2a042,4820770,0,0x0,6
tick,0x7d8294d2a042,4821858,0,0x0,6
tick,0x7d8294d2a042,4822917,0,0x0,6
tick,0x7d8294d2a042,4823973,0,0x0,6
tick,0x7d8294d2a042,4825039,0,0x0,6
tick,0x7d8294d2a042,4826114,0,0x0,6
tick,0x7d8294d2a042,4827165,0,0x0,6
tick,0x7d8294d2a042,4828150,0,0x0,6
tick,0x7d8294d2a042,4829216,0,0x0,6
tick,0x7d8294d2a042,4830341,0,0x0,6
tick,0x7d8294d2a042,4831410,0,0x0,6
tick,0x7d8294d2a042,4832412,0,0x0,6
tick,0x7d8294d2a042,4833535,0,0x0,6
tick,0x7d8294d2a042,4834591,0,0x0,6
tick,0x7d8294d2a042,4835594,0,0x0,6
tick,0x7d8294d2a042,4836712,0,0x0,6
tick,0x7d8294d2a042,4837698,0,0x0,6
tick,0x7d8294d2a042,4838711,0,0x0,6
tick,0x7d8294d2a042,4839837,0,0x0,6
tick,0x7d8294d2a042,4840909,0,0x0,6
tick,0x7d8294d2a042,4842028,0,0x0,6
tick,0x7d8294d2a042,4843099,0,0x0,6
tick,0x7d8294d2a042,4844147,0,0x0,6
tick,0x7d8294d2a042,4845209,0,0x0,6
tick,0x7d8294d2a042,4846282,0,0x0,6
tick,0x7d8294d2a042,4847290,0,0x0,6
tick,0x7d8294d2a042,4848402,0,0x0,6
tick,0x7d8294d2a042,4849414,0,0x0,6
tick,0x7d8294d2a042,4850470,0,0x0,6
tick,0x7d8294d2a042,4851499,0,0x0,6
tick,0x7d8294d2a042,4852621,0,0x0,6
tick,0x7d8294d2a042,4853702,0,0x0,6
tick,0x7d8294d2a042,4854759,0,0x0,6
tick,0x7d8294d2a042,4855736,0,0x0,6
tick,0x7d8294d2a042,4856872,0,0x0,6
tick,0x7d8294d2a042,4857936,0,0x0,6
tick,0x7d8294d2a042,4859000,0,0x0,6
tick,0x7d8294d2a042,4859991,0,0x0,6
tick,0x7d8294d2a042,4861053,0,0x0,6
tick,0x7d8294d2a042,4862195,0,0x0,6
tick,0x7d8294d2a042,4863261,0,0x0,6
tick,0x7d8294d2a042,4864246,0,0x0,6
tick,0x7d8294d2a042,4865316,0,0x0,6
tick,0x7d8294d2a042,4866371,0,0x0,6
tick,0x7d8294d2a042,4867417,0,0x0,6
tick,0x7d8294d2a042,4868559,0,0x0,6
tick,0x7d8294d2a042,4869610,0,0x0,6
tick,0x7d8294d2a042,4870703,0,0x0,6
tick,0x7d8294d2a042,4871688,0,0x0,6
tick,0x7d8294d2a042,4872802,0,0x0,6
tick,0x7d8294d2a042,4873857,0,0x0,6
tick,0x7d8294d2a042,4874915,0,0x0,6
tick,0x7d8294d2a042,4875970,0,0x0,6
tick,0x7d8294d2a042,4876977,0,0x0,6
tick,0x7d8294d2a042,4878026,0,0x0,6
tick,0x7d8294d2a042,4879087,0,0x0,6
tick,0x7d8294d2a042,4880174,0,0x0,6
tick,0x7d8294d2a042,4881246,0,0x0,6
tick,0x7d8294d2a042,4882357,0,0x0,6
tick,0x7d8294d2a042,4883372,0,0x0,6
tick,0x7d8294d2a042,4884476,0,0x0,6
tick,0x7d8294d2a042,4885538,0,0x0,6
tick,0x7d8294d2a042,4886532,0,0x0,6
tick,0x7d8294d2a042,4887507,0,0x0,6
tick,0x7d8294d2a042,4888730,0,0x0,6
tick,0x7d8294d2a042,4889803,0,0x0,6
tick,0x7d8294d2a042,4890801,0,0x0,6
tick,0x7d8294d2a042,4891923,0,0x0,6
tick,0x7d8294d2a042,4892918,0,0x0,6
tick,0x7d8294d2a042,4894037,0,0x0,6
tick,0x7d8294d2a042,4895093,0,0x0,6
tick,0x7d8294d2a042,4896077,0,0x0,6
tick,0x7d8294d2a042,4897137,0,0x0,6
tick,0x7d8294d2a042,4898278,0,0x0,6
tick,0x7d8294d2a042,4899289,0,0x0,6
tick,0x7d8294d2a042,4900426,0,0x0,6
tick,0x7d8294d2a042,4901403,0,0x0,6
tick,0x7d8294d2a042,4902523,0,0x0,6
tick,0x7d8294d2a042,4903501,0,0x0,6
tick,0x7d8294d2a042,4904632,0,0x0,6
tick,0x7d8294d2a042,4905699,0,0x0,6
tick,0x7d8294d2a042,4906758,0,0x0,6
tick,0x7d8294d2a042,4907829,0,0x0,6
tick,0x7d8294d2a042,4908769,0,0x0,6
tick,0x7d8294d2a042,4909940,0,0x0,6
tick,0x7d8294d2a042,4910952,0,0x0,6
tick,0x7d8294d2a042,4911994,0,0x0,6
tick,0x7d8294d2a042,4913046,0,0x0,6
tick,0x7d8294d2a042,4914112,0,0x0,6
tick,0x7d8294d2a042,4915240,0,0x0,6
tick,0x7d8294d2a042,4916295,0,0x0,6
tick,0x7d8294d2a042,4917360,0,0x0,6
tick,0x7d8294d2a042,4918436,0,0x0,6
tick,0x7d8294d2a042,4919486,0,0x0,6
tick,0x7d8294d2a042,4920561,0,0x0,6
tick,0x7d8294d2a042,4921577,0,0x0,6
tick,0x7d8294d2a042,4922532,0,0x0,6
tick,0x7d8294d2a042,4923633,0,0x0,6
tick,0x7d8294d2a042,4924807,0,0x0,6
tick,0x7d8294d2a042,4925857,0,0x0,6
tick,0x7d8294d2a042,4926916,0,0x0,6
tick,0x7d8294d2a042,4927973,0,0x0,6
tick,0x7d8294d2a042,4929049,0,0x0,6
tick,0x7d8294d2a042,4930108,0,0x0,6
tick,0x7d8294d2a042,4931167,0,0x0,6
tick,0x7d8294d2a042,4932086,0,0x0,6
tick,0x7d8294d2a042,4933219,0,0x0,6
tick,0x7d8294d2a042,4934204,0,0x0,6
tick,0x7d8294d2a042,4935422,0,0x0,6
tick,0x7d8294d2a042,4936477,0,0x0,6
tick,0x7d8294d2a042,4937532,0,0x0,6
tick,0x7d8294d2a042,4938623,0,0x0,6
tick,0x7d8294d2a042,4939586,0,0x0,6
tick,0x7d8294d2a042,4940719,0,0x0,6
tick,0x7d8294d2a042,4941784,0,0x0,6
tick,0x7d8294d2a042,4942837,0,0x0,6
tick,0x7d8294d2a042,4943890,0,0x0,6
tick,0x7d8294d2a042,4944960,0,0x0,6
tick,0x7d8294d2a042,4946021,0,0x0,6
tick,0x7d8294d2a042,4947086,0,0x0,6
tick,0x7d8294d2a042,4948070,0,0x0,6
tick,0x7d8294d2a042,4949066,0,0x0,6
tick,0x7d8294d2a042,4950213,0,0x0,6
tick,0x7d8294d2a042,4951294,0,0x0,6
tick,0x7d8294d2a042,4952408,0,0x0,6
tick,0x7d8294d2a042,4953474,0,0x0,6
tick,0x7d8294d2a042,4954517,0,0x0,6
tick,0x7d8294d2a042,4955504,0,0x0,6
tick,0x7d8294d2a042,4956634,0,0x0,6
tick,0x7d8294d2a042,4957707,0,0x0,6
tick,0x7d8294d2a042,4958708,0,0x0,6
tick,0x7d8294d2a042,4959720,0,0x0,6
tick,0x7d8294d2a042,4960875,0,0x0,6
tick,0x7d8294d2a042,4961938,0,0x0,6
tick,0x7d8294d2a042,4963016,0,0x0,6
tick,0x7d8294d2a042,4963962,0,0x0,6
tick,0x7d8294d2a042,4965055,0,0x0,6
tick,0x7d8294d2a042,4966202,0,0x0,6
tick,0x7d8294d2a042,4967252,0,0x0,6
tick,0x7d8294d2a042,4968256,0,0x0,6
tick,0x7d8294d2a042,4969370,0,0x0,6
tick,0x7d8294d2a042,4970440,0,0x0,6
tick,0x7d8294d2a042,4971414,0,0x0,6
tick,0x7d8294d2a042,4972568,0,0x0,6
tick,0x7d8294d2a042,4973627,0,0x0,6
tick,0x7d8294d2a042,4974631,0,0x0,6
tick,0x7d8294d2a042,4975646,0,0x0,6
tick,0x7d8294d2a042,4976795,0,0x0,6
tick,0x7d8294d2a042,4977863,0,0x0,6
tick,0x7d8294d2a042,4978924,0,0x0,6
tick,0x7d8294d2a042,4979908,0,0x0,6
tick,0x7d8294d2a042,4980966,0,0x0,6
tick,0x7d8294d2a042,4982103,0,0x0,6
tick,0x7d8294d2a042,4983184,0,0x0,6
tick,0x7d8294d2a042,4984172,0,0x0,6
tick,0x7d8294d2a042,4985297,0,0x0,6
tick,0x7d8294d2a042,4986309,0,0x0,6
tick,0x7d8294d2a042,4987348,0,0x0,6
tick,0x7d8294d2a042,4988475,0,0x0,6
tick,0x7d8294d2a042,4989470,0,0x0,6
tick,0x7d8294d2a042,4990551,0,0x0,6
tick,0x7d8294d2a042,4991584,0,0x0,6
tick,0x7d8294d2a042,4992652,0,0x0,6
tick,0x7d8294d2a042,4993794,0,0x0,6
tick,0x7d8294d2a042,4994856,0,0x0,6
tick,0x7d8294d2a042,4995919,0,0x0,6
tick,0x7d8294d2a042,4996969,0,0x0,6
tick,0x7d8294d2a042,4998037,0,0x0,6
tick,0x7d8294d2a042,4999085,0,0x0,6
tick,0x7d8294d2a042,5000153,0,0x0,6
tick,0x7d8294d2a042,5001218,0,0x0,6
tick,0x7d8294d2a042,5002275,0,0x0,6
tick,0x7d8294d2a042,5003365,0,0x0,6
tick,0x7d8294d2a042,5004337,0,0x0,6
tick,0x7d8294d2a042,5005321,0,0x0,6
tick,0x7d8294d2a042,5006524,0,0x0,6
tick,0x7d8294d2a042,5007556,0,0x0,6
tick,0x7d8294d2a042,5008622,0,0x0,6
tick,0x7d8294d2a042,5009697,0,0x0,6
tick,0x7d8294d2a042,5010765,0,0x0,6
tick,0x7d8294d2a042,5011780,0,0x0,6
tick,0x7d8294d2a042,5012892,0,0x0,6
tick,0x7d8294d2a042,5013944,0,0x0,6
tick,0x7d8294d2a042,5014994,0,0x0,6
tick,0x7d8294d2a042,5016061,0,0x0,6
tick,0x7d8294d2a042,5017113,0,0x0,6
tick,0x7d8294d2a042,5018183,0,0x0,6
tick,0x7d8294d2a042,5019242,0,0x0,6
tick,0x7d8294d2a042,5020311,0,0x0,6
tick,0x7d8294d2a042,5021322,0,0x0,6
tick,0x7d8294d2a042,5022284,0,0x0,6
tick,0x7d8294d2a042,5023342,0,0x0,6
tick,0x7d8294d2a042,5024489,0,0x0,6
tick,0x7d8294d2a042,5025623,0,0x0,6
tick,0x7d8294d2a042,5026673,0,0x0,6
tick,0x7d8294d2a042,5027672,0,0x0,6
tick,0x7d8294d2a042,5028797,0,0x0,6
tick,0x7d8294d2a042,5029853,0,0x0,6
tick,0x7d8294d2a042,5030922,0,0x0,6
tick,0x7d8294d2a042,5031973,0,0x0,6
tick,0x7d8294d2a042,5033048,0,0x0,6
tick,0x7d8294d2a042,5034101,0,0x0,6
tick,0x7d8294d2a042,5035159,0,0x0,6
tick,0x7d8294d2a042,5036224,0,0x0,6
tick,0x7d8294d2a042,5037250,0,0x0,6
tick,0x7d8294d2a042,5038345,0,0x0,6
tick,0x7d8294d2a042,5039428,0,0x0,6
tick,0x7d8294d2a042,5040418,0,0x0,6
tick,0x7d8294d2a042,5041533,0,0x0,6
tick,0x7d8294d2a042,5042523,0,0x0,6
tick,0x7d8294d2a042,5043579,0,0x0,6
tick,0x7d8294d2a042,5044721,0,0x0,6
tick,0x7d8294d2a042,5045773,0,0x0,6
tick,0x7d8294d2a042,5046844,0,0x0,6
tick,0x7d8294d2a042,5047906,0,0x0,6
tick,0x7d8294d2a042,5048965,0,0x0,6
tick,0x7d8294d2a042,5050019,0,0x0,6
tick,0x7d8294d2a042,5051084,0,0x0,6
tick,0x7d8294d2a042,5052071,0,0x0,6
tick,0x7d8294d2a042,5053132,0,0x0,6
tick,0x7d8294d2a042,5054259,0,0x0,6
tick,0x7d8294d2a042,5055336,0,0x0,6
tick,0x7d8294d2a042,5056386,0,0x0,6
tick,0x7d8294d2a042,5057448,0,0x0,6
tick,0x7d8294d2a042,5058529,0,0x0,6
tick,0x7d8294d2a042,5059502,0,0x0,6
tick,0x7d8294d2a042,5060632,0,0x0,6
tick,0x7d8294d2a042,5061699,0,0x0,6
tick,0x7d8294d2a042,5062722,0,0x0,6
tick,0x7d8294d2a042,5063727,0,0x0,6
tick,0x7d8294d2a042,5064884,0,0x0,6
tick,0x7d8294d2a042,5065942,0,0x0,6
tick,0x7d8294d2a042,5066998,0,0x0,6
tick,0x7d8294d2a042,5067992,0,0x0,6
tick,0x7d8294d2a042,5069054,0,0x0,6
tick,0x7d8294d2a042,5070191,0,0x0,6
tick,0x7d8294d2a042,5071178,0,0x0,6
tick,0x7d8294d2a042,5072259,0,0x0,6
tick,0x7d8294d2a042,5073369,0,0x0,6
tick,0x7d8294d2a042,5074449,0,0x0,6
tick,0x7d8294d2a042,5075499,0,0x0,6
tick,0x7d8294d2a042,5076571,0,0x0,6
tick,0x7d8294d2a042,5077558,0,0x0,6
tick,0x7d8294d2a042,5078614,0,0x0,6
tick,0x7d8294d2a042,5079684,0,0x0,6
tick,0x7d8294d2a042,5080743,0,0x0,6
tick,0x7d8294d2a042,5081857,0,0x0,6
tick,0x7d8294d2a042,5082935,0,0x0,6
tick,0x7d8294d2a042,5083987,0,0x0,6
tick,0x7d8294d2a042,5085037,0,0x0,6
tick,0x7d8294d2a042,5086117,0,0x0,6
tick,0x7d8294d2a042,5087168,0,0x0,6
tick,0x7d8294d2a042,5088242,0,0x0,6
tick,0x7d8294d2a042,5089292,0,0x0,6
tick,0x7d8294d2a042,5090364,0,0x0,6
tick,0x7d8294d2a042,5091424,0,0x0,6
tick,0x7d8294d2a042,5092482,0,0x0,6
tick,0x7d8294d2a042,5093469,0,0x0,6
tick,0x7d8294d2a042,5094532,0,0x0,6
tick,0x7d8294d2a042,5095587,0,0x0,6
tick,0x7d8294d2a042,5096723,0,0x0,6
tick,0x7d8294d2a042,5097795,0,0x0,6
tick,0x7d8294d2a042,5098861,0,0x0,6
tick,0x7d8294d2a042,5099895,0,0x0,6
tick,0x7d8294d2a042,5100968,0,0x0,6
tick,0x7d8294d2a042,5102034,0,0x0,6
tick,0x7d8294d2a042,5103094,0,0x0,6
tick,0x7d8294d2a042,5104153,0,0x0,6
tick,0x7d8294d2a042,5105214,0,0x0,6
tick,0x7d8294d2a042,5106196,0,0x0,6
tick,0x7d8294d2a042,5107256,0,0x0,6
tick,0x7d8294d2a042,5108389,0,0x0,6
tick,0x7d8294d2a042,5109448,0,0x0,6
tick,0x7d8294d2a042,5110446,0,0x0,6
tick,0x7d8294d2a042,5111489,0,0x0,6
tick,0x7d8294d2a042,5112622,0,0x0,6
tick,0x7d8294d2a042,5113690,0,0x0,6
tick,0x7d8294d2a042,5114762,0,0x0,6
tick,0x7d8294d2a042,5115661,0,0x0,6
tick,0x7d8294d2a042,5116872,0,0x0,6
tick,0x7d8294d2a042,5117928,0,0x0,6
tick,0x7d8294d2a042,5118994,0,0x0,6
tick,0x7d8294d2a042,5120041,0,0x0,6
tick,0x7d8294d2a042,5121111,0,0x0,6
tick,0x7d8294d2a042,5122110,0,0x0,6
tick,0x7d8294d2a042,5123159,0,0x0,6
tick,0x7d8294d2a042,5124300,0,0x0,6
tick,0x7d8294d2a042,5125298,0,0x0,6
tick,0x7d8294d2a042,5126371,0,0x0,6
tick,0x7d8294d2a042,5127424,0,0x0,6
tick,0x7d8294d2a042,5128641,0,0x0,6
tick,0x7d8294d2a042,5129787,0,0x0,6
tick,0x7d8294d2a042,5130871,0,0x0,6
tick,0x7d8294d2a042,5132020,0,0x0,6
tick,0x7d8294d2a042,5133161,0,0x0,6
tick,0x7d8294d2a042,5134306,0,0x0,6
tick,0x7d8294d2a042,5135461,0,0x0,6
tick,0x7d8294d2a042,5136538,0,0x0,6
tick,0x7d8294d2a042,5137543,0,0x0,6
tick,0x7d8294d2a042,5138766,0,0x0,6
tick,0x7d8294d2a042,5139776,0,0x0,6
tick,0x7d8294d2a042,5140955,0,0x0,6
tick,0x7d8294d2a042,5142045,0,0x0,6
tick,0x7d8294d2a042,5143268,0,0x0,6
tick,0x7d8294d2a042,5144265,0,0x0,6
tick,0x7d8294d2a042,5145451,0,0x0,6
tick,0x7d8294d2a042,5146575,0,0x0,6
tick,0x7d8294d2a042,5147645,0,0x0,6
tick,0x7d8294d2a042,5148832,0,0x0,6
tick,0x7d8294d2a042,5149994,0,0x0,6
tick,0x7d8294d2a042,5151072,0,0x0,6
tick,0x7d8294d2a042,5152211,0,0x0,6
tick,0x7d8294d2a042,5153290,0,0x0,6
tick,0x7d8294d2a042,5154539,0,0x0,6
tick,0x7d8294d2a042,5155642,0,0x0,6
tick,0x7d8294d2a042,5156839,0,0x0,6
tick,0x7d8294d2a042,5157989,0,0x0,6
tick,0x7d8294d2a042,5159132,0,0x0,6
tick,0x7d8294d2a042,5160134,0,0x0,6
tick,0x7d8294d2a042,5161246,0,0x0,6
tick,0x7d8294d2a042,5162328,0,0x0,6
tick,0x7d8294d2a042,5163446,0,0x0,6
tick,0x7d8294d2a042,5164519,0,0x0,6
tick,0x7d8294d2a042,5165594,0,0x0,6
tick,0x7d8294d2a042,5166676,0,0x0,6
tick,0x7d8294d2a042,5167723,0,0x0,6
tick,0x7d8294d2a042,5168866,0,0x0,6
tick,0x7d8294d2a042,5169896,0,0x0,6
tick,0x7d8294d2a042,5170914,0,0x0,6
tick,0x7d8294d2a042,5171994,0,0x0,6
tick,0x7d8294d2a042,5173177,0,0x0,6
tick,0x7d8294d2a042,5174377,0,0x0,6
tick,0x7d8294d2a042,5175476,0,0x0,6
tick,0x7d8294d2a042,5176592,0,0x0,6
tick,0x7d8294d2a042,5177622,0,0x0,6
tick,0x7d8294d2a042,5178842,0,0x0,6
tick,0x7d8294d2a042,5179930,0,0x0,6
tick,0x7d8294d2a042,5181055,0,0x0,6
tick,0x7d8294d2a042,5182221,0,0x0,6
tick,0x7d8294d2a042,5183350,0,0x0,6
tick,0x7d8294d2a042,5184372,0,0x0,6
tick,0x7d8294d2a042,5185527,0,0x0,6
tick,0x7d8294d2a042,5186614,0,0x0,6
tick,0x7d8294d2a042,5187690,0,0x0,6
tick,0x7d8294d2a042,5188907,0,0x0,6
tick,0x7d8294d2a042,5190062,0,0x0,6
tick,0x7d8294d2a042,5191211,0,0x0,6
tick,0x7d8294d2a042,5192271,0,0x0,6
tick,0x7d8294d2a042,5193348,0,0x0,6
tick,0x7d8294d2a042,5194578,0,0x0,6
tick,0x7d8294d2a042,5195615,0,0x0,6
tick,0x7d8294d2a042,5196840,0,0x0,6
tick,0x7d8294d2a042,5197999,0,0x0,6
tick,0x7d8294d2a042,5199059,0,0x0,6
tick,0x7d8294d2a042,5200219,0,0x0,6
tick,0x7d8294d2a042,5201372,0,0x0,6
tick,0x7d8294d2a042,5202533,0,0x0,6
tick,0x7d8294d2a042,5203671,0,0x0,6
tick,0x7d8294d2a042,5204747,0,0x0,6
tick,0x7d8294d2a042,5205813,0,0x0,6
tick,0x7d8294d2a042,5207036,0,0x0,6
tick,0x7d8294d2a042,5208171,0,0x0,6
tick,0x7d8294d2a042,5209352,0,0x0,6
tick,0x7d8294d2a042,5210482,0,0x0,6
tick,0x7d8294d2a042,5211649,0,0x0,6
tick,0x7d8294d2a042,5212802,0,0x0,6
tick,0x7d8294d2a042,5213971,0,0x0,6
tick,0x7d8294d2a042,5214959,0,0x0,6
tick,0x7d8294d2a042,5216038,0,0x0,6
tick,0x7d8294d2a042,5217192,0,0x0,6
tick,0x7d8294d2a042,5218480,0,0x0,6
tick,0x7d8294d2a042,5219663,0,0x0,6
tick,0x7d8294d2a042,5220827,0,0x0,6
tick,0x7d8294d2a042,5221968,0,0x0,6
tick,0x7d8294d2a042,5223127,0,0x0,6
tick,0x7d8294d2a042,5224065,0,0x0,6
tick,0x7d8294d2a042,5225209,0,0x0,6
tick,0x7d8294d2a042,5226356,0,0x0,6
tick,0x7d8294d2a042,5227670,0,0x0,6
tick,0x7d8294d2a042,5228818,0,0x0,6
tick,0x7d8294d2a042,5229971,0,0x0,6
tick,0x7d8294d2a042,5231065,0,0x0,6
tick,0x7d8294d2a042,5232227,0,0x0,6
tick,0x7d8294d2a042,5233361,0,0x0,6
tick,0x7d8294d2a042,5234368,0,0x0,6
tick,0x7d8294d2a042,5235607,0,0x0,6
tick,0x7d8294d2a042,5236844,0,0x0,6
tick,0x7d8294d2a042,5238017,0,0x0,6
tick,0x7d8294d2a042,5239148,0,0x0,6
tick,0x7d8294d2a042,5240245,0,0x0,6
tick,0x7d8294d2a042,5241400,0,0x0,6
tick,0x7d8294d2a042,5242561,0,0x0,6
tick,0x7d8294d2a042,5243665,0,0x0,6
tick,0x7d8294d2a042,5244838,0,0x0,6
tick,0x7d8294d2a042,5245830,0,0x0,6
tick,0x7d8294d2a042,5246971,0,0x0,6
tick,0x7d8294d2a042,5248206,0,0x0,6
tick,0x7d8294d2a042,5249339,0,0x0,6
tick,0x7d8294d2a042,5250496,0,0x0,6
tick,0x7d8294d2a042,5251671,0,0x0,6
tick,0x7d8294d2a042,5252831,0,0x0,6
tick,0x7d8294d2a042,5253978,0,0x0,6
tick,0x7d8294d2a042,5254968,0,0x0,6
tick,0x7d8294d2a042,5256052,0,0x0,6
tick,0x7d8294d2a042,5257205,0,0x0,6
tick,0x7d8294d2a042,5258489,0,0x0,6
tick,0x7d8294d2a042,5259675,0,0x0,6
tick,0x7d8294d2a042,5260841,0,0x0,6
tick,0x7d8294d2a042,5262003,0,0x0,6
tick,0x7d8294d2a042,5263160,0,0x0,6
tick,0x7d8294d2a042,5264088,0,0x0,6
tick,0x7d8294d2a042,5265241,0,0x0,6
tick,0x7d8294d2a042,5266410,0,0x0,6
tick,0x7d8294d2a042,5267693,0,0x0,6
tick,0x7d8294d2a042,5268806,0,0x0,6
tick,0x7d8294d2a042,5269953,0,0x0,6
tick,0x7d8294d2a042,5271104,0,0x0,6
tick,0x7d8294d2a042,5272196,0,0x0,6
tick,0x7d8294d2a042,5273303,0,0x0,6
tick,0x7d8294d2a042,5274501,0,0x0,6
tick,0x7d8294d2a042,5275623,0,0x0,6
tick,0x7d8294d2a042,5276869,0,0x0,6
tick,0x7d8294d2a042,5278035,0,0x0,6
tick,0x7d8294d2a042,5279187,0,0x0,6
tick,0x7d8294d2a042,5280262,0,0x0,6
tick,0x7d8294d2a042,5281429,0,0x0,6
tick,0x7d8294d2a042,5282604,0,0x0,6
tick,0x7d8294d2a042,5283636,0,0x0,6
tick,0x7d8294d2a042,5284848,0,0x0,6
tick,0x7d8294d2a042,5285915,0,0x0,6
tick,0x7d8294d2a042,5287066,0,0x0,6
tick,0x7d8294d2a042,5288215,0,0x0,6
tick,0x7d8294d2a042,5289371,0,0x0,6
tick,0x7d8294d2a042,5290528,0,0x0,6
tick,0x7d8294d2a042,5291657,0,0x0,6
tick,0x7d8294d2a042,5292849,0,0x0,6
tick,0x7d8294d2a042,5293993,0,0x0,6
tick,0x7d8294d2a042,5295065,0,0x0,6
tick,0x7d8294d2a042,5296146,0,0x0,6
tick,0x7d8294d2a042,5297288,0,0x0,6
tick,0x7d8294d2a042,5298537,0,0x0,6
tick,0x7d8294d2a042,5299644,0,0x0,6
tick,0x7d8294d2a042,5300840,0,0x0,6
tick,0x7d8294d2a042,5302008,0,0x0,6
tick,0x7d8294d2a042,5303165,0,0x0,6
tick,0x7d8294d2a042,5304163,0,0x0,6
tick,0x7d8294d2a042,5305325,0,0x0,6
tick,0x7d8294d2a042,5306485,0,0x0,6
tick,0x7d8294d2a042,5307636,0,0x0,6
tick,0x7d8294d2a042,5308847,0,0x0,6
tick,0x7d8294d2a042,5310003,0,0x0,6
tick,0x7d8294d2a042,5311141,0,0x0,6
tick,0x7d8294d2a042,5312239,0,0x0,6
tick,0x7d8294d2a042,5313376,0,0x0,6
tick,0x7d8294d2a042,5314444,0,0x0,6
tick,0x7d8294d2a042,5315619,0,0x0,6
tick,0x7d8294d2a042,5316861,0,0x0,6
tick,0x7d8294d2a042,5318006,0,0x0,6
tick,0x7d8294d2a042,5319153,0,0x0,6
tick,0x7d8294d2a042,5320248,0,0x0,6
tick,0x7d8294d2a042,5321368,0,0x0,6
tick,0x7d8294d2a042,5322437,0,0x0,6
tick,0x7d8294d2a042,5323517,0,0x0,6
tick,0x7d8294d2a042,5324776,0,0x0,6
tick,0x7d8294d2a042,5325870,0,0x0,6
tick,0x7d8294d2a042,5327016,0,0x0,6
tick,0x7d8294d2a042,5328163,0,0x0,6
tick,0x7d8294d2a042,5329300,0,0x0,6
tick,0x7d8294d2a042,5330464,0,0x0,6
tick,0x7d8294d2a042,5331635,0,0x0,6
tick,0x7d8294d2a042,5332790,0,0x0,6
tick,0x7d8294d2a042,5333884,0,0x0,6
tick,0x7d8294d2a042,5335016,0,0x0,6
tick,0x7d8294d2a042,5336097,0,0x0,6
tick,0x7d8294d2a042,5337242,0,0x0,6
tick,0x7d8294d2a042,5338480,0,0x0,6
tick,0x7d8294d2a042,5339636,0,0x0,6
tick,0x7d8294d2a042,5340754,0,0x0,6
tick,0x7d8294d2a042,5341927,0,0x0,6
tick,0x7d8294d2a042,5343080,0,0x0,6
tick,0x7d8294d2a042,5344143,0,0x0,6
tick,0x7d8294d2a042,5345272,0,0x0,6
tick,0x7d8294d2a042,5346381,0,0x0,6
tick,0x7d8294d2a042,5347649,0,0x0,6
tick,0x7d8294d2a042,5348771,0,0x0,6
tick,0x7d8294d2a042,5349934,0,0x0,6
tick,0x7d8294d2a042,5351075,0,0x0,6
tick,0x7d8294d2a042,5352003,0,0x0,6
tick,0x7d8294d2a042,5353157,0,0x0,6
tick,0x7d8294d2a042,5354416,0,0x0,6
tick,0x7d8294d2a042,5355568,0,0x0,6
tick,0x7d8294d2a042,5356779,0,0x0,6
tick,0x7d8294d2a042,5357944,0,0x0,6
tick,0x7d8294d2a042,5359073,0,0x0,6
tick,0x7d8294d2a042,5360162,0,0x0,6
tick,0x7d8294d2a042,5361279,0,0x0,6
tick,0x7d8294d2a042,5362460,0,0x0,6
tick,0x7d8294d2a042,5363557,0,0x0,6
tick,0x7d8294d2a042,5364708,0,0x0,6
tick,0x7d8294d2a042,5365822,0,0x0,6
tick,0x7d8294d2a042,5366969,0,0x0,6
tick,0x7d8294d2a042,5368135,0,0x0,6
tick,0x7d8294d2a042,5369344,0,0x0,6
tick,0x7d8294d2a042,5370462,0,0x0,6
tick,0x7d8294d2a042,5371630,0,0x0,6
tick,0x7d8294d2a042,5372757,0,0x0,6
tick,0x7d8294d2a042,5373850,0,0x0,6
tick,0x7d8294d2a042,5374870,0,0x0,6
tick,0x7d8294d2a042,5375962,0,0x0,6
tick,0x7d8294d2a042,5377048,0,0x0,6
tick,0x7d8294d2a042,5378113,0,0x0,6
tick,0x7d8294d2a042,5379196,0,0x0,6
tick,0x7d8294d2a042,5380255,0,0x0,6
tick,0x7d8294d2a042,5381374,0,0x0,6
tick,0x7d8294d2a042,5382351,0,0x0,6
tick,0x7d8294d2a042,5383407,0,0x0,6
tick,0x7d8294d2a042,5384672,0,0x0,6
tick,0x7d8294d2a042,5385806,0,0x0,6
tick,0x7d8294d2a042,5386789,0,0x0,6
tick,0x7d8294d2a042,5387925,0,0x0,6
tick,0x7d8294d2a042,5389133,0,0x0,6
tick,0x7d8294d2a042,5390277,0,0x0,6
tick,0x7d8294d2a042,5391249,0,0x0,6
tick,0x7d8294d2a042,5392519,0,0x0,6
tick,0x7d8294d2a042,5393663,0,0x0,6
tick,0x7d8294d2a042,5394640,0,0x0,6
tick,0x7d8294d2a042,5395833,0,0x0,6
tick,0x7d8294d2a042,5396966,0,0x0,6
tick,0x7d8294d2a042,5398126,0,0x0,6
tick,0x7d8294d2a042,5399094,0,0x0,6
tick,0x7d8294d2a042,5400271,0,0x0,6
tick,0x7d8294d2a042,5401436,0,0x0,6
tick,0x7d8294d2a042,5402378,0,0x0,6
tick,0x7d8294d2a042,5403448,0,0x0,6
tick,0x7d8294d2a042,5404596,0,0x0,6
tick,0x7d8294d2a042,5405849,0,0x0,6
tick,0x7d8294d2a042,5406842,0,0x0,6
tick,0x7d8294d2a042,5408042,0,0x0,6
tick,0x7d8294d2a042,5409174,0,0x0,6
tick,0x7d8294d2a042,5410214,0,0x0,6
tick,0x7d8294d2a042,5411318,0,0x0,6
tick,0x7d8294d2a042,5412571,0,0x0,6
tick,0x7d8294d2a042,5413636,0,0x0,6
tick,0x7d8294d2a042,5414645,0,0x0,6
tick,0x7d8294d2a042,5415693,0,0x0,6
tick,0x7d8294d2a042,5417133,0,0x0,6
tick,0x7d8294d2a042,5418217,0,0x0,6
tick,0x7d8294d2a042,5419289,0,0x0,6
tick,0x7d8294d2a042,5420495,0,0x0,6
tick,0x7d8294d2a042,5421591,0,0x0,6
tick,0x7d8294d2a042,5422639,0,0x0,6
tick,0x7d8294d2a042,5423722,0,0x0,6
tick,0x7d8294d2a042,5424903,0,0x0,6
tick,0x7d8294d2a042,5426053,0,0x0,6
tick,0x7d8294d2a042,5427120,0,0x0,6
tick,0x7d8294d2a042,5428190,0,0x0,6
tick,0x7d8294d2a042,5429263,0,0x0,6
tick,0x7d8294d2a042,5430344,0,0x0,6
tick,0x7d8294d2a042,5431429,0,0x0,6
tick,0x7d8294d2a042,5432490,0,0x0,6
tick,0x7d8294d2a042,5433568,0,0x0,6
tick,0x7d8294d2a042,5434651,0,0x0,6
tick,0x7d8294d2a042,5435726,0,0x0,6
tick,0x7d8294d2a042,5436809,0,0x0,6
tick,0x7d8294d2a042,5437884,0,0x0,6
tick,0x7d8294d2a042,5438957,0,0x0,6
tick,0x7d8294d2a042,5440030,0,0x0,6
tick,0x7d8294d2a042,5441111,0,0x0,6
tick,0x7d8294d2a042,5442196,0,0x0,6
tick,0x7d8294d2a042,5443278,0,0x0,6
tick,0x7d8294d2a042,5444355,0,0x0,6
tick,0x7d8294d2a042,5445427,0,0x0,6
tick,0x7d8294d2a042,5446506,0,0x0,6
tick,0x7d8294d2a042,5447558,0,0x0,6
tick,0x7d8294d2a042,5448630,0,0x0,6
tick,0x7d8294d2a042,5449712,0,0x0,6
tick,0x7d8294d2a042,5450783,0,0x0,6
tick,0x7d8294d2a042,5451850,0,0x0,6
tick,0x7d8294d2a042,5452924,0,0x0,6
tick,0x7d8294d2a042,5454001,0,0x0,6
tick,0x7d8294d2a042,5455074,0,0x0,6
tick,0x7d8294d2a042,5456150,0,0x0,6
tick,0x7d8294d2a042,5457231,0,0x0,6
tick,0x7d8294d2a042,5458318,0,0x0,6
tick,0x7d8294d2a042,5459410,0,0x0,6
tick,0x7d8294d2a042,5460471,0,0x0,6
tick,0x7d8294d2a042,5461551,0,0x0,6
tick,0x7d8294d2a042,5462634,0,0x0,6
tick,0x7d8294d2a042,5463710,0,0x0,6
tick,0x7d8294d2a042,5464782,0,0x0,6
tick,0x7d8294d2a042,5465858,0,0x0,6
tick,0x7d8294d2a042,5466941,0,0x0,6
tick,0x7d8294d2a042,5468014,0,0x0,6
tick,0x7d8294d2a042,5469087,0,0x0,6
tick,0x7d8294d2a042,5470168,0,0x0,6
tick,0x7d8294d2a042,5471251,0,0x0,6
tick,0x7d8294d2a042,5472405,0,0x0,6
tick,0x7d8294d2a042,5473478,0,0x0,6
tick,0x7d8294d2a042,5474561,0,0x0,6
tick,0x7d8294d2a042,5475613,0,0x0,6
tick,0x7d8294d2a042,5476687,0,0x0,6
tick,0x7d8294d2a042,5477761,0,0x0,6
tick,0x7d8294d2a042,5478833,0,0x0,6
tick,0x7d8294d2a042,5479909,0,0x0,6
tick,0x7d8294d2a042,5480986,0,0x0,6
tick,0x7d8294d2a042,5482065,0,0x0,6
tick,0x7d8294d2a042,5483145,0,0x0,6
tick,0x7d8294d2a042,5484223,0,0x0,6
tick,0x7d8294d2a042,5485302,0,0x0,6
tick,0x7d8294d2a042,5486384,0,0x0,6
tick,0x7d8294d2a042,5487438,0,0x0,6
tick,0x7d8294d2a042,5488512,0,0x0,6
tick,0x7d8294d2a042,5489593,0,0x0,6
tick,0x7d8294d2a042,5490673,0,0x0,6
tick,0x7d8294d2a042,5491750,0,0x0,6
tick,0x7d8294d2a042,5492824,0,0x0,6
tick,0x7d8294d2a042,5493897,0,0x0,6
tick,0x7d8294d2a042,5494988,0,0x0,6
tick,0x7d8294d2a042,5496057,0,0x0,6
tick,0x7d8294d2a042,5497129,0,0x0,6
tick,0x7d8294d2a042,5498209,0,0x0,6
tick,0x7d8294d2a042,5499292,0,0x0,6
tick,0x7d8294d2a042,5500450,0,0x0,6
tick,0x7d8294d2a042,5501526,0,0x0,6
tick,0x7d8294d2a042,5502606,0,0x0,6
tick,0x7d8294d2a042,5503663,0,0x0,6
tick,0x7d8294d2a042,5504739,0,0x0,6
tick,0x7d8294d2a042,5505820,0,0x0,6
tick,0x7d8294d2a042,5506894,0,0x0,6
tick,0x7d8294d2a042,5507967,0,0x0,6
tick,0x7d8294d2a042,5509047,0,0x0,6
tick,0x7d8294d2a042,5510133,0,0x0,6
tick,0x7d8294d2a042,5511211,0,0x0,6
tick,0x7d8294d2a042,5512374,0,0x0,6
tick,0x7d8294d2a042,5513445,0,0x0,6
tick,0x7d8294d2a042,5514524,0,0x0,6
tick,0x7d8294d2a042,5515579,0,0x0,6
tick,0x7d8294d2a042,5516653,0,0x0,6
tick,0x7d8294d2a042,5517735,0,0x0,6
tick,0x7d8294d2a042,5518818,0,0x0,6
tick,0x7d8294d2a042,5519893,0,0x0,6
tick,0x7d8294d2a042,5520971,0,0x0,6
tick,0x7d8294d2a042,5522049,0,0x0,6
tick,0x7d8294d2a042,5523128,0,0x0,6
tick,0x7d8294d2a042,5524204,0,0x0,6
tick,0x7d8294d2a042,5525278,0,0x0,6
tick,0x7d8294d2a042,5526358,0,0x0,6
tick,0x7d8294d2a042,5527410,0,0x0,6
tick,0x7d8294d2a042,5528470,0,0x0,6
tick,0x7d8294d2a042,5529542,0,0x0,6
tick,0x7d8294d2a042,5530623,0,0x0,6
tick,0x7d8294d2a042,5531699,0,0x0,6
tick,0x7d8294d2a042,5532774,0,0x0,6
tick,0x7d8294d2a042,5533847,0,0x0,6
tick,0x7d8294d2a042,5534920,0,0x0,6
tick,0x7d8294d2a042,5535994,0,0x0,6
tick,0x7d8294d2a042,5537069,0,0x0,6
tick,0x7d8294d2a042,5538147,0,0x0,6
tick,0x7d8294d2a042,5539229,0,0x0,6
tick,0x7d8294d2a042,5540385,0,0x0,6
tick,0x7d8294d2a042,5541454,0,0x0,6
tick,0x7d8294d2a042,5542528,0,0x0,6
tick,0x7d8294d2a042,5543581,0,0x0,6
tick,0x7d8294d2a042,5544658,0,0x0,6
tick,0x7d8294d2a042,5545741,0,0x0,6
tick,0x7d8294d2a042,5546815,0,0x0,6
tick,0x7d8294d2a042,5547890,0,0x0,6
tick,0x7d8294d2a042,5548965,0,0x0,6
tick,0x7d8294d2a042,5550054,0,0x0,6
tick,0x7d8294d2a042,5551127,0,0x0,6
tick,0x7d8294d2a042,5552289,0,0x0,6
tick,0x7d8294d2a042,5553363,0,0x0,6
tick,0x7d8294d2a042,5554444,0,0x0,6
tick,0x7d8294d2a042,5555498,0,0x0,6
tick,0x7d8294d2a042,5556577,0,0x0,6
tick,0x7d8294d2a042,5557655,0,0x0,6
tick,0x7d8294d2a042,5558737,0,0x0,6
tick,0x7d8294d2a042,5559814,0,0x0,6
tick,0x7d8294d2a042,5560892,0,0x0,6
tick,0x7d8294d2a042,5561966,0,0x0,6
tick,0x7d8294d2a042,5563046,0,0x0,6
tick,0x7d8294d2a042,5564121,0,0x0,6
tick,0x7d8294d2a042,5565196,0,0x0,6
tick,0x7d8294d2a042,5566277,0,0x0,6
tick,0x7d8294d2a042,5567367,0,0x0,6
tick,0x7d8294d2a042,5568436,0,0x0,6
tick,0x7d8294d2a042,5569589,0,0x0,6
tick,0x7d8294d2a042,5570657,0,0x0,6
tick,0x7d8294d2a042,5571731,0,0x0,6
tick,0x7d8294d2a042,5572805,0,0x0,6
tick,0x7d8294d2a042,5573878,0,0x0,6
tick,0x7d8294d2a042,5574958,0,0x0,6
tick,0x7d8294d2a042,5576033,0,0x0,6
tick,0x7d8294d2a042,5577108,0,0x0,6
tick,0x7d8294d2a042,5578188,0,0x0,6
tick,0x7d8294d2a042,5579269,0,0x0,6
tick,0x7d8294d2a042,5580435,0,0x0,6
tick,0x7d8294d2a042,5581505,0,0x0,6
tick,0x7d8294d2a042,5582578,0,0x0,6
tick,0x7d8294d2a042,5583632,0,0x0,6
tick,0x7d8294d2a042,5584705,0,0x0,6
tick,0x7d8294d2a042,5585782,0,0x0,6
tick,0x7d8294d2a042,5586855,0,0x0,6
tick,0x7d8294d2a042,5587927,0,0x0,6
tick,0x7d8294d2a042,5589000,0,0x0,6
tick,0x7d8294d2a042,5590079,0,0x0,6
tick,0x7d8294d2a042,5591163,0,0x0,6
tick,0x7d8294d2a042,5592317,0,0x0,6
tick,0x7d8294d2a042,5593387,0,0x0,6
tick,0x7d8294d2a042,5594461,0,0x0,6
tick,0x7d8294d2a042,5595518,0,0x0,6
tick,0x7d8294d2a042,5596589,0,0x0,6
tick,0x7d8294d2a042,5597668,0,0x0,6
tick,0x7d8294d2a042,5598743,0,0x0,6
tick,0x7d8294d2a042,5599817,0,0x0,6
tick,0x7d8294d2a042,5600893,0,0x0,6
tick,0x7d8294d2a042,5601965,0,0x0,6
tick,0x7d8294d2a042,5603043,0,0x0,6
tick,0x7d8294d2a042,5604118,0,0x0,6
tick,0x7d8294d2a042,5605190,0,0x0,6
tick,0x7d8294d2a042,5606270,0,0x0,6
tick,0x7d8294d2a042,5607351,0,0x0,6
tick,0x7d8294d2a042,5608427,0,0x0,6
tick,0x7d8294d2a042,5609500,0,0x0,6
tick,0x7d8294d2a042,5610578,0,0x0,6
tick,0x7d8294d2a042,5611633,0,0x0,6
tick,0x7d8294d2a042,5612709,0,0x0,6
tick,0x7d8294d2a042,5613788,0,0x0,6
tick,0x7d8294d2a042,5614869,0,0x0,6
tick,0x7d8294d2a042,5615945,0,0x0,6
tick,0x7d8294d2a042,5617018,0,0x0,6
tick,0x7d8294d2a042,5618095,0,0x0,6
tick,0x7d8294d2a042,5619175,0,0x0,6
tick,0x7d8294d2a042,5620334,0,0x0,6
tick,0x7d8294d2a042,5621407,0,0x0,6
tick,0x7d8294d2a042,5622479,0,0x0,6
tick,0x7d8294d2a042,5623535,0,0x0,6
tick,0x7d8294d2a042,5624614,0,0x0,6
tick,0x7d8294d2a042,5625694,0,0x0,6
tick,0x7d8294d2a042,5626776,0,0x0,6
tick,0x7d8294d2a042,5627851,0,0x0,6
tick,0x7d8294d2a042,5628923,0,0x0,6
tick,0x7d8294d2a042,5629997,0,0x0,6
tick,0x7d8294d2a042,5631077,0,0x0,6
tick,0x7d8294d2a042,5632151,0,0x0,6
tick,0x7d8294d2a042,5633231,0,0x0,6
tick,0x7d8294d2a042,5634318,0,0x0,6
tick,0x7d8294d2a042,5635409,0,0x0,6
tick,0x7d8294d2a042,5636484,0,0x0,6
tick,0x7d8294d2a042,5637565,0,0x0,6
tick,0x7d8294d2a042,5638647,0,0x0,6
tick,0x7d8294d2a042,5639723,0,0x0,6
tick,0x7d8294d2a042,5640795,0,0x0,6
tick,0x7d8294d2a042,5641871,0,0x0,6
tick,0x7d8294d2a042,5642944,0,0x0,6
tick,0x7d8294d2a042,5644020,0,0x0,6
tick,0x7d8294d2a042,5645094,0,0x0,6
tick,0x7d8294d2a042,5646174,0,0x0,6
tick,0x7d8294d2a042,5647251,0,0x0,6
tick,0x7d8294d2a042,5648420,0,0x0,6
tick,0x7d8294d2a042,5649490,0,0x0,6
tick,0x7d8294d2a042,5650566,0,0x0,6
tick,0x7d8294d2a042,5651620,0,0x0,6
tick,0x7d8294d2a042,5652695,0,0x0,6
tick,0x7d8294d2a042,5653767,0,0x0,6
tick,0x7d8294d2a042,5654841,0,0x0,6
tick,0x7d8294d2a042,5655921,0,0x0,6
tick,0x7d8294d2a042,5656994,0,0x0,6
tick,0x7d8294d2a042,5658073,0,0x0,6
tick,0x7d8294d2a042,5659230,0,0x0,6
tick,0x7d8294d2a042,5660409,0,0x0,6
tick,0x7d8294d2a042,5661541,0,0x0,6
tick,0x7d8294d2a042,5662637,0,0x0,6
tick,0x7d8294d2a042,5663634,0,0x0,6
tick,0x7d8294d2a042,5664773,0,0x0,6
tick,0x7d8294d2a042,5665848,0,0x0,6
tick,0x7d8294d2a042,5666849,0,0x0,6
tick,0x7d8294d2a042,5667988,0,0x0,6
tick,0x7d8294d2a042,5669082,0,0x0,6
tick,0x7d8294d2a042,5670168,0,0x0,6
tick,0x7d8294d2a042,5671227,0,0x0,6
tick,0x7d8294d2a042,5672365,0,0x0,6
tick,0x7d8294d2a042,5673450,0,0x0,6
tick,0x7d8294d2a042,5674585,0,0x0,6
tick,0x7d8294d2a042,5675586,0,0x0,6
tick,0x7d8294d2a042,5676668,0,0x0,6
tick,0x7d8294d2a042,5677820,0,0x0,6
tick,0x7d8294d2a042,5678872,0,0x0,6
tick,0x7d8294d2a042,5679929,0,0x0,6
tick,0x7d8294d2a042,5680999,0,0x0,6
tick,0x7d8294d2a042,5682074,0,0x0,6
tick,0x7d8294d2a042,5683156,0,0x0,6
tick,0x7d8294d2a042,5684238,0,0x0,6
tick,0x7d8294d2a042,5685392,0,0x0,6
tick,0x7d8294d2a042,5686462,0,0x0,6
tick,0x7d8294d2a042,5687517,0,0x0,6
tick,0x7d8294d2a042,5688573,0,0x0,6
tick,0x7d8294d2a042,5689649,0,0x0,6
tick,0x7d8294d2a042,5690723,0,0x0,6
tick,0x7d8294d2a042,5691798,0,0x0,6
tick,0x7d8294d2a042,5692871,0,0x0,6
tick,0x7d8294d2a042,5693943,0,0x0,6
tick,0x7d8294d2a042,5695015,0,0x0,6
tick,0x7d8294d2a042,5696096,0,0x0,6
tick,0x7d8294d2a042,5697168,0,0x0,6
tick,0x7d8294d2a042,5698248,0,0x0,6
tick,0x7d8294d2a042,5699330,0,0x0,6
tick,0x7d8294d2a042,5700405,0,0x0,6
tick,0x7d8294d2a042,5701476,0,0x0,6
tick,0x7d8294d2a042,5702549,0,0x0,6
tick,0x7d8294d2a042,5703603,0,0x0,6
tick,0x7d8294d2a042,5704678,0,0x0,6
tick,0x7d8294d2a042,5705758,0,0x0,6
tick,0x7d8294d2a042,5706842,0,0x0,6
tick,0x7d8294d2a042,5707916,0,0x0,6
tick,0x7d8294d2a042,5708989,0,0x0,6
tick,0x7d8294d2a042,5710068,0,0x0,6
tick,0x7d8294d2a042,5711149,0,0x0,6
tick,0x7d8294d2a042,5712225,0,0x0,6
tick,0x7d8294d2a042,5713298,0,0x0,6
tick,0x7d8294d2a042,5714372,0,0x0,6
tick,0x7d8294d2a042,5715411,0,0x0,6
tick,0x7d8294d2a042,5716486,0,0x0,6
tick,0x7d8294d2a042,5717577,0,0x0,6
tick,0x7d8294d2a042,5718651,0,0x0,6
tick,0x7d8294d2a042,5719724,0,0x0,6
tick,0x7d8294d2a042,5720796,0,0x0,6
tick,0x7d8294d2a042,5721877,0,0x0,6
tick,0x7d8294d2a042,5722958,0,0x0,6
tick,0x7d8294d2a042,5724033,0,0x0,6
tick,0x7d8294d2a042,5725106,0,0x0,6
tick,0x7d8294d2a042,5726179,0,0x0,6
tick,0x7d8294d2a042,5727254,0,0x0,6
tick,0x7d8294d2a042,5728424,0,0x0,6
tick,0x7d8294d2a042,5729492,0,0x0,6
tick,0x7d8294d2a042,5730566,0,0x0,6
tick,0x7d8294d2a042,5731620,0,0x0,6
tick,0x7d8294d2a042,5732695,0,0x0,6
tick,0x7d8294d2a042,5733767,0,0x0,6
tick,0x7d8294d2a042,5734840,0,0x0,6
tick,0x7d8294d2a042,5735919,0,0x0,6
tick,0x7d8294d2a042,5736999,0,0x0,6
tick,0x7d8294d2a042,5738073,0,0x0,6
tick,0x7d8294d2a042,5739146,0,0x0,6
tick,0x7d8294d2a042,5740220,0,0x0,6
tick,0x7d8294d2a042,5741293,0,0x0,6
tick,0x7d8294d2a042,5742368,0,0x0,6
tick,0x7d8294d2a042,5743399,0,0x0,6
tick,0x7d8294d2a042,5744474,0,0x0,6
tick,0x7d8294d2a042,5745547,0,0x0,6
tick,0x7d8294d2a042,5746619,0,0x0,6
tick,0x7d8294d2a042,5747683,0,0x0,6
tick,0x7d8294d2a042,5748754,0,0x0,6
tick,0x7d8294d2a042,5749824,0,0x0,6
tick,0x7d8294d2a042,5750899,0,0x0,6
tick,0x7d8294d2a042,5751977,0,0x0,6
tick,0x7d8294d2a042,5753056,0,0x0,6
tick,0x7d8294d2a042,5754139,0,0x0,6
tick,0x7d8294d2a042,5755220,0,0x0,6
tick,0x7d8294d2a042,5756298,0,0x0,6
tick,0x7d8294d2a042,5757378,0,0x0,6
tick,0x7d8294d2a042,5758457,0,0x0,6
tick,0x7d8294d2a042,5759512,0,0x0,6
tick,0x7d8294d2a042,5760597,0,0x0,6
tick,0x7d8294d2a042,5761675,0,0x0,6
tick,0x7d8294d2a042,5762758,0,0x0,6
tick,0x7d8294d2a042,5763833,0,0x0,6
tick,0x7d8294d2a042,5764905,0,0x0,6
tick,0x7d8294d2a042,5765980,0,0x0,6
tick,0x7d8294d2a042,5767053,0,0x0,6
tick,0x7d8294d2a042,5768131,0,0x0,6
tick,0x7d8294d2a042,5769212,0,0x0,6
tick,0x7d8294d2a042,5770294,0,0x0,6
tick,0x7d8294d2a042,5771381,0,0x0,6
tick,0x7d8294d2a042,5772471,0,0x0,6
tick,0x7d8294d2a042,5773553,0,0x0,6
tick,0x7d8294d2a042,5774634,0,0x0,6
tick,0x7d8294d2a042,5775708,0,0x0,6
tick,0x7d8294d2a042,5776781,0,0x0,6
tick,0x7d8294d2a042,5777854,0,0x0,6
tick,0x7d8294d2a042,5778935,0,0x0,6
tick,0x7d8294d2a042,5780010,0,0x0,6
tick,0x7d8294d2a042,5781089,0,0x0,6
tick,0x7d8294d2a042,5782175,0,0x0,6
tick,0x7d8294d2a042,5783255,0,0x0,6
tick,0x7d8294d2a042,5784329,0,0x0,6
tick,0x7d8294d2a042,5785423,0,0x0,6
tick,0x7d8294d2a042,5786481,0,0x0,6
tick,0x7d8294d2a042,5787539,0,0x0,6
tick,0x7d8294d2a042,5788605,0,0x0,6
tick,0x7d8294d2a042,5789668,0,0x0,6
tick,0x7d8294d2a042,5790732,0,0x0,6
tick,0x7d8294d2a042,5791796,0,0x0,6
tick,0x7d8294d2a042,5792863,0,0x0,6
tick,0x7d8294d2a042,5793926,0,0x0,6
tick,0x7d8294d2a042,5794992,0,0x0,6
tick,0x7d8294d2a042,5796058,0,0x0,6
tick,0x7d8294d2a042,5797123,0,0x0,6
tick,0x7d8294d2a042,5798188,0,0x0,6
tick,0x7d8294d2a042,5799254,0,0x0,6
tick,0x7d8294d2a042,5800316,0,0x0,6
tick,0x7d8294d2a042,5801382,0,0x0,6
tick,0x7d8294d2a042,5802447,0,0x0,6
tick,0x7d8294d2a042,5803508,0,0x0,6
tick,0x7d8294d2a042,5804575,0,0x0,6
tick,0x7d8294d2a042,5805648,0,0x0,6
tick,0x7d8294d2a042,5806711,0,0x0,6
tick,0x7d8294d2a042,5807773,0,0x0,6
tick,0x7d8294d2a042,5808845,0,0x0,6
tick,0x7d8294d2a042,5809906,0,0x0,6
tick,0x7d8294d2a042,5810980,0,0x0,6
tick,0x7d8294d2a042,5812041,0,0x0,6
tick,0x7d8294d2a042,5813108,0,0x0,6
tick,0x7d8294d2a042,5814172,0,0x0,6
tick,0x7d8294d2a042,5815241,0,0x0,6
tick,0x7d8294d2a042,5816302,0,0x0,6
tick,0x7d8294d2a042,5817388,0,0x0,6
tick,0x7d8294d2a042,5818445,0,0x0,6
tick,0x7d8294d2a042,5819482,0,0x0,6
tick,0x7d8294d2a042,5820569,0,0x0,6
tick,0x7d8294d2a042,5821629,0,0x0,6
tick,0x7d8294d2a042,5822695,0,0x0,6
tick,0x7d8294d2a042,5823731,0,0x0,6
tick,0x7d8294d2a042,5824802,0,0x0,6
tick,0x7d8294d2a042,5825864,0,0x0,6
tick,0x7d8294d2a042,5826928,0,0x0,6
tick,0x7d8294d2a042,5827991,0,0x0,6
tick,0x7d8294d2a042,5829052,0,0x0,6
tick,0x7d8294d2a042,5830112,0,0x0,6
tick,0x7d8294d2a042,5831176,0,0x0,6
tick,0x7d8294d2a042,5832240,0,0x0,6
tick,0x7d8294d2a042,5833301,0,0x0,6
tick,0x7d8294d2a042,5834365,0,0x0,6
tick,0x7d8294d2a042,5835404,0,0x0,6
tick,0x7d8294d2a042,5836465,0,0x0,6
tick,0x7d8294d2a042,5837530,0,0x0,6
tick,0x7d8294d2a042,5838600,0,0x0,6
tick,0x7d8294d2a042,5839660,0,0x0,6
tick,0x7d8294d2a042,5840726,0,0x0,6
tick,0x7d8294d2a042,5841786,0,0x0,6
tick,0x7d8294d2a042,5842853,0,0x0,6
tick,0x7d8294d2a042,5843919,0,0x0,6
tick,0x7d8294d2a042,5844979,0,0x0,6
tick,0x7d8294d2a042,5846176,0,0x0,6
tick,0x7d8294d2a042,5847246,0,0x0,6
tick,0x7d8294d2a042,5848308,0,0x0,6
tick,0x7d8294d2a042,5849373,0,0x0,6
tick,0x7d8294d2a042,5850438,0,0x0,6
tick,0x7d8294d2a042,5851500,0,0x0,6
tick,0x7d8294d2a042,5852565,0,0x0,6
tick,0x7d8294d2a042,5853631,0,0x0,6
tick,0x7d8294d2a042,5854696,0,0x0,6
tick,0x7d8294d2a042,5855762,0,0x0,6
tick,0x7d8294d2a042,5856828,0,0x0,6
tick,0x7d8294d2a042,5857892,0,0x0,6
tick,0x7d8294d2a042,5858961,0,0x0,6
tick,0x7d8294d2a042,5860024,0,0x0,6
tick,0x7d8294d2a042,5861091,0,0x0,6
tick,0x7d8294d2a042,5862156,0,0x0,6
tick,0x7d8294d2a042,5863222,0,0x0,6
tick,0x7d8294d2a042,5864289,0,0x0,6
tick,0x7d8294d2a042,5865365,0,0x0,6
tick,0x7d8294d2a042,5866428,0,0x0,6
tick,0x7d8294d2a042,5867491,0,0x0,6
tick,0x7d8294d2a042,5868553,0,0x0,6
tick,0x7d8294d2a042,5869619,0,0x0,6
tick,0x7d8294d2a042,5870684,0,0x0,6
tick,0x7d8294d2a042,5871745,0,0x0,6
tick,0x7d8294d2a042,5872811,0,0x0,6
tick,0x7d8294d2a042,5873877,0,0x0,6
tick,0x7d8294d2a042,5874938,0,0x0,6
tick,0x7d8294d2a042,5876003,0,0x0,6
tick,0x7d8294d2a042,5877070,0,0x0,6
tick,0x7d8294d2a042,5878133,0,0x0,6
tick,0x7d8294d2a042,5879200,0,0x0,6
tick,0x7d8294d2a042,5880264,0,0x0,6
tick,0x7d8294d2a042,5881333,0,0x0,6
tick,0x7d8294d2a042,5882397,0,0x0,6
tick,0x7d8294d2a042,5883459,0,0x0,6
tick,0x7d8294d2a042,5884521,0,0x0,6
tick,0x7d8294d2a042,5885588,0,0x0,6
tick,0x7d8294d2a042,5886651,0,0x0,6
tick,0x7d8294d2a042,5887713,0,0x0,6
tick,0x7d8294d2a042,5888783,0,0x0,6
tick,0x7d8294d2a042,5889848,0,0x0,6
tick,0x7d8294d2a042,5890914,0,0x0,6
tick,0x7d8294d2a042,5891986,0,0x0,6
tick,0x7d8294d2a042,5893048,0,0x0,6
tick,0x7d8294d2a042,5894113,0,0x0,6
tick,0x7d8294d2a042,5895182,0,0x0,6
tick,0x7d8294d2a042,5896250,0,0x0,6
tick,0x7d8294d2a042,5897322,0,0x0,6
tick,0x7d8294d2a042,5898394,0,0x0,6
tick,0x7d8294d2a042,5899460,0,0x0,6
tick,0x7d8294d2a042,5900527,0,0x0,6
tick,0x7d8294d2a042,5901591,0,0x0,6
tick,0x7d8294d2a042,5902666,0,0x0,6
tick,0x7d8294d2a042,5903731,0,0x0,6
tick,0x7d8294d2a042,5904796,0,0x0,6
tick,0x7d8294d2a042,5905862,0,0x0,6
tick,0x7d8294d2a042,5906927,0,0x0,6
tick,0x7d8294d2a042,5907993,0,0x0,6
tick,0x7d8294d2a042,5909063,0,0x0,6
tick,0x7d8294d2a042,5910132,0,0x0,6
tick,0x7d8294d2a042,5911199,0,0x0,6
tick,0x7d8294d2a042,5912261,0,0x0,6
tick,0x7d8294d2a042,5913326,0,0x0,6
tick,0x7d8294d2a042,5914392,0,0x0,6
tick,0x7d8294d2a042,5915455,0,0x0,6
tick,0x7d8294d2a042,5916520,0,0x0,6
tick,0x7d8294d2a042,5917582,0,0x0,6
tick,0x7d8294d2a042,5918646,0,0x0,6
tick,0x7d8294d2a042,5919710,0,0x0,6
tick,0x7d8294d2a042,5920777,0,0x0,6
tick,0x7d8294d2a042,5921842,0,0x0,6
tick,0x7d8294d2a042,5922905,0,0x0,6
tick,0x7d8294d2a042,5923971,0,0x0,6
tick,0x7d8294d2a042,5925035,0,0x0,6
tick,0x7d8294d2a042,5926099,0,0x0,6
tick,0x7d8294d2a042,5927170,0,0x0,6
tick,0x7d8294d2a042,5928236,0,0x0,6
tick,0x7d8294d2a042,5929299,0,0x0,6
tick,0x7d8294d2a042,5930364,0,0x0,6
tick,0x7d8294d2a042,5931418,0,0x0,6
tick,0x7d8294d2a042,5932482,0,0x0,6
tick,0x7d8294d2a042,5933545,0,0x0,6
tick,0x7d8294d2a042,5934612,0,0x0,6
tick,0x7d8294d2a042,5935675,0,0x0,6
tick,0x7d8294d2a042,5936738,0,0x0,6
tick,0x7d8294d2a042,5937805,0,0x0,6
tick,0x7d8294d2a042,5938870,0,0x0,6
tick,0x7d8294d2a042,5939935,0,0x0,6
tick,0x7d8294d2a042,5941004,0,0x0,6
tick,0x7d8294d2a042,5942070,0,0x0,6
tick,0x7d8294d2a042,5943136,0,0x0,6
tick,0x7d8294d2a042,5944201,0,0x0,6
tick,0x7d8294d2a042,5945266,0,0x0,6
tick,0x7d8294d2a042,5946332,0,0x0,6
tick,0x7d8294d2a042,5947397,0,0x0,6
tick,0x7d8294d2a042,5948463,0,0x0,6
tick,0x7d8294d2a042,5949529,0,0x0,6
tick,0x7d8294d2a042,5950594,0,0x0,6
tick,0x7d8294d2a042,5951657,0,0x0,6
tick,0x7d8294d2a042,5952721,0,0x0,6
tick,0x7d8294d2a042,5953786,0,0x0,6
tick,0x7d8294d2a042,5954852,0,0x0,6
tick,0x7d8294d2a042,5955916,0,0x0,6
tick,0x7d8294d2a042,5956979,0,0x0,6
tick,0x7d8294d2a042,5958043,0,0x0,6
tick,0x7d8294d2a042,5959106,0,0x0,6
tick,0x7d8294d2a042,5960172,0,0x0,6
tick,0x7d8294d2a042,5961235,0,0x0,6
tick,0x7d8294d2a042,5962298,0,0x0,6
tick,0x7d8294d2a042,5963373,0,0x0,6
tick,0x7d8294d2a042,5964428,0,0x0,6
tick,0x7d8294d2a042,5965491,0,0x0,6
tick,0x7d8294d2a042,5966557,0,0x0,6
tick,0x7d8294d2a042,5967620,0,0x0,6
tick,0x7d8294d2a042,5968689,0,0x0,6
tick,0x7d8294d2a042,5969749,0,0x0,6
tick,0x7d8294d2a042,5970813,0,0x0,6
tick,0x7d8294d2a042,5971877,0,0x0,6
tick,0x7d8294d2a042,5972941,0,0x0,6
tick,0x7d8294d2a042,5974004,0,0x0,6
tick,0x7d8294d2a042,5975071,0,0x0,6
tick,0x7d8294d2a042,5976133,0,0x0,6
tick,0x7d8294d2a042,5977200,0,0x0,6
tick,0x7d8294d2a042,5978264,0,0x0,6
tick,0x7d8294d2a042,5979327,0,0x0,6
tick,0x7d8294d2a042,5980391,0,0x0,6
tick,0x7d8294d2a042,5981456,0,0x0,6
tick,0x7d8294d2a042,5982521,0,0x0,6
tick,0x7d8294d2a042,5983583,0,0x0,6
tick,0x7d8294d2a042,5984646,0,0x0,6
tick,0x7d8294d2a042,5985710,0,0x0,6
tick,0x7d8294d2a042,5986773,0,0x0,6
tick,0x7d8294d2a042,5987837,0,0x0,6
tick,0x7d8294d2a042,5988901,0,0x0,6
tick,0x7d8294d2a042,5989966,0,0x0,6
tick,0x7d8294d2a042,5991033,0,0x0,6
tick,0x7d8294d2a042,5992096,0,0x0,6
tick,0x7d8294d2a042,5993161,0,0x0,6
tick,0x7d8294d2a042,5994223,0,0x0,6
tick,0x7d8294d2a042,5995290,0,0x0,6
tick,0x7d8294d2a042,5996353,0,0x0,6
tick,0x7d8294d2a042,5997419,0,0x0,6
tick,0x7d8294d2a042,5998486,0,0x0,6
tick,0x7d8294d2a042,5999555,0,0x0,6
tick,0x7d8294d2a042,6000615,0,0x0,6
tick,0x7d8294d2a042,6001680,0,0x0,6
tick,0x7d8294d2a042,6002758,0,0x0,6
tick,0x7d8294d2a042,6004099,0,0x0,6
tick,0x7d8294d2a042,6005151,0,0x0,6
tick,0x7d8294d2a042,6006212,0,0x0,6
tick,0x7d8294d2a042,6007278,0,0x0,6
tick,0x7d8294d2a042,6008347,0,0x0,6
tick,0x7d8294d2a042,6009413,0,0x0,6
tick,0x7d8294d2a042,6010484,0,0x0,6
tick,0x7d8294d2a042,6011546,0,0x0,6
tick,0x7d8294d2a042,6012614,0,0x0,6
tick,0x7d8294d2a042,6013678,0,0x0,6
tick,0x7d8294d2a042,6014746,0,0x0,6
tick,0x7d8294d2a042,6015813,0,0x0,6
tick,0x7d8294d2a042,6016897,0,0x0,6
tick,0x7d8294d2a042,6017990,0,0x0,6
tick,0x7d8294d2a042,6019060,0,0x0,6
tick,0x7d8294d2a042,6020120,0,0x0,6
tick,0x7d8294d2a042,6021181,0,0x0,6
tick,0x7d8294d2a042,6022245,0,0x0,6
tick,0x7d8294d2a042,6023310,0,0x0,6
tick,0x7d8294d2a042,6024381,0,0x0,6
tick,0x7d8294d2a042,6025449,0,0x0,6
tick,0x7d8294d2a042,6026515,0,0x0,6
tick,0x7d8294d2a042,6027580,0,0x0,6
tick,0x7d8294d2a042,6028645,0,0x0,6
tick,0x7d8294d2a042,6029717,0,0x0,6
tick,0x7d8294d2a042,6030780,0,0x0,6
tick,0x7d8294d2a042,6031851,0,0x0,6
tick,0x7d8294d2a042,6032917,0,0x0,6
tick,0x7d8294d2a042,6033987,0,0x0,6
tick,0x7d8294d2a042,6035058,0,0x0,6
tick,0x7d8294d2a042,6036123,0,0x0,6
tick,0x7d8294d2a042,6037194,0,0x0,6
tick,0x7d8294d2a042,6038262,0,0x0,6
tick,0x7d8294d2a042,6039329,0,0x0,6
tick,0x7d8294d2a042,6040393,0,0x0,6
tick,0x7d8294d2a042,6041468,0,0x0,6
tick,0x7d8294d2a042,6042535,0,0x0,6
tick,0x7d8294d2a042,6043601,0,0x0,6
tick,0x7d8294d2a042,6044671,0,0x0,6
tick,0x7d8294d2a042,6045744,0,0x0,6
tick,0x7d8294d2a042,6046809,0,0x0,6
tick,0x7d8294d2a042,6047877,0,0x0,6
tick,0x7d8294d2a042,6048947,0,0x0,6
tick,0x7d8294d2a042,6050016,0,0x0,6
tick,0x7d8294d2a042,6051088,0,0x0,6
tick,0x7d8294d2a042,6052175,0,0x0,6
tick,0x7d8294d2a042,6053238,0,0x0,6
tick,0x7d8294d2a042,6054303,0,0x0,6
tick,0x7d8294d2a042,6055375,0,0x0,6
tick,0x7d8294d2a042,6056432,0,0x0,6
tick,0x7d8294d2a042,6057499,0,0x0,6
tick,0x7d8294d2a042,6058565,0,0x0,6
tick,0x7d8294d2a042,6059629,0,0x0,6
tick,0x7d8294d2a042,6060698,0,0x0,6
tick,0x7d8294d2a042,6061766,0,0x0,6
tick,0x7d8294d2a042,6062833,0,0x0,6
tick,0x7d8294d2a042,6063892,0,0x0,6
tick,0x7d8294d2a042,6064964,0,0x0,6
tick,0x7d8294d2a042,6066034,0,0x0,6
tick,0x7d8294d2a042,6067104,0,0x0,6
tick,0x7d8294d2a042,6068165,0,0x0,6
tick,0x7d8294d2a042,6069226,0,0x0,6
tick,0x7d8294d2a042,6070289,0,0x0,6
tick,0x7d8294d2a042,6071353,0,0x0,6
tick,0x7d8294d2a042,6072419,0,0x0,6
tick,0x7d8294d2a042,6073488,0,0x0,6
tick,0x7d8294d2a042,6074552,0,0x0,6
tick,0x7d8294d2a042,6075618,0,0x0,6
tick,0x7d8294d2a042,6076687,0,0x0,6
tick,0x7d8294d2a042,6077748,0,0x0,6
tick,0x7d8294d2a042,6078813,0,0x0,6
tick,0x7d8294d2a042,6079876,0,0x0,6
tick,0x7d8294d2a042,6080943,0,0x0,6
tick,0x7d8294d2a042,6082008,0,0x0,6
tick,0x7d8294d2a042,6083073,0,0x0,6
tick,0x7d8294d2a042,6084138,0,0x0,6
tick,0x7d8294d2a042,6085203,0,0x0,6
tick,0x7d8294d2a042,6086267,0,0x0,6
tick,0x7d8294d2a042,6087334,0,0x0,6
tick,0x7d8294d2a042,6088399,0,0x0,6
tick,0x7d8294d2a042,6089463,0,0x0,6
tick,0x7d8294d2a042,6090529,0,0x0,6
tick,0x7d8294d2a042,6091591,0,0x0,6
tick,0x7d8294d2a042,6092657,0,0x0,6
tick,0x7d8294d2a042,6093722,0,0x0,6
tick,0x7d8294d2a042,6094788,0,0x0,6
tick,0x7d8294d2a042,6095859,0,0x0,6
tick,0x7d8294d2a042,6096927,0,0x0,6
tick,0x7d8294d2a042,6097999,0,0x0,6
tick,0x7d8294d2a042,6099058,0,0x0,6
tick,0x7d8294d2a042,6100133,0,0x0,6
tick,0x7d8294d2a042,6101209,0,0x0,6
tick,0x7d8294d2a042,6102281,0,0x0,6
tick,0x7d8294d2a042,6103347,0,0x0,6
tick,0x7d8294d2a042,6104411,0,0x0,6
tick,0x7d8294d2a042,6105476,0,0x0,6
tick,0x7d8294d2a042,6106542,0,0x0,6
tick,0x7d8294d2a042,6107603,0,0x0,6
tick,0x7d8294d2a042,6108670,0,0x0,6
tick,0x7d8294d2a042,6109737,0,0x0,6
tick,0x7d8294d2a042,6110803,0,0x0,6
tick,0x7d8294d2a042,6111867,0,0x0,6
tick,0x7d8294d2a042,6112934,0,0x0,6
tick,0x7d8294d2a042,6114001,0,0x0,6
tick,0x7d8294d2a042,6115073,0,0x0,6
tick,0x7d8294d2a042,6116138,0,0x0,6
tick,0x7d8294d2a042,6117205,0,0x0,6
tick,0x7d8294d2a042,6118269,0,0x0,6
tick,0x7d8294d2a042,6119334,0,0x0,6
tick,0x7d8294d2a042,6120398,0,0x0,6
tick,0x7d8294d2a042,6121463,0,0x0,6
tick,0x7d8294d2a042,6122527,0,0x0,6
tick,0x7d8294d2a042,6123590,0,0x0,6
tick,0x7d8294d2a042,6124656,0,0x0,6
tick,0x7d8294d2a042,6125722,0,0x0,6
tick,0x7d8294d2a042,6126785,0,0x0,6
tick,0x7d8294d2a042,6127849,0,0x0,6
tick,0x7d8294d2a042,6128925,0,0x0,6
tick,0x7d8294d2a042,6129994,0,0x0,6
tick,0x7d8294d2a042,6131060,0,0x0,6
tick,0x7d8294d2a042,6132124,0,0x0,6
tick,0x7d8294d2a042,6133187,0,0x0,6
tick,0x7d8294d2a042,6134252,0,0x0,6
tick,0x7d8294d2a042,6135316,0,0x0,6
tick,0x7d8294d2a042,6136385,0,0x0,6
tick,0x7d8294d2a042,6137449,0,0x0,6
tick,0x7d8294d2a042,6138515,0,0x0,6
tick,0x7d8294d2a042,6139578,0,0x0,6
tick,0x7d8294d2a042,6140643,0,0x0,6
tick,0x7d8294d2a042,6141708,0,0x0,6
tick,0x7d8294d2a042,6142773,0,0x0,6
tick,0x7d8294d2a042,6143837,0,0x0,6
tick,0x7d8294d2a042,6144902,0,0x0,6
tick,0x7d8294d2a042,6145969,0,0x0,6
tick,0x7d8294d2a042,6147033,0,0x0,6
tick,0x7d8294d2a042,6148099,0,0x0,6
tick,0x7d8294d2a042,6149163,0,0x0,6
tick,0x7d8294d2a042,6150230,0,0x0,6
tick,0x7d8294d2a042,6151296,0,0x0,6
tick,0x7d8294d2a042,6152363,0,0x0,6
tick,0x7d8294d2a042,6153426,0,0x0,6
tick,0x7d8294d2a042,6154492,0,0x0,6
tick,0x7d8294d2a042,6155561,0,0x0,6
tick,0x7d8294d2a042,6156628,0,0x0,6
tick,0x7d8294d2a042,6157695,0,0x0,6
tick,0x7d8294d2a042,6158761,0,0x0,6
tick,0x7d8294d2a042,6159824,0,0x0,6
tick,0x7d8294d2a042,6160888,0,0x0,6
tick,0x7d8294d2a042,6161954,0,0x0,6
tick,0x7d8294d2a042,6163018,0,0x0,6
tick,0x7d8294d2a042,6164080,0,0x0,6
tick,0x7d8294d2a042,6165141,0,0x0,6
tick,0x7d8294d2a042,6166201,0,0x0,6
tick,0x7d8294d2a042,6167266,0,0x0,6
tick,0x7d8294d2a042,6168330,0,0x0,6
tick,0x7d8294d2a042,6169390,0,0x0,6
tick,0x7d8294d2a042,6170459,0,0x0,6
tick,0x7d8294d2a042,6171519,0,0x0,6
tick,0x7d8294d2a042,6172583,0,0x0,6
tick,0x7d8294d2a042,6173646,0,0x0,6
tick,0x7d8294d2a042,6174708,0,0x0,6
tick,0x7d8294d2a042,6175772,0,0x0,6
tick,0x7d8294d2a042,6176838,0,0x0,6
tick,0x7d8294d2a042,6177909,0,0x0,6
tick,0x7d8294d2a042,6178971,0,0x0,6
tick,0x7d8294d2a042,6180036,0,0x0,6
tick,0x7d8294d2a042,6181103,0,0x0,6
tick,0x7d8294d2a042,6182169,0,0x0,6
tick,0x7d8294d2a042,6183233,0,0x0,6
tick,0x7d8294d2a042,6184301,0,0x0,6
tick,0x7d8294d2a042,6185369,0,0x0,6
tick,0x7d8294d2a042,6186434,0,0x0,6
tick,0x7d8294d2a042,6187496,0,0x0,6
tick,0x7d8294d2a042,6188559,0,0x0,6
tick,0x7d8294d2a042,6189625,0,0x0,6
tick,0x7d8294d2a042,6190688,0,0x0,6
tick,0x7d8294d2a042,6191751,0,0x0,6
tick,0x7d8294d2a042,6192814,0,0x0,6
tick,0x7d8294d2a042,6193882,0,0x0,6
tick,0x7d8294d2a042,6194949,0,0x0,6
tick,0x7d8294d2a042,6196013,0,0x0,6
tick,0x7d8294d2a042,6197074,0,0x0,6
tick,0x7d8294d2a042,6198145,0,0x0,6
tick,0x7d8294d2a042,6199215,0,0x0,6
tick,0x7d8294d2a042,6200277,0,0x0,6
tick,0x7d8294d2a042,6201343,0,0x0,6
tick,0x7d8294d2a042,6202407,0,0x0,6
tick,0x7d8294d2a042,6203472,0,0x0,6
tick,0x7d8294d2a042,6204533,0,0x0,6
tick,0x7d8294d2a042,6205597,0,0x0,6
tick,0x7d8294d2a042,6206661,0,0x0,6
tick,0x7d8294d2a042,6207724,0,0x0,6
tick,0x7d8294d2a042,6208792,0,0x0,6
tick,0x7d8294d2a042,6209854,0,0x0,6
tick,0x7d8294d2a042,6210917,0,0x0,6
tick,0x7d8294d2a042,6211988,0,0x0,6
tick,0x7d8294d2a042,6213053,0,0x0,6
tick,0x7d8294d2a042,6214116,0,0x0,6
tick,0x7d8294d2a042,6215184,0,0x0,6
tick,0x7d8294d2a042,6216250,0,0x0,6
tick,0x7d8294d2a042,6217319,0,0x0,6
tick,0x7d8294d2a042,6218384,0,0x0,6
tick,0x7d8294d2a042,6219452,0,0x0,6
tick,0x7d8294d2a042,6220521,0,0x0,6
tick,0x7d8294d2a042,6221596,0,0x0,6
tick,0x7d8294d2a042,6222665,0,0x0,6
tick,0x7d8294d2a042,6223730,0,0x0,6
tick,0x7d8294d2a042,6224792,0,0x0,6
tick,0x7d8294d2a042,6225857,0,0x0,6
tick,0x7d8294d2a042,6226923,0,0x0,6
tick,0x7d8294d2a042,6227985,0,0x0,6
tick,0x7d8294d2a042,6229042,0,0x0,6
tick,0x7d8294d2a042,6230104,0,0x0,6
tick,0x7d8294d2a042,6231171,0,0x0,6
tick,0x7d8294d2a042,6232231,0,0x0,6
tick,0x7d8294d2a042,6233294,0,0x0,6
tick,0x7d8294d2a042,6234359,0,0x0,6
tick,0x7d8294d2a042,6235405,0,0x0,6
tick,0x7d8294d2a042,6236472,0,0x0,6
tick,0x7d8294d2a042,6237540,0,0x0,6
tick,0x7d8294d2a042,6238609,0,0x0,6
tick,0x7d8294d2a042,6239673,0,0x0,6
tick,0x7d8294d2a042,6240745,0,0x0,6
tick,0x7d8294d2a042,6241811,0,0x0,6
tick,0x7d8294d2a042,6242878,0,0x0,6
tick,0x7d8294d2a042,6243943,0,0x0,6
tick,0x7d8294d2a042,6245011,0,0x0,6
tick,0x7d8294d2a042,6246076,0,0x0,6
tick,0x7d8294d2a042,6247153,0,0x0,6
tick,0x7d8294d2a042,6248215,0,0x0,6
tick,0x7d8294d2a042,6249279,0,0x0,6
tick,0x7d8294d2a042,6250343,0,0x0,6
tick,0x7d8294d2a042,6251399,0,0x0,6
tick,0x7d8294d2a042,6252465,0,0x0,6
tick,0x7d8294d2a042,6253532,0,0x0,6
tick,0x7d8294d2a042,6254599,0,0x0,6
tick,0x7d8294d2a042,6255671,0,0x0,6
tick,0x7d8294d2a042,6256741,0,0x0,6
tick,0x7d8294d2a042,6257817,0,0x0,6
tick,0x7d8294d2a042,6258897,0,0x0,6
tick,0x7d8294d2a042,6259956,0,0x0,6
tick,0x7d8294d2a042,6261020,0,0x0,6
tick,0x7d8294d2a042,6262081,0,0x0,6
tick,0x7d8294d2a042,6263149,0,0x0,6
tick,0x7d8294d2a042,6264210,0,0x0,6
tick,0x7d8294d2a042,6265278,0,0x0,6
tick,0x7d8294d2a042,6266339,0,0x0,6
tick,0x7d8294d2a042,6267397,0,0x0,6
tick,0x7d8294d2a042,6268466,0,0x0,6
tick,0x7d8294d2a042,6269532,0,0x0,6
tick,0x7d8294d2a042,6270599,0,0x0,6
tick,0x7d8294d2a042,6271662,0,0x0,6
tick,0x7d8294d2a042,6272732,0,0x0,6
tick,0x7d8294d2a042,6273793,0,0x0,6
tick,0x7d8294d2a042,6274852,0,0x0,6
tick,0x7d8294d2a042,6275917,0,0x0,6
tick,0x7d8294d2a042,6276990,0,0x0,6
tick,0x7d8294d2a042,6278054,0,0x0,6
tick,0x7d8294d2a042,6279125,0,0x0,6
tick,0x7d8294d2a042,6280186,0,0x0,6
tick,0x7d8294d2a042,6281254,0,0x0,6
tick,0x7d8294d2a042,6282316,0,0x0,6
tick,0x7d8294d2a042,6283388,0,0x0,6
tick,0x7d8294d2a042,6284453,0,0x0,6
tick,0x7d8294d2a042,6285515,0,0x0,6
tick,0x7d8294d2a042,6286580,0,0x0,6
tick,0x7d8294d2a042,6287648,0,0x0,6
tick,0x7d8294d2a042,6288711,0,0x0,6
tick,0x7d8294d2a042,6289774,0,0x0,6
tick,0x7d8294d2a042,6290833,0,0x0,6
tick,0x7d8294d2a042,6291898,0,0x0,6
tick,0x7d8294d2a042,6292962,0,0x0,6
tick,0x7d8294d2a042,6294024,0,0x0,6
tick,0x7d8294d2a042,6295085,0,0x0,6
tick,0x7d8294d2a042,6296151,0,0x0,6
tick,0x7d8294d2a042,6297216,0,0x0,6
tick,0x7d8294d2a042,6298276,0,0x0,6
tick,0x7d8294d2a042,6299349,0,0x0,6
tick,0x7d8294d2a042,6300411,0,0x0,6
tick,0x7d8294d2a042,6301479,0,0x0,6
tick,0x7d8294d2a042,6302554,0,0x0,6
tick,0x7d8294d2a042,6303617,0,0x0,6
tick,0x7d8294d2a042,6304675,0,0x0,6
tick,0x7d8294d2a042,6305743,0,0x0,6
tick,0x7d8294d2a042,6306811,0,0x0,6
tick,0x7d8294d2a042,6307873,0,0x0,6
tick,0x7d8294d2a042,6308942,0,0x0,6
tick,0x7d8294d2a042,6310007,0,0x0,6
tick,0x7d8294d2a042,6311077,0,0x0,6
tick,0x7d8294d2a042,6312141,0,0x0,6
tick,0x7d8294d2a042,6313212,0,0x0,6
tick,0x7d8294d2a042,6314281,0,0x0,6
tick,0x7d8294d2a042,6315346,0,0x0,6
tick,0x7d8294d2a042,6316408,0,0x0,6
tick,0x7d8294d2a042,6317478,0,0x0,6
tick,0x7d8294d2a042,6318547,0,0x0,6
tick,0x7d8294d2a042,6319603,0,0x0,6
tick,0x7d8294d2a042,6320680,0,0x0,6
tick,0x7d8294d2a042,6321754,0,0x0,6
tick,0x7d8294d2a042,6322826,0,0x0,6
tick,0x7d8294d2a042,6323901,0,0x0,6
tick,0x7d8294d2a042,6324963,0,0x0,6
tick,0x7d8294d2a042,6326029,0,0x0,6
tick,0x7d8294d2a042,6327092,0,0x0,6
tick,0x7d8294d2a042,6328159,0,0x0,6
tick,0x7d8294d2a042,6329224,0,0x0,6
tick,0x7d8294d2a042,6330287,0,0x0,6
tick,0x7d8294d2a042,6331352,0,0x0,6
tick,0x7d8294d2a042,6332416,0,0x0,6
tick,0x7d8294d2a042,6333480,0,0x0,6
tick,0x7d8294d2a042,6334547,0,0x0,6
tick,0x7d8294d2a042,6335608,0,0x0,6
tick,0x7d8294d2a042,6336677,0,0x0,6
tick,0x7d8294d2a042,6337746,0,0x0,6
tick,0x7d8294d2a042,6338814,0,0x0,6
tick,0x7d8294d2a042,6339877,0,0x0,6
tick,0x7d8294d2a042,6340947,0,0x0,6
tick,0x7d8294d2a042,6342017,0,0x0,6
tick,0x7d8294d2a042,6343089,0,0x0,6
tick,0x7d8294d2a042,6344153,0,0x0,6
tick,0x7d8294d2a042,6345222,0,0x0,6
tick,0x7d8294d2a042,6346287,0,0x0,6
tick,0x7d8294d2a042,6347356,0,0x0,6
tick,0x7d8294d2a042,6348427,0,0x0,6
tick,0x7d8294d2a042,6349493,0,0x0,6
tick,0x7d8294d2a042,6350556,0,0x0,6
tick,0x7d8294d2a042,6351620,0,0x0,6
tick,0x7d8294d2a042,6352687,0,0x0,6
tick,0x7d8294d2a042,6353750,0,0x0,6
tick,0x7d8294d2a042,6354821,0,0x0,6
tick,0x7d8294d2a042,6355884,0,0x0,6
tick,0x7d8294d2a042,6356944,0,0x0,6
tick,0x7d8294d2a042,6358014,0,0x0,6
tick,0x7d8294d2a042,6359080,0,0x0,6
tick,0x7d8294d2a042,6360160,0,0x0,6
tick,0x7d8294d2a042,6361224,0,0x0,6
tick,0x7d8294d2a042,6362292,0,0x0,6
tick,0x7d8294d2a042,6363357,0,0x0,6
tick,0x7d8294d2a042,6364429,0,0x0,6
tick,0x7d8294d2a042,6365510,0,0x0,6
tick,0x7d8294d2a042,6366570,0,0x0,6
tick,0x7d8294d2a042,6367631,0,0x0,6
tick,0x7d8294d2a042,6368709,0,0x0,6
tick,0x7d8294d2a042,6369774,0,0x0,6
tick,0x7d8294d2a042,6370838,0,0x0,6
tick,0x7d8294d2a042,6371902,0,0x0,6
tick,0x7d8294d2a042,6372968,0,0x0,6
tick,0x7d8294d2a042,6374044,0,0x0,6
tick,0x7d8294d2a042,6375114,0,0x0,6
tick,0x7d8294d2a042,6376177,0,0x0,6
tick,0x7d8294d2a042,6377244,0,0x0,6
tick,0x7d8294d2a042,6378308,0,0x0,6
tick,0x7d8294d2a042,6379427,0,0x0,6
tick,0x7d8294d2a042,6380439,0,0x0,6
tick,0x7d8294d2a042,6381504,0,0x0,6
tick,0x7d8294d2a042,6382567,0,0x0,6
tick,0x7d8294d2a042,6383634,0,0x0,6
tick,0x7d8294d2a042,6384693,0,0x0,6
tick,0x7d8294d2a042,6385765,0,0x0,6
tick,0x7d8294d2a042,6386829,0,0x0,6
tick,0x7d8294d2a042,6387920,0,0x0,6
tick,0x7d8294d2a042,6388975,0,0x0,6
tick,0x7d8294d2a042,6390067,0,0x0,6
tick,0x7d8294d2a042,6391126,0,0x0,6
tick,0x7d8294d2a042,6392215,0,0x0,6
tick,0x7d8294d2a042,6393254,0,0x0,6
tick,0x7d8294d2a042,6394321,0,0x0,6
tick,0x7d8294d2a042,6395388,0,0x0,6
tick,0x7d8294d2a042,6396462,0,0x0,6
tick,0x7d8294d2a042,6397531,0,0x0,6
tick,0x7d8294d2a042,6398602,0,0x0,6
tick,0x7d8294d2a042,6399662,0,0x0,6
tick,0x7d8294d2a042,6400733,0,0x0,6
tick,0x7d8294d2a042,6401816,0,0x0,6
tick,0x7d8294d2a042,6402882,0,0x0,6
tick,0x7d8294d2a042,6403942,0,0x0,6
tick,0x7d8294d2a042,6405016,0,0x0,6
tick,0x7d8294d2a042,6406090,0,0x0,6
tick,0x7d8294d2a042,6407158,0,0x0,6
tick,0x7d8294d2a042,6408260,0,0x0,6
tick,0x7d8294d2a042,6409330,0,0x0,6
tick,0x7d8294d2a042,6410730,0,0x0,6
tick,0x7d8294d2a042,6411792,0,0x0,6
tick,0x7d8294d2a042,6412862,0,0x0,6
tick,0x7d8294d2a042,6413948,0,0x0,6
tick,0x7d8294d2a042,6415080,0,0x0,6
tick,0x7d8294d2a042,6419677,0,0x0,6
tick,0x7d8294d2a042,6420726,0,0x0,6
tick,0x7d8294d2a042,6421844,0,0x0,6
tick,0x7d8294d2a042,6422887,0,0x0,6
tick,0x7d8294d2a042,6423956,0,0x0,6
tick,0x7d8294d2a042,6425028,0,0x0,6
tick,0x7d8294d2a042,6426090,0,0x0,6
tick,0x7d8294d2a042,6427151,0,0x0,6
tick,0x7d8294d2a042,6428213,0,0x0,6
tick,0x7d8294d2a042,6429281,0,0x0,6
tick,0x7d8294d2a042,6430340,0,0x0,6
tick,0x7d8294d2a042,6431419,0,0x0,6
tick,0x7d8294d2a042,6432498,0,0x0,6
tick,0x7d8294d2a042,6433559,0,0x0,6
tick,0x7d8294d2a042,6434624,0,0x0,6
tick,0x7d8294d2a042,6435688,0,0x0,6
tick,0x7d8294d2a042,6436761,0,0x0,6
tick,0x7d8294d2a042,6437926,0,0x0,6
tick,0x7d8294d2a042,6438998,0,0x0,6
tick,0x7d8294d2a042,6440056,0,0x0,6
tick,0x7d8294d2a042,6441113,0,0x0,6
tick,0x7d8294d2a042,6442161,0,0x0,6
tick,0x7d8294d2a042,6443234,0,0x0,6
tick,0x7d8294d2a042,6444315,0,0x0,6
tick,0x7d8294d2a042,6445389,0,0x0,6
tick,0x7d8294d2a042,6446461,0,0x0,6
tick,0x7d8294d2a042,6447519,0,0x0,6
tick,0x7d8294d2a042,6448573,0,0x0,6
tick,0x7d8294d2a042,6449645,0,0x0,6
tick,0x7d8294d2a042,6450719,0,0x0,6
tick,0x7d8294d2a042,6451792,0,0x0,6
tick,0x7d8294d2a042,6452866,0,0x0,6
tick,0x7d8294d2a042,6453938,0,0x0,6
tick,0x7d8294d2a042,6455021,0,0x0,6
tick,0x7d8294d2a042,6456100,0,0x0,6
tick,0x7d8294d2a042,6457173,0,0x0,6
tick,0x7d8294d2a042,6458246,0,0x0,6
tick,0x7d8294d2a042,6459321,0,0x0,6
tick,0x7d8294d2a042,6460397,0,0x0,6
tick,0x7d8294d2a042,6461496,0,0x0,6
tick,0x7d8294d2a042,6462551,0,0x0,6
tick,0x7d8294d2a042,6463609,0,0x0,6
tick,0x7d8294d2a042,6464672,0,0x0,6
tick,0x7d8294d2a042,6465736,0,0x0,6
tick,0x7d8294d2a042,6466795,0,0x0,6
tick,0x7d8294d2a042,6467855,0,0x0,6
tick,0x7d8294d2a042,6469014,0,0x0,6
tick,0x7d8294d2a042,6469997,0,0x0,6
tick,0x7d8294d2a042,6471067,0,0x0,6
tick,0x7d8294d2a042,6472201,0,0x0,6
tick,0x7d8294d2a042,6473271,0,0x0,6
tick,0x7d8294d2a042,6474256,0,0x0,6
tick,0x7d8294d2a042,6475297,0,0x0,6
tick,0x7d8294d2a042,6476363,0,0x0,6
tick,0x7d8294d2a042,6477424,0,0x0,6
tick,0x7d8294d2a042,6478505,0,0x0,6
tick,0x7d8294d2a042,6479598,0,0x0,6
tick,0x7d8294d2a042,6480708,0,0x0,6
tick,0x7d8294d2a042,6481683,0,0x0,6
tick,0x7d8294d2a042,6482745,0,0x0,6
tick,0x7d8294d2a042,6483806,0,0x0,6
tick,0x7d8294d2a042,6484870,0,0x0,6
tick,0x7d8294d2a042,6485936,0,0x0,6
tick,0x7d8294d2a042,6486995,0,0x0,6
tick,0x7d8294d2a042,6488063,0,0x0,6
tick,0x7d8294d2a042,6489123,0,0x0,6
tick,0x7d8294d2a042,6490205,0,0x0,6
tick,0x7d8294d2a042,6491264,0,0x0,6
tick,0x7d8294d2a042,6492451,0,0x0,6
tick,0x7d8294d2a042,6493495,0,0x0,6
tick,0x7d8294d2a042,6494568,0,0x0,6
tick,0x7d8294d2a042,6495623,0,0x0,6
tick,0x7d8294d2a042,6496705,0,0x0,6
tick,0x7d8294d2a042,6497778,0,0x0,6
tick,0x7d8294d2a042,6498854,0,0x0,6
tick,0x7d8294d2a042,6499938,0,0x0,6
tick,0x7d8294d2a042,6501011,0,0x0,6
tick,0x7d8294d2a042,6502085,0,0x0,6
tick,0x7d8294d2a042,6503182,0,0x0,6
tick,0x7d8294d2a042,6504246,0,0x0,6
tick,0x7d8294d2a042,6505331,0,0x0,6
tick,0x7d8294d2a042,6506404,0,0x0,6
tick,0x7d8294d2a042,6507459,0,0x0,6
tick,0x7d8294d2a042,6508531,0,0x0,6
tick,0x7d8294d2a042,6509607,0,0x0,6
tick,0x7d8294d2a042,6510679,0,0x0,6
tick,0x7d8294d2a042,6511753,0,0x0,6
tick,0x7d8294d2a042,6512828,0,0x0,6
tick,0x7d8294d2a042,6513900,0,0x0,6
tick,0x7d8294d2a042,6514973,0,0x0,6
tick,0x7d8294d2a042,6516051,0,0x0,6
tick,0x7d8294d2a042,6517132,0,0x0,6
tick,0x7d8294d2a042,6518206,0,0x0,6
tick,0x7d8294d2a042,6519280,0,0x0,6
tick,0x7d8294d2a042,6520452,0,0x0,6
tick,0x7d8294d2a042,6521515,0,0x0,6
tick,0x7d8294d2a042,6522587,0,0x0,6
tick,0x7d8294d2a042,6523645,0,0x0,6
tick,0x7d8294d2a042,6524719,0,0x0,6
tick,0x7d8294d2a042,6525792,0,0x0,6
tick,0x7d8294d2a042,6526866,0,0x0,6
tick,0x7d8294d2a042,6527940,0,0x0,6
tick,0x7d8294d2a042,6529038,0,0x0,6
tick,0x7d8294d2a042,6530094,0,0x0,6
tick,0x7d8294d2a042,6531171,0,0x0,6
tick,0x7d8294d2a042,6532305,0,0x0,6
tick,0x7d8294d2a042,6533371,0,0x0,6
tick,0x7d8294d2a042,6534352,0,0x0,6
tick,0x7d8294d2a042,6535409,0,0x0,6
tick,0x7d8294d2a042,6536556,0,0x0,6
tick,0x7d8294d2a042,6537622,0,0x0,6
tick,0x7d8294d2a042,6538601,0,0x0,6
tick,0x7d8294d2a042,6539692,0,0x0,6
tick,0x7d8294d2a042,6540814,0,0x0,6
tick,0x7d8294d2a042,6541855,0,0x0,6
tick,0x7d8294d2a042,6542851,0,0x0,6
tick,0x7d8294d2a042,6543979,0,0x0,6
tick,0x7d8294d2a042,6545051,0,0x0,6
tick,0x7d8294d2a042,6546049,0,0x0,6
tick,0x7d8294d2a042,6547104,0,0x0,6
tick,0x7d8294d2a042,6548173,0,0x0,6
tick,0x7d8294d2a042,6549237,0,0x0,6
tick,0x7d8294d2a042,6550308,0,0x0,6
tick,0x7d8294d2a042,6551379,0,0x0,6
tick,0x7d8294d2a042,6552505,0,0x0,6
tick,0x7d8294d2a042,6553573,0,0x0,6
tick,0x7d8294d2a042,6554551,0,0x0,6
tick,0x7d8294d2a042,6555630,0,0x0,6
tick,0x7d8294d2a042,6556758,0,0x0,6
tick,0x7d8294d2a042,6557815,0,0x0,6
tick,0x7d8294d2a042,6558797,0,0x0,6
tick,0x7d8294d2a042,6559890,0,0x0,6
tick,0x7d8294d2a042,6560999,0,0x0,6
tick,0x7d8294d2a042,6561988,0,0x0,6
tick,0x7d8294d2a042,6563039,0,0x0,6
tick,0x7d8294d2a042,6564088,0,0x0,6
tick,0x7d8294d2a042,6565157,0,0x0,6
tick,0x7d8294d2a042,6566216,0,0x0,6
tick,0x7d8294d2a042,6567273,0,0x0,6
tick,0x7d8294d2a042,6568337,0,0x0,6
tick,0x7d8294d2a042,6569395,0,0x0,6
tick,0x7d8294d2a042,6570456,0,0x0,6
tick,0x7d8294d2a042,6571514,0,0x0,6
tick,0x7d8294d2a042,6572581,0,0x0,6
tick,0x7d8294d2a042,6573641,0,0x0,6
tick,0x7d8294d2a042,6574700,0,0x0,6
tick,0x7d8294d2a042,6575757,0,0x0,6
tick,0x7d8294d2a042,6576816,0,0x0,6
tick,0x7d8294d2a042,6577875,0,0x0,6
tick,0x7d8294d2a042,6578933,0,0x0,6
tick,0x7d8294d2a042,6579995,0,0x0,6
tick,0x7d8294d2a042,6581055,0,0x0,6
tick,0x7d8294d2a042,6582113,0,0x0,6
tick,0x7d8294d2a042,6583173,0,0x0,6
tick,0x7d8294d2a042,6584232,0,0x0,6
tick,0x7d8294d2a042,6585290,0,0x0,6
tick,0x7d8294d2a042,6586349,0,0x0,6
tick,0x7d8294d2a042,6587398,0,0x0,6
tick,0x7d8294d2a042,6588468,0,0x0,6
tick,0x7d8294d2a042,6589530,0,0x0,6
tick,0x7d8294d2a042,6590596,0,0x0,6
tick,0x7d8294d2a042,6591654,0,0x0,6
tick,0x7d8294d2a042,6592714,0,0x0,6
tick,0x7d8294d2a042,6593776,0,0x0,6
tick,0x7d8294d2a042,6594835,0,0x0,6
tick,0x7d8294d2a042,6595896,0,0x0,6
tick,0x7d8294d2a042,6596953,0,0x0,6
tick,0x7d8294d2a042,6598013,0,0x0,6
tick,0x7d8294d2a042,6599089,0,0x0,6
tick,0x7d8294d2a042,6600228,0,0x0,6
tick,0x7d8294d2a042,6601283,0,0x0,6
tick,0x7d8294d2a042,6602344,0,0x0,6
tick,0x7d8294d2a042,6603410,0,0x0,6
tick,0x7d8294d2a042,6604392,0,0x0,6
tick,0x7d8294d2a042,6605444,0,0x0,6
tick,0x7d8294d2a042,6606500,0,0x0,6
tick,0x7d8294d2a042,6607559,0,0x0,6
tick,0x7d8294d2a042,6608623,0,0x0,6
tick,0x7d8294d2a042,6609682,0,0x0,6
tick,0x7d8294d2a042,6610745,0,0x0,6
tick,0x7d8294d2a042,6611804,0,0x0,6
tick,0x7d8294d2a042,6612878,0,0x0,6
tick,0x7d8294d2a042,6613935,0,0x0,6
tick,0x7d8294d2a042,6614991,0,0x0,6
tick,0x7d8294d2a042,6616049,0,0x0,6
tick,0x7d8294d2a042,6617107,0,0x0,6
tick,0x7d8294d2a042,6618164,0,0x0,6
tick,0x7d8294d2a042,6619214,0,0x0,6
tick,0x7d8294d2a042,6620279,0,0x0,6
tick,0x7d8294d2a042,6621345,0,0x0,6
tick,0x7d8294d2a042,6622416,0,0x0,6
tick,0x7d8294d2a042,6623470,0,0x0,6
tick,0x7d8294d2a042,6624534,0,0x0,6
tick,0x7d8294d2a042,6625598,0,0x0,6
tick,0x7d8294d2a042,6626656,0,0x0,6
tick,0x7d8294d2a042,6627717,0,0x0,6
tick,0x7d8294d2a042,6628777,0,0x0,6
tick,0x7d8294d2a042,6629838,0,0x0,6
tick,0x7d8294d2a042,6630906,0,0x0,6
tick,0x7d8294d2a042,6631964,0,0x0,6
tick,0x7d8294d2a042,6633024,0,0x0,6
tick,0x7d8294d2a042,6634089,0,0x0,6
tick,0x7d8294d2a042,6635148,0,0x0,6
tick,0x7d8294d2a042,6636210,0,0x0,6
tick,0x7d8294d2a042,6637271,0,0x0,6
tick,0x7d8294d2a042,6638337,0,0x0,6
tick,0x7d8294d2a042,6639402,0,0x0,6
tick,0x7d8294d2a042,6640470,0,0x0,6
tick,0x7d8294d2a042,6641530,0,0x0,6
tick,0x7d8294d2a042,6642589,0,0x0,6
tick,0x7d8294d2a042,6643650,0,0x0,6
tick,0x7d8294d2a042,6644707,0,0x0,6
tick,0x7d8294d2a042,6645766,0,0x0,6
tick,0x7d8294d2a042,6646823,0,0x0,6
tick,0x7d8294d2a042,6647879,0,0x0,6
tick,0x7d8294d2a042,6648939,0,0x0,6
tick,0x7d8294d2a042,6649998,0,0x0,6
tick,0x7d8294d2a042,6651063,0,0x0,6
tick,0x7d8294d2a042,6652123,0,0x0,6
tick,0x7d8294d2a042,6653177,0,0x0,6
tick,0x7d8294d2a042,6654243,0,0x0,6
tick,0x7d8294d2a042,6655300,0,0x0,6
tick,0x7d8294d2a042,6656364,0,0x0,6
tick,0x7d8294d2a042,6657432,0,0x0,6
tick,0x7d8294d2a042,6658491,0,0x0,6
tick,0x7d8294d2a042,6659548,0,0x0,6
tick,0x7d8294d2a042,6660617,0,0x0,6
tick,0x7d8294d2a042,6661677,0,0x0,6
tick,0x7d8294d2a042,6662736,0,0x0,6
tick,0x7d8294d2a042,6663796,0,0x0,6
tick,0x7d8294d2a042,6664860,0,0x0,6
tick,0x7d8294d2a042,6665923,0,0x0,6
tick,0x7d8294d2a042,6666980,0,0x0,6
tick,0x7d8294d2a042,6668035,0,0x0,6
tick,0x7d8294d2a042,6669112,0,0x0,6
tick,0x7d8294d2a042,6670169,0,0x0,6
tick,0x7d8294d2a042,6671223,0,0x0,6
tick,0x7d8294d2a042,6672285,0,0x0,6
tick,0x7d8294d2a042,6673344,0,0x0,6
tick,0x7d8294d2a042,6674401,0,0x0,6
tick,0x7d8294d2a042,6675457,0,0x0,6
tick,0x7d8294d2a042,6676518,0,0x0,6
tick,0x7d8294d2a042,6677579,0,0x0,6
tick,0x7d8294d2a042,6678641,0,0x0,6
tick,0x7d8294d2a042,6679703,0,0x0,6
tick,0x7d8294d2a042,6680763,0,0x0,6
tick,0x7d8294d2a042,6681833,0,0x0,6
tick,0x7d8294d2a042,6682895,0,0x0,6
tick,0x7d8294d2a042,6683956,0,0x0,6
tick,0x7d8294d2a042,6685017,0,0x0,6
tick,0x7d8294d2a042,6686083,0,0x0,6
tick,0x7d8294d2a042,6687151,0,0x0,6
tick,0x7d8294d2a042,6688213,0,0x0,6
tick,0x7d8294d2a042,6689275,0,0x0,6
tick,0x7d8294d2a042,6690333,0,0x0,6
tick,0x7d8294d2a042,6691396,0,0x0,6
tick,0x7d8294d2a042,6692458,0,0x0,6
tick,0x7d8294d2a042,6693521,0,0x0,6
tick,0x7d8294d2a042,6694579,0,0x0,6
tick,0x7d8294d2a042,6695638,0,0x0,6
tick,0x7d8294d2a042,6696698,0,0x0,6
tick,0x7d8294d2a042,6697755,0,0x0,6
tick,0x7d8294d2a042,6698813,0,0x0,6
tick,0x7d8294d2a042,6699872,0,0x0,6
tick,0x7d8294d2a042,6700930,0,0x0,6
tick,0x7d8294d2a042,6701989,0,0x0,6
tick,0x7d8294d2a042,6703050,0,0x0,6
tick,0x7d8294d2a042,6704114,0,0x0,6
tick,0x7d8294d2a042,6705171,0,0x0,6
tick,0x7d8294d2a042,6706230,0,0x0,6
tick,0x7d8294d2a042,6707288,0,0x0,6
tick,0x7d8294d2a042,6708349,0,0x0,6
tick,0x7d8294d2a042,6709411,0,0x0,6
tick,0x7d8294d2a042,6710469,0,0x0,6
tick,0x7d8294d2a042,6711526,0,0x0,6
tick,0x7d8294d2a042,6712594,0,0x0,6
tick,0x7d8294d2a042,6713658,0,0x0,6
tick,0x7d8294d2a042,6714732,0,0x0,6
tick,0x7d8294d2a042,6715803,0,0x0,6
tick,0x7d8294d2a042,6716872,0,0x0,6
tick,0x7d8294d2a042,6717942,0,0x0,6
tick,0x7d8294d2a042,6719003,0,0x0,6
tick,0x7d8294d2a042,6720067,0,0x0,6
tick,0x7d8294d2a042,6721127,0,0x0,6
tick,0x7d8294d2a042,6722193,0,0x0,6
tick,0x7d8294d2a042,6723259,0,0x0,6
tick,0x7d8294d2a042,6724323,0,0x0,6
tick,0x7d8294d2a042,6725383,0,0x0,6
tick,0x7d8294d2a042,6726448,0,0x0,6
tick,0x7d8294d2a042,6727504,0,0x0,6
tick,0x7d8294d2a042,6728567,0,0x0,6
tick,0x7d8294d2a042,6729631,0,0x0,6
tick,0x7d8294d2a042,6730696,0,0x0,6
tick,0x7d8294d2a042,6731753,0,0x0,6
tick,0x7d8294d2a042,6732815,0,0x0,6
tick,0x7d8294d2a042,6733874,0,0x0,6
tick,0x7d8294d2a042,6734930,0,0x0,6
tick,0x7d8294d2a042,6735986,0,0x0,6
tick,0x7d8294d2a042,6737067,0,0x0,6
tick,0x7d8294d2a042,6738139,0,0x0,6
tick,0x7d8294d2a042,6739219,0,0x0,6
tick,0x7d8294d2a042,6740382,0,0x0,6
tick,0x7d8294d2a042,6741433,0,0x0,6
tick,0x7d8294d2a042,6742507,0,0x0,6
tick,0x7d8294d2a042,6743561,0,0x0,6
tick,0x7d8294d2a042,6744634,0,0x0,6
tick,0x7d8294d2a042,6745706,0,0x0,6
tick,0x7d8294d2a042,6746779,0,0x0,6
tick,0x7d8294d2a042,6747908,0,0x0,6
tick,0x7d8294d2a042,6748921,0,0x0,6
tick,0x7d8294d2a042,6749991,0,0x0,6
tick,0x7d8294d2a042,6751066,0,0x0,6
tick,0x7d8294d2a042,6752138,0,0x0,6
tick,0x7d8294d2a042,6753191,0,0x0,6
tick,0x7d8294d2a042,6754265,0,0x0,6
tick,0x7d8294d2a042,6755337,0,0x0,6
tick,0x7d8294d2a042,6756412,0,0x0,6
tick,0x7d8294d2a042,6757487,0,0x0,6
tick,0x7d8294d2a042,6758560,0,0x0,6
tick,0x7d8294d2a042,6759614,0,0x0,6
tick,0x7d8294d2a042,6760694,0,0x0,6
tick,0x7d8294d2a042,6761768,0,0x0,6
tick,0x7d8294d2a042,6762847,0,0x0,6
tick,0x7d8294d2a042,6763908,0,0x0,6
tick,0x7d8294d2a042,6764975,0,0x0,6
tick,0x7d8294d2a042,6766036,0,0x0,6
tick,0x7d8294d2a042,6767096,0,0x0,6
tick,0x7d8294d2a042,6768162,0,0x0,6
tick,0x7d8294d2a042,6769225,0,0x0,6
tick,0x7d8294d2a042,6770282,0,0x0,6
tick,0x7d8294d2a042,6771345,0,0x0,6
tick,0x7d8294d2a042,6772408,0,0x0,6
tick,0x7d8294d2a042,6773472,0,0x0,6
tick,0x7d8294d2a042,6774535,0,0x0,6
tick,0x7d8294d2a042,6775597,0,0x0,6
tick,0x7d8294d2a042,6776657,0,0x0,6
tick,0x7d8294d2a042,6777728,0,0x0,6
tick,0x7d8294d2a042,6778790,0,0x0,6
tick,0x7d8294d2a042,6779855,0,0x0,6
tick,0x7d8294d2a042,6780915,0,0x0,6
tick,0x7d8294d2a042,6781984,0,0x0,6
tick,0x7d8294d2a042,6783048,0,0x0,6
tick,0x7d8294d2a042,6784116,0,0x0,6
tick,0x7d8294d2a042,6785185,0,0x0,6
tick,0x7d8294d2a042,6786249,0,0x0,6
tick,0x7d8294d2a042,6787314,0,0x0,6
tick,0x7d8294d2a042,6788383,0,0x0,6
tick,0x7d8294d2a042,6789447,0,0x0,6
tick,0x7d8294d2a042,6790513,0,0x0,6
tick,0x7d8294d2a042,6791578,0,0x0,6
tick,0x7d8294d2a042,6792646,0,0x0,6
tick,0x7d8294d2a042,6793713,0,0x0,6
tick,0x7d8294d2a042,6794778,0,0x0,6
tick,0x7d8294d2a042,6795837,0,0x0,6
tick,0x7d8294d2a042,6796901,0,0x0,6
tick,0x7d8294d2a042,6797962,0,0x0,6
tick,0x7d8294d2a042,6799026,0,0x0,6
tick,0x7d8294d2a042,6800090,0,0x0,6
tick,0x7d8294d2a042,6801153,0,0x0,6
tick,0x7d8294d2a042,6802224,0,0x0,6
tick,0x7d8294d2a042,6803309,0,0x0,6
tick,0x7d8294d2a042,6804379,0,0x0,6
tick,0x7d8294d2a042,6805445,0,0x0,6
tick,0x7d8294d2a042,6806517,0,0x0,6
tick,0x7d8294d2a042,6807579,0,0x0,6
tick,0x7d8294d2a042,6808641,0,0x0,6
tick,0x7d8294d2a042,6809702,0,0x0,6
tick,0x7d8294d2a042,6810764,0,0x0,6
tick,0x7d8294d2a042,6811833,0,0x0,6
tick,0x7d8294d2a042,6812898,0,0x0,6
tick,0x7d8294d2a042,6813965,0,0x0,6
tick,0x7d8294d2a042,6815029,0,0x0,6
tick,0x7d8294d2a042,6816096,0,0x0,6
tick,0x7d8294d2a042,6817161,0,0x0,6
tick,0x7d8294d2a042,6818223,0,0x0,6
tick,0x7d8294d2a042,6819292,0,0x0,6
tick,0x7d8294d2a042,6820356,0,0x0,6
tick,0x7d8294d2a042,6821427,0,0x0,6
tick,0x7d8294d2a042,6822488,0,0x0,6
tick,0x7d8294d2a042,6823552,0,0x0,6
tick,0x7d8294d2a042,6824616,0,0x0,6
tick,0x7d8294d2a042,6825678,0,0x0,6
tick,0x7d8294d2a042,6826743,0,0x0,6
tick,0x7d8294d2a042,6827806,0,0x0,6
tick,0x7d8294d2a042,6828884,0,0x0,6
tick,0x7d8294d2a042,6829954,0,0x0,6
tick,0x7d8294d2a042,6831026,0,0x0,6
tick,0x7d8294d2a042,6832093,0,0x0,6
tick,0x7d8294d2a042,6833155,0,0x0,6
tick,0x7d8294d2a042,6834223,0,0x0,6
tick,0x7d8294d2a042,6835286,0,0x0,6
tick,0x7d8294d2a042,6836352,0,0x0,6
tick,0x7d8294d2a042,6837412,0,0x0,6
tick,0x7d8294d2a042,6838474,0,0x0,6
tick,0x7d8294d2a042,6839537,0,0x0,6
tick,0x7d8294d2a042,6840596,0,0x0,6
tick,0x7d8294d2a042,6841657,0,0x0,6
tick,0x7d8294d2a042,6842719,0,0x0,6
tick,0x7d8294d2a042,6843781,0,0x0,6
tick,0x7d8294d2a042,6844843,0,0x0,6
tick,0x7d8294d2a042,6845905,0,0x0,6
tick,0x7d8294d2a042,6846966,0,0x0,6
tick,0x7d8294d2a042,6848027,0,0x0,6
tick,0x7d8294d2a042,6849090,0,0x0,6
tick,0x7d8294d2a042,6850155,0,0x0,6
tick,0x7d8294d2a042,6851218,0,0x0,6
tick,0x7d8294d2a042,6852282,0,0x0,6
tick,0x7d8294d2a042,6853343,0,0x0,6
tick,0x7d8294d2a042,6854405,0,0x0,6
tick,0x7d8294d2a042,6855467,0,0x0,6
tick,0x7d8294d2a042,6856530,0,0x0,6
tick,0x7d8294d2a042,6857595,0,0x0,6
tick,0x7d8294d2a042,6858655,0,0x0,6
tick,0x7d8294d2a042,6859719,0,0x0,6
tick,0x7d8294d2a042,6860781,0,0x0,6
tick,0x7d8294d2a042,6861859,0,0x0,6
tick,0x7d8294d2a042,6862939,0,0x0,6
tick,0x7d8294d2a042,6864011,0,0x0,6
tick,0x7d8294d2a042,6865075,0,0x0,6
tick,0x7d8294d2a042,6866135,0,0x0,6
tick,0x7d8294d2a042,6867192,0,0x0,6
tick,0x7d8294d2a042,6868255,0,0x0,6
tick,0x7d8294d2a042,6869323,0,0x0,6
tick,0x7d8294d2a042,6870385,0,0x0,6
tick,0x7d8294d2a042,6871444,0,0x0,6
tick,0x7d8294d2a042,6872504,0,0x0,6
tick,0x7d8294d2a042,6873568,0,0x0,6
tick,0x7d8294d2a042,6874633,0,0x0,6
tick,0x7d8294d2a042,6875695,0,0x0,6
tick,0x7d8294d2a042,6876755,0,0x0,6
tick,0x7d8294d2a042,6877823,0,0x0,6
tick,0x7d8294d2a042,6878884,0,0x0,6
tick,0x7d8294d2a042,6879942,0,0x0,6
tick,0x7d8294d2a042,6880999,0,0x0,6
tick,0x7d8294d2a042,6882059,0,0x0,6
tick,0x7d8294d2a042,6883132,0,0x0,6
tick,0x7d8294d2a042,6884196,0,0x0,6
tick,0x7d8294d2a042,6885258,0,0x0,6
tick,0x7d8294d2a042,6886319,0,0x0,6
tick,0x7d8294d2a042,6887415,0,0x0,6
tick,0x7d8294d2a042,6888546,0,0x0,6
tick,0x7d8294d2a042,6889630,0,0x0,6
tick,0x7d8294d2a042,6890680,0,0x0,6
tick,0x7d8294d2a042,6891677,0,0x0,6
tick,0x7d8294d2a042,6892791,0,0x0,6
tick,0x7d8294d2a042,6893863,0,0x0,6
tick,0x7d8294d2a042,6894912,0,0x0,6
tick,0x7d8294d2a042,6895897,0,0x0,6
tick,0x7d8294d2a042,6896983,0,0x0,6
tick,0x7d8294d2a042,6898132,0,0x0,6
tick,0x7d8294d2a042,6899207,0,0x0,6
tick,0x7d8294d2a042,6900193,0,0x0,6
tick,0x7d8294d2a042,6901267,0,0x0,6
tick,0x7d8294d2a042,6902424,0,0x0,6
tick,0x7d8294d2a042,6903500,0,0x0,6
tick,0x7d8294d2a042,6904581,0,0x0,6
tick,0x7d8294d2a042,6905731,0,0x0,6
tick,0x7d8294d2a042,6906890,0,0x0,6
tick,0x7d8294d2a042,6907948,0,0x0,6
tick,0x7d8294d2a042,6909120,0,0x0,6
tick,0x7d8294d2a042,6910179,0,0x0,6
tick,0x7d8294d2a042,6911257,0,0x0,6
tick,0x7d8294d2a042,6912327,0,0x0,6
tick,0x7d8294d2a042,6913486,0,0x0,6
tick,0x7d8294d2a042,6914772,0,0x0,6
tick,0x7d8294d2a042,6915638,0,0x0,6
tick,0x7d8294d2a042,6916782,0,0x0,6
tick,0x7d8294d2a042,6917848,0,0x0,6
tick,0x7d8294d2a042,6918924,0,0x0,6
tick,0x7d8294d2a042,6919970,0,0x0,6
tick,0x7d8294d2a042,6921049,0,0x0,6
tick,0x7d8294d2a042,6922109,0,0x0,6
tick,0x7d8294d2a042,6923103,0,0x0,6
tick,0x7d8294d2a042,6924239,0,0x0,6
tick,0x7d8294d2a042,6925298,0,0x0,6
tick,0x7d8294d2a042,6926371,0,0x0,6
tick,0x7d8294d2a042,6927433,0,0x0,6
tick,0x7d8294d2a042,6928473,0,0x0,6
tick,0x7d8294d2a042,6929578,0,0x0,6
tick,0x7d8294d2a042,6930621,0,0x0,6
tick,0x7d8294d2a042,6931649,0,0x0,6
tick,0x7d8294d2a042,6932683,0,0x0,6
tick,0x7d8294d2a042,6933820,0,0x0,6
tick,0x7d8294d2a042,6934896,0,0x0,6
tick,0x7d8294d2a042,6935961,0,0x0,6
tick,0x7d8294d2a042,6937054,0,0x0,6
tick,0x7d8294d2a042,6938121,0,0x0,6
tick,0x7d8294d2a042,6939195,0,0x0,6
tick,0x7d8294d2a042,6940268,0,0x0,6
tick,0x7d8294d2a042,6941342,0,0x0,6
tick,0x7d8294d2a042,6942301,0,0x0,6
tick,0x7d8294d2a042,6943374,0,0x0,6
tick,0x7d8294d2a042,6944454,0,0x0,6
tick,0x7d8294d2a042,6945535,0,0x0,6
tick,0x7d8294d2a042,6946618,0,0x0,6
tick,0x7d8294d2a042,6947693,0,0x0,6
tick,0x7d8294d2a042,6948755,0,0x0,6
tick,0x7d8294d2a042,6949830,0,0x0,6
tick,0x7d8294d2a042,6950909,0,0x0,6
tick,0x7d8294d2a042,6951985,0,0x0,6
tick,0x7d8294d2a042,6953066,0,0x0,6
tick,0x7d8294d2a042,6954149,0,0x0,6
tick,0x7d8294d2a042,6955229,0,0x0,6
tick,0x7d8294d2a042,6956391,0,0x0,6
tick,0x7d8294d2a042,6957473,0,0x0,6
tick,0x7d8294d2a042,6958553,0,0x0,6
tick,0x7d8294d2a042,6959609,0,0x0,6
tick,0x7d8294d2a042,6960693,0,0x0,6
tick,0x7d8294d2a042,6961772,0,0x0,6
tick,0x7d8294d2a042,6962847,0,0x0,6
tick,0x7d8294d2a042,6963923,0,0x0,6
tick,0x7d8294d2a042,6965003,0,0x0,6
tick,0x7d8294d2a042,6966084,0,0x0,6
tick,0x7d8294d2a042,6967166,0,0x0,6
tick,0x7d8294d2a042,6968243,0,0x0,6
tick,0x7d8294d2a042,6969323,0,0x0,6
tick,0x7d8294d2a042,6970407,0,0x0,6
tick,0x7d8294d2a042,6971461,0,0x0,6
tick,0x7d8294d2a042,6972540,0,0x0,6
tick,0x7d8294d2a042,6973624,0,0x0,6
tick,0x7d8294d2a042,6974706,0,0x0,6
tick,0x7d8294d2a042,6975782,0,0x0,6
tick,0x7d8294d2a042,6976856,0,0x0,6
tick,0x7d8294d2a042,6977944,0,0x0,6
tick,0x7d8294d2a042,6979005,0,0x0,6
tick,0x7d8294d2a042,6980076,0,0x0,6
tick,0x7d8294d2a042,6981126,0,0x0,6
tick,0x7d8294d2a042,6982186,0,0x0,6
tick,0x7d8294d2a042,6983244,0,0x0,6
tick,0x7d8294d2a042,6984313,0,0x0,6
tick,0x7d8294d2a042,6985373,0,0x0,6
tick,0x7d8294d2a042,6986435,0,0x0,6
tick,0x7d8294d2a042,6987494,0,0x0,6
tick,0x7d8294d2a042,6988568,0,0x0,6
tick,0x7d8294d2a042,6989649,0,0x0,6
tick,0x7d8294d2a042,6990726,0,0x0,6
tick,0x7d8294d2a042,6991800,0,0x0,6
tick,0x7d8294d2a042,6992873,0,0x0,6
tick,0x7d8294d2a042,6993953,0,0x0,6
tick,0x7d8294d2a042,6995035,0,0x0,6
tick,0x7d8294d2a042,6996112,0,0x0,6
tick,0x7d8294d2a042,6997193,0,0x0,6
tick,0x7d8294d2a042,6998274,0,0x0,6
tick,0x7d8294d2a042,6999356,0,0x0,6
tick,0x7d8294d2a042,7000442,0,0x0,6
tick,0x7d8294d2a042,7001515,0,0x0,6
tick,0x7d8294d2a042,7002596,0,0x0,6
tick,0x7d8294d2a042,7003649,0,0x0,6
tick,0x7d8294d2a042,7004736,0,0x0,6
tick,0x7d8294d2a042,7005811,0,0x0,6
tick,0x7d8294d2a042,7006882,0,0x0,6
tick,0x7d8294d2a042,7007959,0,0x0,6
tick,0x7d8294d2a042,7009036,0,0x0,6
tick,0x7d8294d2a042,7010112,0,0x0,6
tick,0x7d8294d2a042,7011165,0,0x0,6
tick,0x7d8294d2a042,7012247,0,0x0,6
tick,0x7d8294d2a042,7013320,0,0x0,6
tick,0x7d8294d2a042,7014398,0,0x0,6
tick,0x7d8294d2a042,7015450,0,0x0,6
tick,0x7d8294d2a042,7016531,0,0x0,6
tick,0x7d8294d2a042,7017613,0,0x0,6
tick,0x7d8294d2a042,7018694,0,0x0,6
tick,0x7d8294d2a042,7019778,0,0x0,6
tick,0x7d8294d2a042,7020842,0,0x0,6
tick,0x7d8294d2a042,7021909,0,0x0,6
tick,0x7d8294d2a042,7022973,0,0x0,6
tick,0x7d8294d2a042,7024037,0,0x0,6
tick,0x7d8294d2a042,7025100,0,0x0,6
tick,0x7d8294d2a042,7026166,0,0x0,6
tick,0x7d8294d2a042,7027231,0,0x0,6
tick,0x7d8294d2a042,7028298,0,0x0,6
tick,0x7d8294d2a042,7029361,0,0x0,6
tick,0x7d8294d2a042,7030424,0,0x0,6
tick,0x7d8294d2a042,7031486,0,0x0,6
tick,0x7d8294d2a042,7032551,0,0x0,6
tick,0x7d8294d2a042,7033615,0,0x0,6
tick,0x7d8294d2a042,7034679,0,0x0,6
tick,0x7d8294d2a042,7035742,0,0x0,6
tick,0x7d8294d2a042,7036808,0,0x0,6
tick,0x7d8294d2a042,7037872,0,0x0,6
tick,0x7d8294d2a042,7038938,0,0x0,6
tick,0x7d8294d2a042,7039999,0,0x0,6
tick,0x7d8294d2a042,7041060,0,0x0,6
tick,0x7d8294d2a042,7042123,0,0x0,6
tick,0x7d8294d2a042,7043185,0,0x0,6
tick,0x7d8294d2a042,7044251,0,0x0,6
tick,0x7d8294d2a042,7045313,0,0x0,6
tick,0x7d8294d2a042,7046376,0,0x0,6
tick,0x7d8294d2a042,7047398,0,0x0,6
tick,0x7d8294d2a042,7048466,0,0x0,6
tick,0x7d8294d2a042,7049527,0,0x0,6
tick,0x7d8294d2a042,7050590,0,0x0,6
tick,0x7d8294d2a042,7051650,0,0x0,6
tick,0x7d8294d2a042,7052712,0,0x0,6
tick,0x7d8294d2a042,7053776,0,0x0,6
tick,0x7d8294d2a042,7054839,0,0x0,6
tick,0x7d8294d2a042,7055902,0,0x0,6
tick,0x7d8294d2a042,7056966,0,0x0,6
tick,0x7d8294d2a042,7058029,0,0x0,6
tick,0x7d8294d2a042,7059093,0,0x0,6
tick,0x7d8294d2a042,7060152,0,0x0,6
tick,0x7d8294d2a042,7061213,0,0x0,6
tick,0x7d8294d2a042,7062276,0,0x0,6
tick,0x7d8294d2a042,7063340,0,0x0,6
tick,0x7d8294d2a042,7064407,0,0x0,6
tick,0x7d8294d2a042,7065467,0,0x0,6
tick,0x7d8294d2a042,7066529,0,0x0,6
tick,0x7d8294d2a042,7067590,0,0x0,6
tick,0x7d8294d2a042,7068655,0,0x0,6
tick,0x7d8294d2a042,7069713,0,0x0,6
tick,0x7d8294d2a042,7070778,0,0x0,6
tick,0x7d8294d2a042,7071842,0,0x0,6
tick,0x7d8294d2a042,7072903,0,0x0,6
tick,0x7d8294d2a042,7073966,0,0x0,6
tick,0x7d8294d2a042,7075031,0,0x0,6
tick,0x7d8294d2a042,7076095,0,0x0,6
tick,0x7d8294d2a042,7077168,0,0x0,6
tick,0x7d8294d2a042,7078223,0,0x0,6
tick,0x7d8294d2a042,7079291,0,0x0,6
tick,0x7d8294d2a042,7080356,0,0x0,6
tick,0x7d8294d2a042,7081417,0,0x0,6
tick,0x7d8294d2a042,7082482,0,0x0,6
tick,0x7d8294d2a042,7083546,0,0x0,6
tick,0x7d8294d2a042,7084607,0,0x0,6
tick,0x7d8294d2a042,7085670,0,0x0,6
tick,0x7d8294d2a042,7086731,0,0x0,6
tick,0x7d8294d2a042,7087794,0,0x0,6
tick,0x7d8294d2a042,7088854,0,0x0,6
tick,0x7d8294d2a042,7089920,0,0x0,6
tick,0x7d8294d2a042,7090979,0,0x0,6
tick,0x7d8294d2a042,7092043,0,0x0,6
tick,0x7d8294d2a042,7093105,0,0x0,6
tick,0x7d8294d2a042,7094168,0,0x0,6
tick,0x7d8294d2a042,7095232,0,0x0,6
tick,0x7d8294d2a042,7096295,0,0x0,6
tick,0x7d8294d2a042,7097355,0,0x0,6
tick,0x7d8294d2a042,7098418,0,0x0,6
tick,0x7d8294d2a042,7099479,0,0x0,6
tick,0x7d8294d2a042,7100545,0,0x0,6
tick,0x7d8294d2a042,7101610,0,0x0,6
tick,0x7d8294d2a042,7102676,0,0x0,6
tick,0x7d8294d2a042,7103738,0,0x0,6
tick,0x7d8294d2a042,7104803,0,0x0,6
tick,0x7d8294d2a042,7105868,0,0x0,6
tick,0x7d8294d2a042,7106927,0,0x0,6
tick,0x7d8294d2a042,7107990,0,0x0,6
tick,0x7d8294d2a042,7109050,0,0x0,6
tick,0x7d8294d2a042,7110116,0,0x0,6
tick,0x7d8294d2a042,7111181,0,0x0,6
tick,0x7d8294d2a042,7112247,0,0x0,6
tick,0x7d8294d2a042,7113314,0,0x0,6
tick,0x7d8294d2a042,7114384,0,0x0,6
tick,0x7d8294d2a042,7115468,0,0x0,6
tick,0x7d8294d2a042,7116474,0,0x0,6
tick,0x7d8294d2a042,7117552,0,0x0,6
tick,0x7d8294d2a042,7118627,0,0x0,6
tick,0x7d8294d2a042,7119700,0,0x0,6
tick,0x7d8294d2a042,7120763,0,0x0,6
tick,0x7d8294d2a042,7121842,0,0x0,6
tick,0x7d8294d2a042,7122915,0,0x0,6
tick,0x7d8294d2a042,7123974,0,0x0,6
tick,0x7d8294d2a042,7125039,0,0x0,6
tick,0x7d8294d2a042,7126098,0,0x0,6
tick,0x7d8294d2a042,7127165,0,0x0,6
tick,0x7d8294d2a042,7128230,0,0x0,6
tick,0x7d8294d2a042,7129307,0,0x0,6
tick,0x7d8294d2a042,7130369,0,0x0,6
tick,0x7d8294d2a042,7131412,0,0x0,6
tick,0x7d8294d2a042,7132487,0,0x0,6
tick,0x7d8294d2a042,7133555,0,0x0,6
tick,0x7d8294d2a042,7134620,0,0x0,6
tick,0x7d8294d2a042,7135690,0,0x0,6
tick,0x7d8294d2a042,7136754,0,0x0,6
tick,0x7d8294d2a042,7137816,0,0x0,6
tick,0x7d8294d2a042,7138882,0,0x0,6
tick,0x7d8294d2a042,7140012,0,0x0,6
tick,0x7d8294d2a042,7141094,0,0x0,6
tick,0x7d8294d2a042,7142069,0,0x0,6
tick,0x7d8294d2a042,7143131,0,0x0,6
tick,0x7d8294d2a042,7144272,0,0x0,6
tick,0x7d8294d2a042,7145318,0,0x0,6
tick,0x7d8294d2a042,7146384,0,0x0,6
tick,0x7d8294d2a042,7147460,0,0x0,6
tick,0x7d8294d2a042,7148516,0,0x0,6
tick,0x7d8294d2a042,7149569,0,0x0,6
tick,0x7d8294d2a042,7150626,0,0x0,6
tick,0x7d8294d2a042,7151625,0,0x0,6
tick,0x7d8294d2a042,7152753,0,0x0,6
tick,0x7d8294d2a042,7153716,0,0x0,6
tick,0x7d8294d2a042,7154775,0,0x0,6
tick,0x7d8294d2a042,7155833,0,0x0,6
tick,0x7d8294d2a042,7156895,0,0x0,6
tick,0x7d8294d2a042,7157952,0,0x0,6
tick,0x7d8294d2a042,7159011,0,0x0,6
tick,0x7d8294d2a042,7160072,0,0x0,6
tick,0x7d8294d2a042,7161144,0,0x0,6
tick,0x7d8294d2a042,7162210,0,0x0,6
tick,0x7d8294d2a042,7163278,0,0x0,6
tick,0x7d8294d2a042,7164339,0,0x0,6
tick,0x7d8294d2a042,7165397,0,0x0,6
tick,0x7d8294d2a042,7166457,0,0x0,6
tick,0x7d8294d2a042,7167519,0,0x0,6
tick,0x7d8294d2a042,7168580,0,0x0,6
tick,0x7d8294d2a042,7169639,0,0x0,6
tick,0x7d8294d2a042,7170806,0,0x0,6
tick,0x7d8294d2a042,7171845,0,0x0,6
tick,0x7d8294d2a042,7172919,0,0x0,6
tick,0x7d8294d2a042,7173899,0,0x0,6
tick,0x7d8294d2a042,7174962,0,0x0,6
tick,0x7d8294d2a042,7176091,0,0x0,6
tick,0x7d8294d2a042,7177155,0,0x0,6
tick,0x7d8294d2a042,7178221,0,0x0,6
tick,0x7d8294d2a042,7179276,0,0x0,6
tick,0x7d8294d2a042,7180353,0,0x0,6
tick,0x7d8294d2a042,7181395,0,0x0,6
tick,0x7d8294d2a042,7182353,0,0x0,6
tick,0x7d8294d2a042,7183413,0,0x0,6
tick,0x7d8294d2a042,7184498,0,0x0,6
tick,0x7d8294d2a042,7185606,0,0x0,6
tick,0x7d8294d2a042,7186672,0,0x0,6
tick,0x7d8294d2a042,7187668,0,0x0,6
tick,0x7d8294d2a042,7188788,0,0x0,6
tick,0x7d8294d2a042,7189842,0,0x0,6
tick,0x7d8294d2a042,7190901,0,0x0,6
tick,0x7d8294d2a042,7191950,0,0x0,6
tick,0x7d8294d2a042,7193002,0,0x0,6
tick,0x7d8294d2a042,7194073,0,0x0,6
tick,0x7d8294d2a042,7195133,0,0x0,6
tick,0x7d8294d2a042,7196190,0,0x0,6
tick,0x7d8294d2a042,7197251,0,0x0,6
tick,0x7d8294d2a042,7198214,0,0x0,6
tick,0x7d8294d2a042,7199288,0,0x0,6
tick,0x7d8294d2a042,7200431,0,0x0,6
tick,0x7d8294d2a042,7201493,0,0x0,6
tick,0x7d8294d2a042,7202541,0,0x0,6
tick,0x7d8294d2a042,7203510,0,0x0,6
tick,0x7d8294d2a042,7204668,0,0x0,6
tick,0x7d8294d2a042,7205727,0,0x0,6
tick,0x7d8294d2a042,7206686,0,0x0,6
tick,0x7d8294d2a042,7207750,0,0x0,6
tick,0x7d8294d2a042,7208806,0,0x0,6
tick,0x7d8294d2a042,7209863,0,0x0,6
tick,0x7d8294d2a042,7210926,0,0x0,6
tick,0x7d8294d2a042,7211985,0,0x0,6
tick,0x7d8294d2a042,7213046,0,0x0,6
tick,0x7d8294d2a042,7214105,0,0x0,6
tick,0x7d8294d2a042,7215166,0,0x0,6
tick,0x7d8294d2a042,7216235,0,0x0,6
tick,0x7d8294d2a042,7217299,0,0x0,6
tick,0x7d8294d2a042,7218360,0,0x0,6
tick,0x7d8294d2a042,7219398,0,0x0,6
tick,0x7d8294d2a042,7220461,0,0x0,6
tick,0x7d8294d2a042,7221527,0,0x0,6
tick,0x7d8294d2a042,7222584,0,0x0,6
tick,0x7d8294d2a042,7223644,0,0x0,6
tick,0x7d8294d2a042,7224704,0,0x0,6
tick,0x7d8294d2a042,7225761,0,0x0,6
tick,0x7d8294d2a042,7226821,0,0x0,6
tick,0x7d8294d2a042,7227879,0,0x0,6
tick,0x7d8294d2a042,7228938,0,0x0,6
tick,0x7d8294d2a042,7229996,0,0x0,6
tick,0x7d8294d2a042,7231056,0,0x0,6
tick,0x7d8294d2a042,7232115,0,0x0,6
tick,0x7d8294d2a042,7233174,0,0x0,6
tick,0x7d8294d2a042,7234233,0,0x0,6
tick,0x7d8294d2a042,7235291,0,0x0,6
tick,0x7d8294d2a042,7236351,0,0x0,6
tick,0x7d8294d2a042,7237413,0,0x0,6
tick,0x7d8294d2a042,7238479,0,0x0,6
tick,0x7d8294d2a042,7239542,0,0x0,6
tick,0x7d8294d2a042,7240607,0,0x0,6
tick,0x7d8294d2a042,7241663,0,0x0,6
tick,0x7d8294d2a042,7242733,0,0x0,6
tick,0x7d8294d2a042,7243796,0,0x0,6
tick,0x7d8294d2a042,7244856,0,0x0,6
tick,0x7d8294d2a042,7245920,0,0x0,6
tick,0x7d8294d2a042,7246984,0,0x0,6
tick,0x7d8294d2a042,7248046,0,0x0,6
tick,0x7d8294d2a042,7249106,0,0x0,6
tick,0x7d8294d2a042,7250170,0,0x0,6
tick,0x7d8294d2a042,7251234,0,0x0,6
tick,0x7d8294d2a042,7252295,0,0x0,6
tick,0x7d8294d2a042,7253357,0,0x0,6
tick,0x7d8294d2a042,7254416,0,0x0,6
tick,0x7d8294d2a042,7255472,0,0x0,6
tick,0x7d8294d2a042,7256530,0,0x0,6
tick,0x7d8294d2a042,7257589,0,0x0,6
tick,0x7d8294d2a042,7258645,0,0x0,6
tick,0x7d8294d2a042,7259705,0,0x0,6
tick,0x7d8294d2a042,7260790,0,0x0,6
tick,0x7d8294d2a042,7261850,0,0x0,6
tick,0x7d8294d2a042,7262910,0,0x0,6
tick,0x7d8294d2a042,7263981,0,0x0,6
tick,0x7d8294d2a042,7265052,0,0x0,6
tick,0x7d8294d2a042,7266110,0,0x0,6
tick,0x7d8294d2a042,7267180,0,0x0,6
tick,0x7d8294d2a042,7268245,0,0x0,6
tick,0x7d8294d2a042,7269303,0,0x0,6
tick,0x7d8294d2a042,7270362,0,0x0,6
tick,0x7d8294d2a042,7271397,0,0x0,6
tick,0x7d8294d2a042,7272482,0,0x0,6
tick,0x7d8294d2a042,7273538,0,0x0,6
tick,0x7d8294d2a042,7274598,0,0x0,6
tick,0x7d8294d2a042,7275659,0,0x0,6
tick,0x7d8294d2a042,7276729,0,0x0,6
tick,0x7d8294d2a042,7277788,0,0x0,6
tick,0x7d8294d2a042,7278850,0,0x0,6
tick,0x7d8294d2a042,7279913,0,0x0,6
tick,0x7d8294d2a042,7280978,0,0x0,6
tick,0x7d8294d2a042,7282042,0,0x0,6
tick,0x7d8294d2a042,7283100,0,0x0,6
tick,0x7d8294d2a042,7284159,0,0x0,6
tick,0x7d8294d2a042,7285217,0,0x0,6
tick,0x7d8294d2a042,7286274,0,0x0,6
tick,0x7d8294d2a042,7287334,0,0x0,6
tick,0x7d8294d2a042,7288399,0,0x0,6
tick,0x7d8294d2a042,7289457,0,0x0,6
tick,0x7d8294d2a042,7290515,0,0x0,6
tick,0x7d8294d2a042,7291572,0,0x0,6
tick,0x7d8294d2a042,7292630,0,0x0,6
tick,0x7d8294d2a042,7293687,0,0x0,6
tick,0x7d8294d2a042,7294743,0,0x0,6
tick,0x7d8294d2a042,7295801,0,0x0,6
tick,0x7d8294d2a042,7296864,0,0x0,6
tick,0x7d8294d2a042,7297923,0,0x0,6
tick,0x7d8294d2a042,7298984,0,0x0,6
tick,0x7d8294d2a042,7300045,0,0x0,6
tick,0x7d8294d2a042,7301104,0,0x0,6
tick,0x7d8294d2a042,7302164,0,0x0,6
tick,0x7d8294d2a042,7303228,0,0x0,6
tick,0x7d8294d2a042,7304293,0,0x0,6
tick,0x7d8294d2a042,7305357,0,0x0,6
tick,0x7d8294d2a042,7306430,0,0x0,6
tick,0x7d8294d2a042,7307499,0,0x0,6
tick,0x7d8294d2a042,7308569,0,0x0,6
tick,0x7d8294d2a042,7309639,0,0x0,6
tick,0x7d8294d2a042,7310712,0,0x0,6
tick,0x7d8294d2a042,7311775,0,0x0,6
tick,0x7d8294d2a042,7312845,0,0x0,6
tick,0x7d8294d2a042,7313918,0,0x0,6
tick,0x7d8294d2a042,7314980,0,0x0,6
tick,0x7d8294d2a042,7316043,0,0x0,6
tick,0x7d8294d2a042,7317106,0,0x0,6
tick,0x7d8294d2a042,7318170,0,0x0,6
tick,0x7d8294d2a042,7319245,0,0x0,6
tick,0x7d8294d2a042,7320303,0,0x0,6
tick,0x7d8294d2a042,7321367,0,0x0,6
tick,0x7d8294d2a042,7322441,0,0x0,6
tick,0x7d8294d2a042,7323503,0,0x0,6
tick,0x7d8294d2a042,7324570,0,0x0,6
tick,0x7d8294d2a042,7325647,0,0x0,6
tick,0x7d8294d2a042,7326717,0,0x0,6
tick,0x7d8294d2a042,7327793,0,0x0,6
tick,0x7d8294d2a042,7328866,0,0x0,6
tick,0x7d8294d2a042,7329941,0,0x0,6
tick,0x7d8294d2a042,7331026,0,0x0,6
tick,0x7d8294d2a042,7332105,0,0x0,6
tick,0x7d8294d2a042,7333188,0,0x0,6
tick,0x7d8294d2a042,7334263,0,0x0,6
tick,0x7d8294d2a042,7335344,0,0x0,6
tick,0x7d8294d2a042,7336416,0,0x0,6
tick,0x7d8294d2a042,7337498,0,0x0,6
tick,0x7d8294d2a042,7338578,0,0x0,6
tick,0x7d8294d2a042,7339632,0,0x0,6
tick,0x7d8294d2a042,7340714,0,0x0,6
tick,0x7d8294d2a042,7341789,0,0x0,6
tick,0x7d8294d2a042,7342862,0,0x0,6
tick,0x7d8294d2a042,7343942,0,0x0,6
tick,0x7d8294d2a042,7345018,0,0x0,6
tick,0x7d8294d2a042,7346097,0,0x0,6
tick,0x7d8294d2a042,7347179,0,0x0,6
tick,0x7d8294d2a042,7348236,0,0x0,6
tick,0x7d8294d2a042,7349314,0,0x0,6
tick,0x7d8294d2a042,7350394,0,0x0,6
tick,0x7d8294d2a042,7351443,0,0x0,6
tick,0x7d8294d2a042,7352521,0,0x0,6
tick,0x7d8294d2a042,7353593,0,0x0,6
tick,0x7d8294d2a042,7354695,0,0x0,6
tick,0x7d8294d2a042,7355832,0,0x0,6
tick,0x7d8294d2a042,7356900,0,0x0,6
tick,0x7d8294d2a042,7357991,0,0x0,6
tick,0x7d8294d2a042,7358987,0,0x0,6
tick,0x7d8294d2a042,7360056,0,0x0,6
tick,0x7d8294d2a042,7361137,0,0x0,6
tick,0x7d8294d2a042,7362228,0,0x0,6
tick,0x7d8294d2a042,7363296,0,0x0,6
tick,0x7d8294d2a042,7364362,0,0x0,6
tick,0x7d8294d2a042,7365419,0,0x0,6
tick,0x7d8294d2a042,7366479,0,0x0,6
tick,0x7d8294d2a042,7367542,0,0x0,6
tick,0x7d8294d2a042,7368607,0,0x0,6
tick,0x7d8294d2a042,7369667,0,0x0,6
tick,0x7d8294d2a042,7370730,0,0x0,6
tick,0x7d8294d2a042,7371793,0,0x0,6
tick,0x7d8294d2a042,7372868,0,0x0,6
tick,0x7d8294d2a042,7373946,0,0x0,6
tick,0x7d8294d2a042,7375018,0,0x0,6
tick,0x7d8294d2a042,7376092,0,0x0,6
tick,0x7d8294d2a042,7377165,0,0x0,6
tick,0x7d8294d2a042,7378219,0,0x0,6
tick,0x7d8294d2a042,7379273,0,0x0,6
tick,0x7d8294d2a042,7380345,0,0x0,6
tick,0x7d8294d2a042,7381418,0,0x0,6
tick,0x7d8294d2a042,7382491,0,0x0,6
tick,0x7d8294d2a042,7383546,0,0x0,6
tick,0x7d8294d2a042,7384620,0,0x0,6
tick,0x7d8294d2a042,7385693,0,0x0,6
tick,0x7d8294d2a042,7386765,0,0x0,6
tick,0x7d8294d2a042,7387838,0,0x0,6
tick,0x7d8294d2a042,7388914,0,0x0,6
tick,0x7d8294d2a042,7389985,0,0x0,6
tick,0x7d8294d2a042,7391059,0,0x0,6
tick,0x7d8294d2a042,7392139,0,0x0,6
tick,0x7d8294d2a042,7393214,0,0x0,6
tick,0x7d8294d2a042,7394287,0,0x0,6
tick,0x7d8294d2a042,7395349,0,0x0,6
tick,0x7d8294d2a042,7396411,0,0x0,6
tick,0x7d8294d2a042,7397472,0,0x0,6
tick,0x7d8294d2a042,7398535,0,0x0,6
tick,0x7d8294d2a042,7399593,0,0x0,6
tick,0x7d8294d2a042,7400653,0,0x0,6
tick,0x7d8294d2a042,7401728,0,0x0,6
tick,0x7d8294d2a042,7402787,0,0x0,6
tick,0x7d8294d2a042,7403850,0,0x0,6
tick,0x7d8294d2a042,7404916,0,0x0,6
tick,0x7d8294d2a042,7405986,0,0x0,6
tick,0x7d8294d2a042,7407047,0,0x0,6
tick,0x7d8294d2a042,7408110,0,0x0,6
tick,0x7d8294d2a042,7409177,0,0x0,6
tick,0x7d8294d2a042,7410244,0,0x0,6
tick,0x7d8294d2a042,7411315,0,0x0,6
tick,0x7d8294d2a042,7412383,0,0x0,6
tick,0x7d8294d2a042,7413450,0,0x0,6
tick,0x7d8294d2a042,7414517,0,0x0,6
tick,0x7d8294d2a042,7415582,0,0x0,6
tick,0x7d8294d2a042,7416645,0,0x0,6
tick,0x7d8294d2a042,7417716,0,0x0,6
tick,0x7d8294d2a042,7418785,0,0x0,6
tick,0x7d8294d2a042,7419848,0,0x0,6
tick,0x7d8294d2a042,7420912,0,0x0,6
tick,0x7d8294d2a042,7421990,0,0x0,6
tick,0x7d8294d2a042,7423049,0,0x0,6
tick,0x7d8294d2a042,7424110,0,0x0,6
tick,0x7d8294d2a042,7425178,0,0x0,6
tick,0x7d8294d2a042,7426244,0,0x0,6
tick,0x7d8294d2a042,7427307,0,0x0,6
tick,0x7d8294d2a042,7428372,0,0x0,6
tick,0x7d8294d2a042,7429436,0,0x0,6
tick,0x7d8294d2a042,7430500,0,0x0,6
tick,0x7d8294d2a042,7431564,0,0x0,6
tick,0x7d8294d2a042,7432628,0,0x0,6
tick,0x7d8294d2a042,7433706,0,0x0,6
tick,0x7d8294d2a042,7434770,0,0x0,6
tick,0x7d8294d2a042,7435842,0,0x0,6
tick,0x7d8294d2a042,7436902,0,0x0,6
tick,0x7d8294d2a042,7437969,0,0x0,6
tick,0x7d8294d2a042,7439039,0,0x0,6
tick,0x7d8294d2a042,7440113,0,0x0,6
tick,0x7d8294d2a042,7441179,0,0x0,6
tick,0x7d8294d2a042,7442250,0,0x0,6
tick,0x7d8294d2a042,7443322,0,0x0,6
tick,0x7d8294d2a042,7444391,0,0x0,6
tick,0x7d8294d2a042,7445453,0,0x0,6
tick,0x7d8294d2a042,7446512,0,0x0,6
tick,0x7d8294d2a042,7447579,0,0x0,6
tick,0x7d8294d2a042,7448644,0,0x0,6
tick,0x7d8294d2a042,7449712,0,0x0,6
tick,0x7d8294d2a042,7450788,0,0x0,6
tick,0x7d8294d2a042,7451875,0,0x0,6
tick,0x7d8294d2a042,7452941,0,0x0,6
tick,0x7d8294d2a042,7454014,0,0x0,6
tick,0x7d8294d2a042,7455078,0,0x0,6
tick,0x7d8294d2a042,7456140,0,0x0,6
tick,0x7d8294d2a042,7457203,0,0x0,6
tick,0x7d8294d2a042,7458275,0,0x0,6
tick,0x7d8294d2a042,7459350,0,0x0,6
tick,0x7d8294d2a042,7460429,0,0x0,6
tick,0x7d8294d2a042,7461495,0,0x0,6
tick,0x7d8294d2a042,7462573,0,0x0,6
tick,0x7d8294d2a042,7463629,0,0x0,6
tick,0x7d8294d2a042,7464692,0,0x0,6
tick,0x7d8294d2a042,7465759,0,0x0,6
tick,0x7d8294d2a042,7466828,0,0x0,6
tick,0x7d8294d2a042,7467896,0,0x0,6
tick,0x7d8294d2a042,7468971,0,0x0,6
tick,0x7d8294d2a042,7470042,0,0x0,6
tick,0x7d8294d2a042,7471116,0,0x0,6
tick,0x7d8294d2a042,7472178,0,0x0,6
tick,0x7d8294d2a042,7473244,0,0x0,6
tick,0x7d8294d2a042,7474311,0,0x0,6
tick,0x7d8294d2a042,7475390,0,0x0,6
tick,0x7d8294d2a042,7476467,0,0x0,6
tick,0x7d8294d2a042,7477543,0,0x0,6
tick,0x7d8294d2a042,7478625,0,0x0,6
tick,0x7d8294d2a042,7479685,0,0x0,6
tick,0x7d8294d2a042,7480762,0,0x0,6
tick,0x7d8294d2a042,7481824,0,0x0,6
tick,0x7d8294d2a042,7482883,0,0x0,6
tick,0x7d8294d2a042,7483942,0,0x0,6
tick,0x7d8294d2a042,7485004,0,0x0,6
tick,0x7d8294d2a042,7486066,0,0x0,6
tick,0x7d8294d2a042,7487130,0,0x0,6
tick,0x7d8294d2a042,7488195,0,0x0,6
tick,0x7d8294d2a042,7489355,0,0x0,6
tick,0x7d8294d2a042,7490327,0,0x0,6
tick,0x7d8294d2a042,7491420,0,0x0,6
tick,0x7d8294d2a042,7492451,0,0x0,6
tick,0x7d8294d2a042,7493510,0,0x0,6
tick,0x7d8294d2a042,7494568,0,0x0,6
tick,0x7d8294d2a042,7495629,0,0x0,6
tick,0x7d8294d2a042,7496690,0,0x0,6
tick,0x7d8294d2a042,7497749,0,0x0,6
tick,0x7d8294d2a042,7498809,0,0x0,6
tick,0x7d8294d2a042,7499869,0,0x0,6
tick,0x7d8294d2a042,7500932,0,0x0,6
tick,0x7d8294d2a042,7502007,0,0x0,6
tick,0x7d8294d2a042,7503075,0,0x0,6
tick,0x7d8294d2a042,7504214,0,0x0,6
tick,0x7d8294d2a042,7505276,0,0x0,6
tick,0x7d8294d2a042,7506263,0,0x0,6
tick,0x7d8294d2a042,7507318,0,0x0,6
tick,0x7d8294d2a042,7508467,0,0x0,6
tick,0x7d8294d2a042,7509526,0,0x0,6
tick,0x7d8294d2a042,7510495,0,0x0,6
tick,0x7d8294d2a042,7511547,0,0x0,6
tick,0x7d8294d2a042,7512611,0,0x0,6
tick,0x7d8294d2a042,7513682,0,0x0,6
tick,0x7d8294d2a042,7514748,0,0x0,6
tick,0x7d8294d2a042,7515808,0,0x0,6
tick,0x7d8294d2a042,7516866,0,0x0,6
tick,0x7d8294d2a042,7517923,0,0x0,6
tick,0x7d8294d2a042,7518983,0,0x0,6
tick,0x7d8294d2a042,7520047,0,0x0,6
tick,0x7d8294d2a042,7521114,0,0x0,6
tick,0x7d8294d2a042,7522179,0,0x0,6
tick,0x7d8294d2a042,7523239,0,0x0,6
tick,0x7d8294d2a042,7524295,0,0x0,6
tick,0x7d8294d2a042,7525358,0,0x0,6
tick,0x7d8294d2a042,7526424,0,0x0,6
tick,0x7d8294d2a042,7527482,0,0x0,6
tick,0x7d8294d2a042,7528543,0,0x0,6
tick,0x7d8294d2a042,7529607,0,0x0,6
tick,0x7d8294d2a042,7530669,0,0x0,6
tick,0x7d8294d2a042,7531731,0,0x0,6
tick,0x7d8294d2a042,7532811,0,0x0,6
tick,0x7d8294d2a042,7533876,0,0x0,6
tick,0x7d8294d2a042,7534952,0,0x0,6
tick,0x7d8294d2a042,7536018,0,0x0,6
tick,0x7d8294d2a042,7537077,0,0x0,6
tick,0x7d8294d2a042,7538148,0,0x0,6
tick,0x7d8294d2a042,7539212,0,0x0,6
tick,0x7d8294d2a042,7540272,0,0x0,6
tick,0x7d8294d2a042,7541329,0,0x0,6
tick,0x7d8294d2a042,7542400,0,0x0,6
tick,0x7d8294d2a042,7543457,0,0x0,6
tick,0x7d8294d2a042,7544527,0,0x0,6
tick,0x7d8294d2a042,7545590,0,0x0,6
tick,0x7d8294d2a042,7546663,0,0x0,6
tick,0x7d8294d2a042,7547723,0,0x0,6
tick,0x7d8294d2a042,7548791,0,0x0,6
tick,0x7d8294d2a042,7549859,0,0x0,6
tick,0x7d8294d2a042,7550921,0,0x0,6
tick,0x7d8294d2a042,7551992,0,0x0,6
tick,0x7d8294d2a042,7553059,0,0x0,6
tick,0x7d8294d2a042,7554121,0,0x0,6
tick,0x7d8294d2a042,7555204,0,0x0,6
tick,0x7d8294d2a042,7556341,0,0x0,6
tick,0x7d8294d2a042,7557395,0,0x0,6
tick,0x7d8294d2a042,7558465,0,0x0,6
tick,0x7d8294d2a042,7559476,0,0x0,6
tick,0x7d8294d2a042,7560554,0,0x0,6
tick,0x7d8294d2a042,7561616,0,0x0,6
tick,0x7d8294d2a042,7562701,0,0x0,6
tick,0x7d8294d2a042,7563702,0,0x0,6
tick,0x7d8294d2a042,7564809,0,0x0,6
tick,0x7d8294d2a042,7565795,0,0x0,6
tick,0x7d8294d2a042,7566865,0,0x0,6
tick,0x7d8294d2a042,7567928,0,0x0,6
tick,0x7d8294d2a042,7568991,0,0x0,6
tick,0x7d8294d2a042,7570050,0,0x0,6
tick,0x7d8294d2a042,7571121,0,0x0,6
tick,0x7d8294d2a042,7572196,0,0x0,6
tick,0x7d8294d2a042,7573265,0,0x0,6
tick,0x7d8294d2a042,7574323,0,0x0,6
tick,0x7d8294d2a042,7575399,0,0x0,6
tick,0x7d8294d2a042,7576468,0,0x0,6
tick,0x7d8294d2a042,7577536,0,0x0,6
tick,0x7d8294d2a042,7578605,0,0x0,6
tick,0x7d8294d2a042,7579674,0,0x0,6
tick,0x7d8294d2a042,7580748,0,0x0,6
tick,0x7d8294d2a042,7581828,0,0x0,6
tick,0x7d8294d2a042,7582903,0,0x0,6
tick,0x7d8294d2a042,7583964,0,0x0,6
tick,0x7d8294d2a042,7585043,0,0x0,6
tick,0x7d8294d2a042,7586103,0,0x0,6
tick,0x7d8294d2a042,7587165,0,0x0,6
tick,0x7d8294d2a042,7588228,0,0x0,6
tick,0x7d8294d2a042,7589291,0,0x0,6
tick,0x7d8294d2a042,7590356,0,0x0,6
tick,0x7d8294d2a042,7591404,0,0x0,6
tick,0x7d8294d2a042,7592479,0,0x0,6
tick,0x7d8294d2a042,7593589,0,0x0,6
tick,0x7d8294d2a042,7594689,0,0x0,6
tick,0x7d8294d2a042,7595697,0,0x0,6
tick,0x7d8294d2a042,7596834,0,0x0,6
tick,0x7d8294d2a042,7597878,0,0x0,6
tick,0x7d8294d2a042,7598864,0,0x0,6
tick,0x7d8294d2a042,7599926,0,0x0,6
tick,0x7d8294d2a042,7600992,0,0x0,6
tick,0x7d8294d2a042,7602064,0,0x0,6
tick,0x7d8294d2a042,7603132,0,0x0,6
tick,0x7d8294d2a042,7604195,0,0x0,6
tick,0x7d8294d2a042,7605266,0,0x0,6
tick,0x7d8294d2a042,7606331,0,0x0,6
tick,0x7d8294d2a042,7607404,0,0x0,6
tick,0x7d8294d2a042,7608553,0,0x0,6
tick,0x7d8294d2a042,7609614,0,0x0,6
tick,0x7d8294d2a042,7610601,0,0x0,6
tick,0x7d8294d2a042,7611731,0,0x0,6
tick,0x7d8294d2a042,7612802,0,0x0,6
tick,0x7d8294d2a042,7613801,0,0x0,6
tick,0x7d8294d2a042,7614863,0,0x0,6
tick,0x7d8294d2a042,7616014,0,0x0,6
tick,0x7d8294d2a042,7617070,0,0x0,6
tick,0x7d8294d2a042,7618056,0,0x0,6
tick,0x7d8294d2a042,7619122,0,0x0,6
tick,0x7d8294d2a042,7620271,0,0x0,6
tick,0x7d8294d2a042,7621232,0,0x0,6
tick,0x7d8294d2a042,7622309,0,0x0,6
tick,0x7d8294d2a042,7623402,0,0x0,6
tick,0x7d8294d2a042,7624464,0,0x0,6
tick,0x7d8294d2a042,7625577,0,0x0,6
tick,0x7d8294d2a042,7626558,0,0x0,6
tick,0x7d8294d2a042,7627648,0,0x0,6
tick,0x7d8294d2a042,7628759,0,0x0,6
tick,0x7d8294d2a042,7629829,0,0x0,6
tick,0x7d8294d2a042,7630804,0,0x0,6
tick,0x7d8294d2a042,7631935,0,0x0,6
tick,0x7d8294d2a042,7633001,0,0x0,6
tick,0x7d8294d2a042,7633970,0,0x0,6
tick,0x7d8294d2a042,7635042,0,0x0,6
tick,0x7d8294d2a042,7636127,0,0x0,6
tick,0x7d8294d2a042,7637183,0,0x0,6
tick,0x7d8294d2a042,7638254,0,0x0,6
tick,0x7d8294d2a042,7639309,0,0x0,6
tick,0x7d8294d2a042,7640365,0,0x0,6
tick,0x7d8294d2a042,7641439,0,0x0,6
tick,0x7d8294d2a042,7642506,0,0x0,6
tick,0x7d8294d2a042,7643557,0,0x0,6
tick,0x7d8294d2a042,7644637,0,0x0,6
tick,0x7d8294d2a042,7645722,0,0x0,6
tick,0x7d8294d2a042,7646796,0,0x0,6
tick,0x7d8294d2a042,7647870,0,0x0,6
tick,0x7d8294d2a042,7648950,0,0x0,6
tick,0x7d8294d2a042,7650030,0,0x0,6
tick,0x7d8294d2a042,7651119,0,0x0,6
tick,0x7d8294d2a042,7652202,0,0x0,6
tick,0x7d8294d2a042,7653284,0,0x0,6
tick,0x7d8294d2a042,7654367,0,0x0,6
tick,0x7d8294d2a042,7655396,0,0x0,6
tick,0x7d8294d2a042,7656451,0,0x0,6
tick,0x7d8294d2a042,7657525,0,0x0,6
tick,0x7d8294d2a042,7658601,0,0x0,6
tick,0x7d8294d2a042,7659657,0,0x0,6
tick,0x7d8294d2a042,7660736,0,0x0,6
tick,0x7d8294d2a042,7661810,0,0x0,6
tick,0x7d8294d2a042,7662884,0,0x0,6
tick,0x7d8294d2a042,7663962,0,0x0,6
tick,0x7d8294d2a042,7665043,0,0x0,6
tick,0x7d8294d2a042,7666129,0,0x0,6
tick,0x7d8294d2a042,7667202,0,0x0,6
tick,0x7d8294d2a042,7668276,0,0x0,6
tick,0x7d8294d2a042,7669374,0,0x0,6
tick,0x7d8294d2a042,7670436,0,0x0,6
tick,0x7d8294d2a042,7671506,0,0x0,6
tick,0x7d8294d2a042,7672631,0,0x0,6
tick,0x7d8294d2a042,7673701,0,0x0,6
tick,0x7d8294d2a042,7674759,0,0x0,6
tick,0x7d8294d2a042,7675807,0,0x0,6
tick,0x7d8294d2a042,7676884,0,0x0,6
tick,0x7d8294d2a042,7677897,0,0x0,6
tick,0x7d8294d2a042,7678975,0,0x0,6
tick,0x7d8294d2a042,7680116,0,0x0,6
tick,0x7d8294d2a042,7681272,0,0x0,6
tick,0x7d8294d2a042,7682349,0,0x0,6
tick,0x7d8294d2a042,7683490,0,0x0,6
tick,0x7d8294d2a042,7684646,0,0x0,6
tick,0x7d8294d2a042,7685725,0,0x0,6
tick,0x7d8294d2a042,7686732,0,0x0,6
tick,0x7d8294d2a042,7687863,0,0x0,6
tick,0x7d8294d2a042,7689022,0,0x0,6
tick,0x7d8294d2a042,7690177,0,0x0,6
tick,0x7d8294d2a042,7691334,0,0x0,6
tick,0x7d8294d2a042,7692384,0,0x0,6
tick,0x7d8294d2a042,7693478,0,0x0,6
tick,0x7d8294d2a042,7694566,0,0x0,6
tick,0x7d8294d2a042,7695551,0,0x0,6
tick,0x7d8294d2a042,7696688,0,0x0,6
tick,0x7d8294d2a042,7697831,0,0x0,6
tick,0x7d8294d2a042,7698912,0,0x0,6
tick,0x7d8294d2a042,7700052,0,0x0,6
tick,0x7d8294d2a042,7701204,0,0x0,6
tick,0x7d8294d2a042,7702361,0,0x0,6
tick,0x7d8294d2a042,7703493,0,0x0,6
tick,0x7d8294d2a042,7704592,0,0x0,6
tick,0x7d8294d2a042,7705658,0,0x0,6
tick,0x7d8294d2a042,7706751,0,0x0,6
tick,0x7d8294d2a042,7707770,0,0x0,6
tick,0x7d8294d2a042,7708931,0,0x0,6
tick,0x7d8294d2a042,7710069,0,0x0,6
tick,0x7d8294d2a042,7711139,0,0x0,6
tick,0x7d8294d2a042,7712181,0,0x0,6
tick,0x7d8294d2a042,7713259,0,0x0,6
tick,0x7d8294d2a042,7714321,0,0x0,6
tick,0x7d8294d2a042,7715388,0,0x0,6
tick,0x7d8294d2a042,7716435,0,0x0,6
tick,0x7d8294d2a042,7717547,0,0x0,6
tick,0x7d8294d2a042,7718558,0,0x0,6
tick,0x7d8294d2a042,7719614,0,0x0,6
tick,0x7d8294d2a042,7720691,0,0x0,6
tick,0x7d8294d2a042,7721768,0,0x0,6
tick,0x7d8294d2a042,7722904,0,0x0,6
tick,0x7d8294d2a042,7723974,0,0x0,6
tick,0x7d8294d2a042,7725049,0,0x0,6
tick,0x7d8294d2a042,7726204,0,0x0,6
tick,0x7d8294d2a042,7727261,0,0x0,6
tick,0x7d8294d2a042,7728216,0,0x0,6
tick,0x7d8294d2a042,7729316,0,0x0,6
tick,0x7d8294d2a042,7730436,0,0x0,6
tick,0x7d8294d2a042,7731489,0,0x0,6
tick,0x7d8294d2a042,7732551,0,0x0,6
tick,0x7d8294d2a042,7733517,0,0x0,6
tick,0x7d8294d2a042,7734583,0,0x0,6
tick,0x7d8294d2a042,7735644,0,0x0,6
tick,0x7d8294d2a042,7736708,0,0x0,6
tick,0x7d8294d2a042,7737769,0,0x0,6
tick,0x7d8294d2a042,7738826,0,0x0,6
tick,0x7d8294d2a042,7740027,0,0x0,6
tick,0x7d8294d2a042,7741043,0,0x0,6
tick,0x7d8294d2a042,7742110,0,0x0,6
tick,0x7d8294d2a042,7743221,0,0x0,6
tick,0x7d8294d2a042,7744234,0,0x0,6
tick,0x7d8294d2a042,7745291,0,0x0,6
tick,0x7d8294d2a042,7746359,0,0x0,6
tick,0x7d8294d2a042,7747424,0,0x0,6
tick,0x7d8294d2a042,7748480,0,0x0,6
tick,0x7d8294d2a042,7749467,0,0x0,6
tick,0x7d8294d2a042,7750598,0,0x0,6
tick,0x7d8294d2a042,7751602,0,0x0,6
tick,0x7d8294d2a042,7752738,0,0x0,6
tick,0x7d8294d2a042,7753790,0,0x0,6
tick,0x7d8294d2a042,7754866,0,0x0,6
tick,0x7d8294d2a042,7755832,0,0x0,6
tick,0x7d8294d2a042,7756901,0,0x0,6
tick,0x7d8294d2a042,7757964,0,0x0,6
tick,0x7d8294d2a042,7759027,0,0x0,6
tick,0x7d8294d2a042,7760086,0,0x0,6
tick,0x7d8294d2a042,7761154,0,0x0,6
tick,0x7d8294d2a042,7762248,0,0x0,6
tick,0x7d8294d2a042,7763444,0,0x0,6
tick,0x7d8294d2a042,7764494,0,0x0,6
tick,0x7d8294d2a042,7765559,0,0x0,6
tick,0x7d8294d2a042,7766614,0,0x0,6
tick,0x7d8294d2a042,7767613,0,0x0,6
tick,0x7d8294d2a042,7768743,0,0x0,6
tick,0x7d8294d2a042,7769794,0,0x0,6
tick,0x7d8294d2a042,7770780,0,0x0,6
tick,0x7d8294d2a042,7771907,0,0x0,6
tick,0x7d8294d2a042,7772965,0,0x0,6
tick,0x7d8294d2a042,7773965,0,0x0,6
tick,0x7d8294d2a042,7775029,0,0x0,6
tick,0x7d8294d2a042,7776096,0,0x0,6
tick,0x7d8294d2a042,7777157,0,0x0,6
tick,0x7d8294d2a042,7778214,0,0x0,6
tick,0x7d8294d2a042,7779283,0,0x0,6
tick,0x7d8294d2a042,7780353,0,0x0,6
tick,0x7d8294d2a042,7781412,0,0x0,6
tick,0x7d8294d2a042,7782474,0,0x0,6
tick,0x7d8294d2a042,7783538,0,0x0,6
tick,0x7d8294d2a042,7784601,0,0x0,6
tick,0x7d8294d2a042,7785660,0,0x0,6
tick,0x7d8294d2a042,7786725,0,0x0,6
tick,0x7d8294d2a042,7787787,0,0x0,6
tick,0x7d8294d2a042,7788855,0,0x0,6
tick,0x7d8294d2a042,7789916,0,0x0,6
tick,0x7d8294d2a042,7790981,0,0x0,6
tick,0x7d8294d2a042,7792046,0,0x0,6
tick,0x7d8294d2a042,7793113,0,0x0,6
tick,0x7d8294d2a042,7794186,0,0x0,6
tick,0x7d8294d2a042,7795250,0,0x0,6
tick,0x7d8294d2a042,7796315,0,0x0,6
tick,0x7d8294d2a042,7797387,0,0x0,6
tick,0x7d8294d2a042,7798449,0,0x0,6
tick,0x7d8294d2a042,7799508,0,0x0,6
tick,0x7d8294d2a042,7800571,0,0x0,6
tick,0x7d8294d2a042,7801627,0,0x0,6
tick,0x7d8294d2a042,7802688,0,0x0,6
tick,0x7d8294d2a042,7803751,0,0x0,6
tick,0x7d8294d2a042,7804815,0,0x0,6
tick,0x7d8294d2a042,7805875,0,0x0,6
tick,0x7d8294d2a042,7806937,0,0x0,6
tick,0x7d8294d2a042,7808015,0,0x0,6
tick,0x7d8294d2a042,7809061,0,0x0,6
tick,0x7d8294d2a042,7810117,0,0x0,6
tick,0x7d8294d2a042,7811177,0,0x0,6
tick,0x7d8294d2a042,7812244,0,0x0,6
tick,0x7d8294d2a042,7813304,0,0x0,6
tick,0x7d8294d2a042,7814371,0,0x0,6
tick,0x7d8294d2a042,7815404,0,0x0,6
tick,0x7d8294d2a042,7816466,0,0x0,6
tick,0x7d8294d2a042,7817539,0,0x0,6
tick,0x7d8294d2a042,7818593,0,0x0,6
tick,0x7d8294d2a042,7819657,0,0x0,6
tick,0x7d8294d2a042,7820719,0,0x0,6
tick,0x7d8294d2a042,7821794,0,0x0,6
tick,0x7d8294d2a042,7822869,0,0x0,6
tick,0x7d8294d2a042,7823946,0,0x0,6
tick,0x7d8294d2a042,7825112,0,0x0,6
tick,0x7d8294d2a042,7826195,0,0x0,6
tick,0x7d8294d2a042,7827273,0,0x0,6
tick,0x7d8294d2a042,7828348,0,0x0,6
tick,0x7d8294d2a042,7829400,0,0x0,6
tick,0x7d8294d2a042,7830468,0,0x0,6
tick,0x7d8294d2a042,7831529,0,0x0,6
tick,0x7d8294d2a042,7832590,0,0x0,6
tick,0x7d8294d2a042,7833652,0,0x0,6
tick,0x7d8294d2a042,7834714,0,0x0,6
tick,0x7d8294d2a042,7835786,0,0x0,6
tick,0x7d8294d2a042,7836857,0,0x0,6
tick,0x7d8294d2a042,7837935,0,0x0,6
tick,0x7d8294d2a042,7838996,0,0x0,6
tick,0x7d8294d2a042,7840068,0,0x0,6
tick,0x7d8294d2a042,7841130,0,0x0,6
tick,0x7d8294d2a042,7842198,0,0x0,6
tick,0x7d8294d2a042,7843273,0,0x0,6
tick,0x7d8294d2a042,7844348,0,0x0,6
tick,0x7d8294d2a042,7845411,0,0x0,6
tick,0x7d8294d2a042,7846483,0,0x0,6
tick,0x7d8294d2a042,7847540,0,0x0,6
tick,0x7d8294d2a042,7848598,0,0x0,6
tick,0x7d8294d2a042,7849670,0,0x0,6
tick,0x7d8294d2a042,7850744,0,0x0,6
tick,0x7d8294d2a042,7851809,0,0x0,6
tick,0x7d8294d2a042,7852866,0,0x0,6
tick,0x7d8294d2a042,7853924,0,0x0,6
tick,0x7d8294d2a042,7854986,0,0x0,6
tick,0x7d8294d2a042,7856064,0,0x0,6
tick,0x7d8294d2a042,7857141,0,0x0,6
tick,0x7d8294d2a042,7858213,0,0x0,6
tick,0x7d8294d2a042,7859297,0,0x0,6
tick,0x7d8294d2a042,7860376,0,0x0,6
tick,0x7d8294d2a042,7861453,0,0x0,6
tick,0x7d8294d2a042,7862525,0,0x0,6
tick,0x7d8294d2a042,7863678,0,0x0,6
tick,0x7d8294d2a042,7864746,0,0x0,6
tick,0x7d8294d2a042,7865829,0,0x0,6
tick,0x7d8294d2a042,7866915,0,0x0,6
tick,0x7d8294d2a042,7868007,0,0x0,6
tick,0x7d8294d2a042,7869078,0,0x0,6
tick,0x7d8294d2a042,7870137,0,0x0,6
tick,0x7d8294d2a042,7871201,0,0x0,6
tick,0x7d8294d2a042,7872260,0,0x0,6
tick,0x7d8294d2a042,7873375,0,0x0,6
tick,0x7d8294d2a042,7874484,0,0x0,6
tick,0x7d8294d2a042,7875475,0,0x0,6
tick,0x7d8294d2a042,7876503,0,0x0,6
tick,0x7d8294d2a042,7877583,0,0x0,6
tick,0x7d8294d2a042,7878650,0,0x0,6
tick,0x7d8294d2a042,7879776,0,0x0,6
tick,0x7d8294d2a042,7880772,0,0x0,6
tick,0x7d8294d2a042,7881829,0,0x0,6
tick,0x7d8294d2a042,7882892,0,0x0,6
tick,0x7d8294d2a042,7884041,0,0x0,6
tick,0x7d8294d2a042,7885094,0,0x0,6
tick,0x7d8294d2a042,7886159,0,0x0,6
tick,0x7d8294d2a042,7887232,0,0x0,6
tick,0x7d8294d2a042,7888277,0,0x0,6
tick,0x7d8294d2a042,7889348,0,0x0,6
tick,0x7d8294d2a042,7890312,0,0x0,6
tick,0x7d8294d2a042,7891388,0,0x0,6
tick,0x7d8294d2a042,7892443,0,0x0,6
tick,0x7d8294d2a042,7893504,0,0x0,6
tick,0x7d8294d2a042,7894569,0,0x0,6
tick,0x7d8294d2a042,7895628,0,0x0,6
tick,0x7d8294d2a042,7896694,0,0x0,6
tick,0x7d8294d2a042,7897755,0,0x0,6
tick,0x7d8294d2a042,7898817,0,0x0,6
tick,0x7d8294d2a042,7899877,0,0x0,6
tick,0x7d8294d2a042,7900943,0,0x0,6
tick,0x7d8294d2a042,7902004,0,0x0,6
tick,0x7d8294d2a042,7903074,0,0x0,6
tick,0x7d8294d2a042,7904131,0,0x0,6
tick,0x7d8294d2a042,7905288,0,0x0,6
tick,0x7d8294d2a042,7906256,0,0x0,6
tick,0x7d8294d2a042,7907344,0,0x0,6
tick,0x7d8294d2a042,7908485,0,0x0,6
tick,0x7d8294d2a042,7909558,0,0x0,6
tick,0x7d8294d2a042,7910547,0,0x0,6
tick,0x7d8294d2a042,7911626,0,0x0,6
tick,0x7d8294d2a042,7912813,0,0x0,6
tick,0x7d8294d2a042,7913816,0,0x0,6
tick,0x7d8294d2a042,7914892,0,0x0,6
tick,0x7d8294d2a042,7916052,0,0x0,6
tick,0x7d8294d2a042,7917128,0,0x0,6
tick,0x7d8294d2a042,7918124,0,0x0,6
tick,0x7d8294d2a042,7919196,0,0x0,6
tick,0x7d8294d2a042,7920339,0,0x0,6
tick,0x7d8294d2a042,7921338,0,0x0,6
tick,0x7d8294d2a042,7922392,0,0x0,6
tick,0x7d8294d2a042,7923446,0,0x0,6
tick,0x7d8294d2a042,7924529,0,0x0,6
tick,0x7d8294d2a042,7925609,0,0x0,6
tick,0x7d8294d2a042,7926692,0,0x0,6
tick,0x7d8294d2a042,7927770,0,0x0,6
tick,0x7d8294d2a042,7928846,0,0x0,6
tick,0x7d8294d2a042,7929907,0,0x0,6
tick,0x7d8294d2a042,7930968,0,0x0,6
tick,0x7d8294d2a042,7932024,0,0x0,6
tick,0x7d8294d2a042,7933109,0,0x0,6
tick,0x7d8294d2a042,7934192,0,0x0,6
tick,0x7d8294d2a042,7935276,0,0x0,6
tick,0x7d8294d2a042,7936448,0,0x0,6
tick,0x7d8294d2a042,7937521,0,0x0,6
tick,0x7d8294d2a042,7938595,0,0x0,6
tick,0x7d8294d2a042,7939647,0,0x0,6
tick,0x7d8294d2a042,7940731,0,0x0,6
tick,0x7d8294d2a042,7941808,0,0x0,6
tick,0x7d8294d2a042,7942904,0,0x0,6
tick,0x7d8294d2a042,7943943,0,0x0,6
tick,0x7d8294d2a042,7945026,0,0x0,6
tick,0x7d8294d2a042,7946097,0,0x0,6
tick,0x7d8294d2a042,7947165,0,0x0,6
tick,0x7d8294d2a042,7948218,0,0x0,6
tick,0x7d8294d2a042,7949283,0,0x0,6
tick,0x7d8294d2a042,7950345,0,0x0,6
tick,0x7d8294d2a042,7951392,0,0x0,6
tick,0x7d8294d2a042,7952462,0,0x0,6
tick,0x7d8294d2a042,7953524,0,0x0,6
tick,0x7d8294d2a042,7954594,0,0x0,6
tick,0x7d8294d2a042,7955655,0,0x0,6
tick,0x7d8294d2a042,7956723,0,0x0,6
tick,0x7d8294d2a042,7957792,0,0x0,6
tick,0x7d8294d2a042,7958869,0,0x0,6
tick,0x7d8294d2a042,7959944,0,0x0,6
tick,0x7d8294d2a042,7961024,0,0x0,6
tick,0x7d8294d2a042,7962107,0,0x0,6
tick,0x7d8294d2a042,7963189,0,0x0,6
tick,0x7d8294d2a042,7964273,0,0x0,6
tick,0x7d8294d2a042,7965360,0,0x0,6
tick,0x7d8294d2a042,7966467,0,0x0,6
tick,0x7d8294d2a042,7967527,0,0x0,6
tick,0x7d8294d2a042,7968668,0,0x0,6
tick,0x7d8294d2a042,7969752,0,0x0,6
tick,0x7d8294d2a042,7970734,0,0x0,6
tick,0x7d8294d2a042,7971859,0,0x0,6
tick,0x7d8294d2a042,7972860,0,0x0,6
tick,0x7d8294d2a042,7973919,0,0x0,6
tick,0x7d8294d2a042,7974987,0,0x0,6
tick,0x7d8294d2a042,7976029,0,0x0,6
tick,0x7d8294d2a042,7977094,0,0x0,6
tick,0x7d8294d2a042,7978156,0,0x0,6
tick,0x7d8294d2a042,7979220,0,0x0,6
tick,0x7d8294d2a042,7980284,0,0x0,6
tick,0x7d8294d2a042,7981348,0,0x0,6
tick,0x7d8294d2a042,7982410,0,0x0,6
tick,0x7d8294d2a042,7983467,0,0x0,6
tick,0x7d8294d2a042,7984529,0,0x0,6
tick,0x7d8294d2a042,7985604,0,0x0,6
tick,0x7d8294d2a042,7986685,0,0x0,6
tick,0x7d8294d2a042,7987761,0,0x0,6
tick,0x7d8294d2a042,7988835,0,0x0,6
tick,0x7d8294d2a042,7989913,0,0x0,6
tick,0x7d8294d2a042,7990991,0,0x0,6
tick,0x7d8294d2a042,7992062,0,0x0,6
tick,0x7d8294d2a042,7993142,0,0x0,6
tick,0x7d8294d2a042,7994221,0,0x0,6
tick,0x7d8294d2a042,7995294,0,0x0,6
tick,0x7d8294d2a042,7996346,0,0x0,6
tick,0x7d8294d2a042,7997423,0,0x0,6
tick,0x7d8294d2a042,7998497,0,0x0,6
tick,0x7d8294d2a042,7999548,0,0x0,6
tick,0x7d8294d2a042,8000606,0,0x0,6
tick,0x7d8294d2a042,8001681,0,0x0,6
tick,0x7d8294d2a042,8002750,0,0x0,6
tick,0x7d8294d2a042,8003815,0,0x0,6
tick,0x7d8294d2a042,8004882,0,0x0,6
tick,0x7d8294d2a042,8005946,0,0x0,6
tick,0x7d8294d2a042,8007032,0,0x0,6
tick,0x7d8294d2a042,8008219,0,0x0,6
tick,0x7d8294d2a042,8009336,0,0x0,6
tick,0x7d8294d2a042,8010394,0,0x0,6
tick,0x7d8294d2a042,8011488,0,0x0,6
tick,0x7d8294d2a042,8012519,0,0x0,6
tick,0x7d8294d2a042,8013592,0,0x0,6
tick,0x7d8294d2a042,8014568,0,0x0,6
tick,0x7d8294d2a042,8015665,0,0x0,6
tick,0x7d8294d2a042,8016773,0,0x0,6
tick,0x7d8294d2a042,8017835,0,0x0,6
tick,0x7d8294d2a042,8018897,0,0x0,6
tick,0x7d8294d2a042,8019969,0,0x0,6
tick,0x7d8294d2a042,8021030,0,0x0,6
tick,0x7d8294d2a042,8022011,0,0x0,6
tick,0x7d8294d2a042,8023079,0,0x0,6
tick,0x7d8294d2a042,8024154,0,0x0,6
tick,0x7d8294d2a042,8025233,0,0x0,6
tick,0x7d8294d2a042,8026308,0,0x0,6
tick,0x7d8294d2a042,8027403,0,0x0,6
tick,0x7d8294d2a042,8028470,0,0x0,6
tick,0x7d8294d2a042,8029538,0,0x0,6
tick,0x7d8294d2a042,8030601,0,0x0,6
tick,0x7d8294d2a042,8031660,0,0x0,6
tick,0x7d8294d2a042,8032722,0,0x0,6
tick,0x7d8294d2a042,8033784,0,0x0,6
tick,0x7d8294d2a042,8034846,0,0x0,6
tick,0x7d8294d2a042,8035910,0,0x0,6
tick,0x7d8294d2a042,8036971,0,0x0,6
tick,0x7d8294d2a042,8038036,0,0x0,6
tick,0x7d8294d2a042,8039097,0,0x0,6
tick,0x7d8294d2a042,8040157,0,0x0,6
tick,0x7d8294d2a042,8041220,0,0x0,6
tick,0x7d8294d2a042,8042282,0,0x0,6
tick,0x7d8294d2a042,8043346,0,0x0,6
tick,0x7d8294d2a042,8044411,0,0x0,6
tick,0x7d8294d2a042,8045462,0,0x0,6
tick,0x7d8294d2a042,8046531,0,0x0,6
tick,0x7d8294d2a042,8047592,0,0x0,6
tick,0x7d8294d2a042,8048656,0,0x0,6
tick,0x7d8294d2a042,8049720,0,0x0,6
tick,0x7d8294d2a042,8050782,0,0x0,6
tick,0x7d8294d2a042,8051842,0,0x0,6
tick,0x7d8294d2a042,8052928,0,0x0,6
tick,0x7d8294d2a042,8054005,0,0x0,6
tick,0x7d8294d2a042,8055065,0,0x0,6
tick,0x7d8294d2a042,8056134,0,0x0,6
tick,0x7d8294d2a042,8057200,0,0x0,6
tick,0x7d8294d2a042,8058264,0,0x0,6
tick,0x7d8294d2a042,8059326,0,0x0,6
tick,0x7d8294d2a042,8060393,0,0x0,6
tick,0x7d8294d2a042,8061457,0,0x0,6
tick,0x7d8294d2a042,8062526,0,0x0,6
tick,0x7d8294d2a042,8063589,0,0x0,6
tick,0x7d8294d2a042,8064657,0,0x0,6
tick,0x7d8294d2a042,8065720,0,0x0,6
tick,0x7d8294d2a042,8066782,0,0x0,6
tick,0x7d8294d2a042,8067845,0,0x0,6
tick,0x7d8294d2a042,8068920,0,0x0,6
tick,0x7d8294d2a042,8069981,0,0x0,6
tick,0x7d8294d2a042,8071043,0,0x0,6
tick,0x7d8294d2a042,8072199,0,0x0,6
tick,0x7d8294d2a042,8073266,0,0x0,6
tick,0x7d8294d2a042,8074245,0,0x0,6
tick,0x7d8294d2a042,8075294,0,0x0,6
tick,0x7d8294d2a042,8076477,0,0x0,6
tick,0x7d8294d2a042,8077552,0,0x0,6
tick,0x7d8294d2a042,8078535,0,0x0,6
tick,0x7d8294d2a042,8079587,0,0x0,6
tick,0x7d8294d2a042,8080658,0,0x0,6
tick,0x7d8294d2a042,8081733,0,0x0,6
tick,0x7d8294d2a042,8082808,0,0x0,6
tick,0x7d8294d2a042,8083882,0,0x0,6
tick,0x7d8294d2a042,8085043,0,0x0,6
tick,0x7d8294d2a042,8086168,0,0x0,6
tick,0x7d8294d2a042,8087213,0,0x0,6
tick,0x7d8294d2a042,8088263,0,0x0,6
tick,0x7d8294d2a042,8089330,0,0x0,6
tick,0x7d8294d2a042,8090400,0,0x0,6
tick,0x7d8294d2a042,8091456,0,0x0,6
tick,0x7d8294d2a042,8092523,0,0x0,6
tick,0x7d8294d2a042,8093580,0,0x0,6
tick,0x7d8294d2a042,8094646,0,0x0,6
tick,0x7d8294d2a042,8095712,0,0x0,6
tick,0x7d8294d2a042,8096778,0,0x0,6
tick,0x7d8294d2a042,8097837,0,0x0,6
tick,0x7d8294d2a042,8098906,0,0x0,6
tick,0x7d8294d2a042,8099980,0,0x0,6
tick,0x7d8294d2a042,8101061,0,0x0,6
tick,0x7d8294d2a042,8102115,0,0x0,6
tick,0x7d8294d2a042,8103198,0,0x0,6
tick,0x7d8294d2a042,8104285,0,0x0,6
tick,0x7d8294d2a042,8105368,0,0x0,6
tick,0x7d8294d2a042,8106451,0,0x0,6
tick,0x7d8294d2a042,8107506,0,0x0,6
tick,0x7d8294d2a042,8108588,0,0x0,6
tick,0x7d8294d2a042,8109672,0,0x0,6
tick,0x7d8294d2a042,8110746,0,0x0,6
tick,0x7d8294d2a042,8111804,0,0x0,6
tick,0x7d8294d2a042,8112879,0,0x0,6
tick,0x7d8294d2a042,8113951,0,0x0,6
tick,0x7d8294d2a042,8115013,0,0x0,6
tick,0x7d8294d2a042,8116118,0,0x0,6
tick,0x7d8294d2a042,8117246,0,0x0,6
tick,0x7d8294d2a042,8118206,0,0x0,6
tick,0x7d8294d2a042,8119299,0,0x0,6
tick,0x7d8294d2a042,8120373,0,0x0,6
tick,0x7d8294d2a042,8121446,0,0x0,6
tick,0x7d8294d2a042,8122521,0,0x0,6
tick,0x7d8294d2a042,8123576,0,0x0,6
tick,0x7d8294d2a042,8124659,0,0x0,6
tick,0x7d8294d2a042,8125735,0,0x0,6
tick,0x7d8294d2a042,8126827,0,0x0,6
tick,0x7d8294d2a042,8127953,0,0x0,6
tick,0x7d8294d2a042,8129030,0,0x0,6
tick,0x7d8294d2a042,8130012,0,0x0,6
tick,0x7d8294d2a042,8131080,0,0x0,6
tick,0x7d8294d2a042,8132206,0,0x0,6
tick,0x7d8294d2a042,8133261,0,0x0,6
tick,0x7d8294d2a042,8134250,0,0x0,6
tick,0x7d8294d2a042,8135337,0,0x0,6
tick,0x7d8294d2a042,8136488,0,0x0,6
tick,0x7d8294d2a042,8137571,0,0x0,6
tick,0x7d8294d2a042,8138578,0,0x0,6
tick,0x7d8294d2a042,8139643,0,0x0,6
tick,0x7d8294d2a042,8140784,0,0x0,6
tick,0x7d8294d2a042,8141882,0,0x0,6
tick,0x7d8294d2a042,8142892,0,0x0,6
tick,0x7d8294d2a042,8144027,0,0x0,6
tick,0x7d8294d2a042,8145094,0,0x0,6
tick,0x7d8294d2a042,8146167,0,0x0,6
tick,0x7d8294d2a042,8147146,0,0x0,6
tick,0x7d8294d2a042,8148190,0,0x0,6
tick,0x7d8294d2a042,8149251,0,0x0,6
tick,0x7d8294d2a042,8150312,0,0x0,6
tick,0x7d8294d2a042,8151390,0,0x0,6
tick,0x7d8294d2a042,8152452,0,0x0,6
tick,0x7d8294d2a042,8153514,0,0x0,6
tick,0x7d8294d2a042,8154589,0,0x0,6
tick,0x7d8294d2a042,8155656,0,0x0,6
tick,0x7d8294d2a042,8156719,0,0x0,6
tick,0x7d8294d2a042,8157780,0,0x0,6
tick,0x7d8294d2a042,8158841,0,0x0,6
tick,0x7d8294d2a042,8159906,0,0x0,6
tick,0x7d8294d2a042,8160971,0,0x0,6
tick,0x7d8294d2a042,8162026,0,0x0,6
tick,0x7d8294d2a042,8163126,0,0x0,6
tick,0x7d8294d2a042,8164278,0,0x0,6
tick,0x7d8294d2a042,8165347,0,0x0,6
tick,0x7d8294d2a042,8166349,0,0x0,6
tick,0x7d8294d2a042,8167417,0,0x0,6
tick,0x7d8294d2a042,8168491,0,0x0,6
tick,0x7d8294d2a042,8169564,0,0x0,6
tick,0x7d8294d2a042,8170641,0,0x0,6
tick,0x7d8294d2a042,8171721,0,0x0,6
tick,0x7d8294d2a042,8172794,0,0x0,6
tick,0x7d8294d2a042,8173874,0,0x0,6
tick,0x7d8294d2a042,8174953,0,0x0,6
tick,0x7d8294d2a042,8176032,0,0x0,6
tick,0x7d8294d2a042,8177100,0,0x0,6
tick,0x7d8294d2a042,8178175,0,0x0,6
tick,0x7d8294d2a042,8179254,0,0x0,6
tick,0x7d8294d2a042,8180343,0,0x0,6
tick,0x7d8294d2a042,8181399,0,0x0,6
tick,0x7d8294d2a042,8182452,0,0x0,6
tick,0x7d8294d2a042,8183508,0,0x0,6
tick,0x7d8294d2a042,8184585,0,0x0,6
tick,0x7d8294d2a042,8185658,0,0x0,6
tick,0x7d8294d2a042,8186722,0,0x0,6
tick,0x7d8294d2a042,8187785,0,0x0,6
tick,0x7d8294d2a042,8188846,0,0x0,6
tick,0x7d8294d2a042,8189902,0,0x0,6
tick,0x7d8294d2a042,8190981,0,0x0,6
tick,0x7d8294d2a042,8192042,0,0x0,6
tick,0x7d8294d2a042,8193113,0,0x0,6
tick,0x7d8294d2a042,8194187,0,0x0,6
tick,0x7d8294d2a042,8195266,0,0x0,6
tick,0x7d8294d2a042,8196340,0,0x0,6
tick,0x7d8294d2a042,8197469,0,0x0,6
tick,0x7d8294d2a042,8198585,0,0x0,6
tick,0x7d8294d2a042,8199576,0,0x0,6
tick,0x7d8294d2a042,8200690,0,0x0,6
tick,0x7d8294d2a042,8201681,0,0x0,6
tick,0x7d8294d2a042,8202730,0,0x0,6
tick,0x7d8294d2a042,8203873,0,0x0,6
tick,0x7d8294d2a042,8204934,0,0x0,6
tick,0x7d8294d2a042,8205895,0,0x0,6
tick,0x7d8294d2a042,8206982,0,0x0,6
tick,0x7d8294d2a042,8208106,0,0x0,6
tick,0x7d8294d2a042,8209118,0,0x0,6
tick,0x7d8294d2a042,8210185,0,0x0,6
tick,0x7d8294d2a042,8211235,0,0x0,6
tick,0x7d8294d2a042,8212371,0,0x0,6
tick,0x7d8294d2a042,8213436,0,0x0,6
tick,0x7d8294d2a042,8214421,0,0x0,6
tick,0x7d8294d2a042,8215472,0,0x0,6
tick,0x7d8294d2a042,8216616,0,0x0,6
tick,0x7d8294d2a042,8217590,0,0x0,6
tick,0x7d8294d2a042,8218647,0,0x0,6
tick,0x7d8294d2a042,8219712,0,0x0,6
tick,0x7d8294d2a042,8220774,0,0x0,6
tick,0x7d8294d2a042,8221866,0,0x0,6
tick,0x7d8294d2a042,8222902,0,0x0,6
tick,0x7d8294d2a042,8223964,0,0x0,6
tick,0x7d8294d2a042,8225034,0,0x0,6
tick,0x7d8294d2a042,8226094,0,0x0,6
tick,0x7d8294d2a042,8227156,0,0x0,6
tick,0x7d8294d2a042,8228221,0,0x0,6
tick,0x7d8294d2a042,8229298,0,0x0,6
tick,0x7d8294d2a042,8230361,0,0x0,6
tick,0x7d8294d2a042,8231401,0,0x0,6
tick,0x7d8294d2a042,8232464,0,0x0,6
tick,0x7d8294d2a042,8233525,0,0x0,6
tick,0x7d8294d2a042,8234585,0,0x0,6
tick,0x7d8294d2a042,8235645,0,0x0,6
tick,0x7d8294d2a042,8236713,0,0x0,6
tick,0x7d8294d2a042,8237772,0,0x0,6
tick,0x7d8294d2a042,8238830,0,0x0,6
tick,0x7d8294d2a042,8239896,0,0x0,6
tick,0x7d8294d2a042,8240955,0,0x0,6
tick,0x7d8294d2a042,8242025,0,0x0,6
tick,0x7d8294d2a042,8243099,0,0x0,6
tick,0x7d8294d2a042,8244239,0,0x0,6
tick,0x7d8294d2a042,8245232,0,0x0,6
tick,0x7d8294d2a042,8246268,0,0x0,6
tick,0x7d8294d2a042,8247338,0,0x0,6
tick,0x7d8294d2a042,8248399,0,0x0,6
tick,0x7d8294d2a042,8249460,0,0x0,6
tick,0x7d8294d2a042,8250521,0,0x0,6
tick,0x7d8294d2a042,8251577,0,0x0,6
tick,0x7d8294d2a042,8252651,0,0x0,6
tick,0x7d8294d2a042,8253713,0,0x0,6
tick,0x7d8294d2a042,8254807,0,0x0,6
tick,0x7d8294d2a042,8255922,0,0x0,6
tick,0x7d8294d2a042,8256991,0,0x0,6
tick,0x7d8294d2a042,8258070,0,0x0,6
tick,0x7d8294d2a042,8259044,0,0x0,6
tick,0x7d8294d2a042,8260180,0,0x0,6
tick,0x7d8294d2a042,8261238,0,0x0,6
tick,0x7d8294d2a042,8262236,0,0x0,6
tick,0x7d8294d2a042,8263310,0,0x0,6
tick,0x7d8294d2a042,8264376,0,0x0,6
tick,0x7d8294d2a042,8265447,0,0x0,6
tick,0x7d8294d2a042,8266524,0,0x0,6
tick,0x7d8294d2a042,8267580,0,0x0,6
tick,0x7d8294d2a042,8268745,0,0x0,6
tick,0x7d8294d2a042,8269814,0,0x0,6
tick,0x7d8294d2a042,8270885,0,0x0,6
tick,0x7d8294d2a042,8271969,0,0x0,6
tick,0x7d8294d2a042,8273052,0,0x0,6
tick,0x7d8294d2a042,8274114,0,0x0,6
tick,0x7d8294d2a042,8275172,0,0x0,6
tick,0x7d8294d2a042,8276242,0,0x0,6
tick,0x7d8294d2a042,8277317,0,0x0,6
tick,0x7d8294d2a042,8278379,0,0x0,6
tick,0x7d8294d2a042,8279434,0,0x0,6
tick,0x7d8294d2a042,8280503,0,0x0,6
tick,0x7d8294d2a042,8281566,0,0x0,6
tick,0x7d8294d2a042,8282628,0,0x0,6
tick,0x7d8294d2a042,8283691,0,0x0,6
tick,0x7d8294d2a042,8284757,0,0x0,6
tick,0x7d8294d2a042,8285820,0,0x0,6
tick,0x7d8294d2a042,8286890,0,0x0,6
tick,0x7d8294d2a042,8287969,0,0x0,6
tick,0x7d8294d2a042,8289023,0,0x0,6
tick,0x7d8294d2a042,8290096,0,0x0,6
tick,0x7d8294d2a042,8291168,0,0x0,6
tick,0x7d8294d2a042,8292315,0,0x0,6
tick,0x7d8294d2a042,8293386,0,0x0,6
tick,0x7d8294d2a042,8294459,0,0x0,6
tick,0x7d8294d2a042,8295513,0,0x0,6
tick,0x7d8294d2a042,8296610,0,0x0,6
tick,0x7d8294d2a042,8297657,0,0x0,6
tick,0x7d8294d2a042,8298750,0,0x0,6
tick,0x7d8294d2a042,8299889,0,0x0,6
tick,0x7d8294d2a042,8300861,0,0x0,6
tick,0x7d8294d2a042,8302023,0,0x0,6
tick,0x7d8294d2a042,8303175,0,0x0,6
tick,0x7d8294d2a042,8304328,0,0x0,6
tick,0x7d8294d2a042,8305492,0,0x0,6
tick,0x7d8294d2a042,8306576,0,0x0,6
tick,0x7d8294d2a042,8307630,0,0x0,6
tick,0x7d8294d2a042,8308784,0,0x0,6
tick,0x7d8294d2a042,8309933,0,0x0,6
tick,0x7d8294d2a042,8311091,0,0x0,6
tick,0x7d8294d2a042,8312238,0,0x0,6
tick,0x7d8294d2a042,8313319,0,0x0,6
tick,0x7d8294d2a042,8314280,0,0x0,6
tick,0x7d8294d2a042,8315329,0,0x0,6
tick,0x7d8294d2a042,8316396,0,0x0,6
tick,0x7d8294d2a042,8317555,0,0x0,6
tick,0x7d8294d2a042,8318621,0,0x0,6
tick,0x7d8294d2a042,8319681,0,0x0,6
tick,0x7d8294d2a042,8320747,0,0x0,6
tick,0x7d8294d2a042,8321812,0,0x0,6
tick,0x7d8294d2a042,8322888,0,0x0,6
tick,0x7d8294d2a042,8323947,0,0x0,6
tick,0x7d8294d2a042,8325089,0,0x0,6
tick,0x7d8294d2a042,8326173,0,0x0,6
tick,0x7d8294d2a042,8327248,0,0x0,6
tick,0x7d8294d2a042,8328316,0,0x0,6
tick,0x7d8294d2a042,8329303,0,0x0,6
tick,0x7d8294d2a042,8330376,0,0x0,6
tick,0x7d8294d2a042,8331413,0,0x0,6
tick,0x7d8294d2a042,8332487,0,0x0,6
tick,0x7d8294d2a042,8333550,0,0x0,6
tick,0x7d8294d2a042,8334616,0,0x0,6
tick,0x7d8294d2a042,8335674,0,0x0,6
tick,0x7d8294d2a042,8336737,0,0x0,6
tick,0x7d8294d2a042,8337803,0,0x0,6
tick,0x7d8294d2a042,8338886,0,0x0,6
tick,0x7d8294d2a042,8340015,0,0x0,6
tick,0x7d8294d2a042,8340988,0,0x0,6
tick,0x7d8294d2a042,8342054,0,0x0,6
tick,0x7d8294d2a042,8343116,0,0x0,6
tick,0x7d8294d2a042,8344177,0,0x0,6
tick,0x7d8294d2a042,8345244,0,0x0,6
tick,0x7d8294d2a042,8346308,0,0x0,6
tick,0x7d8294d2a042,8347382,0,0x0,6
tick,0x7d8294d2a042,8348437,0,0x0,6
tick,0x7d8294d2a042,8349509,0,0x0,6
tick,0x7d8294d2a042,8350571,0,0x0,6
tick,0x7d8294d2a042,8351627,0,0x0,6
tick,0x7d8294d2a042,8352690,0,0x0,6
tick,0x7d8294d2a042,8353760,0,0x0,6
tick,0x7d8294d2a042,8354824,0,0x0,6
tick,0x7d8294d2a042,8355981,0,0x0,6
tick,0x7d8294d2a042,8356957,0,0x0,6
tick,0x7d8294d2a042,8358012,0,0x0,6
tick,0x7d8294d2a042,8359094,0,0x0,6
tick,0x7d8294d2a042,8360150,0,0x0,6
tick,0x7d8294d2a042,8361222,0,0x0,6
tick,0x7d8294d2a042,8362306,0,0x0,6
tick,0x7d8294d2a042,8363382,0,0x0,6
tick,0x7d8294d2a042,8364444,0,0x0,6
tick,0x7d8294d2a042,8365499,0,0x0,6
tick,0x7d8294d2a042,8366567,0,0x0,6
tick,0x7d8294d2a042,8367621,0,0x0,6
tick,0x7d8294d2a042,8368696,0,0x0,6
tick,0x7d8294d2a042,8369769,0,0x0,6
tick,0x7d8294d2a042,8370847,0,0x0,6
tick,0x7d8294d2a042,8371919,0,0x0,6
tick,0x7d8294d2a042,8372978,0,0x0,6
tick,0x7d8294d2a042,8374042,0,0x0,6
tick,0x7d8294d2a042,8375108,0,0x0,6
tick,0x7d8294d2a042,8376167,0,0x0,6
tick,0x7d8294d2a042,8377224,0,0x0,6
tick,0x7d8294d2a042,8378388,0,0x0,6
tick,0x7d8294d2a042,8379348,0,0x0,6
tick,0x7d8294d2a042,8380415,0,0x0,6
tick,0x7d8294d2a042,8381494,0,0x0,6
tick,0x7d8294d2a042,8382579,0,0x0,6
tick,0x7d8294d2a042,8383651,0,0x0,6
tick,0x7d8294d2a042,8384783,0,0x0,6
tick,0x7d8294d2a042,8385787,0,0x0,6
tick,0x7d8294d2a042,8386841,0,0x0,6
tick,0x7d8294d2a042,8387896,0,0x0,6
tick,0x7d8294d2a042,8388983,0,0x0,6
tick,0x7d8294d2a042,8390055,0,0x0,6
tick,0x7d8294d2a042,8391153,0,0x0,6
tick,0x7d8294d2a042,8392295,0,0x0,6
tick,0x7d8294d2a042,8393286,0,0x0,6
tick,0x7d8294d2a042,8394351,0,0x0,6
tick,0x7d8294d2a042,8395414,0,0x0,6
tick,0x7d8294d2a042,8396500,0,0x0,6
tick,0x7d8294d2a042,8397578,0,0x0,6
tick,0x7d8294d2a042,8398650,0,0x0,6
tick,0x7d8294d2a042,8399712,0,0x0,6
tick,0x7d8294d2a042,8400776,0,0x0,6
tick,0x7d8294d2a042,8401846,0,0x0,6
tick,0x7d8294d2a042,8402917,0,0x0,6
tick,0x7d8294d2a042,8404070,0,0x0,6
tick,0x7d8294d2a042,8405141,0,0x0,6
tick,0x7d8294d2a042,8406201,0,0x0,6
tick,0x7d8294d2a042,8407192,0,0x0,6
tick,0x7d8294d2a042,8408338,0,0x0,6
tick,0x7d8294d2a042,8409396,0,0x0,6
tick,0x7d8294d2a042,8410478,0,0x0,6
tick,0x7d8294d2a042,8411520,0,0x0,6
tick,0x7d8294d2a042,8412628,0,0x0,6
tick,0x7d8294d2a042,8413688,0,0x0,6
tick,0x7d8294d2a042,8414752,0,0x0,6
tick,0x7d8294d2a042,8415882,0,0x0,6
tick,0x7d8294d2a042,8416964,0,0x0,6
tick,0x7d8294d2a042,8417940,0,0x0,6
tick,0x7d8294d2a042,8419006,0,0x0,6
tick,0x7d8294d2a042,8420082,0,0x0,6
tick,0x7d8294d2a042,8421195,0,0x0,6
tick,0x7d8294d2a042,8422187,0,0x0,6
tick,0x7d8294d2a042,8423243,0,0x0,6
tick,0x7d8294d2a042,8424387,0,0x0,6
tick,0x7d8294d2a042,8425349,0,0x0,6
tick,0x7d8294d2a042,8426442,0,0x0,6
tick,0x7d8294d2a042,8427504,0,0x0,6
tick,0x7d8294d2a042,8428635,0,0x0,6
tick,0x7d8294d2a042,8429604,0,0x0,6
tick,0x7d8294d2a042,8430681,0,0x0,6
tick,0x7d8294d2a042,8431752,0,0x0,6
tick,0x7d8294d2a042,8432804,0,0x0,6
tick,0x7d8294d2a042,8433864,0,0x0,6
tick,0x7d8294d2a042,8434918,0,0x0,6
tick,0x7d8294d2a042,8435976,0,0x0,6
tick,0x7d8294d2a042,8437040,0,0x0,6
tick,0x7d8294d2a042,8438105,0,0x0,6
tick,0x7d8294d2a042,8439168,0,0x0,6
tick,0x7d8294d2a042,8440234,0,0x0,6
tick,0x7d8294d2a042,8441295,0,0x0,6
tick,0x7d8294d2a042,8442361,0,0x0,6
tick,0x7d8294d2a042,8443416,0,0x0,6
tick,0x7d8294d2a042,8444484,0,0x0,6
tick,0x7d8294d2a042,8445538,0,0x0,6
tick,0x7d8294d2a042,8446623,0,0x0,6
tick,0x7d8294d2a042,8447659,0,0x0,6
tick,0x7d8294d2a042,8448755,0,0x0,6
tick,0x7d8294d2a042,8449810,0,0x0,6
tick,0x7d8294d2a042,8450892,0,0x0,6
tick,0x7d8294d2a042,8451967,0,0x0,6
tick,0x7d8294d2a042,8453052,0,0x0,6
tick,0x7d8294d2a042,8454143,0,0x0,6
tick,0x7d8294d2a042,8455207,0,0x0,6
tick,0x7d8294d2a042,8456282,0,0x0,6
tick,0x7d8294d2a042,8457363,0,0x0,6
tick,0x7d8294d2a042,8458416,0,0x0,6
tick,0x7d8294d2a042,8459472,0,0x0,6
tick,0x7d8294d2a042,8460558,0,0x0,6
tick,0x7d8294d2a042,8461639,0,0x0,6
tick,0x7d8294d2a042,8462714,0,0x0,6
tick,0x7d8294d2a042,8463789,0,0x0,6
tick,0x7d8294d2a042,8464862,0,0x0,6
tick,0x7d8294d2a042,8469905,0,0x0,6
tick,0x7d8294d2a042,8477934,0,0x0,6
tick,0x7d8294d2a042,8478993,0,0x0,6
tick,0x7d8294d2a042,8480061,0,0x0,6
tick,0x7d8294d2a042,8481142,0,0x0,6
tick,0x7d8294d2a042,8482216,0,0x0,6
tick,0x7d8294d2a042,8483296,0,0x0,6
tick,0x7d8294d2a042,8484520,0,0x0,6
tick,0x7d8294d2a042,8485589,0,0x0,6
tick,0x7d8294d2a042,8486667,0,0x0,6
tick,0x7d8294d2a042,8487728,0,0x0,6
tick,0x7d8294d2a042,8488890,0,0x0,6
tick,0x7d8294d2a042,8489969,0,0x0,6
tick,0x7d8294d2a042,8490983,0,0x0,6
tick,0x7d8294d2a042,8492163,0,0x0,6
tick,0x7d8294d2a042,8493342,0,0x0,6
tick,0x7d8294d2a042,8494324,0,0x0,6
tick,0x7d8294d2a042,8495437,0,0x0,6
tick,0x7d8294d2a042,8496723,0,0x0,6
tick,0x7d8294d2a042,8497868,0,0x0,6
tick,0x7d8294d2a042,8498905,0,0x0,6
tick,0x7d8294d2a042,8500084,0,0x0,6
tick,0x7d8294d2a042,8501245,0,0x0,6
tick,0x7d8294d2a042,8502351,0,0x0,6
tick,0x7d8294d2a042,8503540,0,0x0,6
tick,0x7d8294d2a042,8504718,0,0x0,6
tick,0x7d8294d2a042,8505869,0,0x0,6
tick,0x7d8294d2a042,8506982,0,0x0,6
tick,0x7d8294d2a042,8508080,0,0x0,6
tick,0x7d8294d2a042,8509237,0,0x0,6
tick,0x7d8294d2a042,8510378,0,0x0,6
tick,0x7d8294d2a042,8511506,0,0x0,6
tick,0x7d8294d2a042,8512692,0,0x0,6
tick,0x7d8294d2a042,8513873,0,0x0,6
tick,0x7d8294d2a042,8515050,0,0x0,6
tick,0x7d8294d2a042,8516103,0,0x0,6
tick,0x7d8294d2a042,8517313,0,0x0,6
tick,0x7d8294d2a042,8518470,0,0x0,6
tick,0x7d8294d2a042,8519565,0,0x0,6
tick,0x7d8294d2a042,8520775,0,0x0,6
tick,0x7d8294d2a042,8521922,0,0x0,6
tick,0x7d8294d2a042,8522941,0,0x0,6
tick,0x7d8294d2a042,8524086,0,0x0,6
tick,0x7d8294d2a042,8525238,0,0x0,6
tick,0x7d8294d2a042,8526381,0,0x0,6
tick,0x7d8294d2a042,8527257,0,0x0,6
tick,0x7d8294d2a042,8528496,0,0x0,6
tick,0x7d8294d2a042,8529596,0,0x0,6
tick,0x7d8294d2a042,8530669,0,0x0,6
tick,0x7d8294d2a042,8531667,0,0x0,6
tick,0x7d8294d2a042,8532924,0,0x0,6
tick,0x7d8294d2a042,8534059,0,0x0,6
tick,0x7d8294d2a042,8535220,0,0x0,6
tick,0x7d8294d2a042,8536278,0,0x0,6
tick,0x7d8294d2a042,8537366,0,0x0,6
tick,0x7d8294d2a042,8538531,0,0x0,6
tick,0x7d8294d2a042,8539580,0,0x0,6
tick,0x7d8294d2a042,8540807,0,0x0,6
tick,0x7d8294d2a042,8541963,0,0x0,6
tick,0x7d8294d2a042,8543134,0,0x0,6
tick,0x7d8294d2a042,8544196,0,0x0,6
tick,0x7d8294d2a042,8545340,0,0x0,6
tick,0x7d8294d2a042,8546494,0,0x0,6
tick,0x7d8294d2a042,8547568,0,0x0,6
tick,0x7d8294d2a042,8548807,0,0x0,6
tick,0x7d8294d2a042,8549951,0,0x0,6
tick,0x7d8294d2a042,8550946,0,0x0,6
tick,0x7d8294d2a042,8552107,0,0x0,6
tick,0x7d8294d2a042,8553270,0,0x0,6
tick,0x7d8294d2a042,8554447,0,0x0,6
tick,0x7d8294d2a042,8555591,0,0x0,6
tick,0x7d8294d2a042,8556798,0,0x0,6
tick,0x7d8294d2a042,8557970,0,0x0,6
tick,0x7d8294d2a042,8559108,0,0x0,6
tick,0x7d8294d2a042,8560185,0,0x0,6
tick,0x7d8294d2a042,8561331,0,0x0,6
tick,0x7d8294d2a042,8562504,0,0x0,6
tick,0x7d8294d2a042,8563617,0,0x0,6
tick,0x7d8294d2a042,8564750,0,0x0,6
tick,0x7d8294d2a042,8565879,0,0x0,6
tick,0x7d8294d2a042,8567025,0,0x0,6
tick,0x7d8294d2a042,8568181,0,0x0,6
tick,0x7d8294d2a042,8569238,0,0x0,6
tick,0x7d8294d2a042,8570339,0,0x0,6
tick,0x7d8294d2a042,8571415,0,0x0,6
tick,0x7d8294d2a042,8572496,0,0x0,6
tick,0x7d8294d2a042,8573573,0,0x0,6
tick,0x7d8294d2a042,8574656,0,0x0,6
tick,0x7d8294d2a042,8575604,0,0x0,6
tick,0x7d8294d2a042,8576845,0,0x0,6
tick,0x7d8294d2a042,8577989,0,0x0,6
tick,0x7d8294d2a042,8579161,0,0x0,6
tick,0x7d8294d2a042,8580276,0,0x0,6
tick,0x7d8294d2a042,8581314,0,0x0,6
tick,0x7d8294d2a042,8582408,0,0x0,6
tick,0x7d8294d2a042,8583413,0,0x0,6
tick,0x7d8294d2a042,8584442,0,0x0,6
tick,0x7d8294d2a042,8585637,0,0x0,6
tick,0x7d8294d2a042,8586695,0,0x0,6
tick,0x7d8294d2a042,8587630,0,0x0,6
tick,0x7d8294d2a042,8588819,0,0x0,6
tick,0x7d8294d2a042,8589895,0,0x0,6
tick,0x7d8294d2a042,8591052,0,0x0,6
tick,0x7d8294d2a042,8592142,0,0x0,6
tick,0x7d8294d2a042,8593282,0,0x0,6
tick,0x7d8294d2a042,8594434,0,0x0,6
tick,0x7d8294d2a042,8595573,0,0x0,6
tick,0x7d8294d2a042,8596806,0,0x0,6
tick,0x7d8294d2a042,8597831,0,0x0,6
tick,0x7d8294d2a042,8598986,0,0x0,6
tick,0x7d8294d2a042,8600058,0,0x0,6
tick,0x7d8294d2a042,8601195,0,0x0,6
tick,0x7d8294d2a042,8602421,0,0x0,6
tick,0x7d8294d2a042,8603575,0,0x0,6
tick,0x7d8294d2a042,8604727,0,0x0,6
tick,0x7d8294d2a042,8605806,0,0x0,6
tick,0x7d8294d2a042,8607032,0,0x0,6
tick,0x7d8294d2a042,8607947,0,0x0,6
tick,0x7d8294d2a042,8609161,0,0x0,6
tick,0x7d8294d2a042,8610316,0,0x0,6
tick,0x7d8294d2a042,8611476,0,0x0,6
tick,0x7d8294d2a042,8612640,0,0x0,6
tick,0x7d8294d2a042,8613691,0,0x0,6
tick,0x7d8294d2a042,8614851,0,0x0,6
tick,0x7d8294d2a042,8615930,0,0x0,6
tick,0x7d8294d2a042,8617097,0,0x0,6
tick,0x7d8294d2a042,8618201,0,0x0,6
tick,0x7d8294d2a042,8619335,0,0x0,6
tick,0x7d8294d2a042,8620538,0,0x0,6
tick,0x7d8294d2a042,8621634,0,0x0,6
tick,0x7d8294d2a042,8622789,0,0x0,6
tick,0x7d8294d2a042,8623847,0,0x0,6
tick,0x7d8294d2a042,8624898,0,0x0,6
tick,0x7d8294d2a042,8625986,0,0x0,6
tick,0x7d8294d2a042,8627084,0,0x0,6
tick,0x7d8294d2a042,8628138,0,0x0,6
tick,0x7d8294d2a042,8629253,0,0x0,6
tick,0x7d8294d2a042,8630312,0,0x0,6
tick,0x7d8294d2a042,8631407,0,0x0,6
tick,0x7d8294d2a042,8632541,0,0x0,6
tick,0x7d8294d2a042,8633567,0,0x0,6
tick,0x7d8294d2a042,8634716,0,0x0,6
tick,0x7d8294d2a042,8635718,0,0x0,6
tick,0x7d8294d2a042,8636838,0,0x0,6
tick,0x7d8294d2a042,8637990,0,0x0,6
tick,0x7d8294d2a042,8639143,0,0x0,6
tick,0x7d8294d2a042,8640149,0,0x0,6
tick,0x7d8294d2a042,8641213,0,0x0,6
tick,0x7d8294d2a042,8642365,0,0x0,6
tick,0x7d8294d2a042,8643582,0,0x0,6
tick,0x7d8294d2a042,8644659,0,0x0,6
tick,0x7d8294d2a042,8645764,0,0x0,6
tick,0x7d8294d2a042,8646938,0,0x0,6
tick,0x7d8294d2a042,8648078,0,0x0,6
tick,0x7d8294d2a042,8649210,0,0x0,6
tick,0x7d8294d2a042,8650361,0,0x0,6
tick,0x7d8294d2a042,8651515,0,0x0,6
tick,0x7d8294d2a042,8652682,0,0x0,6
tick,0x7d8294d2a042,8653828,0,0x0,6
tick,0x7d8294d2a042,8654897,0,0x0,6
tick,0x7d8294d2a042,8655978,0,0x0,6
tick,0x7d8294d2a042,8657126,0,0x0,6
tick,0x7d8294d2a042,8658377,0,0x0,6
tick,0x7d8294d2a042,8659498,0,0x0,6
tick,0x7d8294d2a042,8660663,0,0x0,6
tick,0x7d8294d2a042,8661839,0,0x0,6
tick,0x7d8294d2a042,8662949,0,0x0,6
tick,0x7d8294d2a042,8664158,0,0x0,6
tick,0x7d8294d2a042,8665274,0,0x0,6
tick,0x7d8294d2a042,8666285,0,0x0,6
tick,0x7d8294d2a042,8667496,0,0x0,6
tick,0x7d8294d2a042,8668759,0,0x0,6
tick,0x7d8294d2a042,8669805,0,0x0,6
tick,0x7d8294d2a042,8671020,0,0x0,6
tick,0x7d8294d2a042,8672025,0,0x0,6
tick,0x7d8294d2a042,8673167,0,0x0,6
tick,0x7d8294d2a042,8674349,0,0x0,6
tick,0x7d8294d2a042,8675505,0,0x0,6
tick,0x7d8294d2a042,8676664,0,0x0,6
tick,0x7d8294d2a042,8677903,0,0x0,6
tick,0x7d8294d2a042,8678924,0,0x0,6
tick,0x7d8294d2a042,8680111,0,0x0,6
tick,0x7d8294d2a042,8681209,0,0x0,6
tick,0x7d8294d2a042,8682392,0,0x0,6
tick,0x7d8294d2a042,8683483,0,0x0,6
tick,0x7d8294d2a042,8684626,0,0x0,6
tick,0x7d8294d2a042,8685790,0,0x0,6
tick,0x7d8294d2a042,8686923,0,0x0,6
tick,0x7d8294d2a042,8688003,0,0x0,6
tick,0x7d8294d2a042,8689205,0,0x0,6
tick,0x7d8294d2a042,8690315,0,0x0,6
tick,0x7d8294d2a042,8691446,0,0x0,6
tick,0x7d8294d2a042,8692615,0,0x0,6
tick,0x7d8294d2a042,8693817,0,0x0,6
tick,0x7d8294d2a042,8694965,0,0x0,6
tick,0x7d8294d2a042,8695997,0,0x0,6
tick,0x7d8294d2a042,8697143,0,0x0,6
tick,0x7d8294d2a042,8698294,0,0x0,6
tick,0x7d8294d2a042,8699447,0,0x0,6
tick,0x7d8294d2a042,8700589,0,0x0,6
tick,0x7d8294d2a042,8701785,0,0x0,6
tick,0x7d8294d2a042,8702899,0,0x0,6
tick,0x7d8294d2a042,8703978,0,0x0,6
tick,0x7d8294d2a042,8705139,0,0x0,6
tick,0x7d8294d2a042,8706277,0,0x0,6
tick,0x7d8294d2a042,8707430,0,0x0,6
tick,0x7d8294d2a042,8708591,0,0x0,6
tick,0x7d8294d2a042,8709763,0,0x0,6
tick,0x7d8294d2a042,8710889,0,0x0,6
tick,0x7d8294d2a042,8712013,0,0x0,6
tick,0x7d8294d2a042,8713134,0,0x0,6
tick,0x7d8294d2a042,8714281,0,0x0,6
tick,0x7d8294d2a042,8715443,0,0x0,6
tick,0x7d8294d2a042,8716594,0,0x0,6
tick,0x7d8294d2a042,8717679,0,0x0,6
tick,0x7d8294d2a042,8718756,0,0x0,6
tick,0x7d8294d2a042,8719833,0,0x0,6
tick,0x7d8294d2a042,8720914,0,0x0,6
tick,0x7d8294d2a042,8722156,0,0x0,6
tick,0x7d8294d2a042,8723203,0,0x0,6
tick,0x7d8294d2a042,8724527,0,0x0,6
tick,0x7d8294d2a042,8725630,0,0x0,6
tick,0x7d8294d2a042,8726787,0,0x0,6
tick,0x7d8294d2a042,8727775,0,0x0,6
tick,0x7d8294d2a042,8728915,0,0x0,6
tick,0x7d8294d2a042,8729948,0,0x0,6
tick,0x7d8294d2a042,8731197,0,0x0,6
tick,0x7d8294d2a042,8732269,0,0x0,6
tick,0x7d8294d2a042,8733287,0,0x0,6
tick,0x7d8294d2a042,8734446,0,0x0,6
tick,0x7d8294d2a042,8735632,0,0x0,6
tick,0x7d8294d2a042,8736833,0,0x0,6
tick,0x7d8294d2a042,8737909,0,0x0,6
tick,0x7d8294d2a042,8739055,0,0x0,6
tick,0x7d8294d2a042,8740217,0,0x0,6
tick,0x7d8294d2a042,8741332,0,0x0,6
tick,0x7d8294d2a042,8742536,0,0x0,6
tick,0x7d8294d2a042,8743594,0,0x0,6
tick,0x7d8294d2a042,8744820,0,0x0,6
tick,0x7d8294d2a042,8745913,0,0x0,6
tick,0x7d8294d2a042,8747050,0,0x0,6
tick,0x7d8294d2a042,8748122,0,0x0,6
tick,0x7d8294d2a042,8749291,0,0x0,6
tick,0x7d8294d2a042,8750491,0,0x0,6
tick,0x7d8294d2a042,8751590,0,0x0,6
tick,0x7d8294d2a042,8752819,0,0x0,6
tick,0x7d8294d2a042,8753853,0,0x0,6
tick,0x7d8294d2a042,8755128,0,0x0,6
tick,0x7d8294d2a042,8756153,0,0x0,6
tick,0x7d8294d2a042,8757261,0,0x0,6
tick,0x7d8294d2a042,8758367,0,0x0,6
tick,0x7d8294d2a042,8759646,0,0x0,6
tick,0x7d8294d2a042,8760740,0,0x0,6
tick,0x7d8294d2a042,8761969,0,0x0,6
tick,0x7d8294d2a042,8763009,0,0x0,6
tick,0x7d8294d2a042,8764212,0,0x0,6
tick,0x7d8294d2a042,8765343,0,0x0,6
tick,0x7d8294d2a042,8766508,0,0x0,6
tick,0x7d8294d2a042,8767540,0,0x0,6
tick,0x7d8294d2a042,8768815,0,0x0,6
tick,0x7d8294d2a042,8769928,0,0x0,6
tick,0x7d8294d2a042,8771123,0,0x0,6
tick,0x7d8294d2a042,8772175,0,0x0,6
tick,0x7d8294d2a042,8773324,0,0x0,6
tick,0x7d8294d2a042,8774495,0,0x0,6
tick,0x7d8294d2a042,8775575,0,0x0,6
tick,0x7d8294d2a042,8776792,0,0x0,6
tick,0x7d8294d2a042,8777924,0,0x0,6
tick,0x7d8294d2a042,8779078,0,0x0,6
tick,0x7d8294d2a042,8780154,0,0x0,6
tick,0x7d8294d2a042,8781296,0,0x0,6
tick,0x7d8294d2a042,8782474,0,0x0,6
tick,0x7d8294d2a042,8783544,0,0x0,6
tick,0x7d8294d2a042,8784794,0,0x0,6
tick,0x7d8294d2a042,8785853,0,0x0,6
tick,0x7d8294d2a042,8786928,0,0x0,6
tick,0x7d8294d2a042,8788066,0,0x0,6
tick,0x7d8294d2a042,8789165,0,0x0,6
tick,0x7d8294d2a042,8790255,0,0x0,6
tick,0x7d8294d2a042,8791322,0,0x0,6
tick,0x7d8294d2a042,8792398,0,0x0,6
tick,0x7d8294d2a042,8793542,0,0x0,6
tick,0x7d8294d2a042,8794622,0,0x0,6
tick,0x7d8294d2a042,8795614,0,0x0,6
tick,0x7d8294d2a042,8796775,0,0x0,6
tick,0x7d8294d2a042,8797904,0,0x0,6
tick,0x7d8294d2a042,8799057,0,0x0,6
tick,0x7d8294d2a042,8800121,0,0x0,6
tick,0x7d8294d2a042,8801228,0,0x0,6
tick,0x7d8294d2a042,8802377,0,0x0,6
tick,0x7d8294d2a042,8803523,0,0x0,6
tick,0x7d8294d2a042,8804578,0,0x0,6
tick,0x7d8294d2a042,8805553,0,0x0,6
tick,0x7d8294d2a042,8806771,0,0x0,6
tick,0x7d8294d2a042,8807776,0,0x0,6
tick,0x7d8294d2a042,8808915,0,0x0,6
tick,0x7d8294d2a042,8809987,0,0x0,6
tick,0x7d8294d2a042,8810997,0,0x0,6
tick,0x7d8294d2a042,8812132,0,0x0,6
tick,0x7d8294d2a042,8813216,0,0x0,6
tick,0x7d8294d2a042,8814299,0,0x0,6
tick,0x7d8294d2a042,8815384,0,0x0,6
tick,0x7d8294d2a042,8816466,0,0x0,6
tick,0x7d8294d2a042,8817532,0,0x0,6
tick,0x7d8294d2a042,8818631,0,0x0,6
tick,0x7d8294d2a042,8819593,0,0x0,6
tick,0x7d8294d2a042,8820824,0,0x0,6
tick,0x7d8294d2a042,8821828,0,0x0,6
tick,0x7d8294d2a042,8822923,0,0x0,6
tick,0x7d8294d2a042,8824079,0,0x0,6
tick,0x7d8294d2a042,8825161,0,0x0,6
tick,0x7d8294d2a042,8826149,0,0x0,6
tick,0x7d8294d2a042,8827224,0,0x0,6
tick,0x7d8294d2a042,8828436,0,0x0,6
tick,0x7d8294d2a042,8829542,0,0x0,6
tick,0x7d8294d2a042,8830503,0,0x0,6
tick,0x7d8294d2a042,8831630,0,0x0,6
tick,0x7d8294d2a042,8832817,0,0x0,6
tick,0x7d8294d2a042,8833949,0,0x0,6
tick,0x7d8294d2a042,8835033,0,0x0,6
tick,0x7d8294d2a042,8836193,0,0x0,6
tick,0x7d8294d2a042,8837318,0,0x0,6
tick,0x7d8294d2a042,8838407,0,0x0,6
tick,0x7d8294d2a042,8839568,0,0x0,6
tick,0x7d8294d2a042,8840699,0,0x0,6
tick,0x7d8294d2a042,8841804,0,0x0,6
tick,0x7d8294d2a042,8842966,0,0x0,6
tick,0x7d8294d2a042,8844097,0,0x0,6
tick,0x7d8294d2a042,8845210,0,0x0,6
tick,0x7d8294d2a042,8846427,0,0x0,6
tick,0x7d8294d2a042,8847413,0,0x0,6
tick,0x7d8294d2a042,8848578,0,0x0,6
tick,0x7d8294d2a042,8849732,0,0x0,6
tick,0x7d8294d2a042,8850885,0,0x0,6
tick,0x7d8294d2a042,8852022,0,0x0,6
tick,0x7d8294d2a042,8853112,0,0x0,6
tick,0x7d8294d2a042,8854184,0,0x0,6
tick,0x7d8294d2a042,8855260,0,0x0,6
tick,0x7d8294d2a042,8856433,0,0x0,6
tick,0x7d8294d2a042,8857589,0,0x0,6
tick,0x7d8294d2a042,8858743,0,0x0,6
tick,0x7d8294d2a042,8859816,0,0x0,6
tick,0x7d8294d2a042,8860975,0,0x0,6
tick,0x7d8294d2a042,8862186,0,0x0,6
tick,0x7d8294d2a042,8863206,0,0x0,6
tick,0x7d8294d2a042,8864356,0,0x0,6
tick,0x7d8294d2a042,8865506,0,0x0,6
tick,0x7d8294d2a042,8866683,0,0x0,6
tick,0x7d8294d2a042,8867730,0,0x0,6
tick,0x7d8294d2a042,8868850,0,0x0,6
tick,0x7d8294d2a042,8870016,0,0x0,6
tick,0x7d8294d2a042,8871041,0,0x0,6
tick,0x7d8294d2a042,8872119,0,0x0,6
tick,0x7d8294d2a042,8873277,0,0x0,6
tick,0x7d8294d2a042,8874430,0,0x0,6
tick,0x7d8294d2a042,8875561,0,0x0,6
tick,0x7d8294d2a042,8876733,0,0x0,6
tick,0x7d8294d2a042,8877866,0,0x0,6
tick,0x7d8294d2a042,8878852,0,0x0,6
tick,0x7d8294d2a042,8879923,0,0x0,6
tick,0x7d8294d2a042,8881085,0,0x0,6
tick,0x7d8294d2a042,8882147,0,0x0,6
tick,0x7d8294d2a042,8883291,0,0x0,6
tick,0x7d8294d2a042,8884477,0,0x0,6
tick,0x7d8294d2a042,8885554,0,0x0,6
tick,0x7d8294d2a042,8886628,0,0x0,6
tick,0x7d8294d2a042,8887698,0,0x0,6
tick,0x7d8294d2a042,8888913,0,0x0,6
tick,0x7d8294d2a042,8889921,0,0x0,6
tick,0x7d8294d2a042,8890995,0,0x0,6
tick,0x7d8294d2a042,8892078,0,0x0,6
tick,0x7d8294d2a042,8893233,0,0x0,6
tick,0x7d8294d2a042,8894387,0,0x0,6
tick,0x7d8294d2a042,8895591,0,0x0,6
tick,0x7d8294d2a042,8896705,0,0x0,6
tick,0x7d8294d2a042,8897883,0,0x0,6
tick,0x7d8294d2a042,8898984,0,0x0,6
tick,0x7d8294d2a042,8900106,0,0x0,6
tick,0x7d8294d2a042,8901249,0,0x0,6
tick,0x7d8294d2a042,8902280,0,0x0,6
tick,0x7d8294d2a042,8903333,0,0x0,6
tick,0x7d8294d2a042,8904388,0,0x0,6
tick,0x7d8294d2a042,8905461,0,0x0,6
tick,0x7d8294d2a042,8906539,0,0x0,6
tick,0x7d8294d2a042,8907592,0,0x0,6
tick,0x7d8294d2a042,8908667,0,0x0,6
tick,0x7d8294d2a042,8909760,0,0x0,6
tick,0x7d8294d2a042,8910830,0,0x0,6
tick,0x7d8294d2a042,8911900,0,0x0,6
tick,0x7d8294d2a042,8912976,0,0x0,6
tick,0x7d8294d2a042,8914062,0,0x0,6
tick,0x7d8294d2a042,8915219,0,0x0,6
tick,0x7d8294d2a042,8916408,0,0x0,6
tick,0x7d8294d2a042,8917467,0,0x0,6
tick,0x7d8294d2a042,8918609,0,0x0,6
tick,0x7d8294d2a042,8919601,0,0x0,6
tick,0x7d8294d2a042,8920751,0,0x0,6
tick,0x7d8294d2a042,8921894,0,0x0,6
tick,0x7d8294d2a042,8923049,0,0x0,6
tick,0x7d8294d2a042,8924129,0,0x0,6
tick,0x7d8294d2a042,8925212,0,0x0,6
tick,0x7d8294d2a042,8926443,0,0x0,6
tick,0x7d8294d2a042,8927488,0,0x0,6
tick,0x7d8294d2a042,8928633,0,0x0,6
tick,0x7d8294d2a042,8929719,0,0x0,6
tick,0x7d8294d2a042,8930824,0,0x0,6
tick,0x7d8294d2a042,8931880,0,0x0,6
tick,0x7d8294d2a042,8933125,0,0x0,6
tick,0x7d8294d2a042,8934263,0,0x0,6
tick,0x7d8294d2a042,8935356,0,0x0,6
tick,0x7d8294d2a042,8936445,0,0x0,6
tick,0x7d8294d2a042,8937593,0,0x0,6
tick,0x7d8294d2a042,8938701,0,0x0,6
tick,0x7d8294d2a042,8939780,0,0x0,6
tick,0x7d8294d2a042,8940921,0,0x0,6
tick,0x7d8294d2a042,8942071,0,0x0,6
tick,0x7d8294d2a042,8943174,0,0x0,6
tick,0x7d8294d2a042,8944393,0,0x0,6
tick,0x7d8294d2a042,8945544,0,0x0,6
tick,0x7d8294d2a042,8946628,0,0x0,6
tick,0x7d8294d2a042,8947783,0,0x0,6
tick,0x7d8294d2a042,8948921,0,0x0,6
tick,0x7d8294d2a042,8950085,0,0x0,6
tick,0x7d8294d2a042,8951179,0,0x0,6
tick,0x7d8294d2a042,8952298,0,0x0,6
tick,0x7d8294d2a042,8953445,0,0x0,6
tick,0x7d8294d2a042,8954592,0,0x0,6
tick,0x7d8294d2a042,8955601,0,0x0,6
tick,0x7d8294d2a042,8956754,0,0x0,6
tick,0x7d8294d2a042,8957950,0,0x0,6
tick,0x7d8294d2a042,8959056,0,0x0,6
tick,0x7d8294d2a042,8960122,0,0x0,6
tick,0x7d8294d2a042,8961298,0,0x0,6
tick,0x7d8294d2a042,8962467,0,0x0,6
tick,0x7d8294d2a042,8963601,0,0x0,6
tick,0x7d8294d2a042,8964782,0,0x0,6
tick,0x7d8294d2a042,8965864,0,0x0,6
tick,0x7d8294d2a042,8967017,0,0x0,6
tick,0x7d8294d2a042,8968142,0,0x0,6
tick,0x7d8294d2a042,8969275,0,0x0,6
tick,0x7d8294d2a042,8970431,0,0x0,6
tick,0x7d8294d2a042,8971543,0,0x0,6
tick,0x7d8294d2a042,8972732,0,0x0,6
tick,0x7d8294d2a042,8973883,0,0x0,6
tick,0x7d8294d2a042,8974922,0,0x0,6
tick,0x7d8294d2a042,8976112,0,0x0,6
tick,0x7d8294d2a042,8977259,0,0x0,6
tick,0x7d8294d2a042,8978385,0,0x0,6
tick,0x7d8294d2a042,8979541,0,0x0,6
tick,0x7d8294d2a042,8980585,0,0x0,6
tick,0x7d8294d2a042,8981664,0,0x0,6
tick,0x7d8294d2a042,8982823,0,0x0,6
tick,0x7d8294d2a042,8983870,0,0x0,6
tick,0x7d8294d2a042,8985022,0,0x0,6
tick,0x7d8294d2a042,8986170,0,0x0,6
tick,0x7d8294d2a042,8987330,0,0x0,6
tick,0x7d8294d2a042,8988489,0,0x0,6
tick,0x7d8294d2a042,8989603,0,0x0,6
tick,0x7d8294d2a042,8990736,0,0x0,6
tick,0x7d8294d2a042,8991725,0,0x0,6
tick,0x7d8294d2a042,8992868,0,0x0,6
tick,0x7d8294d2a042,8994014,0,0x0,6
tick,0x7d8294d2a042,8995122,0,0x0,6
tick,0x7d8294d2a042,8996194,0,0x0,6
tick,0x7d8294d2a042,8997311,0,0x0,6
tick,0x7d8294d2a042,8998460,0,0x0,6
tick,0x7d8294d2a042,8999585,0,0x0,6
tick,0x7d8294d2a042,9000768,0,0x0,6
tick,0x7d8294d2a042,9001918,0,0x0,6
tick,0x7d8294d2a042,9002880,0,0x0,6
tick,0x7d8294d2a042,9004033,0,0x0,6
tick,0x7d8294d2a042,9005227,0,0x0,6
tick,0x7d8294d2a042,9006365,0,0x0,6
tick,0x7d8294d2a042,9007531,0,0x0,6
tick,0x7d8294d2a042,9008666,0,0x0,6
tick,0x7d8294d2a042,9009808,0,0x0,6
tick,0x7d8294d2a042,9010944,0,0x0,6
tick,0x7d8294d2a042,9012016,0,0x0,6
tick,0x7d8294d2a042,9013099,0,0x0,6
tick,0x7d8294d2a042,9014182,0,0x0,6
tick,0x7d8294d2a042,9015248,0,0x0,6
tick,0x7d8294d2a042,9016315,0,0x0,6
tick,0x7d8294d2a042,9017400,0,0x0,6
tick,0x7d8294d2a042,9018401,0,0x0,6
tick,0x7d8294d2a042,9019500,0,0x0,6
tick,0x7d8294d2a042,9020665,0,0x0,6
tick,0x7d8294d2a042,9021857,0,0x0,6
tick,0x7d8294d2a042,9022900,0,0x0,6
tick,0x7d8294d2a042,9023981,0,0x0,6
tick,0x7d8294d2a042,9025034,0,0x0,6
tick,0x7d8294d2a042,9026250,0,0x0,6
tick,0x7d8294d2a042,9027472,0,0x0,6
tick,0x7d8294d2a042,9028450,0,0x0,6
tick,0x7d8294d2a042,9029474,0,0x0,6
tick,0x7d8294d2a042,9030628,0,0x0,6
tick,0x7d8294d2a042,9031620,0,0x0,6
tick,0x7d8294d2a042,9032829,0,0x0,6
tick,0x7d8294d2a042,9033973,0,0x0,6
tick,0x7d8294d2a042,9035133,0,0x0,6
tick,0x7d8294d2a042,9036220,0,0x0,6
tick,0x7d8294d2a042,9037283,0,0x0,6
tick,0x7d8294d2a042,9038365,0,0x0,6
tick,0x7d8294d2a042,9039469,0,0x0,6
tick,0x7d8294d2a042,9040686,0,0x0,6
tick,0x7d8294d2a042,9041667,0,0x0,6
tick,0x7d8294d2a042,9042829,0,0x0,6
tick,0x7d8294d2a042,9043899,0,0x0,6
tick,0x7d8294d2a042,9045044,0,0x0,6
tick,0x7d8294d2a042,9046187,0,0x0,6
tick,0x7d8294d2a042,9047338,0,0x0,6
tick,0x7d8294d2a042,9048426,0,0x0,6
tick,0x7d8294d2a042,9049499,0,0x0,6
tick,0x7d8294d2a042,9050572,0,0x0,6
tick,0x7d8294d2a042,9051579,0,0x0,6
tick,0x7d8294d2a042,9052775,0,0x0,6
tick,0x7d8294d2a042,9053860,0,0x0,6
tick,0x7d8294d2a042,9054995,0,0x0,6
tick,0x7d8294d2a042,9056065,0,0x0,6
tick,0x7d8294d2a042,9057159,0,0x0,6
tick,0x7d8294d2a042,9058284,0,0x0,6
tick,0x7d8294d2a042,9059447,0,0x0,6
tick,0x7d8294d2a042,9060582,0,0x0,6
tick,0x7d8294d2a042,9061664,0,0x0,6
tick,0x7d8294d2a042,9062832,0,0x0,6
tick,0x7d8294d2a042,9063884,0,0x0,6
tick,0x7d8294d2a042,9065039,0,0x0,6
tick,0x7d8294d2a042,9066102,0,0x0,6
tick,0x7d8294d2a042,9067250,0,0x0,6
tick,0x7d8294d2a042,9068353,0,0x0,6
tick,0x7d8294d2a042,9069418,0,0x0,6
tick,0x7d8294d2a042,9070405,0,0x0,6
tick,0x7d8294d2a042,9071491,0,0x0,6
tick,0x7d8294d2a042,9072695,0,0x0,6
tick,0x7d8294d2a042,9073848,0,0x0,6
tick,0x7d8294d2a042,9075001,0,0x0,6
tick,0x7d8294d2a042,9076078,0,0x0,6
tick,0x7d8294d2a042,9077155,0,0x0,6
tick,0x7d8294d2a042,9078291,0,0x0,6
tick,0x7d8294d2a042,9079392,0,0x0,6
tick,0x7d8294d2a042,9080584,0,0x0,6
tick,0x7d8294d2a042,9081734,0,0x0,6
tick,0x7d8294d2a042,9082895,0,0x0,6
tick,0x7d8294d2a042,9083999,0,0x0,6
tick,0x7d8294d2a042,9085066,0,0x0,6
tick,0x7d8294d2a042,9086211,0,0x0,6
tick,0x7d8294d2a042,9087365,0,0x0,6
tick,0x7d8294d2a042,9088521,0,0x0,6
tick,0x7d8294d2a042,9089660,0,0x0,6
tick,0x7d8294d2a042,9090824,0,0x0,6
tick,0x7d8294d2a042,9091872,0,0x0,6
tick,0x7d8294d2a042,9093045,0,0x0,6
tick,0x7d8294d2a042,9094109,0,0x0,6
tick,0x7d8294d2a042,9095264,0,0x0,6
tick,0x7d8294d2a042,9096331,0,0x0,6
tick,0x7d8294d2a042,9097415,0,0x0,6
tick,0x7d8294d2a042,9098524,0,0x0,6
tick,0x7d8294d2a042,9099486,0,0x0,6
tick,0x7d8294d2a042,9100549,0,0x0,6
tick,0x7d8294d2a042,9101620,0,0x0,6
tick,0x7d8294d2a042,9102775,0,0x0,6
tick,0x7d8294d2a042,9103836,0,0x0,6
tick,0x7d8294d2a042,9104997,0,0x0,6
tick,0x7d8294d2a042,9106075,0,0x0,6
tick,0x7d8294d2a042,9107220,0,0x0,6
tick,0x7d8294d2a042,9108230,0,0x0,6
tick,0x7d8294d2a042,9109351,0,0x0,6
tick,0x7d8294d2a042,9110411,0,0x0,6
tick,0x7d8294d2a042,9111481,0,0x0,6
tick,0x7d8294d2a042,9112583,0,0x0,6
tick,0x7d8294d2a042,9113659,0,0x0,6
tick,0x7d8294d2a042,9114738,0,0x0,6
tick,0x7d8294d2a042,9115802,0,0x0,6
tick,0x7d8294d2a042,9116865,0,0x0,6
tick,0x7d8294d2a042,9118016,0,0x0,6
tick,0x7d8294d2a042,9119230,0,0x0,6
tick,0x7d8294d2a042,9120275,0,0x0,6
tick,0x7d8294d2a042,9121354,0,0x0,6
tick,0x7d8294d2a042,9122511,0,0x0,6
tick,0x7d8294d2a042,9123474,0,0x0,6
tick,0x7d8294d2a042,9124630,0,0x0,6
tick,0x7d8294d2a042,9125722,0,0x0,6
tick,0x7d8294d2a042,9126794,0,0x0,6
tick,0x7d8294d2a042,9127850,0,0x0,6
tick,0x7d8294d2a042,9129013,0,0x0,6
tick,0x7d8294d2a042,9130098,0,0x0,6
tick,0x7d8294d2a042,9131230,0,0x0,6
tick,0x7d8294d2a042,9132311,0,0x0,6
tick,0x7d8294d2a042,9133283,0,0x0,6
tick,0x7d8294d2a042,9134356,0,0x0,6
tick,0x7d8294d2a042,9135419,0,0x0,6
tick,0x7d8294d2a042,9136502,0,0x0,6
tick,0x7d8294d2a042,9137586,0,0x0,6
tick,0x7d8294d2a042,9138669,0,0x0,6
tick,0x7d8294d2a042,9139743,0,0x0,6
tick,0x7d8294d2a042,9140825,0,0x0,6
tick,0x7d8294d2a042,9141909,0,0x0,6
tick,0x7d8294d2a042,9142992,0,0x0,6
tick,0x7d8294d2a042,9144067,0,0x0,6
tick,0x7d8294d2a042,9145247,0,0x0,6
tick,0x7d8294d2a042,9146229,0,0x0,6
tick,0x7d8294d2a042,9147293,0,0x0,6
tick,0x7d8294d2a042,9148435,0,0x0,6
tick,0x7d8294d2a042,9149492,0,0x0,6
tick,0x7d8294d2a042,9150483,0,0x0,6
tick,0x7d8294d2a042,9151553,0,0x0,6
tick,0x7d8294d2a042,9152701,0,0x0,6
tick,0x7d8294d2a042,9153747,0,0x0,6
tick,0x7d8294d2a042,9154728,0,0x0,6
tick,0x7d8294d2a042,9155856,0,0x0,6
tick,0x7d8294d2a042,9156931,0,0x0,6
tick,0x7d8294d2a042,9157917,0,0x0,6
tick,0x7d8294d2a042,9158982,0,0x0,6
tick,0x7d8294d2a042,9160124,0,0x0,6
tick,0x7d8294d2a042,9161093,0,0x0,6
tick,0x7d8294d2a042,9162161,0,0x0,6
tick,0x7d8294d2a042,9163225,0,0x0,6
tick,0x7d8294d2a042,9164294,0,0x0,6
tick,0x7d8294d2a042,9165358,0,0x0,6
tick,0x7d8294d2a042,9166422,0,0x0,6
tick,0x7d8294d2a042,9167479,0,0x0,6
tick,0x7d8294d2a042,9168546,0,0x0,6
tick,0x7d8294d2a042,9169616,0,0x0,6
tick,0x7d8294d2a042,9170681,0,0x0,6
tick,0x7d8294d2a042,9171745,0,0x0,6
tick,0x7d8294d2a042,9172810,0,0x0,6
tick,0x7d8294d2a042,9173881,0,0x0,6
tick,0x7d8294d2a042,9174946,0,0x0,6
tick,0x7d8294d2a042,9176008,0,0x0,6
tick,0x7d8294d2a042,9177068,0,0x0,6
tick,0x7d8294d2a042,9178135,0,0x0,6
tick,0x7d8294d2a042,9179189,0,0x0,6
tick,0x7d8294d2a042,9180255,0,0x0,6
tick,0x7d8294d2a042,9181328,0,0x0,6
tick,0x7d8294d2a042,9182389,0,0x0,6
tick,0x7d8294d2a042,9183423,0,0x0,6
tick,0x7d8294d2a042,9184567,0,0x0,6
tick,0x7d8294d2a042,9185628,0,0x0,6
tick,0x7d8294d2a042,9186692,0,0x0,6
tick,0x7d8294d2a042,9187713,0,0x0,6
tick,0x7d8294d2a042,9188725,0,0x0,6
tick,0x7d8294d2a042,9189789,0,0x0,6
tick,0x7d8294d2a042,9190851,0,0x0,6
tick,0x7d8294d2a042,9191915,0,0x0,6
tick,0x7d8294d2a042,9192975,0,0x0,6
tick,0x7d8294d2a042,9194045,0,0x0,6
tick,0x7d8294d2a042,9195106,0,0x0,6
tick,0x7d8294d2a042,9196174,0,0x0,6
tick,0x7d8294d2a042,9197232,0,0x0,6
tick,0x7d8294d2a042,9198308,0,0x0,6
tick,0x7d8294d2a042,9199394,0,0x0,6
tick,0x7d8294d2a042,9200563,0,0x0,6
tick,0x7d8294d2a042,9201741,0,0x0,6
tick,0x7d8294d2a042,9202813,0,0x0,6
tick,0x7d8294d2a042,9203875,0,0x0,6
tick,0x7d8294d2a042,9204944,0,0x0,6
tick,0x7d8294d2a042,9206003,0,0x0,6
tick,0x7d8294d2a042,9207071,0,0x0,6
tick,0x7d8294d2a042,9208215,0,0x0,6
tick,0x7d8294d2a042,9209286,0,0x0,6
tick,0x7d8294d2a042,9210344,0,0x0,6
tick,0x7d8294d2a042,9211314,0,0x0,6
tick,0x7d8294d2a042,9212484,0,0x0,6
tick,0x7d8294d2a042,9213529,0,0x0,6
tick,0x7d8294d2a042,9214529,0,0x0,6
tick,0x7d8294d2a042,9215606,0,0x0,6
tick,0x7d8294d2a042,9216667,0,0x0,6
tick,0x7d8294d2a042,9217737,0,0x0,6
tick,0x7d8294d2a042,9218808,0,0x0,6
tick,0x7d8294d2a042,9219871,0,0x0,6
tick,0x7d8294d2a042,9220940,0,0x0,6
tick,0x7d8294d2a042,9222003,0,0x0,6
tick,0x7d8294d2a042,9223068,0,0x0,6
tick,0x7d8294d2a042,9224130,0,0x0,6
tick,0x7d8294d2a042,9225192,0,0x0,6
tick,0x7d8294d2a042,9226258,0,0x0,6
tick,0x7d8294d2a042,9227327,0,0x0,6
tick,0x7d8294d2a042,9228392,0,0x0,6
tick,0x7d8294d2a042,9229464,0,0x0,6
tick,0x7d8294d2a042,9230535,0,0x0,6
tick,0x7d8294d2a042,9231596,0,0x0,6
tick,0x7d8294d2a042,9232672,0,0x0,6
tick,0x7d8294d2a042,9233746,0,0x0,6
tick,0x7d8294d2a042,9234812,0,0x0,6
tick,0x7d8294d2a042,9235896,0,0x0,6
tick,0x7d8294d2a042,9236955,0,0x0,6
tick,0x7d8294d2a042,9238019,0,0x0,6
tick,0x7d8294d2a042,9239097,0,0x0,6
tick,0x7d8294d2a042,9240156,0,0x0,6
tick,0x7d8294d2a042,9241238,0,0x0,6
tick,0x7d8294d2a042,9242307,0,0x0,6
tick,0x7d8294d2a042,9243393,0,0x0,6
tick,0x7d8294d2a042,9244452,0,0x0,6
tick,0x7d8294d2a042,9245510,0,0x0,6
tick,0x7d8294d2a042,9246567,0,0x0,6
tick,0x7d8294d2a042,9247611,0,0x0,6
tick,0x7d8294d2a042,9248684,0,0x0,6
tick,0x7d8294d2a042,9249753,0,0x0,6
tick,0x7d8294d2a042,9250825,0,0x0,6
tick,0x7d8294d2a042,9251899,0,0x0,6
tick,0x7d8294d2a042,9252974,0,0x0,6
tick,0x7d8294d2a042,9254053,0,0x0,6
tick,0x7d8294d2a042,9255127,0,0x0,6
tick,0x7d8294d2a042,9256203,0,0x0,6
tick,0x7d8294d2a042,9257265,0,0x0,6
tick,0x7d8294d2a042,9258336,0,0x0,6
tick,0x7d8294d2a042,9259407,0,0x0,6
tick,0x7d8294d2a042,9260571,0,0x0,6
tick,0x7d8294d2a042,9261633,0,0x0,6
tick,0x7d8294d2a042,9262607,0,0x0,6
tick,0x7d8294d2a042,9263673,0,0x0,6
tick,0x7d8294d2a042,9264736,0,0x0,6
tick,0x7d8294d2a042,9265794,0,0x0,6
tick,0x7d8294d2a042,9266868,0,0x0,6
tick,0x7d8294d2a042,9267931,0,0x0,6
tick,0x7d8294d2a042,9268998,0,0x0,6
tick,0x7d8294d2a042,9270064,0,0x0,6
tick,0x7d8294d2a042,9271139,0,0x0,6
tick,0x7d8294d2a042,9272284,0,0x0,6
tick,0x7d8294d2a042,9273370,0,0x0,6
tick,0x7d8294d2a042,9274524,0,0x0,6
tick,0x7d8294d2a042,9275529,0,0x0,6
tick,0x7d8294d2a042,9276734,0,0x0,6
tick,0x7d8294d2a042,9277730,0,0x0,6
tick,0x7d8294d2a042,9278811,0,0x0,6
tick,0x7d8294d2a042,9279878,0,0x0,6
tick,0x7d8294d2a042,9280952,0,0x0,6
tick,0x7d8294d2a042,9282033,0,0x0,6
tick,0x7d8294d2a042,9283102,0,0x0,6
tick,0x7d8294d2a042,9284173,0,0x0,6
tick,0x7d8294d2a042,9285248,0,0x0,6
tick,0x7d8294d2a042,9286336,0,0x0,6
tick,0x7d8294d2a042,9287425,0,0x0,6
tick,0x7d8294d2a042,9288494,0,0x0,6
tick,0x7d8294d2a042,9289595,0,0x0,6
tick,0x7d8294d2a042,9290667,0,0x0,6
tick,0x7d8294d2a042,9291811,0,0x0,6
tick,0x7d8294d2a042,9292811,0,0x0,6
tick,0x7d8294d2a042,9293871,0,0x0,6
tick,0x7d8294d2a042,9294953,0,0x0,6
tick,0x7d8294d2a042,9296031,0,0x0,6
tick,0x7d8294d2a042,9297112,0,0x0,6
tick,0x7d8294d2a042,9298178,0,0x0,6
tick,0x7d8294d2a042,9299268,0,0x0,6
tick,0x7d8294d2a042,9300348,0,0x0,6
tick,0x7d8294d2a042,9301399,0,0x0,6
tick,0x7d8294d2a042,9302480,0,0x0,6
tick,0x7d8294d2a042,9303541,0,0x0,6
tick,0x7d8294d2a042,9304617,0,0x0,6
tick,0x7d8294d2a042,9305680,0,0x0,6
tick,0x7d8294d2a042,9306740,0,0x0,6
tick,0x7d8294d2a042,9307808,0,0x0,6
tick,0x7d8294d2a042,9308882,0,0x0,6
tick,0x7d8294d2a042,9309941,0,0x0,6
tick,0x7d8294d2a042,9311006,0,0x0,6
tick,0x7d8294d2a042,9312079,0,0x0,6
tick,0x7d8294d2a042,9313154,0,0x0,6
tick,0x7d8294d2a042,9314215,0,0x0,6
tick,0x7d8294d2a042,9315284,0,0x0,6
tick,0x7d8294d2a042,9316344,0,0x0,6
tick,0x7d8294d2a042,9317408,0,0x0,6
tick,0x7d8294d2a042,9318475,0,0x0,6
tick,0x7d8294d2a042,9319534,0,0x0,6
tick,0x7d8294d2a042,9320601,0,0x0,6
tick,0x7d8294d2a042,9321684,0,0x0,6
tick,0x7d8294d2a042,9322743,0,0x0,6
tick,0x7d8294d2a042,9323869,0,0x0,6
tick,0x7d8294d2a042,9324848,0,0x0,6
tick,0x7d8294d2a042,9325936,0,0x0,6
tick,0x7d8294d2a042,9327010,0,0x0,6
tick,0x7d8294d2a042,9328084,0,0x0,6
tick,0x7d8294d2a042,9329157,0,0x0,6
tick,0x7d8294d2a042,9330235,0,0x0,6
tick,0x7d8294d2a042,9331328,0,0x0,6
tick,0x7d8294d2a042,9332406,0,0x0,6
tick,0x7d8294d2a042,9333489,0,0x0,6
tick,0x7d8294d2a042,9334577,0,0x0,6
tick,0x7d8294d2a042,9335646,0,0x0,6
tick,0x7d8294d2a042,9336709,0,0x0,6
tick,0x7d8294d2a042,9337785,0,0x0,6
tick,0x7d8294d2a042,9338856,0,0x0,6
tick,0x7d8294d2a042,9339935,0,0x0,6
tick,0x7d8294d2a042,9341001,0,0x0,6
tick,0x7d8294d2a042,9342068,0,0x0,6
tick,0x7d8294d2a042,9343131,0,0x0,6
tick,0x7d8294d2a042,9344201,0,0x0,6
tick,0x7d8294d2a042,9345271,0,0x0,6
tick,0x7d8294d2a042,9346343,0,0x0,6
tick,0x7d8294d2a042,9347424,0,0x0,6
tick,0x7d8294d2a042,9348493,0,0x0,6
tick,0x7d8294d2a042,9349554,0,0x0,6
tick,0x7d8294d2a042,9350637,0,0x0,6
tick,0x7d8294d2a042,9351697,0,0x0,6
tick,0x7d8294d2a042,9352845,0,0x0,6
tick,0x7d8294d2a042,9353826,0,0x0,6
tick,0x7d8294d2a042,9354891,0,0x0,6
tick,0x7d8294d2a042,9355965,0,0x0,6
tick,0x7d8294d2a042,9357037,0,0x0,6
tick,0x7d8294d2a042,9358098,0,0x0,6
tick,0x7d8294d2a042,9359165,0,0x0,6
tick,0x7d8294d2a042,9360240,0,0x0,6
tick,0x7d8294d2a042,9361290,0,0x0,6
tick,0x7d8294d2a042,9362386,0,0x0,6
tick,0x7d8294d2a042,9363420,0,0x0,6
tick,0x7d8294d2a042,9364469,0,0x0,6
tick,0x7d8294d2a042,9365572,0,0x0,6
tick,0x7d8294d2a042,9366598,0,0x0,6
tick,0x7d8294d2a042,9368275,0,0x0,6
tick,0x7d8294d2a042,9369343,0,0x0,6
tick,0x7d8294d2a042,9370416,0,0x0,6
tick,0x7d8294d2a042,9371471,0,0x0,6
tick,0x7d8294d2a042,9372546,0,0x0,6
tick,0x7d8294d2a042,9373622,0,0x0,6
tick,0x7d8294d2a042,9374695,0,0x0,6
tick,0x7d8294d2a042,9375775,0,0x0,6
tick,0x7d8294d2a042,9376848,0,0x0,6
tick,0x7d8294d2a042,9377922,0,0x0,6
tick,0x7d8294d2a042,9379004,0,0x0,6
tick,0x7d8294d2a042,9380078,0,0x0,6
tick,0x7d8294d2a042,9381151,0,0x0,6
tick,0x7d8294d2a042,9382226,0,0x0,6
tick,0x7d8294d2a042,9383304,0,0x0,6
tick,0x7d8294d2a042,9384380,0,0x0,6
tick,0x7d8294d2a042,9385452,0,0x0,6
tick,0x7d8294d2a042,9386525,0,0x0,6
tick,0x7d8294d2a042,9387579,0,0x0,6
tick,0x7d8294d2a042,9388652,0,0x0,6
tick,0x7d8294d2a042,9389730,0,0x0,6
tick,0x7d8294d2a042,9390946,0,0x0,6
tick,0x7d8294d2a042,9392025,0,0x0,6
tick,0x7d8294d2a042,9393091,0,0x0,6
tick,0x7d8294d2a042,9394157,0,0x0,6
tick,0x7d8294d2a042,9395066,0,0x0,6
tick,0x7d8294d2a042,9396135,0,0x0,6
tick,0x7d8294d2a042,9397276,0,0x0,6
tick,0x7d8294d2a042,9398346,0,0x0,6
tick,0x7d8294d2a042,9399424,0,0x0,6
tick,0x7d8294d2a042,9400451,0,0x0,6
tick,0x7d8294d2a042,9401511,0,0x0,6
tick,0x7d8294d2a042,9402485,0,0x0,6
tick,0x7d8294d2a042,9403576,0,0x0,6
tick,0x7d8294d2a042,9404702,0,0x0,6
tick,0x7d8294d2a042,9405744,0,0x0,6
tick,0x7d8294d2a042,9406805,0,0x0,6
tick,0x7d8294d2a042,9407907,0,0x0,6
tick,0x7d8294d2a042,9408924,0,0x0,6
tick,0x7d8294d2a042,9409986,0,0x0,6
tick,0x7d8294d2a042,9411047,0,0x0,6
tick,0x7d8294d2a042,9412107,0,0x0,6
tick,0x7d8294d2a042,9413155,0,0x0,6
tick,0x7d8294d2a042,9414226,0,0x0,6
tick,0x7d8294d2a042,9415283,0,0x0,6
tick,0x7d8294d2a042,9416333,0,0x0,6
tick,0x7d8294d2a042,9417410,0,0x0,6
tick,0x7d8294d2a042,9418462,0,0x0,6
tick,0x7d8294d2a042,9419475,0,0x0,6
tick,0x7d8294d2a042,9420555,0,0x0,6
tick,0x7d8294d2a042,9421626,0,0x0,6
tick,0x7d8294d2a042,9422604,0,0x0,6
tick,0x7d8294d2a042,9423643,0,0x0,6
tick,0x7d8294d2a042,9424791,0,0x0,6
tick,0x7d8294d2a042,9425860,0,0x0,6
tick,0x7d8294d2a042,9426920,0,0x0,6
tick,0x7d8294d2a042,9427965,0,0x0,6
tick,0x7d8294d2a042,9429035,0,0x0,6
tick,0x7d8294d2a042,9430092,0,0x0,6
tick,0x7d8294d2a042,9431151,0,0x0,6
tick,0x7d8294d2a042,9432132,0,0x0,6
tick,0x7d8294d2a042,9433258,0,0x0,6
tick,0x7d8294d2a042,9434330,0,0x0,6
tick,0x7d8294d2a042,9435403,0,0x0,6
tick,0x7d8294d2a042,9436448,0,0x0,6
tick,0x7d8294d2a042,9437513,0,0x0,6
tick,0x7d8294d2a042,9438564,0,0x0,6
tick,0x7d8294d2a042,9439569,0,0x0,6
tick,0x7d8294d2a042,9440681,0,0x0,6
tick,0x7d8294d2a042,9441753,0,0x0,6
tick,0x7d8294d2a042,9442816,0,0x0,6
tick,0x7d8294d2a042,9443854,0,0x0,6
tick,0x7d8294d2a042,9444924,0,0x0,6
tick,0x7d8294d2a042,9445988,0,0x0,6
tick,0x7d8294d2a042,9447052,0,0x0,6
tick,0x7d8294d2a042,9448025,0,0x0,6
tick,0x7d8294d2a042,9449082,0,0x0,6
tick,0x7d8294d2a042,9450229,0,0x0,6
tick,0x7d8294d2a042,9451279,0,0x0,6
tick,0x7d8294d2a042,9452324,0,0x0,6
tick,0x7d8294d2a042,9453409,0,0x0,6
tick,0x7d8294d2a042,9454443,0,0x0,6
tick,0x7d8294d2a042,9455491,0,0x0,6
tick,0x7d8294d2a042,9456555,0,0x0,6
tick,0x7d8294d2a042,9457606,0,0x0,6
tick,0x7d8294d2a042,9458645,0,0x0,6
tick,0x7d8294d2a042,9459670,0,0x0,6
tick,0x7d8294d2a042,9460787,0,0x0,6
tick,0x7d8294d2a042,9461840,0,0x0,6
tick,0x7d8294d2a042,9462896,0,0x0,6
tick,0x7d8294d2a042,9463944,0,0x0,6
tick,0x7d8294d2a042,9465032,0,0x0,6
tick,0x7d8294d2a042,9466070,0,0x0,6
tick,0x7d8294d2a042,9467136,0,0x0,6
tick,0x7d8294d2a042,9468195,0,0x0,6
tick,0x7d8294d2a042,9469253,0,0x0,6
tick,0x7d8294d2a042,9470313,0,0x0,6
tick,0x7d8294d2a042,9471383,0,0x0,6
tick,0x7d8294d2a042,9472433,0,0x0,6
tick,0x7d8294d2a042,9473490,0,0x0,6
tick,0x7d8294d2a042,9474535,0,0x0,6
tick,0x7d8294d2a042,9475520,0,0x0,6
tick,0x7d8294d2a042,9476653,0,0x0,6
tick,0x7d8294d2a042,9477727,0,0x0,6
tick,0x7d8294d2a042,9478774,0,0x0,6
tick,0x7d8294d2a042,9479834,0,0x0,6
tick,0x7d8294d2a042,9480890,0,0x0,6
tick,0x7d8294d2a042,9481962,0,0x0,6
tick,0x7d8294d2a042,9483023,0,0x0,6
tick,0x7d8294d2a042,9484064,0,0x0,6
tick,0x7d8294d2a042,9485133,0,0x0,6
tick,0x7d8294d2a042,9486198,0,0x0,6
tick,0x7d8294d2a042,9487156,0,0x0,6
tick,0x7d8294d2a042,9488324,0,0x0,6
tick,0x7d8294d2a042,9489379,0,0x0,6
tick,0x7d8294d2a042,9490347,0,0x0,6
tick,0x7d8294d2a042,9491400,0,0x0,6
tick,0x7d8294d2a042,9492551,0,0x0,6
tick,0x7d8294d2a042,9493526,0,0x0,6
tick,0x7d8294d2a042,9494583,0,0x0,6
tick,0x7d8294d2a042,9495669,0,0x0,6
tick,0x7d8294d2a042,9496781,0,0x0,6
tick,0x7d8294d2a042,9497837,0,0x0,6
tick,0x7d8294d2a042,9498895,0,0x0,6
tick,0x7d8294d2a042,9499942,0,0x0,6
tick,0x7d8294d2a042,9501014,0,0x0,6
tick,0x7d8294d2a042,9502077,0,0x0,6
tick,0x7d8294d2a042,9503130,0,0x0,6
tick,0x7d8294d2a042,9504185,0,0x0,6
tick,0x7d8294d2a042,9505160,0,0x0,6
tick,0x7d8294d2a042,9506218,0,0x0,6
tick,0x7d8294d2a042,9507277,0,0x0,6
tick,0x7d8294d2a042,9508429,0,0x0,6
tick,0x7d8294d2a042,9509482,0,0x0,6
tick,0x7d8294d2a042,9510537,0,0x0,6
tick,0x7d8294d2a042,9511566,0,0x0,6
tick,0x7d8294d2a042,9512657,0,0x0,6
tick,0x7d8294d2a042,9513712,0,0x0,6
tick,0x7d8294d2a042,9514697,0,0x0,6
tick,0x7d8294d2a042,9515744,0,0x0,6
tick,0x7d8294d2a042,9516804,0,0x0,6
tick,0x7d8294d2a042,9517954,0,0x0,6
tick,0x7d8294d2a042,9518991,0,0x0,6
tick,0x7d8294d2a042,9520064,0,0x0,6
tick,0x7d8294d2a042,9521121,0,0x0,6
tick,0x7d8294d2a042,9522184,0,0x0,6
tick,0x7d8294d2a042,9523153,0,0x0,6
tick,0x7d8294d2a042,9524295,0,0x0,6
tick,0x7d8294d2a042,9525270,0,0x0,6
tick,0x7d8294d2a042,9526426,0,0x0,6
tick,0x7d8294d2a042,9527487,0,0x0,6
tick,0x7d8294d2a042,9528541,0,0x0,6
tick,0x7d8294d2a042,9529599,0,0x0,6
tick,0x7d8294d2a042,9530659,0,0x0,6
tick,0x7d8294d2a042,9531688,0,0x0,6
tick,0x7d8294d2a042,9532772,0,0x0,6
tick,0x7d8294d2a042,9533831,0,0x0,6
tick,0x7d8294d2a042,9534902,0,0x0,6
tick,0x7d8294d2a042,9535936,0,0x0,6
tick,0x7d8294d2a042,9537006,0,0x0,6
tick,0x7d8294d2a042,9538079,0,0x0,6
tick,0x7d8294d2a042,9539126,0,0x0,6
tick,0x7d8294d2a042,9540097,0,0x0,6
tick,0x7d8294d2a042,9541236,0,0x0,6
tick,0x7d8294d2a042,9542306,0,0x0,6
tick,0x7d8294d2a042,9543369,0,0x0,6
tick,0x7d8294d2a042,9544424,0,0x0,6
tick,0x7d8294d2a042,9545499,0,0x0,6
tick,0x7d8294d2a042,9546453,0,0x0,6
tick,0x7d8294d2a042,9547491,0,0x0,6
tick,0x7d8294d2a042,9548648,0,0x0,6
tick,0x7d8294d2a042,9549706,0,0x0,6
tick,0x7d8294d2a042,9550760,0,0x0,6
tick,0x7d8294d2a042,9551815,0,0x0,6
tick,0x7d8294d2a042,9552885,0,0x0,6
tick,0x7d8294d2a042,9553941,0,0x0,6
tick,0x7d8294d2a042,9554999,0,0x0,6
tick,0x7d8294d2a042,9555978,0,0x0,6
tick,0x7d8294d2a042,9557035,0,0x0,6
tick,0x7d8294d2a042,9558096,0,0x0,6
tick,0x7d8294d2a042,9559238,0,0x0,6
tick,0x7d8294d2a042,9560296,0,0x0,6
tick,0x7d8294d2a042,9561357,0,0x0,6
tick,0x7d8294d2a042,9562417,0,0x0,6
tick,0x7d8294d2a042,9563488,0,0x0,6
tick,0x7d8294d2a042,9564530,0,0x0,6
tick,0x7d8294d2a042,9565600,0,0x0,6
tick,0x7d8294d2a042,9566578,0,0x0,6
tick,0x7d8294d2a042,9567655,0,0x0,6
tick,0x7d8294d2a042,9568778,0,0x0,6
tick,0x7d8294d2a042,9569833,0,0x0,6
tick,0x7d8294d2a042,9570881,0,0x0,6
tick,0x7d8294d2a042,9571939,0,0x0,6
tick,0x7d8294d2a042,9572995,0,0x0,6
tick,0x7d8294d2a042,9574065,0,0x0,6
tick,0x7d8294d2a042,9575044,0,0x0,6
tick,0x7d8294d2a042,9576103,0,0x0,6
tick,0x7d8294d2a042,9577166,0,0x0,6
tick,0x7d8294d2a042,9578226,0,0x0,6
tick,0x7d8294d2a042,9579371,0,0x0,6
tick,0x7d8294d2a042,9580415,0,0x0,6
tick,0x7d8294d2a042,9581483,0,0x0,6
tick,0x7d8294d2a042,9582542,0,0x0,6
tick,0x7d8294d2a042,9583560,0,0x0,6
tick,0x7d8294d2a042,9584660,0,0x0,6
tick,0x7d8294d2a042,9585638,0,0x0,6
tick,0x7d8294d2a042,9586694,0,0x0,6
tick,0x7d8294d2a042,9587754,0,0x0,6
tick,0x7d8294d2a042,9588813,0,0x0,6
tick,0x7d8294d2a042,9589961,0,0x0,6
tick,0x7d8294d2a042,9591022,0,0x0,6
tick,0x7d8294d2a042,9592077,0,0x0,6
tick,0x7d8294d2a042,9593148,0,0x0,6
tick,0x7d8294d2a042,9594191,0,0x0,6
tick,0x7d8294d2a042,9595165,0,0x0,6
tick,0x7d8294d2a042,9596226,0,0x0,6
tick,0x7d8294d2a042,9597283,0,0x0,6
tick,0x7d8294d2a042,9598425,0,0x0,6
tick,0x7d8294d2a042,9599397,0,0x0,6
tick,0x7d8294d2a042,9600541,0,0x0,6
tick,0x7d8294d2a042,9601605,0,0x0,6
tick,0x7d8294d2a042,9602664,0,0x0,6
tick,0x7d8294d2a042,9603617,0,0x0,6
tick,0x7d8294d2a042,9604768,0,0x0,6
tick,0x7d8294d2a042,9605838,0,0x0,6
tick,0x7d8294d2a042,9606890,0,0x0,6
tick,0x7d8294d2a042,9607936,0,0x0,6
tick,0x7d8294d2a042,9608994,0,0x0,6
tick,0x7d8294d2a042,9610065,0,0x0,6
tick,0x7d8294d2a042,9611121,0,0x0,6
tick,0x7d8294d2a042,9612192,0,0x0,6
tick,0x7d8294d2a042,9613252,0,0x0,6
tick,0x7d8294d2a042,9614325,0,0x0,6
tick,0x7d8294d2a042,9615387,0,0x0,6
tick,0x7d8294d2a042,9616507,0,0x0,6
tick,0x7d8294d2a042,9617568,0,0x0,6
tick,0x7d8294d2a042,9618551,0,0x0,6
tick,0x7d8294d2a042,9619555,0,0x0,6
tick,0x7d8294d2a042,9620729,0,0x0,6
tick,0x7d8294d2a042,9621790,0,0x0,6
tick,0x7d8294d2a042,9622846,0,0x0,6
tick,0x7d8294d2a042,9623912,0,0x0,6
tick,0x7d8294d2a042,9624960,0,0x0,6
tick,0x7d8294d2a042,9626033,0,0x0,6
tick,0x7d8294d2a042,9627103,0,0x0,6
tick,0x7d8294d2a042,9628142,0,0x0,6
tick,0x7d8294d2a042,9629204,0,0x0,6
tick,0x7d8294d2a042,9630272,0,0x0,6
tick,0x7d8294d2a042,9631333,0,0x0,6
tick,0x7d8294d2a042,9632374,0,0x0,6
tick,0x7d8294d2a042,9633461,0,0x0,6
tick,0x7d8294d2a042,9634441,0,0x0,6
tick,0x7d8294d2a042,9635488,0,0x0,6
tick,0x7d8294d2a042,9636552,0,0x0,6
tick,0x7d8294d2a042,9637684,0,0x0,6
tick,0x7d8294d2a042,9638736,0,0x0,6
tick,0x7d8294d2a042,9639819,0,0x0,6
tick,0x7d8294d2a042,9640848,0,0x0,6
tick,0x7d8294d2a042,9641876,0,0x0,6
tick,0x7d8294d2a042,9642901,0,0x0,6
tick,0x7d8294d2a042,9643944,0,0x0,6
tick,0x7d8294d2a042,9645001,0,0x0,6
tick,0x7d8294d2a042,9646078,0,0x0,6
tick,0x7d8294d2a042,9647144,0,0x0,6
tick,0x7d8294d2a042,9648187,0,0x0,6
tick,0x7d8294d2a042,9649244,0,0x0,6
tick,0x7d8294d2a042,9650303,0,0x0,6
tick,0x7d8294d2a042,9651327,0,0x0,6
tick,0x7d8294d2a042,9652358,0,0x0,6
tick,0x7d8294d2a042,9653419,0,0x0,6
tick,0x7d8294d2a042,9654472,0,0x0,6
tick,0x7d8294d2a042,9655536,0,0x0,6
tick,0x7d8294d2a042,9656650,0,0x0,6
tick,0x7d8294d2a042,9657691,0,0x0,6
tick,0x7d8294d2a042,9658746,0,0x0,6
tick,0x7d8294d2a042,9659779,0,0x0,6
tick,0x7d8294d2a042,9660860,0,0x0,6
tick,0x7d8294d2a042,9661936,0,0x0,6
tick,0x7d8294d2a042,9662995,0,0x0,6
tick,0x7d8294d2a042,9664035,0,0x0,6
tick,0x7d8294d2a042,9665105,0,0x0,6
tick,0x7d8294d2a042,9666178,0,0x0,6
tick,0x7d8294d2a042,9667224,0,0x0,6
tick,0x7d8294d2a042,9668284,0,0x0,6
tick,0x7d8294d2a042,9669282,0,0x0,6
tick,0x7d8294d2a042,9670398,0,0x0,6
tick,0x7d8294d2a042,9671453,0,0x0,6
tick,0x7d8294d2a042,9672509,0,0x0,6
tick,0x7d8294d2a042,9673509,0,0x0,6
tick,0x7d8294d2a042,9674637,0,0x0,6
tick,0x7d8294d2a042,9675622,0,0x0,6
tick,0x7d8294d2a042,9676731,0,0x0,6
tick,0x7d8294d2a042,9677787,0,0x0,6
tick,0x7d8294d2a042,9678844,0,0x0,6
tick,0x7d8294d2a042,9679938,0,0x0,6
tick,0x7d8294d2a042,9680982,0,0x0,6
tick,0x7d8294d2a042,9682021,0,0x0,6
tick,0x7d8294d2a042,9683091,0,0x0,6
tick,0x7d8294d2a042,9684139,0,0x0,6
tick,0x7d8294d2a042,9685196,0,0x0,6
tick,0x7d8294d2a042,9686265,0,0x0,6
tick,0x7d8294d2a042,9687330,0,0x0,6
tick,0x7d8294d2a042,9688300,0,0x0,6
tick,0x7d8294d2a042,9689433,0,0x0,6
tick,0x7d8294d2a042,9690420,0,0x0,6
tick,0x7d8294d2a042,9691485,0,0x0,6
tick,0x7d8294d2a042,9692625,0,0x0,6
tick,0x7d8294d2a042,9693676,0,0x0,6
tick,0x7d8294d2a042,9694735,0,0x0,6
tick,0x7d8294d2a042,9695777,0,0x0,6
tick,0x7d8294d2a042,9696850,0,0x0,6
tick,0x7d8294d2a042,9697916,0,0x0,6
tick,0x7d8294d2a042,9698970,0,0x0,6
tick,0x7d8294d2a042,9700013,0,0x0,6
tick,0x7d8294d2a042,9701096,0,0x0,6
tick,0x7d8294d2a042,9702159,0,0x0,6
tick,0x7d8294d2a042,9703197,0,0x0,6
tick,0x7d8294d2a042,9704173,0,0x0,6
tick,0x7d8294d2a042,9705232,0,0x0,6
tick,0x7d8294d2a042,9706385,0,0x0,6
tick,0x7d8294d2a042,9707435,0,0x0,6
tick,0x7d8294d2a042,9708497,0,0x0,6
tick,0x7d8294d2a042,9709549,0,0x0,6
tick,0x7d8294d2a042,9710610,0,0x0,6
tick,0x7d8294d2a042,9711607,0,0x0,6
tick,0x7d8294d2a042,9712721,0,0x0,6
tick,0x7d8294d2a042,9713785,0,0x0,6
tick,0x7d8294d2a042,9714837,0,0x0,6
tick,0x7d8294d2a042,9715884,0,0x0,6
tick,0x7d8294d2a042,9716955,0,0x0,6
tick,0x7d8294d2a042,9718021,0,0x0,6
tick,0x7d8294d2a042,9719060,0,0x0,6
tick,0x7d8294d2a042,9720048,0,0x0,6
tick,0x7d8294d2a042,9721108,0,0x0,6
tick,0x7d8294d2a042,9722167,0,0x0,6
tick,0x7d8294d2a042,9723253,0,0x0,6
tick,0x7d8294d2a042,9724361,0,0x0,6
tick,0x7d8294d2a042,9725458,0,0x0,6
tick,0x7d8294d2a042,9726507,0,0x0,6
tick,0x7d8294d2a042,9727514,0,0x0,6
tick,0x7d8294d2a042,9728622,0,0x0,6
tick,0x7d8294d2a042,9729680,0,0x0,6
tick,0x7d8294d2a042,9730668,0,0x0,6
tick,0x7d8294d2a042,9731809,0,0x0,6
tick,0x7d8294d2a042,9732862,0,0x0,6
tick,0x7d8294d2a042,9733933,0,0x0,6
tick,0x7d8294d2a042,9735019,0,0x0,6
tick,0x7d8294d2a042,9736053,0,0x0,6
tick,0x7d8294d2a042,9737136,0,0x0,6
tick,0x7d8294d2a042,9738113,0,0x0,6
tick,0x7d8294d2a042,9739158,0,0x0,6
tick,0x7d8294d2a042,9740297,0,0x0,6
tick,0x7d8294d2a042,9741404,0,0x0,6
tick,0x7d8294d2a042,9742377,0,0x0,6
tick,0x7d8294d2a042,9743391,0,0x0,6
tick,0x7d8294d2a042,9744556,0,0x0,6
tick,0x7d8294d2a042,9745640,0,0x0,6
tick,0x7d8294d2a042,9746685,0,0x0,6
tick,0x7d8294d2a042,9747769,0,0x0,6
tick,0x7d8294d2a042,9748812,0,0x0,6
tick,0x7d8294d2a042,9749801,0,0x0,6
tick,0x7d8294d2a042,9750865,0,0x0,6
tick,0x7d8294d2a042,9752016,0,0x0,6
tick,0x7d8294d2a042,9753097,0,0x0,6
tick,0x7d8294d2a042,9754171,0,0x0,6
tick,0x7d8294d2a042,9755199,0,0x0,6
tick,0x7d8294d2a042,9756266,0,0x0,6
tick,0x7d8294d2a042,9757341,0,0x0,6
tick,0x7d8294d2a042,9758334,0,0x0,6
tick,0x7d8294d2a042,9759417,0,0x0,6
tick,0x7d8294d2a042,9760587,0,0x0,6
tick,0x7d8294d2a042,9761624,0,0x0,6
tick,0x7d8294d2a042,9762648,0,0x0,6
tick,0x7d8294d2a042,9763765,0,0x0,6
tick,0x7d8294d2a042,9764834,0,0x0,6
tick,0x7d8294d2a042,9765898,0,0x0,6
tick,0x7d8294d2a042,9766965,0,0x0,6
tick,0x7d8294d2a042,9768022,0,0x0,6
tick,0x7d8294d2a042,9769052,0,0x0,6
tick,0x7d8294d2a042,9770158,0,0x0,6
tick,0x7d8294d2a042,9771170,0,0x0,6
tick,0x7d8294d2a042,9772306,0,0x0,6
tick,0x7d8294d2a042,9773379,0,0x0,6
tick,0x7d8294d2a042,9774443,0,0x0,6
tick,0x7d8294d2a042,9775490,0,0x0,6
tick,0x7d8294d2a042,9776599,0,0x0,6
tick,0x7d8294d2a042,9777568,0,0x0,6
tick,0x7d8294d2a042,9778655,0,0x0,6
tick,0x7d8294d2a042,9779805,0,0x0,6
tick,0x7d8294d2a042,9780866,0,0x0,6
tick,0x7d8294d2a042,9781910,0,0x0,6
tick,0x7d8294d2a042,9782982,0,0x0,6
tick,0x7d8294d2a042,9784051,0,0x0,6
tick,0x7d8294d2a042,9785122,0,0x0,6
tick,0x7d8294d2a042,9786176,0,0x0,6
tick,0x7d8294d2a042,9787245,0,0x0,6
tick,0x7d8294d2a042,9788287,0,0x0,6
tick,0x7d8294d2a042,9789315,0,0x0,6
tick,0x7d8294d2a042,9790449,0,0x0,6
tick,0x7d8294d2a042,9791469,0,0x0,6
tick,0x7d8294d2a042,9792571,0,0x0,6
tick,0x7d8294d2a042,9793687,0,0x0,6
tick,0x7d8294d2a042,9794765,0,0x0,6
tick,0x7d8294d2a042,9795799,0,0x0,6
tick,0x7d8294d2a042,9796865,0,0x0,6
tick,0x7d8294d2a042,9797946,0,0x0,6
tick,0x7d8294d2a042,9798999,0,0x0,6
tick,0x7d8294d2a042,9800050,0,0x0,6
tick,0x7d8294d2a042,9801128,0,0x0,6
tick,0x7d8294d2a042,9802179,0,0x0,6
tick,0x7d8294d2a042,9803253,0,0x0,6
tick,0x7d8294d2a042,9804221,0,0x0,6
tick,0x7d8294d2a042,9805345,0,0x0,6
tick,0x7d8294d2a042,9806437,0,0x0,6
tick,0x7d8294d2a042,9807470,0,0x0,6
tick,0x7d8294d2a042,9808544,0,0x0,6
tick,0x7d8294d2a042,9809610,0,0x0,6
tick,0x7d8294d2a042,9810665,0,0x0,6
tick,0x7d8294d2a042,9811614,0,0x0,6
tick,0x7d8294d2a042,9812774,0,0x0,6
tick,0x7d8294d2a042,9813829,0,0x0,6
tick,0x7d8294d2a042,9814891,0,0x0,6
tick,0x7d8294d2a042,9815944,0,0x0,6
tick,0x7d8294d2a042,9817036,0,0x0,6
tick,0x7d8294d2a042,9818050,0,0x0,6
tick,0x7d8294d2a042,9819127,0,0x0,6
tick,0x7d8294d2a042,9820162,0,0x0,6
tick,0x7d8294d2a042,9821238,0,0x0,6
tick,0x7d8294d2a042,9822307,0,0x0,6
tick,0x7d8294d2a042,9823358,0,0x0,6
tick,0x7d8294d2a042,9824393,0,0x0,6
tick,0x7d8294d2a042,9825482,0,0x0,6
tick,0x7d8294d2a042,9826444,0,0x0,6
tick,0x7d8294d2a042,9827382,0,0x0,6
tick,0x7d8294d2a042,9828607,0,0x0,6
tick,0x7d8294d2a042,9829666,0,0x0,6
tick,0x7d8294d2a042,9830753,0,0x0,6
tick,0x7d8294d2a042,9831789,0,0x0,6
tick,0x7d8294d2a042,9832843,0,0x0,6
tick,0x7d8294d2a042,9833921,0,0x0,6
tick,0x7d8294d2a042,9834892,0,0x0,6
tick,0x7d8294d2a042,9836002,0,0x0,6
tick,0x7d8294d2a042,9836998,0,0x0,6
tick,0x7d8294d2a042,9838118,0,0x0,6
tick,0x7d8294d2a042,9839135,0,0x0,6
tick,0x7d8294d2a042,9840182,0,0x0,6
tick,0x7d8294d2a042,9841268,0,0x0,6
tick,0x7d8294d2a042,9842324,0,0x0,6
tick,0x7d8294d2a042,9843378,0,0x0,6
tick,0x7d8294d2a042,9844492,0,0x0,6
tick,0x7d8294d2a042,9845542,0,0x0,6
tick,0x7d8294d2a042,9846632,0,0x0,6
tick,0x7d8294d2a042,9847545,0,0x0,6
tick,0x7d8294d2a042,9848736,0,0x0,6
tick,0x7d8294d2a042,9849813,0,0x0,6
tick,0x7d8294d2a042,9850890,0,0x0,6
tick,0x7d8294d2a042,9851974,0,0x0,6
tick,0x7d8294d2a042,9852956,0,0x0,6
tick,0x7d8294d2a042,9854118,0,0x0,6
tick,0x7d8294d2a042,9855109,0,0x0,6
tick,0x7d8294d2a042,9856218,0,0x0,6
tick,0x7d8294d2a042,9857274,0,0x0,6
tick,0x7d8294d2a042,9858325,0,0x0,6
tick,0x7d8294d2a042,9859384,0,0x0,6
tick,0x7d8294d2a042,9860378,0,0x0,6
tick,0x7d8294d2a042,9861498,0,0x0,6
tick,0x7d8294d2a042,9862560,0,0x0,6
tick,0x7d8294d2a042,9863497,0,0x0,6
tick,0x7d8294d2a042,9864681,0,0x0,6
tick,0x7d8294d2a042,9865732,0,0x0,6
tick,0x7d8294d2a042,9866785,0,0x0,6
tick,0x7d8294d2a042,9867856,0,0x0,6
tick,0x7d8294d2a042,9868833,0,0x0,6
tick,0x7d8294d2a042,9869985,0,0x0,6
tick,0x7d8294d2a042,9870874,0,0x0,6
tick,0x7d8294d2a042,9872077,0,0x0,6
tick,0x7d8294d2a042,9873128,0,0x0,6
tick,0x7d8294d2a042,9874187,0,0x0,6
tick,0x7d8294d2a042,9875249,0,0x0,6
tick,0x7d8294d2a042,9876302,0,0x0,6
tick,0x7d8294d2a042,9877359,0,0x0,6
tick,0x7d8294d2a042,9878414,0,0x0,6
tick,0x7d8294d2a042,9879473,0,0x0,6
tick,0x7d8294d2a042,9880541,0,0x0,6
tick,0x7d8294d2a042,9881588,0,0x0,6
tick,0x7d8294d2a042,9882629,0,0x0,6
tick,0x7d8294d2a042,9883669,0,0x0,6
tick,0x7d8294d2a042,9884766,0,0x0,6
tick,0x7d8294d2a042,9885814,0,0x0,6
tick,0x7d8294d2a042,9886905,0,0x0,6
tick,0x7d8294d2a042,9887884,0,0x0,6
tick,0x7d8294d2a042,9888941,0,0x0,6
tick,0x7d8294d2a042,9890050,0,0x0,6
tick,0x7d8294d2a042,9891124,0,0x0,6
tick,0x7d8294d2a042,9892169,0,0x0,6
tick,0x7d8294d2a042,9893253,0,0x0,6
tick,0x7d8294d2a042,9894239,0,0x0,6
tick,0x7d8294d2a042,9895284,0,0x0,6
tick,0x7d8294d2a042,9896424,0,0x0,6
tick,0x7d8294d2a042,9897480,0,0x0,6
tick,0x7d8294d2a042,9898464,0,0x0,6
tick,0x7d8294d2a042,9899543,0,0x0,6
tick,0x7d8294d2a042,9900619,0,0x0,6
tick,0x7d8294d2a042,9901688,0,0x0,6
tick,0x7d8294d2a042,9902680,0,0x0,6
tick,0x7d8294d2a042,9903657,0,0x0,6
tick,0x7d8294d2a042,9904866,0,0x0,6
tick,0x7d8294d2a042,9905906,0,0x0,6
tick,0x7d8294d2a042,9906990,0,0x0,6
tick,0x7d8294d2a042,9908028,0,0x0,6
tick,0x7d8294d2a042,9909114,0,0x0,6
tick,0x7d8294d2a042,9910159,0,0x0,6
tick,0x7d8294d2a042,9911234,0,0x0,6
tick,0x7d8294d2a042,9912245,0,0x0,6
tick,0x7d8294d2a042,9913325,0,0x0,6
tick,0x7d8294d2a042,9914384,0,0x0,6
tick,0x7d8294d2a042,9915470,0,0x0,6
tick,0x7d8294d2a042,9916475,0,0x0,6
tick,0x7d8294d2a042,9917466,0,0x0,6
tick,0x7d8294d2a042,9918491,0,0x0,6
tick,0x7d8294d2a042,9919489,0,0x0,6
tick,0x7d8294d2a042,9920718,0,0x0,6
tick,0x7d8294d2a042,9921789,0,0x0,6
tick,0x7d8294d2a042,9922793,0,0x0,6
tick,0x7d8294d2a042,9923815,0,0x0,6
tick,0x7d8294d2a042,9924933,0,0x0,6
tick,0x7d8294d2a042,9925925,0,0x0,6
tick,0x7d8294d2a042,9926977,0,0x0,6
tick,0x7d8294d2a042,9928109,0,0x0,6
tick,0x7d8294d2a042,9929164,0,0x0,6
tick,0x7d8294d2a042,9930219,0,0x0,6
tick,0x7d8294d2a042,9931288,0,0x0,6
tick,0x7d8294d2a042,9932340,0,0x0,6
tick,0x7d8294d2a042,9933295,0,0x0,6
tick,0x7d8294d2a042,9934437,0,0x0,6
tick,0x7d8294d2a042,9935476,0,0x0,6
tick,0x7d8294d2a042,9936564,0,0x0,6
tick,0x7d8294d2a042,9937631,0,0x0,6
tick,0x7d8294d2a042,9938707,0,0x0,6
tick,0x7d8294d2a042,9939715,0,0x0,6
tick,0x7d8294d2a042,9940796,0,0x0,6
tick,0x7d8294d2a042,9941873,0,0x0,6
tick,0x7d8294d2a042,9942931,0,0x0,6
tick,0x7d8294d2a042,9943978,0,0x0,6
tick,0x7d8294d2a042,9945050,0,0x0,6
tick,0x7d8294d2a042,9946113,0,0x0,6
tick,0x7d8294d2a042,9947158,0,0x0,6
tick,0x7d8294d2a042,9948226,0,0x0,6
tick,0x7d8294d2a042,9949271,0,0x0,6
tick,0x7d8294d2a042,9950327,0,0x0,6
tick,0x7d8294d2a042,9951402,0,0x0,6
tick,0x7d8294d2a042,9952453,0,0x0,6
tick,0x7d8294d2a042,9953499,0,0x0,6
tick,0x7d8294d2a042,9954570,0,0x0,6
tick,0x7d8294d2a042,9955616,0,0x0,6
tick,0x7d8294d2a042,9956695,0,0x0,6
tick,0x7d8294d2a042,9957753,0,0x0,6
tick,0x7d8294d2a042,9958761,0,0x0,6
tick,0x7d8294d2a042,9959793,0,0x0,6
tick,0x7d8294d2a042,9960920,0,0x0,6
tick,0x7d8294d2a042,9961988,0,0x0,6
tick,0x7d8294d2a042,9962977,0,0x0,6
tick,0x7d8294d2a042,9964103,0,0x0,6
tick,0x7d8294d2a042,9965146,0,0x0,6
tick,0x7d8294d2a042,9966237,0,0x0,6
tick,0x7d8294d2a042,9967282,0,0x0,6
tick,0x7d8294d2a042,9968321,0,0x0,6
tick,0x7d8294d2a042,9969272,0,0x0,6
tick,0x7d8294d2a042,9970445,0,0x0,6
tick,0x7d8294d2a042,9971467,0,0x0,6
tick,0x7d8294d2a042,9972555,0,0x0,6
tick,0x7d8294d2a042,9973576,0,0x0,6
tick,0x7d8294d2a042,9974572,0,0x0,6
tick,0x7d8294d2a042,9975615,0,0x0,6
tick,0x7d8294d2a042,9976822,0,0x0,6
tick,0x7d8294d2a042,9977828,0,0x0,6
tick,0x7d8294d2a042,9978858,0,0x0,6
tick,0x7d8294d2a042,9979960,0,0x0,6
tick,0x7d8294d2a042,9981043,0,0x0,6
tick,0x7d8294d2a042,9982100,0,0x0,6
tick,0x7d8294d2a042,9983087,0,0x0,6
tick,0x7d8294d2a042,9984077,0,0x0,6
tick,0x7d8294d2a042,9985209,0,0x0,6
tick,0x7d8294d2a042,9986334,0,0x0,6
tick,0x7d8294d2a042,9987424,0,0x0,6
tick,0x7d8294d2a042,9988451,0,0x0,6
tick,0x7d8294d2a042,9989513,0,0x0,6
tick,0x7d8294d2a042,9990570,0,0x0,6
tick,0x7d8294d2a042,9991487,0,0x0,6
tick,0x7d8294d2a042,9992683,0,0x0,6
tick,0x7d8294d2a042,9993735,0,0x0,6
tick,0x7d8294d2a042,9994812,0,0x0,6
tick,0x7d8294d2a042,9995683,0,0x0,6
tick,0x7d8294d2a042,9996843,0,0x0,6
tick,0x7d8294d2a042,9997897,0,0x0,6
tick,0x7d8294d2a042,9998962,0,0x0,6
tick,0x7d8294d2a042,10000094,0,0x0,6
tick,0x7d8294d2a042,10001126,0,0x0,6
tick,0x7d8294d2a042,10002151,0,0x0,6
tick,0x7d8294d2a042,10003193,0,0x0,6
tick,0x7d8294d2a042,10004319,0,0x0,6
tick,0x7d8294d2a042,10005377,0,0x0,6
tick,0x7d8294d2a042,10006371,0,0x0,6
tick,0x7d8294d2a042,10007466,0,0x0,6
tick,0x7d8294d2a042,10008560,0,0x0,6
tick,0x7d8294d2a042,10009609,0,0x0,6
tick,0x7d8294d2a042,10010538,0,0x0,6
tick,0x7d8294d2a042,10011605,0,0x0,6
tick,0x7d8294d2a042,10012781,0,0x0,6
tick,0x7d8294d2a042,10013837,0,0x0,6
tick,0x7d8294d2a042,10014837,0,0x0,6
tick,0x7d8294d2a042,10015964,0,0x0,6
tick,0x7d8294d2a042,10017012,0,0x0,6
tick,0x7d8294d2a042,10018075,0,0x0,6
tick,0x7d8294d2a042,10019125,0,0x0,6
tick,0x7d8294d2a042,10020184,0,0x0,6
tick,0x7d8294d2a042,10021240,0,0x0,6
tick,0x7d8294d2a042,10022298,0,0x0,6
tick,0x7d8294d2a042,10023356,0,0x0,6
tick,0x7d8294d2a042,10024423,0,0x0,6
tick,0x7d8294d2a042,10025463,0,0x0,6
tick,0x7d8294d2a042,10026497,0,0x0,6
tick,0x7d8294d2a042,10027486,0,0x0,6
tick,0x7d8294d2a042,10028620,0,0x0,6
tick,0x7d8294d2a042,10029662,0,0x0,6
tick,0x7d8294d2a042,10030721,0,0x0,6
tick,0x7d8294d2a042,10031791,0,0x0,6
tick,0x7d8294d2a042,10032836,0,0x0,6
tick,0x7d8294d2a042,10033894,0,0x0,6
tick,0x7d8294d2a042,10034961,0,0x0,6
tick,0x7d8294d2a042,10035944,0,0x0,6
tick,0x7d8294d2a042,10037086,0,0x0,6
tick,0x7d8294d2a042,10038134,0,0x0,6
tick,0x7d8294d2a042,10039182,0,0x0,6
tick,0x7d8294d2a042,10040240,0,0x0,6
tick,0x7d8294d2a042,10041316,0,0x0,6
tick,0x7d8294d2a042,10042310,0,0x0,6
tick,0x7d8294d2a042,10043395,0,0x0,6
tick,0x7d8294d2a042,10044481,0,0x0,6
tick,0x7d8294d2a042,10045532,0,0x0,6
tick,0x7d8294d2a042,10046530,0,0x0,6
tick,0x7d8294d2a042,10047577,0,0x0,6
tick,0x7d8294d2a042,10048719,0,0x0,6
tick,0x7d8294d2a042,10049767,0,0x0,6
tick,0x7d8294d2a042,10050853,0,0x0,6
tick,0x7d8294d2a042,10051887,0,0x0,6
tick,0x7d8294d2a042,10052944,0,0x0,6
tick,0x7d8294d2a042,10054015,0,0x0,6
tick,0x7d8294d2a042,10055069,0,0x0,6
tick,0x7d8294d2a042,10056137,0,0x0,6
tick,0x7d8294d2a042,10057203,0,0x0,6
tick,0x7d8294d2a042,10058240,0,0x0,6
tick,0x7d8294d2a042,10059311,0,0x0,6
tick,0x7d8294d2a042,10060293,0,0x0,6
tick,0x7d8294d2a042,10061438,0,0x0,6
tick,0x7d8294d2a042,10062476,0,0x0,6
tick,0x7d8294d2a042,10063501,0,0x0,6
tick,0x7d8294d2a042,10064523,0,0x0,6
tick,0x7d8294d2a042,10065644,0,0x0,6
tick,0x7d8294d2a042,10066719,0,0x0,6
tick,0x7d8294d2a042,10067681,0,0x0,6
tick,0x7d8294d2a042,10068817,0,0x0,6
tick,0x7d8294d2a042,10069890,0,0x0,6
tick,0x7d8294d2a042,10070941,0,0x0,6
tick,0x7d8294d2a042,10071993,0,0x0,6
tick,0x7d8294d2a042,10073043,0,0x0,6
tick,0x7d8294d2a042,10074118,0,0x0,6
tick,0x7d8294d2a042,10075178,0,0x0,6
tick,0x7d8294d2a042,10076221,0,0x0,6
tick,0x7d8294d2a042,10077273,0,0x0,6
tick,0x7d8294d2a042,10078337,0,0x0,6
tick,0x7d8294d2a042,10079419,0,0x0,6
tick,0x7d8294d2a042,10080455,0,0x0,6
tick,0x7d8294d2a042,10081502,0,0x0,6
tick,0x7d8294d2a042,10082582,0,0x0,6
tick,0x7d8294d2a042,10083565,0,0x0,6
tick,0x7d8294d2a042,10084693,0,0x0,6
tick,0x7d8294d2a042,10085680,0,0x0,6
tick,0x7d8294d2a042,10086743,0,0x0,6
tick,0x7d8294d2a042,10087852,0,0x0,6
tick,0x7d8294d2a042,10088919,0,0x0,6
tick,0x7d8294d2a042,10089969,0,0x0,6
tick,0x7d8294d2a042,10091053,0,0x0,6
tick,0x7d8294d2a042,10092081,0,0x0,6
tick,0x7d8294d2a042,10093170,0,0x0,6
tick,0x7d8294d2a042,10094209,0,0x0,6
tick,0x7d8294d2a042,10095267,0,0x0,6
tick,0x7d8294d2a042,10096232,0,0x0,6
tick,0x7d8294d2a042,10097247,0,0x0,6
tick,0x7d8294d2a042,10098315,0,0x0,6
tick,0x7d8294d2a042,10099493,0,0x0,6
tick,0x7d8294d2a042,10100646,0,0x0,6
tick,0x7d8294d2a042,10101694,0,0x0,6
tick,0x7d8294d2a042,10102695,0,0x0,6
tick,0x7d8294d2a042,10103858,0,0x0,6
tick,0x7d8294d2a042,10104874,0,0x0,6
tick,0x7d8294d2a042,10105862,0,0x0,6
tick,0x7d8294d2a042,10106919,0,0x0,6
tick,0x7d8294d2a042,10108040,0,0x0,6
tick,0x7d8294d2a042,10109104,0,0x0,6
tick,0x7d8294d2a042,10110094,0,0x0,6
tick,0x7d8294d2a042,10111146,0,0x0,6
tick,0x7d8294d2a042,10112272,0,0x0,6
tick,0x7d8294d2a042,10113334,0,0x0,6
tick,0x7d8294d2a042,10114323,0,0x0,6
tick,0x7d8294d2a042,10115389,0,0x0,6
tick,0x7d8294d2a042,10116517,0,0x0,6
tick,0x7d8294d2a042,10117562,0,0x0,6
tick,0x7d8294d2a042,10118569,0,0x0,6
tick,0x7d8294d2a042,10119593,0,0x0,6
tick,0x7d8294d2a042,10120742,0,0x0,6
tick,0x7d8294d2a042,10121790,0,0x0,6
tick,0x7d8294d2a042,10122867,0,0x0,6
tick,0x7d8294d2a042,10123906,0,0x0,6
tick,0x7d8294d2a042,10124982,0,0x0,6
tick,0x7d8294d2a042,10126016,0,0x0,6
tick,0x7d8294d2a042,10127119,0,0x0,6
tick,0x7d8294d2a042,10128133,0,0x0,6
tick,0x7d8294d2a042,10129188,0,0x0,6
tick,0x7d8294d2a042,10130185,0,0x0,6
tick,0x7d8294d2a042,10131227,0,0x0,6
tick,0x7d8294d2a042,10132287,0,0x0,6
tick,0x7d8294d2a042,10133352,0,0x0,6
tick,0x7d8294d2a042,10134411,0,0x0,6
tick,0x7d8294d2a042,10135473,0,0x0,6
tick,0x7d8294d2a042,10136511,0,0x0,6
tick,0x7d8294d2a042,10137575,0,0x0,6
tick,0x7d8294d2a042,10138632,0,0x0,6
tick,0x7d8294d2a042,10139642,0,0x0,6
tick,0x7d8294d2a042,10140764,0,0x0,6
tick,0x7d8294d2a042,10141824,0,0x0,6
tick,0x7d8294d2a042,10142872,0,0x0,6
tick,0x7d8294d2a042,10143938,0,0x0,6
tick,0x7d8294d2a042,10144989,0,0x0,6
tick,0x7d8294d2a042,10146047,0,0x0,6
tick,0x7d8294d2a042,10147126,0,0x0,6
tick,0x7d8294d2a042,10148195,0,0x0,6
tick,0x7d8294d2a042,10149237,0,0x0,6
tick,0x7d8294d2a042,10150291,0,0x0,6
tick,0x7d8294d2a042,10151277,0,0x0,6
tick,0x7d8294d2a042,10152410,0,0x0,6
tick,0x7d8294d2a042,10153482,0,0x0,6
tick,0x7d8294d2a042,10154527,0,0x0,6
tick,0x7d8294d2a042,10155493,0,0x0,6
tick,0x7d8294d2a042,10156650,0,0x0,6
tick,0x7d8294d2a042,10157702,0,0x0,6
tick,0x7d8294d2a042,10158752,0,0x0,6
tick,0x7d8294d2a042,10159821,0,0x0,6
tick,0x7d8294d2a042,10160804,0,0x0,6
tick,0x7d8294d2a042,10161854,0,0x0,6
tick,0x7d8294d2a042,10162912,0,0x0,6
tick,0x7d8294d2a042,10164057,0,0x0,6
tick,0x7d8294d2a042,10165096,0,0x0,6
tick,0x7d8294d2a042,10166159,0,0x0,6
tick,0x7d8294d2a042,10167225,0,0x0,6
tick,0x7d8294d2a042,10168271,0,0x0,6
tick,0x7d8294d2a042,10169336,0,0x0,6
tick,0x7d8294d2a042,10170329,0,0x0,6
tick,0x7d8294d2a042,10171394,0,0x0,6
tick,0x7d8294d2a042,10172478,0,0x0,6
tick,0x7d8294d2a042,10173611,0,0x0,6
tick,0x7d8294d2a042,10174680,0,0x0,6
tick,0x7d8294d2a042,10175697,0,0x0,6
tick,0x7d8294d2a042,10176789,0,0x0,6
tick,0x7d8294d2a042,10177853,0,0x0,6
tick,0x7d8294d2a042,10178908,0,0x0,6
tick,0x7d8294d2a042,10179974,0,0x0,6
tick,0x7d8294d2a042,10181053,0,0x0,6
tick,0x7d8294d2a042,10182115,0,0x0,6
tick,0x7d8294d2a042,10183183,0,0x0,6
tick,0x7d8294d2a042,10184232,0,0x0,6
tick,0x7d8294d2a042,10185291,0,0x0,6
tick,0x7d8294d2a042,10186352,0,0x0,6
tick,0x7d8294d2a042,10187404,0,0x0,6
tick,0x7d8294d2a042,10188390,0,0x0,6
tick,0x7d8294d2a042,10189450,0,0x0,6
tick,0x7d8294d2a042,10190581,0,0x0,6
tick,0x7d8294d2a042,10191591,0,0x0,6
tick,0x7d8294d2a042,10192705,0,0x0,6
tick,0x7d8294d2a042,10193769,0,0x0,6
tick,0x7d8294d2a042,10194821,0,0x0,6
tick,0x7d8294d2a042,10195864,0,0x0,6
tick,0x7d8294d2a042,10196932,0,0x0,6
tick,0x7d8294d2a042,10197989,0,0x0,6
tick,0x7d8294d2a042,10199056,0,0x0,6
tick,0x7d8294d2a042,10200091,0,0x0,6
tick,0x7d8294d2a042,10201156,0,0x0,6
tick,0x7d8294d2a042,10202220,0,0x0,6
tick,0x7d8294d2a042,10203276,0,0x0,6
tick,0x7d8294d2a042,10204350,0,0x0,6
tick,0x7d8294d2a042,10205412,0,0x0,6
tick,0x7d8294d2a042,10206476,0,0x0,6
tick,0x7d8294d2a042,10207485,0,0x0,6
tick,0x7d8294d2a042,10208561,0,0x0,6
tick,0x7d8294d2a042,10209530,0,0x0,6
tick,0x7d8294d2a042,10210588,0,0x0,6
tick,0x7d8294d2a042,10211631,0,0x0,6
tick,0x7d8294d2a042,10212711,0,0x0,6
tick,0x7d8294d2a042,10213855,0,0x0,6
tick,0x7d8294d2a042,10214803,0,0x0,6
tick,0x7d8294d2a042,10215876,0,0x0,6
tick,0x7d8294d2a042,10217007,0,0x0,6
tick,0x7d8294d2a042,10218000,0,0x0,6
tick,0x7d8294d2a042,10219052,0,0x0,6
tick,0x7d8294d2a042,10220188,0,0x0,6
tick,0x7d8294d2a042,10221241,0,0x0,6
tick,0x7d8294d2a042,10222294,0,0x0,6
tick,0x7d8294d2a042,10223357,0,0x0,6
tick,0x7d8294d2a042,10224417,0,0x0,6
tick,0x7d8294d2a042,10225403,0,0x0,6
tick,0x7d8294d2a042,10226471,0,0x0,6
tick,0x7d8294d2a042,10227571,0,0x0,6
tick,0x7d8294d2a042,10228691,0,0x0,6
tick,0x7d8294d2a042,10229768,0,0x0,6
tick,0x7d8294d2a042,10230847,0,0x0,6
tick,0x7d8294d2a042,10231914,0,0x0,6
tick,0x7d8294d2a042,10232991,0,0x0,6
tick,0x7d8294d2a042,10234078,0,0x0,6
tick,0x7d8294d2a042,10235141,0,0x0,6
tick,0x7d8294d2a042,10236220,0,0x0,6
tick,0x7d8294d2a042,10237298,0,0x0,6
tick,0x7d8294d2a042,10238412,0,0x0,6
tick,0x7d8294d2a042,10239509,0,0x0,6
tick,0x7d8294d2a042,10240728,0,0x0,6
tick,0x7d8294d2a042,10241853,0,0x0,6
tick,0x7d8294d2a042,10242992,0,0x0,6
tick,0x7d8294d2a042,10244088,0,0x0,6
tick,0x7d8294d2a042,10245251,0,0x0,6
tick,0x7d8294d2a042,10246380,0,0x0,6
tick,0x7d8294d2a042,10247466,0,0x0,6
tick,0x7d8294d2a042,10248715,0,0x0,6
tick,0x7d8294d2a042,10249858,0,0x0,6
tick,0x7d8294d2a042,10250973,0,0x0,6
tick,0x7d8294d2a042,10252082,0,0x0,6
tick,0x7d8294d2a042,10253248,0,0x0,6
tick,0x7d8294d2a042,10254399,0,0x0,6
tick,0x7d8294d2a042,10255533,0,0x0,6
tick,0x7d8294d2a042,10256768,0,0x0,6
tick,0x7d8294d2a042,10257907,0,0x0,6
tick,0x7d8294d2a042,10259010,0,0x0,6
tick,0x7d8294d2a042,10260105,0,0x0,6
tick,0x7d8294d2a042,10261283,0,0x0,6
tick,0x7d8294d2a042,10262438,0,0x0,6
tick,0x7d8294d2a042,10263521,0,0x0,6
tick,0x7d8294d2a042,10264755,0,0x0,6
tick,0x7d8294d2a042,10265923,0,0x0,6
tick,0x7d8294d2a042,10267044,0,0x0,6
tick,0x7d8294d2a042,10268164,0,0x0,6
tick,0x7d8294d2a042,10269281,0,0x0,6
tick,0x7d8294d2a042,10270450,0,0x0,6
tick,0x7d8294d2a042,10271519,0,0x0,6
tick,0x7d8294d2a042,10272742,0,0x0,6
tick,0x7d8294d2a042,10273901,0,0x0,6
tick,0x7d8294d2a042,10274940,0,0x0,6
tick,0x7d8294d2a042,10275999,0,0x0,6
tick,0x7d8294d2a042,10277217,0,0x0,6
tick,0x7d8294d2a042,10278353,0,0x0,6
tick,0x7d8294d2a042,10279478,0,0x0,6
tick,0x7d8294d2a042,10280574,0,0x0,6
tick,0x7d8294d2a042,10281744,0,0x0,6
tick,0x7d8294d2a042,10282826,0,0x0,6
tick,0x7d8294d2a042,10283935,0,0x0,6
tick,0x7d8294d2a042,10285087,0,0x0,6
tick,0x7d8294d2a042,10286236,0,0x0,6
tick,0x7d8294d2a042,10287345,0,0x0,6
tick,0x7d8294d2a042,10288504,0,0x0,6
tick,0x7d8294d2a042,10289614,0,0x0,6
tick,0x7d8294d2a042,10290710,0,0x0,6
tick,0x7d8294d2a042,10291763,0,0x0,6
tick,0x7d8294d2a042,10292962,0,0x0,6
tick,0x7d8294d2a042,10294107,0,0x0,6
tick,0x7d8294d2a042,10295232,0,0x0,6
tick,0x7d8294d2a042,10296374,0,0x0,6
tick,0x7d8294d2a042,10297483,0,0x0,6
tick,0x7d8294d2a042,10298629,0,0x0,6
tick,0x7d8294d2a042,10299699,0,0x0,6
tick,0x7d8294d2a042,10300839,0,0x0,6
tick,0x7d8294d2a042,10301981,0,0x0,6
tick,0x7d8294d2a042,10303110,0,0x0,6
tick,0x7d8294d2a042,10304167,0,0x0,6
tick,0x7d8294d2a042,10305278,0,0x0,6
tick,0x7d8294d2a042,10306463,0,0x0,6
tick,0x7d8294d2a042,10307614,0,0x0,6
tick,0x7d8294d2a042,10308751,0,0x0,6
tick,0x7d8294d2a042,10309903,0,0x0,6
tick,0x7d8294d2a042,10310882,0,0x0,6
tick,0x7d8294d2a042,10312003,0,0x0,6
tick,0x7d8294d2a042,10313170,0,0x0,6
tick,0x7d8294d2a042,10314351,0,0x0,6
tick,0x7d8294d2a042,10315505,0,0x0,6
tick,0x7d8294d2a042,10316649,0,0x0,6
tick,0x7d8294d2a042,10317814,0,0x0,6
tick,0x7d8294d2a042,10318917,0,0x0,6
tick,0x7d8294d2a042,10319973,0,0x0,6
tick,0x7d8294d2a042,10321124,0,0x0,6
tick,0x7d8294d2a042,10322265,0,0x0,6
tick,0x7d8294d2a042,10323427,0,0x0,6
tick,0x7d8294d2a042,10324554,0,0x0,6
tick,0x7d8294d2a042,10325681,0,0x0,6
tick,0x7d8294d2a042,10326797,0,0x0,6
tick,0x7d8294d2a042,10327903,0,0x0,6
tick,0x7d8294d2a042,10329071,0,0x0,6
tick,0x7d8294d2a042,10330231,0,0x0,6
tick,0x7d8294d2a042,10331319,0,0x0,6
tick,0x7d8294d2a042,10332478,0,0x0,6
tick,0x7d8294d2a042,10333569,0,0x0,6
tick,0x7d8294d2a042,10334635,0,0x0,6
tick,0x7d8294d2a042,10335801,0,0x0,6
tick,0x7d8294d2a042,10336980,0,0x0,6
tick,0x7d8294d2a042,10338156,0,0x0,6
tick,0x7d8294d2a042,10339155,0,0x0,6
tick,0x7d8294d2a042,10340304,0,0x0,6
tick,0x7d8294d2a042,10341447,0,0x0,6
tick,0x7d8294d2a042,10342620,0,0x0,6
tick,0x7d8294d2a042,10343687,0,0x0,6
tick,0x7d8294d2a042,10344830,0,0x0,6
tick,0x7d8294d2a042,10345986,0,0x0,6
tick,0x7d8294d2a042,10347108,0,0x0,6
tick,0x7d8294d2a042,10348177,0,0x0,6
tick,0x7d8294d2a042,10349298,0,0x0,6
tick,0x7d8294d2a042,10350461,0,0x0,6
tick,0x7d8294d2a042,10351549,0,0x0,6
tick,0x7d8294d2a042,10352712,0,0x0,6
tick,0x7d8294d2a042,10353857,0,0x0,6
tick,0x7d8294d2a042,10354955,0,0x0,6
tick,0x7d8294d2a042,10356097,0,0x0,6
tick,0x7d8294d2a042,10357234,0,0x0,6
tick,0x7d8294d2a042,10358390,0,0x0,6
tick,0x7d8294d2a042,10359530,0,0x0,6
tick,0x7d8294d2a042,10360684,0,0x0,6
tick,0x7d8294d2a042,10361818,0,0x0,6
tick,0x7d8294d2a042,10362922,0,0x0,6
tick,0x7d8294d2a042,10364065,0,0x0,6
tick,0x7d8294d2a042,10365227,0,0x0,6
tick,0x7d8294d2a042,10366389,0,0x0,6
tick,0x7d8294d2a042,10367459,0,0x0,6
tick,0x7d8294d2a042,10368612,0,0x0,6
tick,0x7d8294d2a042,10369781,0,0x0,6
tick,0x7d8294d2a042,10370897,0,0x0,6
tick,0x7d8294d2a042,10372011,0,0x0,6
tick,0x7d8294d2a042,10373179,0,0x0,6
tick,0x7d8294d2a042,10374350,0,0x0,6
tick,0x7d8294d2a042,10375525,0,0x0,6
tick,0x7d8294d2a042,10376693,0,0x0,6
tick,0x7d8294d2a042,10377874,0,0x0,6
tick,0x7d8294d2a042,10379001,0,0x0,6
tick,0x7d8294d2a042,10380116,0,0x0,6
tick,0x7d8294d2a042,10381273,0,0x0,6
tick,0x7d8294d2a042,10382449,0,0x0,6
tick,0x7d8294d2a042,10383573,0,0x0,6
tick,0x7d8294d2a042,10384750,0,0x0,6
tick,0x7d8294d2a042,10385919,0,0x0,6
tick,0x7d8294d2a042,10386961,0,0x0,6
tick,0x7d8294d2a042,10388042,0,0x0,6
tick,0x7d8294d2a042,10389221,0,0x0,6
tick,0x7d8294d2a042,10390294,0,0x0,6
tick,0x7d8294d2a042,10391380,0,0x0,6
tick,0x7d8294d2a042,10392450,0,0x0,6
tick,0x7d8294d2a042,10393530,0,0x0,6
tick,0x7d8294d2a042,10394661,0,0x0,6
tick,0x7d8294d2a042,10395671,0,0x0,6
tick,0x7d8294d2a042,10396819,0,0x0,6
tick,0x7d8294d2a042,10397991,0,0x0,6
tick,0x7d8294d2a042,10399085,0,0x0,6
tick,0x7d8294d2a042,10400153,0,0x0,6
tick,0x7d8294d2a042,10401291,0,0x0,6
tick,0x7d8294d2a042,10402484,0,0x0,6
tick,0x7d8294d2a042,10403555,0,0x0,6
tick,0x7d8294d2a042,10404733,0,0x0,6
tick,0x7d8294d2a042,10405879,0,0x0,6
tick,0x7d8294d2a042,10406982,0,0x0,6
tick,0x7d8294d2a042,10408104,0,0x0,6
tick,0x7d8294d2a042,10409244,0,0x0,6
tick,0x7d8294d2a042,10410387,0,0x0,6
tick,0x7d8294d2a042,10411519,0,0x0,6
tick,0x7d8294d2a042,10412687,0,0x0,6
tick,0x7d8294d2a042,10413854,0,0x0,6
tick,0x7d8294d2a042,10414934,0,0x0,6
tick,0x7d8294d2a042,10416053,0,0x0,6
tick,0x7d8294d2a042,10417199,0,0x0,6
tick,0x7d8294d2a042,10418347,0,0x0,6
tick,0x7d8294d2a042,10419513,0,0x0,6
tick,0x7d8294d2a042,10420656,0,0x0,6
tick,0x7d8294d2a042,10421825,0,0x0,6
tick,0x7d8294d2a042,10422914,0,0x0,6
tick,0x7d8294d2a042,10424064,0,0x0,6
tick,0x7d8294d2a042,10425164,0,0x0,6
tick,0x7d8294d2a042,10426326,0,0x0,6
tick,0x7d8294d2a042,10427403,0,0x0,6
tick,0x7d8294d2a042,10428480,0,0x0,6
tick,0x7d8294d2a042,10429533,0,0x0,6
tick,0x7d8294d2a042,10430607,0,0x0,6
tick,0x7d8294d2a042,10431721,0,0x0,6
tick,0x7d8294d2a042,10432745,0,0x0,6
tick,0x7d8294d2a042,10433815,0,0x0,6
tick,0x7d8294d2a042,10434887,0,0x0,6
tick,0x7d8294d2a042,10435960,0,0x0,6
tick,0x7d8294d2a042,10437081,0,0x0,6
tick,0x7d8294d2a042,10438234,0,0x0,6
tick,0x7d8294d2a042,10439348,0,0x0,6
tick,0x7d8294d2a042,10440419,0,0x0,6
tick,0x7d8294d2a042,10441500,0,0x0,6
tick,0x7d8294d2a042,10442574,0,0x0,6
tick,0x7d8294d2a042,10443628,0,0x0,6
tick,0x7d8294d2a042,10444701,0,0x0,6
tick,0x7d8294d2a042,10445822,0,0x0,6
tick,0x7d8294d2a042,10446937,0,0x0,6
tick,0x7d8294d2a042,10448013,0,0x0,6
tick,0x7d8294d2a042,10449140,0,0x0,6
tick,0x7d8294d2a042,10450284,0,0x0,6
tick,0x7d8294d2a042,10451396,0,0x0,6
tick,0x7d8294d2a042,10452618,0,0x0,6
tick,0x7d8294d2a042,10453788,0,0x0,6
tick,0x7d8294d2a042,10454870,0,0x0,6
tick,0x7d8294d2a042,10456003,0,0x0,6
tick,0x7d8294d2a042,10457175,0,0x0,6
tick,0x7d8294d2a042,10458275,0,0x0,6
tick,0x7d8294d2a042,10459355,0,0x0,6
tick,0x7d8294d2a042,10460437,0,0x0,6
tick,0x7d8294d2a042,10461521,0,0x0,6
tick,0x7d8294d2a042,10462606,0,0x0,6
tick,0x7d8294d2a042,10463684,0,0x0,6
tick,0x7d8294d2a042,10464801,0,0x0,6
tick,0x7d8294d2a042,10465816,0,0x0,6
tick,0x7d8294d2a042,10466888,0,0x0,6
tick,0x7d8294d2a042,10467967,0,0x0,6
tick,0x7d8294d2a042,10469045,0,0x0,6
tick,0x7d8294d2a042,10470119,0,0x0,6
tick,0x7d8294d2a042,10471194,0,0x0,6
tick,0x7d8294d2a042,10472349,0,0x0,6
tick,0x7d8294d2a042,10473425,0,0x0,6
tick,0x7d8294d2a042,10474499,0,0x0,6
tick,0x7d8294d2a042,10475554,0,0x0,6
tick,0x7d8294d2a042,10476628,0,0x0,6
tick,0x7d8294d2a042,10477707,0,0x0,6
tick,0x7d8294d2a042,10478786,0,0x0,6
tick,0x7d8294d2a042,10479929,0,0x0,6
tick,0x7d8294d2a042,10481092,0,0x0,6
tick,0x7d8294d2a042,10482124,0,0x0,6
tick,0x7d8294d2a042,10483198,0,0x0,6
tick,0x7d8294d2a042,10484363,0,0x0,6
tick,0x7d8294d2a042,10485415,0,0x0,6
tick,0x7d8294d2a042,10486541,0,0x0,6
tick,0x7d8294d2a042,10487602,0,0x0,6
tick,0x7d8294d2a042,10488749,0,0x0,6
tick,0x7d8294d2a042,10489893,0,0x0,6
tick,0x7d8294d2a042,10491009,0,0x0,6
tick,0x7d8294d2a042,10492083,0,0x0,6
tick,0x7d8294d2a042,10493155,0,0x0,6
tick,0x7d8294d2a042,10494303,0,0x0,6
tick,0x7d8294d2a042,10495355,0,0x0,6
tick,0x7d8294d2a042,10496435,0,0x0,6
tick,0x7d8294d2a042,10497508,0,0x0,6
tick,0x7d8294d2a042,10498586,0,0x0,6
tick,0x7d8294d2a042,10499667,0,0x0,6
tick,0x7d8294d2a042,10500743,0,0x0,6
tick,0x7d8294d2a042,10501817,0,0x0,6
tick,0x7d8294d2a042,10502891,0,0x0,6
tick,0x7d8294d2a042,10503970,0,0x0,6
tick,0x7d8294d2a042,10505108,0,0x0,6
tick,0x7d8294d2a042,10506246,0,0x0,6
tick,0x7d8294d2a042,10507354,0,0x0,6
tick,0x7d8294d2a042,10508414,0,0x0,6
tick,0x7d8294d2a042,10509498,0,0x0,6
tick,0x7d8294d2a042,10510627,0,0x0,6
tick,0x7d8294d2a042,10511630,0,0x0,6
tick,0x7d8294d2a042,10512760,0,0x0,6
tick,0x7d8294d2a042,10513787,0,0x0,6
tick,0x7d8294d2a042,10514862,0,0x0,6
tick,0x7d8294d2a042,10515937,0,0x0,6
tick,0x7d8294d2a042,10517011,0,0x0,6
tick,0x7d8294d2a042,10518090,0,0x0,6
tick,0x7d8294d2a042,10519164,0,0x0,6
tick,0x7d8294d2a042,10520245,0,0x0,6
tick,0x7d8294d2a042,10521299,0,0x0,6
tick,0x7d8294d2a042,10522373,0,0x0,6
tick,0x7d8294d2a042,10523380,0,0x0,6
tick,0x7d8294d2a042,10524434,0,0x0,6
tick,0x7d8294d2a042,10525506,0,0x0,6
tick,0x7d8294d2a042,10526641,0,0x0,6
tick,0x7d8294d2a042,10527645,0,0x0,6
tick,0x7d8294d2a042,10528774,0,0x0,6
tick,0x7d8294d2a042,10529932,0,0x0,6
tick,0x7d8294d2a042,10531043,0,0x0,6
tick,0x7d8294d2a042,10532113,0,0x0,6
tick,0x7d8294d2a042,10533176,0,0x0,6
tick,0x7d8294d2a042,10534246,0,0x0,6
tick,0x7d8294d2a042,10535319,0,0x0,6
tick,0x7d8294d2a042,10536405,0,0x0,6
tick,0x7d8294d2a042,10537529,0,0x0,6
tick,0x7d8294d2a042,10538642,0,0x0,6
tick,0x7d8294d2a042,10539769,0,0x0,6
tick,0x7d8294d2a042,10540908,0,0x0,6
tick,0x7d8294d2a042,10542042,0,0x0,6
tick,0x7d8294d2a042,10543082,0,0x0,6
tick,0x7d8294d2a042,10544154,0,0x0,6
tick,0x7d8294d2a042,10545230,0,0x0,6
tick,0x7d8294d2a042,10546311,0,0x0,6
tick,0x7d8294d2a042,10547446,0,0x0,6
tick,0x7d8294d2a042,10548595,0,0x0,6
tick,0x7d8294d2a042,10549761,0,0x0,6
tick,0x7d8294d2a042,10550853,0,0x0,6
tick,0x7d8294d2a042,10551925,0,0x0,6
tick,0x7d8294d2a042,10552998,0,0x0,6
tick,0x7d8294d2a042,10554072,0,0x0,6
tick,0x7d8294d2a042,10555130,0,0x0,6
tick,0x7d8294d2a042,10556205,0,0x0,6
tick,0x7d8294d2a042,10557280,0,0x0,6
tick,0x7d8294d2a042,10558353,0,0x0,6
tick,0x7d8294d2a042,10559407,0,0x0,6
tick,0x7d8294d2a042,10560548,0,0x0,6
tick,0x7d8294d2a042,10561726,0,0x0,6
tick,0x7d8294d2a042,10562752,0,0x0,6
tick,0x7d8294d2a042,10563922,0,0x0,6
tick,0x7d8294d2a042,10564945,0,0x0,6
tick,0x7d8294d2a042,10566024,0,0x0,6
tick,0x7d8294d2a042,10567085,0,0x0,6
tick,0x7d8294d2a042,10568157,0,0x0,6
tick,0x7d8294d2a042,10569234,0,0x0,6
tick,0x7d8294d2a042,10570304,0,0x0,6
tick,0x7d8294d2a042,10571413,0,0x0,6
tick,0x7d8294d2a042,10572558,0,0x0,6
tick,0x7d8294d2a042,10573635,0,0x0,6
tick,0x7d8294d2a042,10574630,0,0x0,6
tick,0x7d8294d2a042,10575756,0,0x0,6
tick,0x7d8294d2a042,10576839,0,0x0,6
tick,0x7d8294d2a042,10577839,0,0x0,6
tick,0x7d8294d2a042,10578908,0,0x0,6
tick,0x7d8294d2a042,10580076,0,0x0,6
tick,0x7d8294d2a042,10581139,0,0x0,6
tick,0x7d8294d2a042,10582146,0,0x0,6
tick,0x7d8294d2a042,10583218,0,0x0,6
tick,0x7d8294d2a042,10584305,0,0x0,6
tick,0x7d8294d2a042,10585312,0,0x0,6
tick,0x7d8294d2a042,10586408,0,0x0,6
tick,0x7d8294d2a042,10587386,0,0x0,6
tick,0x7d8294d2a042,10588578,0,0x0,6
tick,0x7d8294d2a042,10589564,0,0x0,6
tick,0x7d8294d2a042,10590724,0,0x0,6
tick,0x7d8294d2a042,10591769,0,0x0,6
tick,0x7d8294d2a042,10592840,0,0x0,6
tick,0x7d8294d2a042,10593907,0,0x0,6
tick,0x7d8294d2a042,10594967,0,0x0,6
tick,0x7d8294d2a042,10596018,0,0x0,6
tick,0x7d8294d2a042,10597100,0,0x0,6
tick,0x7d8294d2a042,10598083,0,0x0,6
tick,0x7d8294d2a042,10599144,0,0x0,6
tick,0x7d8294d2a042,10600271,0,0x0,6
tick,0x7d8294d2a042,10601348,0,0x0,6
tick,0x7d8294d2a042,10602346,0,0x0,6
tick,0x7d8294d2a042,10603452,0,0x0,6
tick,0x7d8294d2a042,10604485,0,0x0,6
tick,0x7d8294d2a042,10605600,0,0x0,6
tick,0x7d8294d2a042,10606652,0,0x0,6
tick,0x7d8294d2a042,10607715,0,0x0,6
tick,0x7d8294d2a042,10608783,0,0x0,6
tick,0x7d8294d2a042,10609842,0,0x0,6
tick,0x7d8294d2a042,10610905,0,0x0,6
tick,0x7d8294d2a042,10611959,0,0x0,6
tick,0x7d8294d2a042,10613034,0,0x0,6
tick,0x7d8294d2a042,10614095,0,0x0,6
tick,0x7d8294d2a042,10615178,0,0x0,6
tick,0x7d8294d2a042,10616222,0,0x0,6
tick,0x7d8294d2a042,10617291,0,0x0,6
tick,0x7d8294d2a042,10618349,0,0x0,6
tick,0x7d8294d2a042,10619413,0,0x0,6
tick,0x7d8294d2a042,10620474,0,0x0,6
tick,0x7d8294d2a042,10621464,0,0x0,6
tick,0x7d8294d2a042,10622601,0,0x0,6
tick,0x7d8294d2a042,10623605,0,0x0,6
tick,0x7d8294d2a042,10624711,0,0x0,6
tick,0x7d8294d2a042,10625785,0,0x0,6
tick,0x7d8294d2a042,10626845,0,0x0,6
tick,0x7d8294d2a042,10627909,0,0x0,6
tick,0x7d8294d2a042,10628988,0,0x0,6
tick,0x7d8294d2a042,10630039,0,0x0,6
tick,0x7d8294d2a042,10631094,0,0x0,6
tick,0x7d8294d2a042,10632185,0,0x0,6
tick,0x7d8294d2a042,10633228,0,0x0,6
tick,0x7d8294d2a042,10634291,0,0x0,6
tick,0x7d8294d2a042,10635299,0,0x0,6
tick,0x7d8294d2a042,10636355,0,0x0,6
tick,0x7d8294d2a042,10637475,0,0x0,6
tick,0x7d8294d2a042,10638540,0,0x0,6
tick,0x7d8294d2a042,10639560,0,0x0,6
tick,0x7d8294d2a042,10640669,0,0x0,6
tick,0x7d8294d2a042,10641712,0,0x0,6
tick,0x7d8294d2a042,10642792,0,0x0,6
tick,0x7d8294d2a042,10643835,0,0x0,6
tick,0x7d8294d2a042,10644834,0,0x0,6
tick,0x7d8294d2a042,10645972,0,0x0,6
tick,0x7d8294d2a042,10647034,0,0x0,6
tick,0x7d8294d2a042,10648099,0,0x0,6
tick,0x7d8294d2a042,10649163,0,0x0,6
tick,0x7d8294d2a042,10650216,0,0x0,6
tick,0x7d8294d2a042,10651283,0,0x0,6
tick,0x7d8294d2a042,10652348,0,0x0,6
tick,0x7d8294d2a042,10653403,0,0x0,6
tick,0x7d8294d2a042,10654466,0,0x0,6
tick,0x7d8294d2a042,10655470,0,0x0,6
tick,0x7d8294d2a042,10656546,0,0x0,6
tick,0x7d8294d2a042,10657606,0,0x0,6
tick,0x7d8294d2a042,10658677,0,0x0,6
tick,0x7d8294d2a042,10659733,0,0x0,6
tick,0x7d8294d2a042,10660799,0,0x0,6
tick,0x7d8294d2a042,10661842,0,0x0,6
tick,0x7d8294d2a042,10662919,0,0x0,6
tick,0x7d8294d2a042,10663973,0,0x0,6
tick,0x7d8294d2a042,10665041,0,0x0,6
tick,0x7d8294d2a042,10666107,0,0x0,6
tick,0x7d8294d2a042,10667158,0,0x0,6
tick,0x7d8294d2a042,10668233,0,0x0,6
tick,0x7d8294d2a042,10669294,0,0x0,6
tick,0x7d8294d2a042,10670338,0,0x0,6
tick,0x7d8294d2a042,10671358,0,0x0,6
tick,0x7d8294d2a042,10672480,0,0x0,6
tick,0x7d8294d2a042,10673549,0,0x0,6
tick,0x7d8294d2a042,10674611,0,0x0,6
tick,0x7d8294d2a042,10675609,0,0x0,6
tick,0x7d8294d2a042,10676738,0,0x0,6
tick,0x7d8294d2a042,10677776,0,0x0,6
tick,0x7d8294d2a042,10678855,0,0x0,6
tick,0x7d8294d2a042,10679928,0,0x0,6
tick,0x7d8294d2a042,10680972,0,0x0,6
tick,0x7d8294d2a042,10682050,0,0x0,6
tick,0x7d8294d2a042,10683019,0,0x0,6
tick,0x7d8294d2a042,10684095,0,0x0,6
tick,0x7d8294d2a042,10685180,0,0x0,6
tick,0x7d8294d2a042,10686257,0,0x0,6
tick,0x7d8294d2a042,10687340,0,0x0,6
tick,0x7d8294d2a042,10688471,0,0x0,6
tick,0x7d8294d2a042,10689640,0,0x0,6
tick,0x7d8294d2a042,10690674,0,0x0,6
tick,0x7d8294d2a042,10691798,0,0x0,6
tick,0x7d8294d2a042,10692970,0,0x0,6
tick,0x7d8294d2a042,10694137,0,0x0,6
tick,0x7d8294d2a042,10695183,0,0x0,6
tick,0x7d8294d2a042,10696409,0,0x0,6
tick,0x7d8294d2a042,10697581,0,0x0,6
tick,0x7d8294d2a042,10698618,0,0x0,6
tick,0x7d8294d2a042,10699716,0,0x0,6
tick,0x7d8294d2a042,10700889,0,0x0,6
tick,0x7d8294d2a042,10702054,0,0x0,6
tick,0x7d8294d2a042,10703076,0,0x0,6
tick,0x7d8294d2a042,10704201,0,0x0,6
tick,0x7d8294d2a042,10705229,0,0x0,6
tick,0x7d8294d2a042,10706313,0,0x0,6
tick,0x7d8294d2a042,10707460,0,0x0,6
tick,0x7d8294d2a042,10708619,0,0x0,6
tick,0x7d8294d2a042,10709781,0,0x0,6
tick,0x7d8294d2a042,10710891,0,0x0,6
tick,0x7d8294d2a042,10712012,0,0x0,6
tick,0x7d8294d2a042,10713172,0,0x0,6
tick,0x7d8294d2a042,10714325,0,0x0,6
tick,0x7d8294d2a042,10715426,0,0x0,6
tick,0x7d8294d2a042,10716507,0,0x0,6
tick,0x7d8294d2a042,10717571,0,0x0,6
tick,0x7d8294d2a042,10718717,0,0x0,6
tick,0x7d8294d2a042,10719693,0,0x0,6
tick,0x7d8294d2a042,10720731,0,0x0,6
tick,0x7d8294d2a042,10721834,0,0x0,6
tick,0x7d8294d2a042,10722956,0,0x0,6
tick,0x7d8294d2a042,10724006,0,0x0,6
tick,0x7d8294d2a042,10725089,0,0x0,6
tick,0x7d8294d2a042,10726193,0,0x0,6
tick,0x7d8294d2a042,10727134,0,0x0,6
tick,0x7d8294d2a042,10728267,0,0x0,6
tick,0x7d8294d2a042,10729327,0,0x0,6
tick,0x7d8294d2a042,10730318,0,0x0,6
tick,0x7d8294d2a042,10731402,0,0x0,6
tick,0x7d8294d2a042,10732517,0,0x0,6
tick,0x7d8294d2a042,10733579,0,0x0,6
tick,0x7d8294d2a042,10734638,0,0x0,6
tick,0x7d8294d2a042,10735641,0,0x0,6
tick,0x7d8294d2a042,10736780,0,0x0,6
tick,0x7d8294d2a042,10737823,0,0x0,6
tick,0x7d8294d2a042,10738890,0,0x0,6
tick,0x7d8294d2a042,10739947,0,0x0,6
tick,0x7d8294d2a042,10741010,0,0x0,6
tick,0x7d8294d2a042,10742086,0,0x0,6
tick,0x7d8294d2a042,10743121,0,0x0,6
tick,0x7d8294d2a042,10744198,0,0x0,6
tick,0x7d8294d2a042,10745275,0,0x0,6
tick,0x7d8294d2a042,10746318,0,0x0,6
tick,0x7d8294d2a042,10747288,0,0x0,6
tick,0x7d8294d2a042,10748448,0,0x0,6
tick,0x7d8294d2a042,10749412,0,0x0,6
tick,0x7d8294d2a042,10750493,0,0x0,6
tick,0x7d8294d2a042,10751569,0,0x0,6
tick,0x7d8294d2a042,10752691,0,0x0,6
tick,0x7d8294d2a042,10753755,0,0x0,6
tick,0x7d8294d2a042,10754815,0,0x0,6
tick,0x7d8294d2a042,10755871,0,0x0,6
tick,0x7d8294d2a042,10756943,0,0x0,6
tick,0x7d8294d2a042,10757923,0,0x0,6
tick,0x7d8294d2a042,10758992,0,0x0,6
tick,0x7d8294d2a042,10760130,0,0x0,6
tick,0x7d8294d2a042,10761190,0,0x0,6
tick,0x7d8294d2a042,10762252,0,0x0,6
tick,0x7d8294d2a042,10763313,0,0x0,6
tick,0x7d8294d2a042,10764390,0,0x0,6
tick,0x7d8294d2a042,10765382,0,0x0,6
tick,0x7d8294d2a042,10766501,0,0x0,6
tick,0x7d8294d2a042,10767484,0,0x0,6
tick,0x7d8294d2a042,10768625,0,0x0,6
tick,0x7d8294d2a042,10769692,0,0x0,6
tick,0x7d8294d2a042,10770749,0,0x0,6
tick,0x7d8294d2a042,10771797,0,0x0,6
tick,0x7d8294d2a042,10772785,0,0x0,6
tick,0x7d8294d2a042,10773844,0,0x0,6
tick,0x7d8294d2a042,10774904,0,0x0,6
tick,0x7d8294d2a042,10775966,0,0x0,6
tick,0x7d8294d2a042,10777028,0,0x0,6
tick,0x7d8294d2a042,10778091,0,0x0,6
tick,0x7d8294d2a042,10779153,0,0x0,6
tick,0x7d8294d2a042,10780217,0,0x0,6
tick,0x7d8294d2a042,10781280,0,0x0,6
tick,0x7d8294d2a042,10782343,0,0x0,6
tick,0x7d8294d2a042,10783389,0,0x0,6
tick,0x7d8294d2a042,10784453,0,0x0,6
tick,0x7d8294d2a042,10785515,0,0x0,6
tick,0x7d8294d2a042,10786577,0,0x0,6
tick,0x7d8294d2a042,10787645,0,0x0,6
tick,0x7d8294d2a042,10788705,0,0x0,6
tick,0x7d8294d2a042,10789768,0,0x0,6
tick,0x7d8294d2a042,10790829,0,0x0,6
tick,0x7d8294d2a042,10791892,0,0x0,6
tick,0x7d8294d2a042,10792955,0,0x0,6
tick,0x7d8294d2a042,10794021,0,0x0,6
tick,0x7d8294d2a042,10795082,0,0x0,6
tick,0x7d8294d2a042,10796143,0,0x0,6
tick,0x7d8294d2a042,10797208,0,0x0,6
tick,0x7d8294d2a042,10798271,0,0x0,6
tick,0x7d8294d2a042,10799334,0,0x0,6
tick,0x7d8294d2a042,10800400,0,0x0,6
tick,0x7d8294d2a042,10801463,0,0x0,6
tick,0x7d8294d2a042,10802525,0,0x0,6
tick,0x7d8294d2a042,10803586,0,0x0,6
tick,0x7d8294d2a042,10804649,0,0x0,6
tick,0x7d8294d2a042,10805712,0,0x0,6
tick,0x7d8294d2a042,10806776,0,0x0,6
tick,0x7d8294d2a042,10807838,0,0x0,6
tick,0x7d8294d2a042,10808900,0,0x0,6
tick,0x7d8294d2a042,10809963,0,0x0,6
tick,0x7d8294d2a042,10811025,0,0x0,6
tick,0x7d8294d2a042,10812088,0,0x0,6
tick,0x7d8294d2a042,10813150,0,0x0,6
tick,0x7d8294d2a042,10814213,0,0x0,6
tick,0x7d8294d2a042,10815927,0,0x0,6
tick,0x7d8294d2a042,10816984,0,0x0,6
tick,0x7d8294d2a042,10818071,0,0x0,6
tick,0x7d8294d2a042,10819129,0,0x0,6
tick,0x7d8294d2a042,10820193,0,0x0,6
tick,0x7d8294d2a042,10821291,0,0x0,6
tick,0x7d8294d2a042,10822401,0,0x0,6
tick,0x7d8294d2a042,10823472,0,0x0,6
tick,0x7d8294d2a042,10824524,0,0x0,6
tick,0x7d8294d2a042,10825594,0,0x0,6
tick,0x7d8294d2a042,10826567,0,0x0,6
tick,0x7d8294d2a042,10827647,0,0x0,6
tick,0x7d8294d2a042,10828794,0,0x0,6
tick,0x7d8294d2a042,10829736,0,0x0,6
tick,0x7d8294d2a042,10830816,0,0x0,6
tick,0x7d8294d2a042,10831946,0,0x0,6
tick,0x7d8294d2a042,10833021,0,0x0,6
tick,0x7d8294d2a042,10834005,0,0x0,6
tick,0x7d8294d2a042,10835076,0,0x0,6
tick,0x7d8294d2a042,10836216,0,0x0,6
tick,0x7d8294d2a042,10837184,0,0x0,6
tick,0x7d8294d2a042,10838249,0,0x0,6
tick,0x7d8294d2a042,10839314,0,0x0,6
tick,0x7d8294d2a042,10840373,0,0x0,6
tick,0x7d8294d2a042,10841434,0,0x0,6
tick,0x7d8294d2a042,10842494,0,0x0,6
tick,0x7d8294d2a042,10843557,0,0x0,6
tick,0x7d8294d2a042,10844619,0,0x0,6
tick,0x7d8294d2a042,10845682,0,0x0,6
tick,0x7d8294d2a042,10846743,0,0x0,6
tick,0x7d8294d2a042,10847810,0,0x0,6
tick,0x7d8294d2a042,10848905,0,0x0,6
tick,0x7d8294d2a042,10849949,0,0x0,6
tick,0x7d8294d2a042,10851012,0,0x0,6
tick,0x7d8294d2a042,10852159,0,0x0,6
tick,0x7d8294d2a042,10853222,0,0x0,6
tick,0x7d8294d2a042,10854202,0,0x0,6
tick,0x7d8294d2a042,10855246,0,0x0,6
tick,0x7d8294d2a042,10856408,0,0x0,6
tick,0x7d8294d2a042,10857477,0,0x0,6
tick,0x7d8294d2a042,10858462,0,0x0,6
tick,0x7d8294d2a042,10859565,0,0x0,6
tick,0x7d8294d2a042,10860656,0,0x0,6
tick,0x7d8294d2a042,10861634,0,0x0,6
tick,0x7d8294d2a042,10862694,0,0x0,6
tick,0x7d8294d2a042,10863754,0,0x0,6
tick,0x7d8294d2a042,10864820,0,0x0,6
tick,0x7d8294d2a042,10865887,0,0x0,6
tick,0x7d8294d2a042,10866947,0,0x0,6
tick,0x7d8294d2a042,10868011,0,0x0,6
tick,0x7d8294d2a042,10869073,0,0x0,6
tick,0x7d8294d2a042,10870136,0,0x0,6
tick,0x7d8294d2a042,10871198,0,0x0,6
tick,0x7d8294d2a042,10872261,0,0x0,6
tick,0x7d8294d2a042,10873325,0,0x0,6
tick,0x7d8294d2a042,10874390,0,0x0,6
tick,0x7d8294d2a042,10875488,0,0x0,6
tick,0x7d8294d2a042,10876519,0,0x0,6
tick,0x7d8294d2a042,10877583,0,0x0,6
tick,0x7d8294d2a042,10878645,0,0x0,6
tick,0x7d8294d2a042,10879707,0,0x0,6
tick,0x7d8294d2a042,10880771,0,0x0,6
tick,0x7d8294d2a042,10881833,0,0x0,6
tick,0x7d8294d2a042,10882895,0,0x0,6
tick,0x7d8294d2a042,10883958,0,0x0,6
tick,0x7d8294d2a042,10885021,0,0x0,6
tick,0x7d8294d2a042,10886082,0,0x0,6
tick,0x7d8294d2a042,10887145,0,0x0,6
tick,0x7d8294d2a042,10888208,0,0x0,6
tick,0x7d8294d2a042,10889270,0,0x0,6
tick,0x7d8294d2a042,10890333,0,0x0,6
tick,0x7d8294d2a042,10891400,0,0x0,6
tick,0x7d8294d2a042,10892454,0,0x0,6
tick,0x7d8294d2a042,10893515,0,0x0,6
tick,0x7d8294d2a042,10894576,0,0x0,6
tick,0x7d8294d2a042,10895638,0,0x0,6
tick,0x7d8294d2a042,10896701,0,0x0,6
tick,0x7d8294d2a042,10897764,0,0x0,6
tick,0x7d8294d2a042,10898827,0,0x0,6
tick,0x7d8294d2a042,10899890,0,0x0,6
tick,0x7d8294d2a042,10900952,0,0x0,6
tick,0x7d8294d2a042,10902016,0,0x0,6
tick,0x7d8294d2a042,10903083,0,0x0,6
tick,0x7d8294d2a042,10904150,0,0x0,6
tick,0x7d8294d2a042,10905213,0,0x0,6
tick,0x7d8294d2a042,10906274,0,0x0,6
tick,0x7d8294d2a042,10907334,0,0x0,6
tick,0x7d8294d2a042,10908399,0,0x0,6
tick,0x7d8294d2a042,10909459,0,0x0,6
tick,0x7d8294d2a042,10910520,0,0x0,6
tick,0x7d8294d2a042,10911586,0,0x0,6
tick,0x7d8294d2a042,10912662,0,0x0,6
tick,0x7d8294d2a042,10913728,0,0x0,6
tick,0x7d8294d2a042,10914788,0,0x0,6
tick,0x7d8294d2a042,10915850,0,0x0,6
tick,0x7d8294d2a042,10916913,0,0x0,6
tick,0x7d8294d2a042,10917979,0,0x0,6
tick,0x7d8294d2a042,10919036,0,0x0,6
tick,0x7d8294d2a042,10920101,0,0x0,6
tick,0x7d8294d2a042,10921161,0,0x0,6
tick,0x7d8294d2a042,10922226,0,0x0,6
tick,0x7d8294d2a042,10923291,0,0x0,6
tick,0x7d8294d2a042,10924354,0,0x0,6
tick,0x7d8294d2a042,10925412,0,0x0,6
tick,0x7d8294d2a042,10926475,0,0x0,6
tick,0x7d8294d2a042,10927539,0,0x0,6
tick,0x7d8294d2a042,10928609,0,0x0,6
tick,0x7d8294d2a042,10929673,0,0x0,6
tick,0x7d8294d2a042,10930743,0,0x0,6
tick,0x7d8294d2a042,10931802,0,0x0,6
tick,0x7d8294d2a042,10932955,0,0x0,6
tick,0x7d8294d2a042,10934026,0,0x0,6
tick,0x7d8294d2a042,10935087,0,0x0,6
tick,0x7d8294d2a042,10936051,0,0x0,6
tick,0x7d8294d2a042,10937112,0,0x0,6
tick,0x7d8294d2a042,10938171,0,0x0,6
tick,0x7d8294d2a042,10939228,0,0x0,6
tick,0x7d8294d2a042,10940290,0,0x0,6
tick,0x7d8294d2a042,10941353,0,0x0,6
tick,0x7d8294d2a042,10942417,0,0x0,6
tick,0x7d8294d2a042,10943476,0,0x0,6
tick,0x7d8294d2a042,10944538,0,0x0,6
tick,0x7d8294d2a042,10945597,0,0x0,6
tick,0x7d8294d2a042,10946657,0,0x0,6
tick,0x7d8294d2a042,10947717,0,0x0,6
tick,0x7d8294d2a042,10948778,0,0x0,6
tick,0x7d8294d2a042,10949835,0,0x0,6
tick,0x7d8294d2a042,10950900,0,0x0,6
tick,0x7d8294d2a042,10951960,0,0x0,6
tick,0x7d8294d2a042,10953022,0,0x0,6
tick,0x7d8294d2a042,10954082,0,0x0,6
tick,0x7d8294d2a042,10955141,0,0x0,6
tick,0x7d8294d2a042,10956202,0,0x0,6
tick,0x7d8294d2a042,10957267,0,0x0,6
tick,0x7d8294d2a042,10958325,0,0x0,6
tick,0x7d8294d2a042,10959389,0,0x0,6
tick,0x7d8294d2a042,10960450,0,0x0,6
tick,0x7d8294d2a042,10961522,0,0x0,6
tick,0x7d8294d2a042,10962581,0,0x0,6
tick,0x7d8294d2a042,10963642,0,0x0,6
tick,0x7d8294d2a042,10964703,0,0x0,6
tick,0x7d8294d2a042,10965762,0,0x0,6
tick,0x7d8294d2a042,10966822,0,0x0,6
tick,0x7d8294d2a042,10967882,0,0x0,6
tick,0x7d8294d2a042,10968939,0,0x0,6
tick,0x7d8294d2a042,10970019,0,0x0,6
tick,0x7d8294d2a042,10971094,0,0x0,6
tick,0x7d8294d2a042,10972170,0,0x0,6
tick,0x7d8294d2a042,10973243,0,0x0,6
tick,0x7d8294d2a042,10974316,0,0x0,6
tick,0x7d8294d2a042,10975393,0,0x0,6
tick,0x7d8294d2a042,10976469,0,0x0,6
tick,0x7d8294d2a042,10977544,0,0x0,6
tick,0x7d8294d2a042,10978618,0,0x0,6
tick,0x7d8294d2a042,10979693,0,0x0,6
tick,0x7d8294d2a042,10980768,0,0x0,6
tick,0x7d8294d2a042,10981843,0,0x0,6
tick,0x7d8294d2a042,10982917,0,0x0,6
tick,0x7d8294d2a042,10984025,0,0x0,6
tick,0x7d8294d2a042,10985090,0,0x0,6
tick,0x7d8294d2a042,10986166,0,0x0,6
tick,0x7d8294d2a042,10987239,0,0x0,6
tick,0x7d8294d2a042,10988415,0,0x0,6
tick,0x7d8294d2a042,10989480,0,0x0,6
tick,0x7d8294d2a042,10990552,0,0x0,6
tick,0x7d8294d2a042,10991606,0,0x0,6
tick,0x7d8294d2a042,10992699,0,0x0,6
tick,0x7d8294d2a042,10993780,0,0x0,6
tick,0x7d8294d2a042,10994850,0,0x0,6
tick,0x7d8294d2a042,10995925,0,0x0,6
tick,0x7d8294d2a042,10996999,0,0x0,6
tick,0x7d8294d2a042,10998079,0,0x0,6
tick,0x7d8294d2a042,10999151,0,0x0,6
tick,0x7d8294d2a042,11000225,0,0x0,6
tick,0x7d8294d2a042,11001369,0,0x0,6
tick,0x7d8294d2a042,11002388,0,0x0,6
tick,0x7d8294d2a042,11003454,0,0x0,6
tick,0x7d8294d2a042,11004522,0,0x0,6
tick,0x7d8294d2a042,11005583,0,0x0,6
tick,0x7d8294d2a042,11006649,0,0x0,6
tick,0x7d8294d2a042,11007712,0,0x0,6
tick,0x7d8294d2a042,11008775,0,0x0,6
tick,0x7d8294d2a042,11009837,0,0x0,6
tick,0x7d8294d2a042,11010904,0,0x0,6
tick,0x7d8294d2a042,11011965,0,0x0,6
tick,0x7d8294d2a042,11013028,0,0x0,6
tick,0x7d8294d2a042,11014091,0,0x0,6
tick,0x7d8294d2a042,11015158,0,0x0,6
tick,0x7d8294d2a042,11016219,0,0x0,6
tick,0x7d8294d2a042,11017281,0,0x0,6
tick,0x7d8294d2a042,11018343,0,0x0,6
tick,0x7d8294d2a042,11019399,0,0x0,6
tick,0x7d8294d2a042,11020465,0,0x0,6
tick,0x7d8294d2a042,11021528,0,0x0,6
tick,0x7d8294d2a042,11022592,0,0x0,6
tick,0x7d8294d2a042,11023657,0,0x0,6
tick,0x7d8294d2a042,11024723,0,0x0,6
tick,0x7d8294d2a042,11025785,0,0x0,6
tick,0x7d8294d2a042,11026850,0,0x0,6
tick,0x7d8294d2a042,11027914,0,0x0,6
tick,0x7d8294d2a042,11028976,0,0x0,6
tick,0x7d8294d2a042,11030041,0,0x0,6
tick,0x7d8294d2a042,11031106,0,0x0,6
tick,0x7d8294d2a042,11032176,0,0x0,6
tick,0x7d8294d2a042,11033278,0,0x0,6
tick,0x7d8294d2a042,11034283,0,0x0,6
tick,0x7d8294d2a042,11035334,0,0x0,6
tick,0x7d8294d2a042,11036423,0,0x0,6
tick,0x7d8294d2a042,11037498,0,0x0,6
tick,0x7d8294d2a042,11038586,0,0x0,6
tick,0x7d8294d2a042,11039644,0,0x0,6
tick,0x7d8294d2a042,11040717,0,0x0,6
tick,0x7d8294d2a042,11041791,0,0x0,6
tick,0x7d8294d2a042,11042863,0,0x0,6
tick,0x7d8294d2a042,11043938,0,0x0,6
tick,0x7d8294d2a042,11045012,0,0x0,6
tick,0x7d8294d2a042,11046095,0,0x0,6
tick,0x7d8294d2a042,11047167,0,0x0,6
tick,0x7d8294d2a042,11048247,0,0x0,6
tick,0x7d8294d2a042,11049421,0,0x0,6
tick,0x7d8294d2a042,11050471,0,0x0,6
tick,0x7d8294d2a042,11051525,0,0x0,6
tick,0x7d8294d2a042,11052600,0,0x0,6
tick,0x7d8294d2a042,11053671,0,0x0,6
tick,0x7d8294d2a042,11054752,0,0x0,6
tick,0x7d8294d2a042,11055828,0,0x0,6
tick,0x7d8294d2a042,11056906,0,0x0,6
tick,0x7d8294d2a042,11057980,0,0x0,6
tick,0x7d8294d2a042,11059066,0,0x0,6
tick,0x7d8294d2a042,11060142,0,0x0,6
tick,0x7d8294d2a042,11061214,0,0x0,6
tick,0x7d8294d2a042,11062302,0,0x0,6
tick,0x7d8294d2a042,11063409,0,0x0,6
tick,0x7d8294d2a042,11064551,0,0x0,6
tick,0x7d8294d2a042,11065707,0,0x0,6
tick,0x7d8294d2a042,11066834,0,0x0,6
tick,0x7d8294d2a042,11067891,0,0x0,6
tick,0x7d8294d2a042,11068965,0,0x0,6
tick,0x7d8294d2a042,11070039,0,0x0,6
tick,0x7d8294d2a042,11071102,0,0x0,6
tick,0x7d8294d2a042,11072140,0,0x0,6
tick,0x7d8294d2a042,11073219,0,0x0,6
tick,0x7d8294d2a042,11074284,0,0x0,6
tick,0x7d8294d2a042,11075342,0,0x0,6
tick,0x7d8294d2a042,11076321,0,0x0,6
tick,0x7d8294d2a042,11077462,0,0x0,6
tick,0x7d8294d2a042,11078520,0,0x0,6
tick,0x7d8294d2a042,11079489,0,0x0,6
tick,0x7d8294d2a042,11080652,0,0x0,6
tick,0x7d8294d2a042,11081746,0,0x0,6
tick,0x7d8294d2a042,11082704,0,0x0,6
tick,0x7d8294d2a042,11083773,0,0x0,6
tick,0x7d8294d2a042,11084849,0,0x0,6
tick,0x7d8294d2a042,11085994,0,0x0,6
tick,0x7d8294d2a042,11087085,0,0x0,6
tick,0x7d8294d2a042,11088208,0,0x0,6
tick,0x7d8294d2a042,11089242,0,0x0,6
tick,0x7d8294d2a042,11090315,0,0x0,6
tick,0x7d8294d2a042,11091449,0,0x0,6
tick,0x7d8294d2a042,11092622,0,0x0,6
tick,0x7d8294d2a042,11093777,0,0x0,6
tick,0x7d8294d2a042,11094871,0,0x0,6
tick,0x7d8294d2a042,11095996,0,0x0,6
tick,0x7d8294d2a042,11097163,0,0x0,6
tick,0x7d8294d2a042,11098322,0,0x0,6
tick,0x7d8294d2a042,11099485,0,0x0,6
tick,0x7d8294d2a042,11100638,0,0x0,6
tick,0x7d8294d2a042,11101818,0,0x0,6
tick,0x7d8294d2a042,11102941,0,0x0,6
tick,0x7d8294d2a042,11104067,0,0x0,6
tick,0x7d8294d2a042,11105231,0,0x0,6
tick,0x7d8294d2a042,11106394,0,0x0,6
tick,0x7d8294d2a042,11107563,0,0x0,6
tick,0x7d8294d2a042,11108691,0,0x0,6
tick,0x7d8294d2a042,11109847,0,0x0,6
tick,0x7d8294d2a042,11110959,0,0x0,6
tick,0x7d8294d2a042,11112086,0,0x0,6
tick,0x7d8294d2a042,11113248,0,0x0,6
tick,0x7d8294d2a042,11114489,0,0x0,6
tick,0x7d8294d2a042,11115516,0,0x0,6
tick,0x7d8294d2a042,11116589,0,0x0,6
tick,0x7d8294d2a042,11117662,0,0x0,6
tick,0x7d8294d2a042,11118734,0,0x0,6
tick,0x7d8294d2a042,11119809,0,0x0,6
tick,0x7d8294d2a042,11120883,0,0x0,6
tick,0x7d8294d2a042,11121957,0,0x0,6
tick,0x7d8294d2a042,11123035,0,0x0,6
tick,0x7d8294d2a042,11124107,0,0x0,6
tick,0x7d8294d2a042,11125180,0,0x0,6
tick,0x7d8294d2a042,11126252,0,0x0,6
tick,0x7d8294d2a042,11127330,0,0x0,6
tick,0x7d8294d2a042,11128405,0,0x0,6
tick,0x7d8294d2a042,11129484,0,0x0,6
tick,0x7d8294d2a042,11130560,0,0x0,6
tick,0x7d8294d2a042,11131612,0,0x0,6
tick,0x7d8294d2a042,11132685,0,0x0,6
tick,0x7d8294d2a042,11133759,0,0x0,6
tick,0x7d8294d2a042,11134834,0,0x0,6
tick,0x7d8294d2a042,11135909,0,0x0,6
tick,0x7d8294d2a042,11136980,0,0x0,6
tick,0x7d8294d2a042,11138054,0,0x0,6
tick,0x7d8294d2a042,11139126,0,0x0,6
tick,0x7d8294d2a042,11140199,0,0x0,6
tick,0x7d8294d2a042,11141286,0,0x0,6
tick,0x7d8294d2a042,11142370,0,0x0,6
tick,0x7d8294d2a042,11143413,0,0x0,6
tick,0x7d8294d2a042,11144497,0,0x0,6
tick,0x7d8294d2a042,11145577,0,0x0,6
tick,0x7d8294d2a042,11146648,0,0x0,6
tick,0x7d8294d2a042,11147722,0,0x0,6
tick,0x7d8294d2a042,11148797,0,0x0,6
tick,0x7d8294d2a042,11149870,0,0x0,6
tick,0x7d8294d2a042,11150949,0,0x0,6
tick,0x7d8294d2a042,11152023,0,0x0,6
tick,0x7d8294d2a042,11153094,0,0x0,6
tick,0x7d8294d2a042,11154170,0,0x0,6
tick,0x7d8294d2a042,11155236,0,0x0,6
tick,0x7d8294d2a042,11156383,0,0x0,6
tick,0x7d8294d2a042,11157432,0,0x0,6
tick,0x7d8294d2a042,11158513,0,0x0,6
tick,0x7d8294d2a042,11159570,0,0x0,6
tick,0x7d8294d2a042,11160646,0,0x0,6
tick,0x7d8294d2a042,11161721,0,0x0,6
tick,0x7d8294d2a042,11162817,0,0x0,6
tick,0x7d8294d2a042,11163958,0,0x0,6
tick,0x7d8294d2a042,11165050,0,0x0,6
tick,0x7d8294d2a042,11166127,0,0x0,6
tick,0x7d8294d2a042,11167121,0,0x0,6
tick,0x7d8294d2a042,11168259,0,0x0,6
tick,0x7d8294d2a042,11169228,0,0x0,6
tick,0x7d8294d2a042,11170385,0,0x0,6
tick,0x7d8294d2a042,11171454,0,0x0,6
tick,0x7d8294d2a042,11172509,0,0x0,6
tick,0x7d8294d2a042,11173578,0,0x0,6
tick,0x7d8294d2a042,11174629,0,0x0,6
tick,0x7d8294d2a042,11175632,0,0x0,6
tick,0x7d8294d2a042,11176752,0,0x0,6
tick,0x7d8294d2a042,11177812,0,0x0,6
tick,0x7d8294d2a042,11178869,0,0x0,6
tick,0x7d8294d2a042,11179918,0,0x0,6
tick,0x7d8294d2a042,11180911,0,0x0,6
tick,0x7d8294d2a042,11181969,0,0x0,6
tick,0x7d8294d2a042,11183030,0,0x0,6
tick,0x7d8294d2a042,11184090,0,0x0,6
tick,0x7d8294d2a042,11185149,0,0x0,6
tick,0x7d8294d2a042,11186209,0,0x0,6
tick,0x7d8294d2a042,11187265,0,0x0,6
tick,0x7d8294d2a042,11188324,0,0x0,6
tick,0x7d8294d2a042,11189388,0,0x0,6
tick,0x7d8294d2a042,11190449,0,0x0,6
tick,0x7d8294d2a042,11191506,0,0x0,6
tick,0x7d8294d2a042,11192560,0,0x0,6
tick,0x7d8294d2a042,11193617,0,0x0,6
tick,0x7d8294d2a042,11194673,0,0x0,6
tick,0x7d8294d2a042,11195729,0,0x0,6
tick,0x7d8294d2a042,11196787,0,0x0,6
tick,0x7d8294d2a042,11197848,0,0x0,6
tick,0x7d8294d2a042,11198907,0,0x0,6
tick,0x7d8294d2a042,11199968,0,0x0,6
tick,0x7d8294d2a042,11201029,0,0x0,6
tick,0x7d8294d2a042,11202088,0,0x0,6
tick,0x7d8294d2a042,11203150,0,0x0,6
tick,0x7d8294d2a042,11204209,0,0x0,6
tick,0x7d8294d2a042,11205267,0,0x0,6
tick,0x7d8294d2a042,11206328,0,0x0,6
tick,0x7d8294d2a042,11207395,0,0x0,6
tick,0x7d8294d2a042,11208455,0,0x0,6
tick,0x7d8294d2a042,11209514,0,0x0,6
tick,0x7d8294d2a042,11210573,0,0x0,6
tick,0x7d8294d2a042,11211633,0,0x0,6
tick,0x7d8294d2a042,11212693,0,0x0,6
tick,0x7d8294d2a042,11213752,0,0x0,6
tick,0x7d8294d2a042,11214811,0,0x0,6
tick,0x7d8294d2a042,11215871,0,0x0,6
tick,0x7d8294d2a042,11216935,0,0x0,6
tick,0x7d8294d2a042,11217995,0,0x0,6
tick,0x7d8294d2a042,11219057,0,0x0,6
tick,0x7d8294d2a042,11220118,0,0x0,6
tick,0x7d8294d2a042,11221180,0,0x0,6
tick,0x7d8294d2a042,11222238,0,0x0,6
tick,0x7d8294d2a042,11223295,0,0x0,6
tick,0x7d8294d2a042,11224364,0,0x0,6
tick,0x7d8294d2a042,11225426,0,0x0,6
tick,0x7d8294d2a042,11226482,0,0x0,6
tick,0x7d8294d2a042,11227542,0,0x0,6
tick,0x7d8294d2a042,11228604,0,0x0,6
tick,0x7d8294d2a042,11229664,0,0x0,6
tick,0x7d8294d2a042,11230727,0,0x0,6
tick,0x7d8294d2a042,11231788,0,0x0,6
tick,0x7d8294d2a042,11232849,0,0x0,6
tick,0x7d8294d2a042,11233909,0,0x0,6
tick,0x7d8294d2a042,11234969,0,0x0,6
tick,0x7d8294d2a042,11236028,0,0x0,6
tick,0x7d8294d2a042,11237090,0,0x0,6
tick,0x7d8294d2a042,11238145,0,0x0,6
tick,0x7d8294d2a042,11239205,0,0x0,6
tick,0x7d8294d2a042,11240265,0,0x0,6
tick,0x7d8294d2a042,11241326,0,0x0,6
tick,0x7d8294d2a042,11242384,0,0x0,6
tick,0x7d8294d2a042,11243442,0,0x0,6
tick,0x7d8294d2a042,11244511,0,0x0,6
tick,0x7d8294d2a042,11245569,0,0x0,6
tick,0x7d8294d2a042,11246630,0,0x0,6
tick,0x7d8294d2a042,11247686,0,0x0,6
tick,0x7d8294d2a042,11248762,0,0x0,6
tick,0x7d8294d2a042,11249838,0,0x0,6
tick,0x7d8294d2a042,11250912,0,0x0,6
tick,0x7d8294d2a042,11251986,0,0x0,6
tick,0x7d8294d2a042,11253058,0,0x0,6
tick,0x7d8294d2a042,11254132,0,0x0,6
tick,0x7d8294d2a042,11255207,0,0x0,6
tick,0x7d8294d2a042,11256375,0,0x0,6
tick,0x7d8294d2a042,11257448,0,0x0,6
tick,0x7d8294d2a042,11258521,0,0x0,6
tick,0x7d8294d2a042,11259577,0,0x0,6
tick,0x7d8294d2a042,11260653,0,0x0,6
tick,0x7d8294d2a042,11261728,0,0x0,6
tick,0x7d8294d2a042,11262801,0,0x0,6
tick,0x7d8294d2a042,11263883,0,0x0,6
tick,0x7d8294d2a042,11264959,0,0x0,6
tick,0x7d8294d2a042,11266037,0,0x0,6
tick,0x7d8294d2a042,11267117,0,0x0,6
tick,0x7d8294d2a042,11268193,0,0x0,6
tick,0x7d8294d2a042,11269266,0,0x0,6
tick,0x7d8294d2a042,11270330,0,0x0,6
tick,0x7d8294d2a042,11271400,0,0x0,6
tick,0x7d8294d2a042,11272456,0,0x0,6
tick,0x7d8294d2a042,11273531,0,0x0,6
tick,0x7d8294d2a042,11274610,0,0x0,6
tick,0x7d8294d2a042,11275677,0,0x0,6
tick,0x7d8294d2a042,11276739,0,0x0,6
tick,0x7d8294d2a042,11277799,0,0x0,6
tick,0x7d8294d2a042,11278861,0,0x0,6
tick,0x7d8294d2a042,11279925,0,0x0,6
tick,0x7d8294d2a042,11280988,0,0x0,6
tick,0x7d8294d2a042,11282058,0,0x0,6
tick,0x7d8294d2a042,11283136,0,0x0,6
tick,0x7d8294d2a042,11284207,0,0x0,6
tick,0x7d8294d2a042,11285279,0,0x0,6
tick,0x7d8294d2a042,11286350,0,0x0,6
tick,0x7d8294d2a042,11287433,0,0x0,6
tick,0x7d8294d2a042,11288491,0,0x0,6
tick,0x7d8294d2a042,11289655,0,0x0,6
tick,0x7d8294d2a042,11290727,0,0x0,6
tick,0x7d8294d2a042,11291801,0,0x0,6
tick,0x7d8294d2a042,11292887,0,0x0,6
tick,0x7d8294d2a042,11293962,0,0x0,6
tick,0x7d8294d2a042,11295033,0,0x0,6
tick,0x7d8294d2a042,11296094,0,0x0,6
tick,0x7d8294d2a042,11297175,0,0x0,6
tick,0x7d8294d2a042,11298243,0,0x0,6
tick,0x7d8294d2a042,11299309,0,0x0,6
tick,0x7d8294d2a042,11300384,0,0x0,6
tick,0x7d8294d2a042,11301434,0,0x0,6
tick,0x7d8294d2a042,11302491,0,0x0,6
tick,0x7d8294d2a042,11303546,0,0x0,6
tick,0x7d8294d2a042,11304600,0,0x0,6
tick,0x7d8294d2a042,11305687,0,0x0,6
tick,0x7d8294d2a042,11306762,0,0x0,6
tick,0x7d8294d2a042,11307837,0,0x0,6
tick,0x7d8294d2a042,11308946,0,0x0,6
tick,0x7d8294d2a042,11310002,0,0x0,6
tick,0x7d8294d2a042,11311071,0,0x0,6
tick,0x7d8294d2a042,11312144,0,0x0,6
tick,0x7d8294d2a042,11313225,0,0x0,6
tick,0x7d8294d2a042,11314301,0,0x0,6
tick,0x7d8294d2a042,11315397,0,0x0,6
tick,0x7d8294d2a042,11316474,0,0x0,6
tick,0x7d8294d2a042,11317550,0,0x0,6
tick,0x7d8294d2a042,11318625,0,0x0,6
tick,0x7d8294d2a042,11319697,0,0x0,6
tick,0x7d8294d2a042,11320748,0,0x0,6
tick,0x7d8294d2a042,11321803,0,0x0,6
tick,0x7d8294d2a042,11322873,0,0x0,6
tick,0x7d8294d2a042,11324008,0,0x0,6
tick,0x7d8294d2a042,11325135,0,0x0,6
tick,0x7d8294d2a042,11326209,0,0x0,6
tick,0x7d8294d2a042,11327353,0,0x0,6
tick,0x7d8294d2a042,11328427,0,0x0,6
tick,0x7d8294d2a042,11329514,0,0x0,6
tick,0x7d8294d2a042,11330589,0,0x0,6
tick,0x7d8294d2a042,11331572,0,0x0,6
tick,0x7d8294d2a042,11332693,0,0x0,6
tick,0x7d8294d2a042,11333693,0,0x0,6
tick,0x7d8294d2a042,11334773,0,0x0,6
tick,0x7d8294d2a042,11335911,0,0x0,6
tick,0x7d8294d2a042,11336903,0,0x0,6
tick,0x7d8294d2a042,11337957,0,0x0,6
tick,0x7d8294d2a042,11339019,0,0x0,6
tick,0x7d8294d2a042,11340167,0,0x0,6
tick,0x7d8294d2a042,11341225,0,0x0,6
tick,0x7d8294d2a042,11342208,0,0x0,6
tick,0x7d8294d2a042,11343273,0,0x0,6
tick,0x7d8294d2a042,11344418,0,0x0,6
tick,0x7d8294d2a042,11345476,0,0x0,6
tick,0x7d8294d2a042,11346456,0,0x0,6
tick,0x7d8294d2a042,11347539,0,0x0,6
tick,0x7d8294d2a042,11348663,0,0x0,6
tick,0x7d8294d2a042,11349731,0,0x0,6
tick,0x7d8294d2a042,11350715,0,0x0,6
tick,0x7d8294d2a042,11351835,0,0x0,6
tick,0x7d8294d2a042,11352904,0,0x0,6
tick,0x7d8294d2a042,11353901,0,0x0,6
tick,0x7d8294d2a042,11354957,0,0x0,6
tick,0x7d8294d2a042,11356100,0,0x0,6
tick,0x7d8294d2a042,11357165,0,0x0,6
tick,0x7d8294d2a042,11358144,0,0x0,6
tick,0x7d8294d2a042,11359213,0,0x0,6
tick,0x7d8294d2a042,11360270,0,0x0,6
tick,0x7d8294d2a042,11361331,0,0x0,6
tick,0x7d8294d2a042,11362394,0,0x0,6
tick,0x7d8294d2a042,11363452,0,0x0,6
tick,0x7d8294d2a042,11364517,0,0x0,6
tick,0x7d8294d2a042,11365581,0,0x0,6
tick,0x7d8294d2a042,11366646,0,0x0,6
tick,0x7d8294d2a042,11367705,0,0x0,6
tick,0x7d8294d2a042,11368767,0,0x0,6
tick,0x7d8294d2a042,11369830,0,0x0,6
tick,0x7d8294d2a042,11370888,0,0x0,6
tick,0x7d8294d2a042,11371948,0,0x0,6
tick,0x7d8294d2a042,11373007,0,0x0,6
tick,0x7d8294d2a042,11374067,0,0x0,6
tick,0x7d8294d2a042,11375131,0,0x0,6
tick,0x7d8294d2a042,11376190,0,0x0,6
tick,0x7d8294d2a042,11377255,0,0x0,6
tick,0x7d8294d2a042,11378314,0,0x0,6
tick,0x7d8294d2a042,11379388,0,0x0,6
tick,0x7d8294d2a042,11380441,0,0x0,6
tick,0x7d8294d2a042,11381505,0,0x0,6
tick,0x7d8294d2a042,11382564,0,0x0,6
tick,0x7d8294d2a042,11383632,0,0x0,6
tick,0x7d8294d2a042,11384707,0,0x0,6
tick,0x7d8294d2a042,11385778,0,0x0,6
tick,0x7d8294d2a042,11386838,0,0x0,6
tick,0x7d8294d2a042,11387898,0,0x0,6
tick,0x7d8294d2a042,11388957,0,0x0,6
tick,0x7d8294d2a042,11390023,0,0x0,6
tick,0x7d8294d2a042,11391087,0,0x0,6
tick,0x7d8294d2a042,11392146,0,0x0,6
tick,0x7d8294d2a042,11393214,0,0x0,6
tick,0x7d8294d2a042,11394275,0,0x0,6
tick,0x7d8294d2a042,11395339,0,0x0,6
tick,0x7d8294d2a042,11396402,0,0x0,6
tick,0x7d8294d2a042,11397471,0,0x0,6
tick,0x7d8294d2a042,11398536,0,0x0,6
tick,0x7d8294d2a042,11399604,0,0x0,6
tick,0x7d8294d2a042,11400666,0,0x0,6
tick,0x7d8294d2a042,11401731,0,0x0,6
tick,0x7d8294d2a042,11402797,0,0x0,6
tick,0x7d8294d2a042,11403861,0,0x0,6
tick,0x7d8294d2a042,11404931,0,0x0,6
tick,0x7d8294d2a042,11405988,0,0x0,6
tick,0x7d8294d2a042,11407059,0,0x0,6
tick,0x7d8294d2a042,11408118,0,0x0,6
tick,0x7d8294d2a042,11409176,0,0x0,6
tick,0x7d8294d2a042,11410267,0,0x0,6
tick,0x7d8294d2a042,11411340,0,0x0,6
tick,0x7d8294d2a042,11412569,0,0x0,6
tick,0x7d8294d2a042,11413723,0,0x0,6
tick,0x7d8294d2a042,11414846,0,0x0,6
tick,0x7d8294d2a042,11415917,0,0x0,6
tick,0x7d8294d2a042,11417075,0,0x0,6
tick,0x7d8294d2a042,11418241,0,0x0,6
tick,0x7d8294d2a042,11419391,0,0x0,6
tick,0x7d8294d2a042,11420529,0,0x0,6
tick,0x7d8294d2a042,11421607,0,0x0,6
tick,0x7d8294d2a042,11422690,0,0x0,6
tick,0x7d8294d2a042,11423769,0,0x0,6
tick,0x7d8294d2a042,11424854,0,0x0,6
tick,0x7d8294d2a042,11425951,0,0x0,6
tick,0x7d8294d2a042,11427012,0,0x0,6
tick,0x7d8294d2a042,11428071,0,0x0,6
tick,0x7d8294d2a042,11429142,0,0x0,6
tick,0x7d8294d2a042,11430206,0,0x0,6
tick,0x7d8294d2a042,11431260,0,0x0,6
tick,0x7d8294d2a042,11432388,0,0x0,6
tick,0x7d8294d2a042,11433495,0,0x0,6
tick,0x7d8294d2a042,11434553,0,0x0,6
tick,0x7d8294d2a042,11435557,0,0x0,6
tick,0x7d8294d2a042,11436668,0,0x0,6
tick,0x7d8294d2a042,11437754,0,0x0,6
tick,0x7d8294d2a042,11438802,0,0x0,6
tick,0x7d8294d2a042,11439862,0,0x0,6
tick,0x7d8294d2a042,11440950,0,0x0,6
tick,0x7d8294d2a042,11442009,0,0x0,6
tick,0x7d8294d2a042,11443081,0,0x0,6
tick,0x7d8294d2a042,11444126,0,0x0,6
tick,0x7d8294d2a042,11445125,0,0x0,6
tick,0x7d8294d2a042,11446195,0,0x0,6
tick,0x7d8294d2a042,11447273,0,0x0,6
tick,0x7d8294d2a042,11448474,0,0x0,6
tick,0x7d8294d2a042,11449551,0,0x0,6
tick,0x7d8294d2a042,11450590,0,0x0,6
tick,0x7d8294d2a042,11451537,0,0x0,6
tick,0x7d8294d2a042,11452670,0,0x0,6
tick,0x7d8294d2a042,11453651,0,0x0,6
tick,0x7d8294d2a042,11454770,0,0x0,6
tick,0x7d8294d2a042,11455815,0,0x0,6
tick,0x7d8294d2a042,11456792,0,0x0,6
tick,0x7d8294d2a042,11457888,0,0x0,6
tick,0x7d8294d2a042,11459010,0,0x0,6
tick,0x7d8294d2a042,11460077,0,0x0,6
tick,0x7d8294d2a042,11461139,0,0x0,6
tick,0x7d8294d2a042,11462203,0,0x0,6
tick,0x7d8294d2a042,11463188,0,0x0,6
tick,0x7d8294d2a042,11464335,0,0x0,6
tick,0x7d8294d2a042,11465394,0,0x0,6
tick,0x7d8294d2a042,11466454,0,0x0,6
tick,0x7d8294d2a042,11467493,0,0x0,6
tick,0x7d8294d2a042,11468561,0,0x0,6
tick,0x7d8294d2a042,11469612,0,0x0,6
tick,0x7d8294d2a042,11470682,0,0x0,6
tick,0x7d8294d2a042,11471689,0,0x0,6
tick,0x7d8294d2a042,11472732,0,0x0,6
tick,0x7d8294d2a042,11473792,0,0x0,6
tick,0x7d8294d2a042,11474854,0,0x0,6
tick,0x7d8294d2a042,11475991,0,0x0,6
tick,0x7d8294d2a042,11477056,0,0x0,6
tick,0x7d8294d2a042,11478118,0,0x0,6
tick,0x7d8294d2a042,11479192,0,0x0,6
tick,0x7d8294d2a042,11480247,0,0x0,6
tick,0x7d8294d2a042,11481307,0,0x0,6
tick,0x7d8294d2a042,11482369,0,0x0,6
tick,0x7d8294d2a042,11483439,0,0x0,6
tick,0x7d8294d2a042,11484505,0,0x0,6
tick,0x7d8294d2a042,11485556,0,0x0,6
tick,0x7d8294d2a042,11486539,0,0x0,6
tick,0x7d8294d2a042,11487593,0,0x0,6
tick,0x7d8294d2a042,11488649,0,0x0,6
tick,0x7d8294d2a042,11489707,0,0x0,6
tick,0x7d8294d2a042,11490775,0,0x0,6
tick,0x7d8294d2a042,11491829,0,0x0,6
tick,0x7d8294d2a042,11492888,0,0x0,6
tick,0x7d8294d2a042,11493952,0,0x0,6
tick,0x7d8294d2a042,11495012,0,0x0,6
tick,0x7d8294d2a042,11496077,0,0x0,6
tick,0x7d8294d2a042,11497147,0,0x0,6
tick,0x7d8294d2a042,11498222,0,0x0,6
tick,0x7d8294d2a042,11499276,0,0x0,6
tick,0x7d8294d2a042,11500351,0,0x0,6
tick,0x7d8294d2a042,11501411,0,0x0,6
tick,0x7d8294d2a042,11502472,0,0x0,6
tick,0x7d8294d2a042,11503528,0,0x0,6
tick,0x7d8294d2a042,11504593,0,0x0,6
tick,0x7d8294d2a042,11505655,0,0x0,6
tick,0x7d8294d2a042,11506718,0,0x0,6
tick,0x7d8294d2a042,11507783,0,0x0,6
tick,0x7d8294d2a042,11508843,0,0x0,6
tick,0x7d8294d2a042,11509916,0,0x0,6
tick,0x7d8294d2a042,11510992,0,0x0,6
tick,0x7d8294d2a042,11512059,0,0x0,6
tick,0x7d8294d2a042,11513133,0,0x0,6
tick,0x7d8294d2a042,11514227,0,0x0,6
tick,0x7d8294d2a042,11515283,0,0x0,6
tick,0x7d8294d2a042,11516348,0,0x0,6
tick,0x7d8294d2a042,11517400,0,0x0,6
tick,0x7d8294d2a042,11518475,0,0x0,6
tick,0x7d8294d2a042,11519528,0,0x0,6
tick,0x7d8294d2a042,11520603,0,0x0,6
tick,0x7d8294d2a042,11521677,0,0x0,6
tick,0x7d8294d2a042,11522765,0,0x0,6
tick,0x7d8294d2a042,11523836,0,0x0,6
tick,0x7d8294d2a042,11524908,0,0x0,6
tick,0x7d8294d2a042,11525986,0,0x0,6
tick,0x7d8294d2a042,11527067,0,0x0,6
tick,0x7d8294d2a042,11528197,0,0x0,6
tick,0x7d8294d2a042,11529352,0,0x0,6
tick,0x7d8294d2a042,11530373,0,0x0,6
tick,0x7d8294d2a042,11531403,0,0x0,6
tick,0x7d8294d2a042,11532470,0,0x0,6
tick,0x7d8294d2a042,11533545,0,0x0,6
tick,0x7d8294d2a042,11534616,0,0x0,6
tick,0x7d8294d2a042,11535673,0,0x0,6
tick,0x7d8294d2a042,11536740,0,0x0,6
tick,0x7d8294d2a042,11537803,0,0x0,6
tick,0x7d8294d2a042,11538874,0,0x0,6
tick,0x7d8294d2a042,11539935,0,0x0,6
tick,0x7d8294d2a042,11540998,0,0x0,6
tick,0x7d8294d2a042,11542057,0,0x0,6
tick,0x7d8294d2a042,11543117,0,0x0,6
tick,0x7d8294d2a042,11544187,0,0x0,6
tick,0x7d8294d2a042,11545251,0,0x0,6
tick,0x7d8294d2a042,11546310,0,0x0,6
tick,0x7d8294d2a042,11547384,0,0x0,6
tick,0x7d8294d2a042,11548440,0,0x0,6
tick,0x7d8294d2a042,11549499,0,0x0,6
tick,0x7d8294d2a042,11550561,0,0x0,6
tick,0x7d8294d2a042,11551624,0,0x0,6
tick,0x7d8294d2a042,11552690,0,0x0,6
tick,0x7d8294d2a042,11553749,0,0x0,6
tick,0x7d8294d2a042,11554815,0,0x0,6
tick,0x7d8294d2a042,11555882,0,0x0,6
tick,0x7d8294d2a042,11556949,0,0x0,6
tick,0x7d8294d2a042,11558020,0,0x0,6
tick,0x7d8294d2a042,11559083,0,0x0,6
tick,0x7d8294d2a042,11560146,0,0x0,6
tick,0x7d8294d2a042,11561217,0,0x0,6
tick,0x7d8294d2a042,11562288,0,0x0,6
tick,0x7d8294d2a042,11563340,0,0x0,6
tick,0x7d8294d2a042,11564511,0,0x0,6
tick,0x7d8294d2a042,11565565,0,0x0,6
tick,0x7d8294d2a042,11566552,0,0x0,6
tick,0x7d8294d2a042,11567637,0,0x0,6
tick,0x7d8294d2a042,11568759,0,0x0,6
tick,0x7d8294d2a042,11569814,0,0x0,6
tick,0x7d8294d2a042,11570877,0,0x0,6
tick,0x7d8294d2a042,11571959,0,0x0,6
tick,0x7d8294d2a042,11573007,0,0x0,6
tick,0x7d8294d2a042,11574072,0,0x0,6
tick,0x7d8294d2a042,11575135,0,0x0,6
tick,0x7d8294d2a042,11576199,0,0x0,6
tick,0x7d8294d2a042,11577269,0,0x0,6
tick,0x7d8294d2a042,11578328,0,0x0,6
tick,0x7d8294d2a042,11579392,0,0x0,6
tick,0x7d8294d2a042,11580446,0,0x0,6
tick,0x7d8294d2a042,11581508,0,0x0,6
tick,0x7d8294d2a042,11582593,0,0x0,6
tick,0x7d8294d2a042,11583588,0,0x0,6
tick,0x7d8294d2a042,11584814,0,0x0,6
tick,0x7d8294d2a042,11585855,0,0x0,6
tick,0x7d8294d2a042,11586916,0,0x0,6
tick,0x7d8294d2a042,11588010,0,0x0,6
tick,0x7d8294d2a042,11589069,0,0x0,6
tick,0x7d8294d2a042,11590076,0,0x0,6
tick,0x7d8294d2a042,11591153,0,0x0,6
tick,0x7d8294d2a042,11592313,0,0x0,6
tick,0x7d8294d2a042,11593383,0,0x0,6
tick,0x7d8294d2a042,11594461,0,0x0,6
tick,0x7d8294d2a042,11595489,0,0x0,6
tick,0x7d8294d2a042,11596559,0,0x0,6
tick,0x7d8294d2a042,11597703,0,0x0,6
tick,0x7d8294d2a042,11598766,0,0x0,6
tick,0x7d8294d2a042,11599784,0,0x0,6
tick,0x7d8294d2a042,11600888,0,0x0,6
tick,0x7d8294d2a042,11601950,0,0x0,6
tick,0x7d8294d2a042,11602940,0,0x0,6
tick,0x7d8294d2a042,11604066,0,0x0,6
tick,0x7d8294d2a042,11605131,0,0x0,6
tick,0x7d8294d2a042,11606195,0,0x0,6
tick,0x7d8294d2a042,11607267,0,0x0,6
tick,0x7d8294d2a042,11608358,0,0x0,6
tick,0x7d8294d2a042,11609349,0,0x0,6
tick,0x7d8294d2a042,11610486,0,0x0,6
tick,0x7d8294d2a042,11611481,0,0x0,6
tick,0x7d8294d2a042,11612536,0,0x0,6
tick,0x7d8294d2a042,11613661,0,0x0,6
tick,0x7d8294d2a042,11614765,0,0x0,6
tick,0x7d8294d2a042,11615813,0,0x0,6
tick,0x7d8294d2a042,11616941,0,0x0,6
tick,0x7d8294d2a042,11617986,0,0x0,6
tick,0x7d8294d2a042,11618985,0,0x0,6
tick,0x7d8294d2a042,11620099,0,0x0,6
tick,0x7d8294d2a042,11621164,0,0x0,6
tick,0x7d8294d2a042,11622225,0,0x0,6
tick,0x7d8294d2a042,11623288,0,0x0,6
tick,0x7d8294d2a042,11624347,0,0x0,6
tick,0x7d8294d2a042,11625419,0,0x0,6
tick,0x7d8294d2a042,11626475,0,0x0,6
tick,0x7d8294d2a042,11627482,0,0x0,6
tick,0x7d8294d2a042,11628603,0,0x0,6
tick,0x7d8294d2a042,11629649,0,0x0,6
tick,0x7d8294d2a042,11630681,0,0x0,6
tick,0x7d8294d2a042,11631725,0,0x0,6
tick,0x7d8294d2a042,11632768,0,0x0,6
tick,0x7d8294d2a042,11633825,0,0x0,6
tick,0x7d8294d2a042,11634885,0,0x0,6
tick,0x7d8294d2a042,11635949,0,0x0,6
tick,0x7d8294d2a042,11637013,0,0x0,6
tick,0x7d8294d2a042,11638076,0,0x0,6
tick,0x7d8294d2a042,11639135,0,0x0,6
tick,0x7d8294d2a042,11640202,0,0x0,6
tick,0x7d8294d2a042,11641265,0,0x0,6
tick,0x7d8294d2a042,11642333,0,0x0,6
tick,0x7d8294d2a042,11643395,0,0x0,6
tick,0x7d8294d2a042,11644457,0,0x0,6
tick,0x7d8294d2a042,11645521,0,0x0,6
tick,0x7d8294d2a042,11646585,0,0x0,6
tick,0x7d8294d2a042,11647645,0,0x0,6
tick,0x7d8294d2a042,11648709,0,0x0,6
tick,0x7d8294d2a042,11649769,0,0x0,6
tick,0x7d8294d2a042,11650832,0,0x0,6
tick,0x7d8294d2a042,11651896,0,0x0,6
tick,0x7d8294d2a042,11652960,0,0x0,6
tick,0x7d8294d2a042,11654020,0,0x0,6
tick,0x7d8294d2a042,11655094,0,0x0,6
tick,0x7d8294d2a042,11656157,0,0x0,6
tick,0x7d8294d2a042,11657222,0,0x0,6
tick,0x7d8294d2a042,11658285,0,0x0,6
tick,0x7d8294d2a042,11659343,0,0x0,6
tick,0x7d8294d2a042,11660412,0,0x0,6
tick,0x7d8294d2a042,11661473,0,0x0,6
tick,0x7d8294d2a042,11662538,0,0x0,6
tick,0x7d8294d2a042,11663604,0,0x0,6
tick,0x7d8294d2a042,11664675,0,0x0,6
tick,0x7d8294d2a042,11665737,0,0x0,6
tick,0x7d8294d2a042,11666814,0,0x0,6
tick,0x7d8294d2a042,11667877,0,0x0,6
tick,0x7d8294d2a042,11668935,0,0x0,6
tick,0x7d8294d2a042,11670003,0,0x0,6
tick,0x7d8294d2a042,11671070,0,0x0,6
tick,0x7d8294d2a042,11672130,0,0x0,6
tick,0x7d8294d2a042,11673252,0,0x0,6
tick,0x7d8294d2a042,11674350,0,0x0,6
tick,0x7d8294d2a042,11675426,0,0x0,6
tick,0x7d8294d2a042,11676475,0,0x0,6
tick,0x7d8294d2a042,11677543,0,0x0,6
tick,0x7d8294d2a042,11678547,0,0x0,6
tick,0x7d8294d2a042,11679612,0,0x0,6
tick,0x7d8294d2a042,11680730,0,0x0,6
tick,0x7d8294d2a042,11681788,0,0x0,6
tick,0x7d8294d2a042,11682851,0,0x0,6
tick,0x7d8294d2a042,11683906,0,0x0,6
tick,0x7d8294d2a042,11684970,0,0x0,6
tick,0x7d8294d2a042,11686050,0,0x0,6
tick,0x7d8294d2a042,11687102,0,0x0,6
tick,0x7d8294d2a042,11688173,0,0x0,6
tick,0x7d8294d2a042,11689234,0,0x0,6
tick,0x7d8294d2a042,11690294,0,0x0,6
tick,0x7d8294d2a042,11691268,0,0x0,6
tick,0x7d8294d2a042,11692331,0,0x0,6
tick,0x7d8294d2a042,11693392,0,0x0,6
tick,0x7d8294d2a042,11694457,0,0x0,6
tick,0x7d8294d2a042,11695517,0,0x0,6
tick,0x7d8294d2a042,11696583,0,0x0,6
tick,0x7d8294d2a042,11697647,0,0x0,6
tick,0x7d8294d2a042,11698714,0,0x0,6
tick,0x7d8294d2a042,11699778,0,0x0,6
tick,0x7d8294d2a042,11700843,0,0x0,6
tick,0x7d8294d2a042,11701906,0,0x0,6
tick,0x7d8294d2a042,11702967,0,0x0,6
tick,0x7d8294d2a042,11704037,0,0x0,6
tick,0x7d8294d2a042,11705101,0,0x0,6
tick,0x7d8294d2a042,11706161,0,0x0,6
tick,0x7d8294d2a042,11707226,0,0x0,6
tick,0x7d8294d2a042,11708291,0,0x0,6
tick,0x7d8294d2a042,11709353,0,0x0,6
tick,0x7d8294d2a042,11710419,0,0x0,6
tick,0x7d8294d2a042,11711504,0,0x0,6
tick,0x7d8294d2a042,11712564,0,0x0,6
tick,0x7d8294d2a042,11713629,0,0x0,6
tick,0x7d8294d2a042,11714702,0,0x0,6
tick,0x7d8294d2a042,11715762,0,0x0,6
tick,0x7d8294d2a042,11716825,0,0x0,6
tick,0x7d8294d2a042,11717894,0,0x0,6
tick,0x7d8294d2a042,11718958,0,0x0,6
tick,0x7d8294d2a042,11720024,0,0x0,6
tick,0x7d8294d2a042,11721085,0,0x0,6
tick,0x7d8294d2a042,11722150,0,0x0,6
tick,0x7d8294d2a042,11723208,0,0x0,6
tick,0x7d8294d2a042,11724274,0,0x0,6
tick,0x7d8294d2a042,11725334,0,0x0,6
tick,0x7d8294d2a042,11726395,0,0x0,6
tick,0x7d8294d2a042,11727458,0,0x0,6
tick,0x7d8294d2a042,11728534,0,0x0,6
tick,0x7d8294d2a042,11729598,0,0x0,6
tick,0x7d8294d2a042,11730664,0,0x0,6
tick,0x7d8294d2a042,11731730,0,0x0,6
tick,0x7d8294d2a042,11732788,0,0x0,6
tick,0x7d8294d2a042,11733860,0,0x0,6
tick,0x7d8294d2a042,11734926,0,0x0,6
tick,0x7d8294d2a042,11735992,0,0x0,6
tick,0x7d8294d2a042,11737055,0,0x0,6
tick,0x7d8294d2a042,11738124,0,0x0,6
tick,0x7d8294d2a042,11739192,0,0x0,6
tick,0x7d8294d2a042,11740272,0,0x0,6
tick,0x7d8294d2a042,11741348,0,0x0,6
tick,0x7d8294d2a042,11742427,0,0x0,6
tick,0x7d8294d2a042,11743480,0,0x0,6
tick,0x7d8294d2a042,11744555,0,0x0,6
tick,0x7d8294d2a042,11745630,0,0x0,6
tick,0x7d8294d2a042,11746704,0,0x0,6
tick,0x7d8294d2a042,11747777,0,0x0,6
tick,0x7d8294d2a042,11748849,0,0x0,6
tick,0x7d8294d2a042,11749937,0,0x0,6
tick,0x7d8294d2a042,11751008,0,0x0,6
tick,0x7d8294d2a042,11752065,0,0x0,6
tick,0x7d8294d2a042,11753151,0,0x0,6
tick,0x7d8294d2a042,11754222,0,0x0,6
tick,0x7d8294d2a042,11755299,0,0x0,6
tick,0x7d8294d2a042,11756378,0,0x0,6
tick,0x7d8294d2a042,11757443,0,0x0,6
tick,0x7d8294d2a042,11758506,0,0x0,6
tick,0x7d8294d2a042,11759573,0,0x0,6
tick,0x7d8294d2a042,11760636,0,0x0,6
tick,0x7d8294d2a042,11761696,0,0x0,6
tick,0x7d8294d2a042,11762760,0,0x0,6
tick,0x7d8294d2a042,11763823,0,0x0,6
tick,0x7d8294d2a042,11764885,0,0x0,6
tick,0x7d8294d2a042,11765944,0,0x0,6
tick,0x7d8294d2a042,11767009,0,0x0,6
tick,0x7d8294d2a042,11768072,0,0x0,6
tick,0x7d8294d2a042,11769130,0,0x0,6
tick,0x7d8294d2a042,11770191,0,0x0,6
tick,0x7d8294d2a042,11771254,0,0x0,6
tick,0x7d8294d2a042,11772319,0,0x0,6
tick,0x7d8294d2a042,11773378,0,0x0,6
tick,0x7d8294d2a042,11774439,0,0x0,6
tick,0x7d8294d2a042,11775498,0,0x0,6
tick,0x7d8294d2a042,11776561,0,0x0,6
tick,0x7d8294d2a042,11777621,0,0x0,6
tick,0x7d8294d2a042,11778682,0,0x0,6
tick,0x7d8294d2a042,11779745,0,0x0,6
tick,0x7d8294d2a042,11780809,0,0x0,6
tick,0x7d8294d2a042,11781871,0,0x0,6
tick,0x7d8294d2a042,11782931,0,0x0,6
tick,0x7d8294d2a042,11783992,0,0x0,6
tick,0x7d8294d2a042,11785056,0,0x0,6
tick,0x7d8294d2a042,11786120,0,0x0,6
tick,0x7d8294d2a042,11787178,0,0x0,6
tick,0x7d8294d2a042,11788244,0,0x0,6
tick,0x7d8294d2a042,11789310,0,0x0,6
tick,0x7d8294d2a042,11790379,0,0x0,6
tick,0x7d8294d2a042,11791411,0,0x0,6
tick,0x7d8294d2a042,11792459,0,0x0,6
tick,0x7d8294d2a042,11793551,0,0x0,6
tick,0x7d8294d2a042,11794585,0,0x0,6
tick,0x7d8294d2a042,11795679,0,0x0,6
tick,0x7d8294d2a042,11796803,0,0x0,6
tick,0x7d8294d2a042,11797852,0,0x0,6
tick,0x7d8294d2a042,11798930,0,0x0,6
tick,0x7d8294d2a042,11799900,0,0x0,6
tick,0x7d8294d2a042,11800962,0,0x0,6
tick,0x7d8294d2a042,11802025,0,0x0,6
tick,0x7d8294d2a042,11803086,0,0x0,6
tick,0x7d8294d2a042,11804150,0,0x0,6
tick,0x7d8294d2a042,11805213,0,0x0,6
tick,0x7d8294d2a042,11806272,0,0x0,6
tick,0x7d8294d2a042,11807358,0,0x0,6
tick,0x7d8294d2a042,11808426,0,0x0,6
tick,0x7d8294d2a042,11809457,0,0x0,6
tick,0x7d8294d2a042,11810534,0,0x0,6
tick,0x7d8294d2a042,11811629,0,0x0,6
tick,0x7d8294d2a042,11812745,0,0x0,6
tick,0x7d8294d2a042,11813811,0,0x0,6
tick,0x7d8294d2a042,11814809,0,0x0,6
tick,0x7d8294d2a042,11815949,0,0x0,6
tick,0x7d8294d2a042,11817115,0,0x0,6
tick,0x7d8294d2a042,11818190,0,0x0,6
tick,0x7d8294d2a042,11819246,0,0x0,6
tick,0x7d8294d2a042,11820327,0,0x0,6
tick,0x7d8294d2a042,11821416,0,0x0,6
tick,0x7d8294d2a042,11822491,0,0x0,6
tick,0x7d8294d2a042,11823548,0,0x0,6
tick,0x7d8294d2a042,11824632,0,0x0,6
tick,0x7d8294d2a042,11825698,0,0x0,6
tick,0x7d8294d2a042,11826766,0,0x0,6
tick,0x7d8294d2a042,11827827,0,0x0,6
tick,0x7d8294d2a042,11828893,0,0x0,6
tick,0x7d8294d2a042,11829962,0,0x0,6
tick,0x7d8294d2a042,11831023,0,0x0,6
tick,0x7d8294d2a042,11832088,0,0x0,6
tick,0x7d8294d2a042,11833150,0,0x0,6
tick,0x7d8294d2a042,11834211,0,0x0,6
tick,0x7d8294d2a042,11835287,0,0x0,6
tick,0x7d8294d2a042,11836341,0,0x0,6
tick,0x7d8294d2a042,11837417,0,0x0,6
tick,0x7d8294d2a042,11838492,0,0x0,6
tick,0x7d8294d2a042,11839555,0,0x0,6
tick,0x7d8294d2a042,11840622,0,0x0,6
tick,0x7d8294d2a042,11841685,0,0x0,6
tick,0x7d8294d2a042,11842750,0,0x0,6
tick,0x7d8294d2a042,11843811,0,0x0,6
tick,0x7d8294d2a042,11844875,0,0x0,6
tick,0x7d8294d2a042,11845936,0,0x0,6
tick,0x7d8294d2a042,11847001,0,0x0,6
tick,0x7d8294d2a042,11848072,0,0x0,6
tick,0x7d8294d2a042,11849143,0,0x0,6
tick,0x7d8294d2a042,11850211,0,0x0,6
tick,0x7d8294d2a042,11851268,0,0x0,6
tick,0x7d8294d2a042,11852438,0,0x0,6
tick,0x7d8294d2a042,11853499,0,0x0,6
tick,0x7d8294d2a042,11854491,0,0x0,6
tick,0x7d8294d2a042,11855555,0,0x0,6
tick,0x7d8294d2a042,11856684,0,0x0,6
tick,0x7d8294d2a042,11857661,0,0x0,6
tick,0x7d8294d2a042,11858730,0,0x0,6
tick,0x7d8294d2a042,11859860,0,0x0,6
tick,0x7d8294d2a042,11860929,0,0x0,6
tick,0x7d8294d2a042,11861910,0,0x0,6
tick,0x7d8294d2a042,11862978,0,0x0,6
tick,0x7d8294d2a042,11864067,0,0x0,6
tick,0x7d8294d2a042,11865086,0,0x0,6
tick,0x7d8294d2a042,11866148,0,0x0,6
tick,0x7d8294d2a042,11867210,0,0x0,6
tick,0x7d8294d2a042,11868272,0,0x0,6
tick,0x7d8294d2a042,11869334,0,0x0,6
tick,0x7d8294d2a042,11870395,0,0x0,6
tick,0x7d8294d2a042,11871539,0,0x0,6
tick,0x7d8294d2a042,11872696,0,0x0,6
tick,0x7d8294d2a042,11873767,0,0x0,6
tick,0x7d8294d2a042,11874841,0,0x0,6
tick,0x7d8294d2a042,11875920,0,0x0,6
tick,0x7d8294d2a042,11877004,0,0x0,6
tick,0x7d8294d2a042,11878085,0,0x0,6
tick,0x7d8294d2a042,11879168,0,0x0,6
tick,0x7d8294d2a042,11880246,0,0x0,6
tick,0x7d8294d2a042,11881320,0,0x0,6
tick,0x7d8294d2a042,11882408,0,0x0,6
tick,0x7d8294d2a042,11883456,0,0x0,6
tick,0x7d8294d2a042,11884530,0,0x0,6
tick,0x7d8294d2a042,11885584,0,0x0,6
tick,0x7d8294d2a042,11886659,0,0x0,6
tick,0x7d8294d2a042,11887733,0,0x0,6
tick,0x7d8294d2a042,11888806,0,0x0,6
tick,0x7d8294d2a042,11889886,0,0x0,6
tick,0x7d8294d2a042,11890960,0,0x0,6
tick,0x7d8294d2a042,11892145,0,0x0,6
tick,0x7d8294d2a042,11893203,0,0x0,6
tick,0x7d8294d2a042,11894284,0,0x0,6
tick,0x7d8294d2a042,11895359,0,0x0,6
tick,0x7d8294d2a042,11896429,0,0x0,6
tick,0x7d8294d2a042,11897434,0,0x0,6
tick,0x7d8294d2a042,11898510,0,0x0,6
tick,0x7d8294d2a042,11899610,0,0x0,6
tick,0x7d8294d2a042,11900737,0,0x0,6
tick,0x7d8294d2a042,11901727,0,0x0,6
tick,0x7d8294d2a042,11902788,0,0x0,6
tick,0x7d8294d2a042,11903917,0,0x0,6
tick,0x7d8294d2a042,11904985,0,0x0,6
tick,0x7d8294d2a042,11906046,0,0x0,6
tick,0x7d8294d2a042,11907117,0,0x0,6
tick,0x7d8294d2a042,11908165,0,0x0,6
tick,0x7d8294d2a042,11909227,0,0x0,6
tick,0x7d8294d2a042,11910213,0,0x0,6
tick,0x7d8294d2a042,11911273,0,0x0,6
tick,0x7d8294d2a042,11912424,0,0x0,6
tick,0x7d8294d2a042,11913476,0,0x0,6
tick,0x7d8294d2a042,11914530,0,0x0,6
tick,0x7d8294d2a042,11915548,0,0x0,6
tick,0x7d8294d2a042,11916653,0,0x0,6
tick,0x7d8294d2a042,11917644,0,0x0,6
tick,0x7d8294d2a042,11918712,0,0x0,6
tick,0x7d8294d2a042,11919789,0,0x0,6
tick,0x7d8294d2a042,11920865,0,0x0,6
tick,0x7d8294d2a042,11921944,0,0x0,6
tick,0x7d8294d2a042,11923019,0,0x0,6
tick,0x7d8294d2a042,11924094,0,0x0,6
tick,0x7d8294d2a042,11925168,0,0x0,6
tick,0x7d8294d2a042,11926244,0,0x0,6
tick,0x7d8294d2a042,11927321,0,0x0,6
tick,0x7d8294d2a042,11928393,0,0x0,6
tick,0x7d8294d2a042,11929469,0,0x0,6
tick,0x7d8294d2a042,11930542,0,0x0,6
tick,0x7d8294d2a042,11931597,0,0x0,6
tick,0x7d8294d2a042,11932677,0,0x0,6
tick,0x7d8294d2a042,11933754,0,0x0,6
tick,0x7d8294d2a042,11934828,0,0x0,6
tick,0x7d8294d2a042,11935905,0,0x0,6
tick,0x7d8294d2a042,11937064,0,0x0,6
tick,0x7d8294d2a042,11938143,0,0x0,6
tick,0x7d8294d2a042,11939222,0,0x0,6
tick,0x7d8294d2a042,11940300,0,0x0,6
tick,0x7d8294d2a042,11941372,0,0x0,6
tick,0x7d8294d2a042,11942446,0,0x0,6
tick,0x7d8294d2a042,11943501,0,0x0,6
tick,0x7d8294d2a042,11944576,0,0x0,6
tick,0x7d8294d2a042,11945652,0,0x0,6
tick,0x7d8294d2a042,11946727,0,0x0,6
tick,0x7d8294d2a042,11947795,0,0x0,6
tick,0x7d8294d2a042,11948855,0,0x0,6
tick,0x7d8294d2a042,11949919,0,0x0,6
tick,0x7d8294d2a042,11950988,0,0x0,6
tick,0x7d8294d2a042,11952050,0,0x0,6
tick,0x7d8294d2a042,11953117,0,0x0,6
tick,0x7d8294d2a042,11954180,0,0x0,6
tick,0x7d8294d2a042,11955253,0,0x0,6
tick,0x7d8294d2a042,11956329,0,0x0,6
tick,0x7d8294d2a042,11957388,0,0x0,6
tick,0x7d8294d2a042,11958454,0,0x0,6
tick,0x7d8294d2a042,11959515,0,0x0,6
tick,0x7d8294d2a042,11960577,0,0x0,6
tick,0x7d8294d2a042,11961626,0,0x0,6
tick,0x7d8294d2a042,11962705,0,0x0,6
tick,0x7d8294d2a042,11963873,0,0x0,6
tick,0x7d8294d2a042,11964861,0,0x0,6
tick,0x7d8294d2a042,11965926,0,0x0,6
tick,0x7d8294d2a042,11966987,0,0x0,6
tick,0x7d8294d2a042,11968055,0,0x0,6
tick,0x7d8294d2a042,11969116,0,0x0,6
tick,0x7d8294d2a042,11970175,0,0x0,6
tick,0x7d8294d2a042,11971239,0,0x0,6
tick,0x7d8294d2a042,11972305,0,0x0,6
tick,0x7d8294d2a042,11973364,0,0x0,6
tick,0x7d8294d2a042,11974428,0,0x0,6
tick,0x7d8294d2a042,11975496,0,0x0,6
tick,0x7d8294d2a042,11976557,0,0x0,6
tick,0x7d8294d2a042,11977616,0,0x0,6
tick,0x7d8294d2a042,11978683,0,0x0,6
tick,0x7d8294d2a042,11979752,0,0x0,6
tick,0x7d8294d2a042,11980812,0,0x0,6
tick,0x7d8294d2a042,11981874,0,0x0,6
tick,0x7d8294d2a042,11982943,0,0x0,6
tick,0x7d8294d2a042,11984008,0,0x0,6
tick,0x7d8294d2a042,11985079,0,0x0,6
tick,0x7d8294d2a042,11986165,0,0x0,6
tick,0x7d8294d2a042,11987226,0,0x0,6
tick,0x7d8294d2a042,11988370,0,0x0,6
tick,0x7d8294d2a042,11989330,0,0x0,6
tick,0x7d8294d2a042,11990395,0,0x0,6
tick,0x7d8294d2a042,11991455,0,0x0,6
tick,0x7d8294d2a042,11992521,0,0x0,6
tick,0x7d8294d2a042,11993582,0,0x0,6
tick,0x7d8294d2a042,11994643,0,0x0,6
tick,0x7d8294d2a042,11995711,0,0x0,6
tick,0x7d8294d2a042,11996775,0,0x0,6
tick,0x7d8294d2a042,11997841,0,0x0,6
tick,0x7d8294d2a042,11998904,0,0x0,6
tick,0x7d8294d2a042,11999974,0,0x0,6
tick,0x7d8294d2a042,12001033,0,0x0,6
tick,0x7d8294d2a042,12002091,0,0x0,6
tick,0x7d8294d2a042,12003153,0,0x0,6
tick,0x7d8294d2a042,12004218,0,0x0,6
tick,0x7d8294d2a042,12005283,0,0x0,6
tick,0x7d8294d2a042,12006341,0,0x0,6
tick,0x7d8294d2a042,12007393,0,0x0,6
tick,0x7d8294d2a042,12008457,0,0x0,6
tick,0x7d8294d2a042,12009514,0,0x0,6
tick,0x7d8294d2a042,12010580,0,0x0,6
tick,0x7d8294d2a042,12011640,0,0x0,6
tick,0x7d8294d2a042,12012706,0,0x0,6
tick,0x7d8294d2a042,12013766,0,0x0,6
tick,0x7d8294d2a042,12014837,0,0x0,6
tick,0x7d8294d2a042,12015906,0,0x0,6
tick,0x7d8294d2a042,12016986,0,0x0,6
tick,0x7d8294d2a042,12018039,0,0x0,6
tick,0x7d8294d2a042,12019120,0,0x0,6
tick,0x7d8294d2a042,12020256,0,0x0,6
tick,0x7d8294d2a042,12021351,0,0x0,6
tick,0x7d8294d2a042,12022415,0,0x0,6
tick,0x7d8294d2a042,12023484,0,0x0,6
tick,0x7d8294d2a042,12024660,0,0x0,6
tick,0x7d8294d2a042,12025604,0,0x0,6
tick,0x7d8294d2a042,12026706,0,0x0,6
tick,0x7d8294d2a042,12027808,0,0x0,6
tick,0x7d8294d2a042,12028891,0,0x0,6
tick,0x7d8294d2a042,12029982,0,0x0,6
tick,0x7d8294d2a042,12031059,0,0x0,6
tick,0x7d8294d2a042,12032139,0,0x0,6
tick,0x7d8294d2a042,12033217,0,0x0,6
tick,0x7d8294d2a042,12034291,0,0x0,6
tick,0x7d8294d2a042,12035392,0,0x0,6
tick,0x7d8294d2a042,12036502,0,0x0,6
tick,0x7d8294d2a042,12037623,0,0x0,6
tick,0x7d8294d2a042,12038699,0,0x0,6
tick,0x7d8294d2a042,12039771,0,0x0,6
tick,0x7d8294d2a042,12040833,0,0x0,6
tick,0x7d8294d2a042,12041902,0,0x0,6
tick,0x7d8294d2a042,12042964,0,0x0,6
tick,0x7d8294d2a042,12044024,0,0x0,6
tick,0x7d8294d2a042,12045090,0,0x0,6
tick,0x7d8294d2a042,12046149,0,0x0,6
tick,0x7d8294d2a042,12047213,0,0x0,6
tick,0x7d8294d2a042,12048280,0,0x0,6
tick,0x7d8294d2a042,12049344,0,0x0,6
tick,0x7d8294d2a042,12050404,0,0x0,6
tick,0x7d8294d2a042,12051467,0,0x0,6
tick,0x7d8294d2a042,12052527,0,0x0,6
tick,0x7d8294d2a042,12053587,0,0x0,6
tick,0x7d8294d2a042,12054650,0,0x0,6
tick,0x7d8294d2a042,12055711,0,0x0,6
tick,0x7d8294d2a042,12056775,0,0x0,6
tick,0x7d8294d2a042,12057835,0,0x0,6
tick,0x7d8294d2a042,12058895,0,0x0,6
tick,0x7d8294d2a042,12059958,0,0x0,6
tick,0x7d8294d2a042,12061024,0,0x0,6
tick,0x7d8294d2a042,12062094,0,0x0,6
tick,0x7d8294d2a042,12063159,0,0x0,6
tick,0x7d8294d2a042,12064227,0,0x0,6
tick,0x7d8294d2a042,12065293,0,0x0,6
tick,0x7d8294d2a042,12066454,0,0x0,6
tick,0x7d8294d2a042,12067400,0,0x0,6
tick,0x7d8294d2a042,12068548,0,0x0,6
tick,0x7d8294d2a042,12069527,0,0x0,6
tick,0x7d8294d2a042,12070588,0,0x0,6
tick,0x7d8294d2a042,12071653,0,0x0,6
tick,0x7d8294d2a042,12072709,0,0x0,6
tick,0x7d8294d2a042,12073782,0,0x0,6
tick,0x7d8294d2a042,12074854,0,0x0,6
tick,0x7d8294d2a042,12075930,0,0x0,6
tick,0x7d8294d2a042,12077003,0,0x0,6
tick,0x7d8294d2a042,12078075,0,0x0,6
tick,0x7d8294d2a042,12079130,0,0x0,6
tick,0x7d8294d2a042,12080247,0,0x0,6
tick,0x7d8294d2a042,12081272,0,0x0,6
tick,0x7d8294d2a042,12082358,0,0x0,6
tick,0x7d8294d2a042,12083391,0,0x0,6
tick,0x7d8294d2a042,12084560,0,0x0,6
tick,0x7d8294d2a042,12085516,0,0x0,6
tick,0x7d8294d2a042,12086605,0,0x0,6
tick,0x7d8294d2a042,12087653,0,0x0,6
tick,0x7d8294d2a042,12088726,0,0x0,6
tick,0x7d8294d2a042,12089800,0,0x0,6
tick,0x7d8294d2a042,12090874,0,0x0,6
tick,0x7d8294d2a042,12091929,0,0x0,6
tick,0x7d8294d2a042,12093002,0,0x0,6
tick,0x7d8294d2a042,12094077,0,0x0,6
tick,0x7d8294d2a042,12095151,0,0x0,6
tick,0x7d8294d2a042,12096226,0,0x0,6
tick,0x7d8294d2a042,12097299,0,0x0,6
tick,0x7d8294d2a042,12098358,0,0x0,6
tick,0x7d8294d2a042,12099405,0,0x0,6
tick,0x7d8294d2a042,12100503,0,0x0,6
tick,0x7d8294d2a042,12101565,0,0x0,6
tick,0x7d8294d2a042,12102627,0,0x0,6
tick,0x7d8294d2a042,12103690,0,0x0,6
tick,0x7d8294d2a042,12104763,0,0x0,6
tick,0x7d8294d2a042,12105841,0,0x0,6
tick,0x7d8294d2a042,12106894,0,0x0,6
tick,0x7d8294d2a042,12108032,0,0x0,6
tick,0x7d8294d2a042,12109118,0,0x0,6
tick,0x7d8294d2a042,12110118,0,0x0,6
tick,0x7d8294d2a042,12111173,0,0x0,6
tick,0x7d8294d2a042,12112216,0,0x0,6
tick,0x7d8294d2a042,12113290,0,0x0,6
tick,0x7d8294d2a042,12114347,0,0x0,6
tick,0x7d8294d2a042,12115411,0,0x0,6
tick,0x7d8294d2a042,12116480,0,0x0,6
tick,0x7d8294d2a042,12117534,0,0x0,6
tick,0x7d8294d2a042,12118615,0,0x0,6
tick,0x7d8294d2a042,12119692,0,0x0,6
tick,0x7d8294d2a042,12120770,0,0x0,6
tick,0x7d8294d2a042,12121840,0,0x0,6
tick,0x7d8294d2a042,12122913,0,0x0,6
tick,0x7d8294d2a042,12123992,0,0x0,6
tick,0x7d8294d2a042,12125065,0,0x0,6
tick,0x7d8294d2a042,12126137,0,0x0,6
tick,0x7d8294d2a042,12127192,0,0x0,6
tick,0x7d8294d2a042,12128280,0,0x0,6
tick,0x7d8294d2a042,12129331,0,0x0,6
tick,0x7d8294d2a042,12130405,0,0x0,6
tick,0x7d8294d2a042,12131471,0,0x0,6
tick,0x7d8294d2a042,12132547,0,0x0,6
tick,0x7d8294d2a042,12133619,0,0x0,6
tick,0x7d8294d2a042,12134697,0,0x0,6
tick,0x7d8294d2a042,12135758,0,0x0,6
tick,0x7d8294d2a042,12136816,0,0x0,6
tick,0x7d8294d2a042,12137883,0,0x0,6
tick,0x7d8294d2a042,12138974,0,0x0,6
tick,0x7d8294d2a042,12140110,0,0x0,6
tick,0x7d8294d2a042,12141074,0,0x0,6
tick,0x7d8294d2a042,12142151,0,0x0,6
tick,0x7d8294d2a042,12143236,0,0x0,6
tick,0x7d8294d2a042,12144369,0,0x0,6
tick,0x7d8294d2a042,12145386,0,0x0,6
tick,0x7d8294d2a042,12146421,0,0x0,6
tick,0x7d8294d2a042,12147521,0,0x0,6
tick,0x7d8294d2a042,12148562,0,0x0,6
tick,0x7d8294d2a042,12149622,0,0x0,6
tick,0x7d8294d2a042,12150686,0,0x0,6
tick,0x7d8294d2a042,12151749,0,0x0,6
tick,0x7d8294d2a042,12152846,0,0x0,6
tick,0x7d8294d2a042,12153922,0,0x0,6
tick,0x7d8294d2a042,12155021,0,0x0,6
tick,0x7d8294d2a042,12156231,0,0x0,6
tick,0x7d8294d2a042,12157341,0,0x0,6
tick,0x7d8294d2a042,12158267,0,0x0,6
tick,0x7d8294d2a042,12159325,0,0x0,6
tick,0x7d8294d2a042,12160358,0,0x0,6
tick,0x7d8294d2a042,12161456,0,0x0,6
tick,0x7d8294d2a042,12162480,0,0x0,6
tick,0x7d8294d2a042,12163548,0,0x0,6
tick,0x7d8294d2a042,12164619,0,0x0,6
tick,0x7d8294d2a042,12165690,0,0x0,6
tick,0x7d8294d2a042,12166763,0,0x0,6
tick,0x7d8294d2a042,12167839,0,0x0,6
tick,0x7d8294d2a042,12168913,0,0x0,6
tick,0x7d8294d2a042,12169993,0,0x0,6
tick,0x7d8294d2a042,12171070,0,0x0,6
tick,0x7d8294d2a042,12172152,0,0x0,6
tick,0x7d8294d2a042,12173206,0,0x0,6
tick,0x7d8294d2a042,12174288,0,0x0,6
tick,0x7d8294d2a042,12175408,0,0x0,6
tick,0x7d8294d2a042,12176614,0,0x0,6
tick,0x7d8294d2a042,12177766,0,0x0,6
tick,0x7d8294d2a042,12178789,0,0x0,6
tick,0x7d8294d2a042,12179863,0,0x0,6
tick,0x7d8294d2a042,12180937,0,0x0,6
tick,0x7d8294d2a042,12182010,0,0x0,6
tick,0x7d8294d2a042,12183088,0,0x0,6
tick,0x7d8294d2a042,12184248,0,0x0,6
tick,0x7d8294d2a042,12185347,0,0x0,6
tick,0x7d8294d2a042,12186344,0,0x0,6
tick,0x7d8294d2a042,12187413,0,0x0,6
tick,0x7d8294d2a042,12188487,0,0x0,6
tick,0x7d8294d2a042,12189562,0,0x0,6
tick,0x7d8294d2a042,12190644,0,0x0,6
tick,0x7d8294d2a042,12191716,0,0x0,6
tick,0x7d8294d2a042,12192777,0,0x0,6
tick,0x7d8294d2a042,12193838,0,0x0,6
tick,0x7d8294d2a042,12194903,0,0x0,6
tick,0x7d8294d2a042,12195965,0,0x0,6
tick,0x7d8294d2a042,12197041,0,0x0,6
tick,0x7d8294d2a042,12198112,0,0x0,6
tick,0x7d8294d2a042,12199185,0,0x0,6
tick,0x7d8294d2a042,12200319,0,0x0,6
tick,0x7d8294d2a042,12201405,0,0x0,6
tick,0x7d8294d2a042,12202483,0,0x0,6
tick,0x7d8294d2a042,12203522,0,0x0,6
tick,0x7d8294d2a042,12204681,0,0x0,6
tick,0x7d8294d2a042,12205667,0,0x0,6
tick,0x7d8294d2a042,12206723,0,0x0,6
tick,0x7d8294d2a042,12207850,0,0x0,6
tick,0x7d8294d2a042,12208864,0,0x0,6
tick,0x7d8294d2a042,12210048,0,0x0,6
tick,0x7d8294d2a042,12211226,0,0x0,6
tick,0x7d8294d2a042,12212180,0,0x0,6
tick,0x7d8294d2a042,12213261,0,0x0,6
tick,0x7d8294d2a042,12214296,0,0x0,6
tick,0x7d8294d2a042,12215357,0,0x0,6
tick,0x7d8294d2a042,12216460,0,0x0,6
tick,0x7d8294d2a042,12217484,0,0x0,6
tick,0x7d8294d2a042,12218545,0,0x0,6
tick,0x7d8294d2a042,12219609,0,0x0,6
tick,0x7d8294d2a042,12220671,0,0x0,6
tick,0x7d8294d2a042,12221735,0,0x0,6
tick,0x7d8294d2a042,12222793,0,0x0,6
tick,0x7d8294d2a042,12223873,0,0x0,6
tick,0x7d8294d2a042,12224936,0,0x0,6
tick,0x7d8294d2a042,12225997,0,0x0,6
tick,0x7d8294d2a042,12227054,0,0x0,6
tick,0x7d8294d2a042,12228130,0,0x0,6
tick,0x7d8294d2a042,12229199,0,0x0,6
tick,0x7d8294d2a042,12230370,0,0x0,6
tick,0x7d8294d2a042,12231586,0,0x0,6
tick,0x7d8294d2a042,12232609,0,0x0,6
tick,0x7d8294d2a042,12233690,0,0x0,6
tick,0x7d8294d2a042,12234776,0,0x0,6
tick,0x7d8294d2a042,12235852,0,0x0,6
tick,0x7d8294d2a042,12236951,0,0x0,6
tick,0x7d8294d2a042,12238019,0,0x0,6
tick,0x7d8294d2a042,12239118,0,0x0,6
tick,0x7d8294d2a042,12240268,0,0x0,6
tick,0x7d8294d2a042,12241261,0,0x0,6
tick,0x7d8294d2a042,12242336,0,0x0,6
tick,0x7d8294d2a042,12243390,0,0x0,6
tick,0x7d8294d2a042,12244479,0,0x0,6
tick,0x7d8294d2a042,12245486,0,0x0,6
tick,0x7d8294d2a042,12246578,0,0x0,6
tick,0x7d8294d2a042,12247683,0,0x0,6
tick,0x7d8294d2a042,12248718,0,0x0,6
tick,0x7d8294d2a042,12249781,0,0x0,6
tick,0x7d8294d2a042,12250857,0,0x0,6
tick,0x7d8294d2a042,12251982,0,0x0,6
tick,0x7d8294d2a042,12252976,0,0x0,6
tick,0x7d8294d2a042,12254052,0,0x0,6
tick,0x7d8294d2a042,12255116,0,0x0,6
tick,0x7d8294d2a042,12256249,0,0x0,6
tick,0x7d8294d2a042,12257225,0,0x0,6
tick,0x7d8294d2a042,12258300,0,0x0,6
tick,0x7d8294d2a042,12259383,0,0x0,6
tick,0x7d8294d2a042,12260468,0,0x0,6
tick,0x7d8294d2a042,12261544,0,0x0,6
tick,0x7d8294d2a042,12262638,0,0x0,6
tick,0x7d8294d2a042,12263764,0,0x0,6
tick,0x7d8294d2a042,12264852,0,0x0,6
tick,0x7d8294d2a042,12265841,0,0x0,6
tick,0x7d8294d2a042,12266939,0,0x0,6
tick,0x7d8294d2a042,12268054,0,0x0,6
tick,0x7d8294d2a042,12269050,0,0x0,6
tick,0x7d8294d2a042,12270085,0,0x0,6
tick,0x7d8294d2a042,12271169,0,0x0,6
tick,0x7d8294d2a042,12272239,0,0x0,6
tick,0x7d8294d2a042,12273287,0,0x0,6
tick,0x7d8294d2a042,12274358,0,0x0,6
tick,0x7d8294d2a042,12275431,0,0x0,6
tick,0x7d8294d2a042,12276494,0,0x0,6
tick,0x7d8294d2a042,12277568,0,0x0,6
tick,0x7d8294d2a042,12278662,0,0x0,6
tick,0x7d8294d2a042,12279707,0,0x0,6
tick,0x7d8294d2a042,12280770,0,0x0,6
tick,0x7d8294d2a042,12281829,0,0x0,6
tick,0x7d8294d2a042,12282887,0,0x0,6
tick,0x7d8294d2a042,12283960,0,0x0,6
tick,0x7d8294d2a042,12285013,0,0x0,6
tick,0x7d8294d2a042,12286094,0,0x0,6
tick,0x7d8294d2a042,12287177,0,0x0,6
tick,0x7d8294d2a042,12288283,0,0x0,6
tick,0x7d8294d2a042,12289338,0,0x0,6
tick,0x7d8294d2a042,12290411,0,0x0,6
tick,0x7d8294d2a042,12291464,0,0x0,6
tick,0x7d8294d2a042,12292545,0,0x0,6
tick,0x7d8294d2a042,12293628,0,0x0,6
tick,0x7d8294d2a042,12294719,0,0x0,6
tick,0x7d8294d2a042,12295865,0,0x0,6
tick,0x7d8294d2a042,12296943,0,0x0,6
tick,0x7d8294d2a042,12297934,0,0x0,6
tick,0x7d8294d2a042,12298994,0,0x0,6
tick,0x7d8294d2a042,12300130,0,0x0,6
tick,0x7d8294d2a042,12301175,0,0x0,6
tick,0x7d8294d2a042,12302169,0,0x0,6
tick,0x7d8294d2a042,12303267,0,0x0,6
tick,0x7d8294d2a042,12304384,0,0x0,6
tick,0x7d8294d2a042,12305436,0,0x0,6
tick,0x7d8294d2a042,12306530,0,0x0,6
tick,0x7d8294d2a042,12307505,0,0x0,6
tick,0x7d8294d2a042,12308624,0,0x0,6
tick,0x7d8294d2a042,12309599,0,0x0,6
tick,0x7d8294d2a042,12310662,0,0x0,6
tick,0x7d8294d2a042,12311719,0,0x0,6
tick,0x7d8294d2a042,12312778,0,0x0,6
tick,0x7d8294d2a042,12313858,0,0x0,6
tick,0x7d8294d2a042,12314943,0,0x0,6
tick,0x7d8294d2a042,12316014,0,0x0,6
tick,0x7d8294d2a042,12317111,0,0x0,6
tick,0x7d8294d2a042,12318195,0,0x0,6
tick,0x7d8294d2a042,12319241,0,0x0,6
tick,0x7d8294d2a042,12320421,0,0x0,6
tick,0x7d8294d2a042,12321376,0,0x0,6
tick,0x7d8294d2a042,12322489,0,0x0,6
tick,0x7d8294d2a042,12323527,0,0x0,6
tick,0x7d8294d2a042,12324590,0,0x0,6
tick,0x7d8294d2a042,12325646,0,0x0,6
tick,0x7d8294d2a042,12326717,0,0x0,6
tick,0x7d8294d2a042,12327782,0,0x0,6
tick,0x7d8294d2a042,12328852,0,0x0,6
tick,0x7d8294d2a042,12329912,0,0x0,6
tick,0x7d8294d2a042,12330974,0,0x0,6
tick,0x7d8294d2a042,12332129,0,0x0,6
tick,0x7d8294d2a042,12333150,0,0x0,6
tick,0x7d8294d2a042,12334202,0,0x0,6
tick,0x7d8294d2a042,12335266,0,0x0,6
tick,0x7d8294d2a042,12336351,0,0x0,6
tick,0x7d8294d2a042,12337441,0,0x0,6
tick,0x7d8294d2a042,12338508,0,0x0,6
tick,0x7d8294d2a042,12339563,0,0x0,6
tick,0x7d8294d2a042,12340641,0,0x0,6
tick,0x7d8294d2a042,12341750,0,0x0,6
tick,0x7d8294d2a042,12342812,0,0x0,6
tick,0x7d8294d2a042,12343937,0,0x0,6
tick,0x7d8294d2a042,12345015,0,0x0,6
tick,0x7d8294d2a042,12346000,0,0x0,6
tick,0x7d8294d2a042,12347043,0,0x0,6
tick,0x7d8294d2a042,12348107,0,0x0,6
tick,0x7d8294d2a042,12349185,0,0x0,6
tick,0x7d8294d2a042,12350259,0,0x0,6
tick,0x7d8294d2a042,12351349,0,0x0,6
tick,0x7d8294d2a042,12352429,0,0x0,6
tick,0x7d8294d2a042,12353481,0,0x0,6
tick,0x7d8294d2a042,12354554,0,0x0,6
tick,0x7d8294d2a042,12355610,0,0x0,6
tick,0x7d8294d2a042,12356690,0,0x0,6
tick,0x7d8294d2a042,12357771,0,0x0,6
tick,0x7d8294d2a042,12358833,0,0x0,6
tick,0x7d8294d2a042,12359916,0,0x0,6
tick,0x7d8294d2a042,12360976,0,0x0,6
tick,0x7d8294d2a042,12362037,0,0x0,6
tick,0x7d8294d2a042,12363108,0,0x0,6
tick,0x7d8294d2a042,12364184,0,0x0,6
tick,0x7d8294d2a042,12365304,0,0x0,6
tick,0x7d8294d2a042,12366296,0,0x0,6
tick,0x7d8294d2a042,12367383,0,0x0,6
tick,0x7d8294d2a042,12368414,0,0x0,6
tick,0x7d8294d2a042,12369468,0,0x0,6
tick,0x7d8294d2a042,12370545,0,0x0,6
tick,0x7d8294d2a042,12371603,0,0x0,6
tick,0x7d8294d2a042,12372664,0,0x0,6
tick,0x7d8294d2a042,12373731,0,0x0,6
tick,0x7d8294d2a042,12374821,0,0x0,6
tick,0x7d8294d2a042,12375957,0,0x0,6
tick,0x7d8294d2a042,12377054,0,0x0,6
tick,0x7d8294d2a042,12378015,0,0x0,6
tick,0x7d8294d2a042,12379085,0,0x0,6
tick,0x7d8294d2a042,12380140,0,0x0,6
tick,0x7d8294d2a042,12381214,0,0x0,6
tick,0x7d8294d2a042,12382269,0,0x0,6
tick,0x7d8294d2a042,12383339,0,0x0,6
tick,0x7d8294d2a042,12384401,0,0x0,6
tick,0x7d8294d2a042,12385467,0,0x0,6
tick,0x7d8294d2a042,12386530,0,0x0,6
tick,0x7d8294d2a042,12387601,0,0x0,6
tick,0x7d8294d2a042,12388660,0,0x0,6
tick,0x7d8294d2a042,12389740,0,0x0,6
tick,0x7d8294d2a042,12390797,0,0x0,6
tick,0x7d8294d2a042,12391931,0,0x0,6
tick,0x7d8294d2a042,12392908,0,0x0,6
tick,0x7d8294d2a042,12393978,0,0x0,6
tick,0x7d8294d2a042,12395042,0,0x0,6
tick,0x7d8294d2a042,12396117,0,0x0,6
tick,0x7d8294d2a042,12397164,0,0x0,6
tick,0x7d8294d2a042,12398247,0,0x0,6
tick,0x7d8294d2a042,12399327,0,0x0,6
tick,0x7d8294d2a042,12400432,0,0x0,6
tick,0x7d8294d2a042,12401441,0,0x0,6
tick,0x7d8294d2a042,12402536,0,0x0,6
tick,0x7d8294d2a042,12403678,0,0x0,6
tick,0x7d8294d2a042,12404655,0,0x0,6
tick,0x7d8294d2a042,12405759,0,0x0,6
tick,0x7d8294d2a042,12406796,0,0x0,6
tick,0x7d8294d2a042,12407876,0,0x0,6
tick,0x7d8294d2a042,12408952,0,0x0,6
tick,0x7d8294d2a042,12410038,0,0x0,6
tick,0x7d8294d2a042,12411117,0,0x0,6
tick,0x7d8294d2a042,12412178,0,0x0,6
tick,0x7d8294d2a042,12413240,0,0x0,6
tick,0x7d8294d2a042,12414322,0,0x0,6
tick,0x7d8294d2a042,12415416,0,0x0,6
tick,0x7d8294d2a042,12416534,0,0x0,6
tick,0x7d8294d2a042,12417601,0,0x0,6
tick,0x7d8294d2a042,12418589,0,0x0,6
tick,0x7d8294d2a042,12419618,0,0x0,6
tick,0x7d8294d2a042,12420706,0,0x0,6
tick,0x7d8294d2a042,12421852,0,0x0,6
tick,0x7d8294d2a042,12422848,0,0x0,6
tick,0x7d8294d2a042,12423990,0,0x0,6
tick,0x7d8294d2a042,12425070,0,0x0,6
tick,0x7d8294d2a042,12426081,0,0x0,6
tick,0x7d8294d2a042,12427164,0,0x0,6
tick,0x7d8294d2a042,12428313,0,0x0,6
tick,0x7d8294d2a042,12429413,0,0x0,6
tick,0x7d8294d2a042,12430380,0,0x0,6
tick,0x7d8294d2a042,12431443,0,0x0,6
tick,0x7d8294d2a042,12432509,0,0x0,6
tick,0x7d8294d2a042,12433571,0,0x0,6
tick,0x7d8294d2a042,12434622,0,0x0,6
tick,0x7d8294d2a042,12435861,0,0x0,6
tick,0x7d8294d2a042,12436787,0,0x0,6
tick,0x7d8294d2a042,12437846,0,0x0,6
tick,0x7d8294d2a042,12438911,0,0x0,6
tick,0x7d8294d2a042,12440042,0,0x0,6
tick,0x7d8294d2a042,12441030,0,0x0,6
tick,0x7d8294d2a042,12442095,0,0x0,6
tick,0x7d8294d2a042,12443162,0,0x0,6
tick,0x7d8294d2a042,12444198,0,0x0,6
tick,0x7d8294d2a042,12445269,0,0x0,6
tick,0x7d8294d2a042,12446345,0,0x0,6
tick,0x7d8294d2a042,12447381,0,0x0,6
tick,0x7d8294d2a042,12448456,0,0x0,6
tick,0x7d8294d2a042,12449530,0,0x0,6
tick,0x7d8294d2a042,12450586,0,0x0,6
tick,0x7d8294d2a042,12451645,0,0x0,6
tick,0x7d8294d2a042,12452715,0,0x0,6
tick,0x7d8294d2a042,12453789,0,0x0,6
tick,0x7d8294d2a042,12454875,0,0x0,6
tick,0x7d8294d2a042,12455939,0,0x0,6
tick,0x7d8294d2a042,12457029,0,0x0,6
tick,0x7d8294d2a042,12458113,0,0x0,6
tick,0x7d8294d2a042,12459199,0,0x0,6
tick,0x7d8294d2a042,12460288,0,0x0,6
tick,0x7d8294d2a042,12461363,0,0x0,6
tick,0x7d8294d2a042,12462453,0,0x0,6
tick,0x7d8294d2a042,12463509,0,0x0,6
tick,0x7d8294d2a042,12464610,0,0x0,6
tick,0x7d8294d2a042,12465661,0,0x0,6
tick,0x7d8294d2a042,12466721,0,0x0,6
tick,0x7d8294d2a042,12467787,0,0x0,6
tick,0x7d8294d2a042,12468860,0,0x0,6
tick,0x7d8294d2a042,12469936,0,0x0,6
tick,0x7d8294d2a042,12471009,0,0x0,6
tick,0x7d8294d2a042,12472167,0,0x0,6
tick,0x7d8294d2a042,12473195,0,0x0,6
tick,0x7d8294d2a042,12474268,0,0x0,6
tick,0x7d8294d2a042,12475352,0,0x0,6
tick,0x7d8294d2a042,12476553,0,0x0,6
tick,0x7d8294d2a042,12477497,0,0x0,6
tick,0x7d8294d2a042,12478586,0,0x0,6
tick,0x7d8294d2a042,12479655,0,0x0,6
tick,0x7d8294d2a042,12480724,0,0x0,6
tick,0x7d8294d2a042,12481788,0,0x0,6
tick,0x7d8294d2a042,12482876,0,0x0,6
tick,0x7d8294d2a042,12483948,0,0x0,6
tick,0x7d8294d2a042,12485009,0,0x0,6
tick,0x7d8294d2a042,12486119,0,0x0,6
tick,0x7d8294d2a042,12487206,0,0x0,6
tick,0x7d8294d2a042,12488346,0,0x0,6
tick,0x7d8294d2a042,12489412,0,0x0,6
tick,0x7d8294d2a042,12490374,0,0x0,6
tick,0x7d8294d2a042,12491420,0,0x0,6
tick,0x7d8294d2a042,12492581,0,0x0,6
tick,0x7d8294d2a042,12493634,0,0x0,6
tick,0x7d8294d2a042,12494621,0,0x0,6
tick,0x7d8294d2a042,12495742,0,0x0,6
tick,0x7d8294d2a042,12496815,0,0x0,6
tick,0x7d8294d2a042,12497797,0,0x0,6
tick,0x7d8294d2a042,12498861,0,0x0,6
tick,0x7d8294d2a042,12499987,0,0x0,6
tick,0x7d8294d2a042,12501108,0,0x0,6
tick,0x7d8294d2a042,12502187,0,0x0,6
tick,0x7d8294d2a042,12503227,0,0x0,6
tick,0x7d8294d2a042,12504391,0,0x0,6
tick,0x7d8294d2a042,12505452,0,0x0,6
tick,0x7d8294d2a042,12506440,0,0x0,6
tick,0x7d8294d2a042,12507571,0,0x0,6
tick,0x7d8294d2a042,12508627,0,0x0,6
tick,0x7d8294d2a042,12509694,0,0x0,6
tick,0x7d8294d2a042,12510655,0,0x0,6
tick,0x7d8294d2a042,12511727,0,0x0,6
tick,0x7d8294d2a042,12512896,0,0x0,6
tick,0x7d8294d2a042,12513884,0,0x0,6
tick,0x7d8294d2a042,12514940,0,0x0,6
tick,0x7d8294d2a042,12516051,0,0x0,6
tick,0x7d8294d2a042,12517126,0,0x0,6
tick,0x7d8294d2a042,12518087,0,0x0,6
tick,0x7d8294d2a042,12523099,0,0x0,6
tick,0x7d8294d2a042,12524168,0,0x0,6
tick,0x7d8294d2a042,12525207,0,0x0,6
tick,0x7d8294d2a042,12526277,0,0x0,6
tick,0x7d8294d2a042,12527325,0,0x0,6
tick,0x7d8294d2a042,12528507,0,0x0,6
tick,0x7d8294d2a042,12529578,0,0x0,6
tick,0x7d8294d2a042,12530545,0,0x0,6
tick,0x7d8294d2a042,12531643,0,0x0,6
tick,0x7d8294d2a042,12532663,0,0x0,6
tick,0x7d8294d2a042,12533732,0,0x0,6
tick,0x7d8294d2a042,12534820,0,0x0,6
tick,0x7d8294d2a042,12535889,0,0x0,6
tick,0x7d8294d2a042,12536961,0,0x0,6
tick,0x7d8294d2a042,12538059,0,0x0,6
tick,0x7d8294d2a042,12539116,0,0x0,6
tick,0x7d8294d2a042,12540264,0,0x0,6
tick,0x7d8294d2a042,12541353,0,0x0,6
tick,0x7d8294d2a042,12542339,0,0x0,6
tick,0x7d8294d2a042,12543487,0,0x0,6
tick,0x7d8294d2a042,12544662,0,0x0,6
tick,0x7d8294d2a042,12545734,0,0x0,6
tick,0x7d8294d2a042,12546887,0,0x0,6
tick,0x7d8294d2a042,12547949,0,0x0,6
tick,0x7d8294d2a042,12549101,0,0x0,6
tick,0x7d8294d2a042,12550177,0,0x0,6
tick,0x7d8294d2a042,12551326,0,0x0,6
tick,0x7d8294d2a042,12552405,0,0x0,6
tick,0x7d8294d2a042,12553479,0,0x0,6
tick,0x7d8294d2a042,12554559,0,0x0,6
tick,0x7d8294d2a042,12555568,0,0x0,6
tick,0x7d8294d2a042,12556766,0,0x0,6
tick,0x7d8294d2a042,12557835,0,0x0,6
tick,0x7d8294d2a042,12558994,0,0x0,6
tick,0x7d8294d2a042,12560058,0,0x0,6
tick,0x7d8294d2a042,12561155,0,0x0,6
tick,0x7d8294d2a042,12562291,0,0x0,6
tick,0x7d8294d2a042,12563459,0,0x0,6
tick,0x7d8294d2a042,12564513,0,0x0,6
tick,0x7d8294d2a042,12565693,0,0x0,6
tick,0x7d8294d2a042,12566828,0,0x0,6
tick,0x7d8294d2a042,12567900,0,0x0,6
tick,0x7d8294d2a042,12569076,0,0x0,6
tick,0x7d8294d2a042,12570138,0,0x0,6
tick,0x7d8294d2a042,12571280,0,0x0,6
tick,0x7d8294d2a042,12572371,0,0x0,6
tick,0x7d8294d2a042,12573465,0,0x0,6
tick,0x7d8294d2a042,12574528,0,0x0,6
tick,0x7d8294d2a042,12575493,0,0x0,6
tick,0x7d8294d2a042,12576670,0,0x0,6
tick,0x7d8294d2a042,12577737,0,0x0,6
tick,0x7d8294d2a042,12578833,0,0x0,6
tick,0x7d8294d2a042,12579916,0,0x0,6
tick,0x7d8294d2a042,12580991,0,0x0,6
tick,0x7d8294d2a042,12582111,0,0x0,6
tick,0x7d8294d2a042,12583326,0,0x0,6
tick,0x7d8294d2a042,12584392,0,0x0,6
tick,0x7d8294d2a042,12585421,0,0x0,6
tick,0x7d8294d2a042,12586510,0,0x0,6
tick,0x7d8294d2a042,12587586,0,0x0,6
tick,0x7d8294d2a042,12588655,0,0x0,6
tick,0x7d8294d2a042,12589746,0,0x0,6
tick,0x7d8294d2a042,12590914,0,0x0,6
tick,0x7d8294d2a042,12591975,0,0x0,6
tick,0x7d8294d2a042,12593153,0,0x0,6
tick,0x7d8294d2a042,12594225,0,0x0,6
tick,0x7d8294d2a042,12595469,0,0x0,6
tick,0x7d8294d2a042,12596442,0,0x0,6
tick,0x7d8294d2a042,12597423,0,0x0,6
tick,0x7d8294d2a042,12598497,0,0x0,6
tick,0x7d8294d2a042,12599575,0,0x0,6
tick,0x7d8294d2a042,12600683,0,0x0,6
tick,0x7d8294d2a042,12601670,0,0x0,6
tick,0x7d8294d2a042,12602737,0,0x0,6
tick,0x7d8294d2a042,12603881,0,0x0,6
tick,0x7d8294d2a042,12604914,0,0x0,6
tick,0x7d8294d2a042,12605901,0,0x0,6
tick,0x7d8294d2a042,12606974,0,0x0,6
tick,0x7d8294d2a042,12608089,0,0x0,6
tick,0x7d8294d2a042,12609136,0,0x0,6
tick,0x7d8294d2a042,12610128,0,0x0,6
tick,0x7d8294d2a042,12611192,0,0x0,6
tick,0x7d8294d2a042,12612239,0,0x0,6
tick,0x7d8294d2a042,12613379,0,0x0,6
tick,0x7d8294d2a042,12614357,0,0x0,6
tick,0x7d8294d2a042,12615398,0,0x0,6
tick,0x7d8294d2a042,12616539,0,0x0,6
tick,0x7d8294d2a042,12617582,0,0x0,6
tick,0x7d8294d2a042,12618590,0,0x0,6
tick,0x7d8294d2a042,12619649,0,0x0,6
tick,0x7d8294d2a042,12620763,0,0x0,6
tick,0x7d8294d2a042,12621809,0,0x0,6
tick,0x7d8294d2a042,12622797,0,0x0,6
tick,0x7d8294d2a042,12623911,0,0x0,6
tick,0x7d8294d2a042,12624984,0,0x0,6
tick,0x7d8294d2a042,12626033,0,0x0,6
tick,0x7d8294d2a042,12627046,0,0x0,6
tick,0x7d8294d2a042,12628163,0,0x0,6
tick,0x7d8294d2a042,12629231,0,0x0,6
tick,0x7d8294d2a042,12630333,0,0x0,6
tick,0x7d8294d2a042,12631373,0,0x0,6
tick,0x7d8294d2a042,12632432,0,0x0,6
tick,0x7d8294d2a042,12633572,0,0x0,6
tick,0x7d8294d2a042,12634582,0,0x0,6
tick,0x7d8294d2a042,12635581,0,0x0,6
tick,0x7d8294d2a042,12636678,0,0x0,6
tick,0x7d8294d2a042,12637734,0,0x0,6
tick,0x7d8294d2a042,12638797,0,0x0,6
tick,0x7d8294d2a042,12639847,0,0x0,6
tick,0x7d8294d2a042,12640917,0,0x0,6
tick,0x7d8294d2a042,12641970,0,0x0,6
tick,0x7d8294d2a042,12643035,0,0x0,6
tick,0x7d8294d2a042,12644116,0,0x0,6
tick,0x7d8294d2a042,12645197,0,0x0,6
tick,0x7d8294d2a042,12646264,0,0x0,6
tick,0x7d8294d2a042,12647256,0,0x0,6
tick,0x7d8294d2a042,12648381,0,0x0,6
tick,0x7d8294d2a042,12649471,0,0x0,6
tick,0x7d8294d2a042,12650473,0,0x0,6
tick,0x7d8294d2a042,12651495,0,0x0,6
tick,0x7d8294d2a042,12652678,0,0x0,6
tick,0x7d8294d2a042,12653756,0,0x0,6
tick,0x7d8294d2a042,12654836,0,0x0,6
tick,0x7d8294d2a042,12655898,0,0x0,6
tick,0x7d8294d2a042,12656995,0,0x0,6
tick,0x7d8294d2a042,12658070,0,0x0,6
tick,0x7d8294d2a042,12659129,0,0x0,6
tick,0x7d8294d2a042,12660115,0,0x0,6
tick,0x7d8294d2a042,12661271,0,0x0,6
tick,0x7d8294d2a042,12662356,0,0x0,6
tick,0x7d8294d2a042,12663446,0,0x0,6
tick,0x7d8294d2a042,12664524,0,0x0,6
tick,0x7d8294d2a042,12665582,0,0x0,6
tick,0x7d8294d2a042,12666568,0,0x0,6
tick,0x7d8294d2a042,12667599,0,0x0,6
tick,0x7d8294d2a042,12668751,0,0x0,6
tick,0x7d8294d2a042,12669843,0,0x0,6
tick,0x7d8294d2a042,12670880,0,0x0,6
tick,0x7d8294d2a042,12671930,0,0x0,6
tick,0x7d8294d2a042,12672995,0,0x0,6
tick,0x7d8294d2a042,12674094,0,0x0,6
tick,0x7d8294d2a042,12675144,0,0x0,6
tick,0x7d8294d2a042,12676221,0,0x0,6
tick,0x7d8294d2a042,12677297,0,0x0,6
tick,0x7d8294d2a042,12678375,0,0x0,6
tick,0x7d8294d2a042,12679444,0,0x0,6
tick,0x7d8294d2a042,12680524,0,0x0,6
tick,0x7d8294d2a042,12681493,0,0x0,6
tick,0x7d8294d2a042,12682550,0,0x0,6
tick,0x7d8294d2a042,12683582,0,0x0,6
tick,0x7d8294d2a042,12684708,0,0x0,6
tick,0x7d8294d2a042,12685831,0,0x0,6
tick,0x7d8294d2a042,12686905,0,0x0,6
tick,0x7d8294d2a042,12687999,0,0x0,6
tick,0x7d8294d2a042,12689074,0,0x0,6
tick,0x7d8294d2a042,12690140,0,0x0,6
tick,0x7d8294d2a042,12691216,0,0x0,6
tick,0x7d8294d2a042,12692214,0,0x0,6
tick,0x7d8294d2a042,12693294,0,0x0,6
tick,0x7d8294d2a042,12694375,0,0x0,6
tick,0x7d8294d2a042,12695499,0,0x0,6
tick,0x7d8294d2a042,12696562,0,0x0,6
tick,0x7d8294d2a042,12697571,0,0x0,6
tick,0x7d8294d2a042,12698711,0,0x0,6
tick,0x7d8294d2a042,12699766,0,0x0,6
tick,0x7d8294d2a042,12700822,0,0x0,6
tick,0x7d8294d2a042,12701911,0,0x0,6
tick,0x7d8294d2a042,12702949,0,0x0,6
tick,0x7d8294d2a042,12703936,0,0x0,6
tick,0x7d8294d2a042,12704985,0,0x0,6
tick,0x7d8294d2a042,12706085,0,0x0,6
tick,0x7d8294d2a042,12707226,0,0x0,6
tick,0x7d8294d2a042,12708304,0,0x0,6
tick,0x7d8294d2a042,12709362,0,0x0,6
tick,0x7d8294d2a042,12710466,0,0x0,6
tick,0x7d8294d2a042,12711500,0,0x0,6
tick,0x7d8294d2a042,12712557,0,0x0,6
tick,0x7d8294d2a042,12713637,0,0x0,6
tick,0x7d8294d2a042,12714612,0,0x0,6
tick,0x7d8294d2a042,12715747,0,0x0,6
tick,0x7d8294d2a042,12716825,0,0x0,6
tick,0x7d8294d2a042,12717877,0,0x0,6
tick,0x7d8294d2a042,12718958,0,0x0,6
tick,0x7d8294d2a042,12720019,0,0x0,6
tick,0x7d8294d2a042,12721080,0,0x0,6
tick,0x7d8294d2a042,12722177,0,0x0,6
tick,0x7d8294d2a042,12723241,0,0x0,6
tick,0x7d8294d2a042,12724226,0,0x0,6
tick,0x7d8294d2a042,12725279,0,0x0,6
tick,0x7d8294d2a042,12726334,0,0x0,6
tick,0x7d8294d2a042,12727407,0,0x0,6
tick,0x7d8294d2a042,12728548,0,0x0,6
tick,0x7d8294d2a042,12729623,0,0x0,6
tick,0x7d8294d2a042,12730731,0,0x0,6
tick,0x7d8294d2a042,12731757,0,0x0,6
tick,0x7d8294d2a042,12732817,0,0x0,6
tick,0x7d8294d2a042,12733873,0,0x0,6
tick,0x7d8294d2a042,12734955,0,0x0,6
tick,0x7d8294d2a042,12735925,0,0x0,6
tick,0x7d8294d2a042,12737016,0,0x0,6
tick,0x7d8294d2a042,12738152,0,0x0,6
tick,0x7d8294d2a042,12739235,0,0x0,6
tick,0x7d8294d2a042,12740319,0,0x0,6
tick,0x7d8294d2a042,12741386,0,0x0,6
tick,0x7d8294d2a042,12742450,0,0x0,6
tick,0x7d8294d2a042,12743507,0,0x0,6
tick,0x7d8294d2a042,12744557,0,0x0,6
tick,0x7d8294d2a042,12745614,0,0x0,6
tick,0x7d8294d2a042,12746596,0,0x0,6
tick,0x7d8294d2a042,12747616,0,0x0,6
tick,0x7d8294d2a042,12748798,0,0x0,6
tick,0x7d8294d2a042,12749851,0,0x0,6
tick,0x7d8294d2a042,12750916,0,0x0,6
tick,0x7d8294d2a042,12751924,0,0x0,6
tick,0x7d8294d2a042,12753013,0,0x0,6
tick,0x7d8294d2a042,12754135,0,0x0,6
tick,0x7d8294d2a042,12755223,0,0x0,6
tick,0x7d8294d2a042,12756262,0,0x0,6
tick,0x7d8294d2a042,12757331,0,0x0,6
tick,0x7d8294d2a042,12758398,0,0x0,6
tick,0x7d8294d2a042,12759359,0,0x0,6
tick,0x7d8294d2a042,12760502,0,0x0,6
tick,0x7d8294d2a042,12761510,0,0x0,6
tick,0x7d8294d2a042,12762678,0,0x0,6
tick,0x7d8294d2a042,12763692,0,0x0,6
tick,0x7d8294d2a042,12764709,0,0x0,6
tick,0x7d8294d2a042,12765851,0,0x0,6
tick,0x7d8294d2a042,12766936,0,0x0,6
tick,0x7d8294d2a042,12768026,0,0x0,6
tick,0x7d8294d2a042,12769065,0,0x0,6
tick,0x7d8294d2a042,12770115,0,0x0,6
tick,0x7d8294d2a042,12771189,0,0x0,6
tick,0x7d8294d2a042,12772228,0,0x0,6
tick,0x7d8294d2a042,12773270,0,0x0,6
tick,0x7d8294d2a042,12774266,0,0x0,6
tick,0x7d8294d2a042,12775334,0,0x0,6
tick,0x7d8294d2a042,12776486,0,0x0,6
tick,0x7d8294d2a042,12777574,0,0x0,6
tick,0x7d8294d2a042,12778663,0,0x0,6
tick,0x7d8294d2a042,12779653,0,0x0,6
tick,0x7d8294d2a042,12780760,0,0x0,6
tick,0x7d8294d2a042,12781821,0,0x0,6
tick,0x7d8294d2a042,12782786,0,0x0,6
tick,0x7d8294d2a042,12783861,0,0x0,6
tick,0x7d8294d2a042,12784937,0,0x0,6
tick,0x7d8294d2a042,12786097,0,0x0,6
tick,0x7d8294d2a042,12787136,0,0x0,6
tick,0x7d8294d2a042,12788222,0,0x0,6
tick,0x7d8294d2a042,12789290,0,0x0,6
tick,0x7d8294d2a042,12790345,0,0x0,6
tick,0x7d8294d2a042,12791416,0,0x0,6
tick,0x7d8294d2a042,12792462,0,0x0,6
tick,0x7d8294d2a042,12793506,0,0x0,6
tick,0x7d8294d2a042,12794478,0,0x0,6
tick,0x7d8294d2a042,12795563,0,0x0,6
tick,0x7d8294d2a042,12796707,0,0x0,6
tick,0x7d8294d2a042,12797763,0,0x0,6
tick,0x7d8294d2a042,12798801,0,0x0,6
tick,0x7d8294d2a042,12799864,0,0x0,6
tick,0x7d8294d2a042,12800931,0,0x0,6
tick,0x7d8294d2a042,12801985,0,0x0,6
tick,0x7d8294d2a042,12803048,0,0x0,6
tick,0x7d8294d2a042,12804097,0,0x0,6
tick,0x7d8294d2a042,12805114,0,0x0,6
tick,0x7d8294d2a042,12806177,0,0x0,6
tick,0x7d8294d2a042,12807244,0,0x0,6
tick,0x7d8294d2a042,12808371,0,0x0,6
tick,0x7d8294d2a042,12809369,0,0x0,6
tick,0x7d8294d2a042,12810456,0,0x0,6
tick,0x7d8294d2a042,12811528,0,0x0,6
tick,0x7d8294d2a042,12812639,0,0x0,6
tick,0x7d8294d2a042,12813717,0,0x0,6
tick,0x7d8294d2a042,12814717,0,0x0,6
tick,0x7d8294d2a042,12815773,0,0x0,6
tick,0x7d8294d2a042,12816859,0,0x0,6
tick,0x7d8294d2a042,12818005,0,0x0,6
tick,0x7d8294d2a042,12819096,0,0x0,6
tick,0x7d8294d2a042,12820134,0,0x0,6
tick,0x7d8294d2a042,12821142,0,0x0,6
tick,0x7d8294d2a042,12822216,0,0x0,6
tick,0x7d8294d2a042,12823276,0,0x0,6
tick,0x7d8294d2a042,12824413,0,0x0,6
tick,0x7d8294d2a042,12825387,0,0x0,6
tick,0x7d8294d2a042,12826531,0,0x0,6
tick,0x7d8294d2a042,12827598,0,0x0,6
tick,0x7d8294d2a042,12828650,0,0x0,6
tick,0x7d8294d2a042,12829731,0,0x0,6
tick,0x7d8294d2a042,12830725,0,0x0,6
tick,0x7d8294d2a042,12831785,0,0x0,6
tick,0x7d8294d2a042,12832863,0,0x0,6
tick,0x7d8294d2a042,12833951,0,0x0,6
tick,0x7d8294d2a042,12835091,0,0x0,6
tick,0x7d8294d2a042,12836151,0,0x0,6
tick,0x7d8294d2a042,12837203,0,0x0,6
tick,0x7d8294d2a042,12838281,0,0x0,6
tick,0x7d8294d2a042,12839342,0,0x0,6
tick,0x7d8294d2a042,12840395,0,0x0,6
tick,0x7d8294d2a042,12841482,0,0x0,6
tick,0x7d8294d2a042,12842473,0,0x0,6
tick,0x7d8294d2a042,12843624,0,0x0,6
tick,0x7d8294d2a042,12844648,0,0x0,6
tick,0x7d8294d2a042,12845718,0,0x0,6
tick,0x7d8294d2a042,12846731,0,0x0,6
tick,0x7d8294d2a042,12847771,0,0x0,6
tick,0x7d8294d2a042,12848824,0,0x0,6
tick,0x7d8294d2a042,12849969,0,0x0,6
tick,0x7d8294d2a042,12850976,0,0x0,6
tick,0x7d8294d2a042,12852142,0,0x0,6
tick,0x7d8294d2a042,12853200,0,0x0,6
tick,0x7d8294d2a042,12854283,0,0x0,6
tick,0x7d8294d2a042,12855268,0,0x0,6
tick,0x7d8294d2a042,12856411,0,0x0,6
tick,0x7d8294d2a042,12857427,0,0x0,6
tick,0x7d8294d2a042,12858574,0,0x0,6
tick,0x7d8294d2a042,12859567,0,0x0,6
tick,0x7d8294d2a042,12860709,0,0x0,6
tick,0x7d8294d2a042,12861784,0,0x0,6
tick,0x7d8294d2a042,12862859,0,0x0,6
tick,0x7d8294d2a042,12863972,0,0x0,6
tick,0x7d8294d2a042,12865056,0,0x0,6
tick,0x7d8294d2a042,12866067,0,0x0,6
tick,0x7d8294d2a042,12867161,0,0x0,6
tick,0x7d8294d2a042,12868141,0,0x0,6
tick,0x7d8294d2a042,12869212,0,0x0,6
tick,0x7d8294d2a042,12870354,0,0x0,6
tick,0x7d8294d2a042,12871340,0,0x0,6
tick,0x7d8294d2a042,12872375,0,0x0,6
tick,0x7d8294d2a042,12873543,0,0x0,6
tick,0x7d8294d2a042,12874592,0,0x0,6
tick,0x7d8294d2a042,12875580,0,0x0,6
tick,0x7d8294d2a042,12876722,0,0x0,6
tick,0x7d8294d2a042,12877762,0,0x0,6
tick,0x7d8294d2a042,12878831,0,0x0,6
tick,0x7d8294d2a042,12879891,0,0x0,6
tick,0x7d8294d2a042,12880974,0,0x0,6
tick,0x7d8294d2a042,12882058,0,0x0,6
tick,0x7d8294d2a042,12883120,0,0x0,6
tick,0x7d8294d2a042,12884128,0,0x0,6
tick,0x7d8294d2a042,12885204,0,0x0,6
tick,0x7d8294d2a042,12886364,0,0x0,6
tick,0x7d8294d2a042,12887445,0,0x0,6
tick,0x7d8294d2a042,12888520,0,0x0,6
tick,0x7d8294d2a042,12889563,0,0x0,6
tick,0x7d8294d2a042,12890663,0,0x0,6
tick,0x7d8294d2a042,12891593,0,0x0,6
tick,0x7d8294d2a042,12892759,0,0x0,6
tick,0x7d8294d2a042,12893813,0,0x0,6
tick,0x7d8294d2a042,12894855,0,0x0,6
tick,0x7d8294d2a042,12895936,0,0x0,6
tick,0x7d8294d2a042,12896998,0,0x0,6
tick,0x7d8294d2a042,12898067,0,0x0,6
tick,0x7d8294d2a042,12899154,0,0x0,6
tick,0x7d8294d2a042,12900144,0,0x0,6
tick,0x7d8294d2a042,12901224,0,0x0,6
tick,0x7d8294d2a042,12902269,0,0x0,6
tick,0x7d8294d2a042,12903327,0,0x0,6
tick,0x7d8294d2a042,12904459,0,0x0,6
tick,0x7d8294d2a042,12905536,0,0x0,6
tick,0x7d8294d2a042,12906509,0,0x0,6
tick,0x7d8294d2a042,12907558,0,0x0,6
tick,0x7d8294d2a042,12908740,0,0x0,6
tick,0x7d8294d2a042,12909820,0,0x0,6
tick,0x7d8294d2a042,12910874,0,0x0,6
tick,0x7d8294d2a042,12911949,0,0x0,6
tick,0x7d8294d2a042,12913062,0,0x0,6
tick,0x7d8294d2a042,12914134,0,0x0,6
tick,0x7d8294d2a042,12915195,0,0x0,6
tick,0x7d8294d2a042,12916212,0,0x0,6
tick,0x7d8294d2a042,12917242,0,0x0,6
tick,0x7d8294d2a042,12918381,0,0x0,6
tick,0x7d8294d2a042,12919458,0,0x0,6
tick,0x7d8294d2a042,12920481,0,0x0,6
tick,0x7d8294d2a042,12921546,0,0x0,6
tick,0x7d8294d2a042,12922600,0,0x0,6
tick,0x7d8294d2a042,12923594,0,0x0,6
tick,0x7d8294d2a042,12924705,0,0x0,6
tick,0x7d8294d2a042,12925761,0,0x0,6
tick,0x7d8294d2a042,12926831,0,0x0,6
tick,0x7d8294d2a042,12927829,0,0x0,6
tick,0x7d8294d2a042,12928859,0,0x0,6
tick,0x7d8294d2a042,12929960,0,0x0,6
tick,0x7d8294d2a042,12931109,0,0x0,6
tick,0x7d8294d2a042,12932078,0,0x0,6
tick,0x7d8294d2a042,12933156,0,0x0,6
tick,0x7d8294d2a042,12934297,0,0x0,6
tick,0x7d8294d2a042,12935369,0,0x0,6
tick,0x7d8294d2a042,12936408,0,0x0,6
tick,0x7d8294d2a042,12937404,0,0x0,6
tick,0x7d8294d2a042,12938448,0,0x0,6
tick,0x7d8294d2a042,12939475,0,0x0,6
tick,0x7d8294d2a042,12940646,0,0x0,6
tick,0x7d8294d2a042,12941719,0,0x0,6
tick,0x7d8294d2a042,12942810,0,0x0,6
tick,0x7d8294d2a042,12943891,0,0x0,6
tick,0x7d8294d2a042,12944925,0,0x0,6
tick,0x7d8294d2a042,12945997,0,0x0,6
tick,0x7d8294d2a042,12947125,0,0x0,6
tick,0x7d8294d2a042,12948057,0,0x0,6
tick,0x7d8294d2a042,12949108,0,0x0,6
tick,0x7d8294d2a042,12950187,0,0x0,6
tick,0x7d8294d2a042,12951265,0,0x0,6
tick,0x7d8294d2a042,12952394,0,0x0,6
tick,0x7d8294d2a042,12953376,0,0x0,6
tick,0x7d8294d2a042,12954545,0,0x0,6
tick,0x7d8294d2a042,12955500,0,0x0,6
tick,0x7d8294d2a042,12956662,0,0x0,6
tick,0x7d8294d2a042,12957731,0,0x0,6
tick,0x7d8294d2a042,12958702,0,0x0,6
tick,0x7d8294d2a042,12959756,0,0x0,6
tick,0x7d8294d2a042,12960841,0,0x0,6
tick,0x7d8294d2a042,12961975,0,0x0,6
tick,0x7d8294d2a042,12962989,0,0x0,6
tick,0x7d8294d2a042,12964142,0,0x0,6
tick,0x7d8294d2a042,12965238,0,0x0,6
tick,0x7d8294d2a042,12966286,0,0x0,6
tick,0x7d8294d2a042,12967297,0,0x0,6
tick,0x7d8294d2a042,12968443,0,0x0,6
tick,0x7d8294d2a042,12969418,0,0x0,6
tick,0x7d8294d2a042,12970558,0,0x0,6
tick,0x7d8294d2a042,12971500,0,0x0,6
tick,0x7d8294d2a042,12972658,0,0x0,6
tick,0x7d8294d2a042,12973720,0,0x0,6
tick,0x7d8294d2a042,12974771,0,0x0,6
tick,0x7d8294d2a042,12975810,0,0x0,6
tick,0x7d8294d2a042,12976870,0,0x0,6
tick,0x7d8294d2a042,12977955,0,0x0,6
tick,0x7d8294d2a042,12979005,0,0x0,6
tick,0x7d8294d2a042,12979973,0,0x0,6
tick,0x7d8294d2a042,12981053,0,0x0,6
tick,0x7d8294d2a042,12982110,0,0x0,6
tick,0x7d8294d2a042,12983257,0,0x0,6
tick,0x7d8294d2a042,12984316,0,0x0,6
tick,0x7d8294d2a042,12985363,0,0x0,6
tick,0x7d8294d2a042,12986419,0,0x0,6
tick,0x7d8294d2a042,12987499,0,0x0,6
tick,0x7d8294d2a042,12988549,0,0x0,6
tick,0x7d8294d2a042,12989643,0,0x0,6
tick,0x7d8294d2a042,12990680,0,0x0,6
tick,0x7d8294d2a042,12991700,0,0x0,6
tick,0x7d8294d2a042,12992815,0,0x0,6
tick,0x7d8294d2a042,12993866,0,0x0,6
tick,0x7d8294d2a042,12994933,0,0x0,6
tick,0x7d8294d2a042,12995985,0,0x0,6
tick,0x7d8294d2a042,12997109,0,0x0,6
tick,0x7d8294d2a042,12998073,0,0x0,6
tick,0x7d8294d2a042,12999126,0,0x0,6
tick,0x7d8294d2a042,13000200,0,0x0,6
tick,0x7d8294d2a042,13001254,0,0x0,6
tick,0x7d8294d2a042,13002403,0,0x0,6
tick,0x7d8294d2a042,13003448,0,0x0,6
tick,0x7d8294d2a042,13004524,0,0x0,6
tick,0x7d8294d2a042,13005594,0,0x0,6
tick,0x7d8294d2a042,13006672,0,0x0,6
tick,0x7d8294d2a042,13007623,0,0x0,6
tick,0x7d8294d2a042,13008778,0,0x0,6
tick,0x7d8294d2a042,13009845,0,0x0,6
tick,0x7d8294d2a042,13010921,0,0x0,6
tick,0x7d8294d2a042,13011968,0,0x0,6
tick,0x7d8294d2a042,13013024,0,0x0,6
tick,0x7d8294d2a042,13014118,0,0x0,6
tick,0x7d8294d2a042,13015155,0,0x0,6
tick,0x7d8294d2a042,13016126,0,0x0,6
tick,0x7d8294d2a042,13017287,0,0x0,6
tick,0x7d8294d2a042,13018350,0,0x0,6
tick,0x7d8294d2a042,13019423,0,0x0,6
tick,0x7d8294d2a042,13020464,0,0x0,6
tick,0x7d8294d2a042,13021545,0,0x0,6
tick,0x7d8294d2a042,13022541,0,0x0,6
tick,0x7d8294d2a042,13023577,0,0x0,6
tick,0x7d8294d2a042,13024754,0,0x0,6
tick,0x7d8294d2a042,13025826,0,0x0,6
tick,0x7d8294d2a042,13026923,0,0x0,6
tick,0x7d8294d2a042,13028020,0,0x0,6
tick,0x7d8294d2a042,13029032,0,0x0,6
tick,0x7d8294d2a042,13030142,0,0x0,6
tick,0x7d8294d2a042,13031170,0,0x0,6
tick,0x7d8294d2a042,13032153,0,0x0,6
tick,0x7d8294d2a042,13033229,0,0x0,6
tick,0x7d8294d2a042,13034287,0,0x0,6
tick,0x7d8294d2a042,13035336,0,0x0,6
tick,0x7d8294d2a042,13036471,0,0x0,6
tick,0x7d8294d2a042,13037520,0,0x0,6
tick,0x7d8294d2a042,13038577,0,0x0,6
tick,0x7d8294d2a042,13039580,0,0x0,6
tick,0x7d8294d2a042,13040699,0,0x0,6
tick,0x7d8294d2a042,13041762,0,0x0,6
tick,0x7d8294d2a042,13042736,0,0x0,6
tick,0x7d8294d2a042,13043811,0,0x0,6
tick,0x7d8294d2a042,13044902,0,0x0,6
tick,0x7d8294d2a042,13046018,0,0x0,6
tick,0x7d8294d2a042,13047078,0,0x0,6
tick,0x7d8294d2a042,13048147,0,0x0,6
tick,0x7d8294d2a042,13049205,0,0x0,6
tick,0x7d8294d2a042,13050259,0,0x0,6
tick,0x7d8294d2a042,13051326,0,0x0,6
tick,0x7d8294d2a042,13052419,0,0x0,6
tick,0x7d8294d2a042,13053456,0,0x0,6
tick,0x7d8294d2a042,13054441,0,0x0,6
tick,0x7d8294d2a042,13055472,0,0x0,6
tick,0x7d8294d2a042,13056627,0,0x0,6
tick,0x7d8294d2a042,13057677,0,0x0,6
tick,0x7d8294d2a042,13058652,0,0x0,6
tick,0x7d8294d2a042,13059725,0,0x0,6
tick,0x7d8294d2a042,13060838,0,0x0,6
tick,0x7d8294d2a042,13061890,0,0x0,6
tick,0x7d8294d2a042,13062942,0,0x0,6
tick,0x7d8294d2a042,13063998,0,0x0,6
tick,0x7d8294d2a042,13065058,0,0x0,6
tick,0x7d8294d2a042,13066099,0,0x0,6
tick,0x7d8294d2a042,13067175,0,0x0,6
tick,0x7d8294d2a042,13068167,0,0x0,6
tick,0x7d8294d2a042,13069317,0,0x0,6
tick,0x7d8294d2a042,13070392,0,0x0,6
tick,0x7d8294d2a042,13071457,0,0x0,6
tick,0x7d8294d2a042,13072498,0,0x0,6
tick,0x7d8294d2a042,13073549,0,0x0,6
tick,0x7d8294d2a042,13074607,0,0x0,6
tick,0x7d8294d2a042,13075620,0,0x0,6
tick,0x7d8294d2a042,13076717,0,0x0,6
tick,0x7d8294d2a042,13077763,0,0x0,6
tick,0x7d8294d2a042,13078821,0,0x0,6
tick,0x7d8294d2a042,13079873,0,0x0,6
tick,0x7d8294d2a042,13080859,0,0x0,6
tick,0x7d8294d2a042,13081912,0,0x0,6
tick,0x7d8294d2a042,13082967,0,0x0,6
tick,0x7d8294d2a042,13084102,0,0x0,6
tick,0x7d8294d2a042,13085160,0,0x0,6
tick,0x7d8294d2a042,13086227,0,0x0,6
tick,0x7d8294d2a042,13087280,0,0x0,6
tick,0x7d8294d2a042,13088340,0,0x0,6
tick,0x7d8294d2a042,13089397,0,0x0,6
tick,0x7d8294d2a042,13090375,0,0x0,6
tick,0x7d8294d2a042,13091395,0,0x0,6
tick,0x7d8294d2a042,13092524,0,0x0,6
tick,0x7d8294d2a042,13093595,0,0x0,6
tick,0x7d8294d2a042,13094632,0,0x0,6
tick,0x7d8294d2a042,13095692,0,0x0,6
tick,0x7d8294d2a042,13096669,0,0x0,6
tick,0x7d8294d2a042,13097791,0,0x0,6
tick,0x7d8294d2a042,13098852,0,0x0,6
tick,0x7d8294d2a042,13099911,0,0x0,6
tick,0x7d8294d2a042,13100959,0,0x0,6
tick,0x7d8294d2a042,13102011,0,0x0,6
tick,0x7d8294d2a042,13103097,0,0x0,6
tick,0x7d8294d2a042,13104177,0,0x0,6
tick,0x7d8294d2a042,13105249,0,0x0,6
tick,0x7d8294d2a042,13106332,0,0x0,6
tick,0x7d8294d2a042,13107430,0,0x0,6
tick,0x7d8294d2a042,13108492,0,0x0,6
tick,0x7d8294d2a042,13109573,0,0x0,6
tick,0x7d8294d2a042,13110657,0,0x0,6
tick,0x7d8294d2a042,13111655,0,0x0,6
tick,0x7d8294d2a042,13112762,0,0x0,6
tick,0x7d8294d2a042,13113811,0,0x0,6
tick,0x7d8294d2a042,13114883,0,0x0,6
tick,0x7d8294d2a042,13115961,0,0x0,6
tick,0x7d8294d2a042,13117020,0,0x0,6
tick,0x7d8294d2a042,13118097,0,0x0,6
tick,0x7d8294d2a042,13119147,0,0x0,6
tick,0x7d8294d2a042,13120220,0,0x0,6
tick,0x7d8294d2a042,13121297,0,0x0,6
tick,0x7d8294d2a042,13122384,0,0x0,6
tick,0x7d8294d2a042,13123470,0,0x0,6
tick,0x7d8294d2a042,13124543,0,0x0,6
tick,0x7d8294d2a042,13125524,0,0x0,6
tick,0x7d8294d2a042,13126584,0,0x0,6
tick,0x7d8294d2a042,13127663,0,0x0,6
tick,0x7d8294d2a042,13128799,0,0x0,6
tick,0x7d8294d2a042,13129838,0,0x0,6
tick,0x7d8294d2a042,13130913,0,0x0,6
tick,0x7d8294d2a042,13131972,0,0x0,6
tick,0x7d8294d2a042,13133034,0,0x0,6
tick,0x7d8294d2a042,13134100,0,0x0,6
tick,0x7d8294d2a042,13135169,0,0x0,6
tick,0x7d8294d2a042,13136175,0,0x0,6
tick,0x7d8294d2a042,13137323,0,0x0,6
tick,0x7d8294d2a042,13138404,0,0x0,6
tick,0x7d8294d2a042,13139501,0,0x0,6
tick,0x7d8294d2a042,13140560,0,0x0,6
tick,0x7d8294d2a042,13141658,0,0x0,6
tick,0x7d8294d2a042,13142729,0,0x0,6
tick,0x7d8294d2a042,13143704,0,0x0,6
tick,0x7d8294d2a042,13144839,0,0x0,6
tick,0x7d8294d2a042,13145917,0,0x0,6
tick,0x7d8294d2a042,13147004,0,0x0,6
tick,0x7d8294d2a042,13148084,0,0x0,6
tick,0x7d8294d2a042,13149146,0,0x0,6
tick,0x7d8294d2a042,13150184,0,0x0,6
tick,0x7d8294d2a042,13151241,0,0x0,6
tick,0x7d8294d2a042,13152244,0,0x0,6
tick,0x7d8294d2a042,13153375,0,0x0,6
tick,0x7d8294d2a042,13154377,0,0x0,6
tick,0x7d8294d2a042,13155414,0,0x0,6
tick,0x7d8294d2a042,13156554,0,0x0,6
tick,0x7d8294d2a042,13157608,0,0x0,6
tick,0x7d8294d2a042,13158691,0,0x0,6
tick,0x7d8294d2a042,13159724,0,0x0,6
tick,0x7d8294d2a042,13160823,0,0x0,6
tick,0x7d8294d2a042,13161871,0,0x0,6
tick,0x7d8294d2a042,13162931,0,0x0,6
tick,0x7d8294d2a042,13163979,0,0x0,6
tick,0x7d8294d2a042,13165060,0,0x0,6
tick,0x7d8294d2a042,13166128,0,0x0,6
tick,0x7d8294d2a042,13167183,0,0x0,6
tick,0x7d8294d2a042,13168172,0,0x0,6
tick,0x7d8294d2a042,13169319,0,0x0,6
tick,0x7d8294d2a042,13170341,0,0x0,6
tick,0x7d8294d2a042,13171498,0,0x0,6
tick,0x7d8294d2a042,13172494,0,0x0,6
tick,0x7d8294d2a042,13173565,0,0x0,6
tick,0x7d8294d2a042,13174646,0,0x0,6
tick,0x7d8294d2a042,13175776,0,0x0,6
tick,0x7d8294d2a042,13176872,0,0x0,6
tick,0x7d8294d2a042,13178008,0,0x0,6
tick,0x7d8294d2a042,13179154,0,0x0,6
tick,0x7d8294d2a042,13180225,0,0x0,6
tick,0x7d8294d2a042,13181318,0,0x0,6
tick,0x7d8294d2a042,13182544,0,0x0,6
tick,0x7d8294d2a042,13183495,0,0x0,6
tick,0x7d8294d2a042,13184666,0,0x0,6
tick,0x7d8294d2a042,13185891,0,0x0,6
tick,0x7d8294d2a042,13187013,0,0x0,6
tick,0x7d8294d2a042,13188129,0,0x0,6
tick,0x7d8294d2a042,13189265,0,0x0,6
tick,0x7d8294d2a042,13190347,0,0x0,6
tick,0x7d8294d2a042,13191529,0,0x0,6
tick,0x7d8294d2a042,13192731,0,0x0,6
tick,0x7d8294d2a042,13193890,0,0x0,6
tick,0x7d8294d2a042,13195035,0,0x0,6
tick,0x7d8294d2a042,13196102,0,0x0,6
tick,0x7d8294d2a042,13197262,0,0x0,6
tick,0x7d8294d2a042,13198421,0,0x0,6
tick,0x7d8294d2a042,13199563,0,0x0,6
tick,0x7d8294d2a042,13200755,0,0x0,6
tick,0x7d8294d2a042,13201814,0,0x0,6
tick,0x7d8294d2a042,13202960,0,0x0,6
tick,0x7d8294d2a042,13204110,0,0x0,6
tick,0x7d8294d2a042,13205270,0,0x0,6
tick,0x7d8294d2a042,13206422,0,0x0,6
tick,0x7d8294d2a042,13207554,0,0x0,6
tick,0x7d8294d2a042,13208731,0,0x0,6
tick,0x7d8294d2a042,13209877,0,0x0,6
tick,0x7d8294d2a042,13210966,0,0x0,6
tick,0x7d8294d2a042,13212037,0,0x0,6
tick,0x7d8294d2a042,13213203,0,0x0,6
tick,0x7d8294d2a042,13214424,0,0x0,6
tick,0x7d8294d2a042,13215562,0,0x0,6
tick,0x7d8294d2a042,13216747,0,0x0,6
tick,0x7d8294d2a042,13217892,0,0x0,6
tick,0x7d8294d2a042,13219044,0,0x0,6
tick,0x7d8294d2a042,13220123,0,0x0,6
tick,0x7d8294d2a042,13221274,0,0x0,6
tick,0x7d8294d2a042,13222359,0,0x0,6
tick,0x7d8294d2a042,13223550,0,0x0,6
tick,0x7d8294d2a042,13224757,0,0x0,6
tick,0x7d8294d2a042,13225905,0,0x0,6
tick,0x7d8294d2a042,13227042,0,0x0,6
tick,0x7d8294d2a042,13228124,0,0x0,6
tick,0x7d8294d2a042,13229279,0,0x0,6
tick,0x7d8294d2a042,13230426,0,0x0,6
tick,0x7d8294d2a042,13231554,0,0x0,6
tick,0x7d8294d2a042,13232744,0,0x0,6
tick,0x7d8294d2a042,13233901,0,0x0,6
tick,0x7d8294d2a042,13235065,0,0x0,6
tick,0x7d8294d2a042,13236140,0,0x0,6
tick,0x7d8294d2a042,13237298,0,0x0,6
tick,0x7d8294d2a042,13238463,0,0x0,6
tick,0x7d8294d2a042,13239562,0,0x0,6
tick,0x7d8294d2a042,13240749,0,0x0,6
tick,0x7d8294d2a042,13241910,0,0x0,6
tick,0x7d8294d2a042,13243066,0,0x0,6
tick,0x7d8294d2a042,13244137,0,0x0,6
tick,0x7d8294d2a042,13245293,0,0x0,6
tick,0x7d8294d2a042,13246449,0,0x0,6
tick,0x7d8294d2a042,13247556,0,0x0,6
tick,0x7d8294d2a042,13248730,0,0x0,6
tick,0x7d8294d2a042,13249889,0,0x0,6
tick,0x7d8294d2a042,13251043,0,0x0,6
tick,0x7d8294d2a042,13252117,0,0x0,6
tick,0x7d8294d2a042,13253268,0,0x0,6
tick,0x7d8294d2a042,13254423,0,0x0,6
tick,0x7d8294d2a042,13255508,0,0x0,6
tick,0x7d8294d2a042,13256696,0,0x0,6
tick,0x7d8294d2a042,13257865,0,0x0,6
tick,0x7d8294d2a042,13259028,0,0x0,6
tick,0x7d8294d2a042,13260176,0,0x0,6
tick,0x7d8294d2a042,13261322,0,0x0,6
tick,0x7d8294d2a042,13262406,0,0x0,6
tick,0x7d8294d2a042,13263493,0,0x0,6
tick,0x7d8294d2a042,13264737,0,0x0,6
tick,0x7d8294d2a042,13265818,0,0x0,6
tick,0x7d8294d2a042,13266980,0,0x0,6
tick,0x7d8294d2a042,13268122,0,0x0,6
tick,0x7d8294d2a042,13269275,0,0x0,6
tick,0x7d8294d2a042,13270360,0,0x0,6
tick,0x7d8294d2a042,13271500,0,0x0,6
tick,0x7d8294d2a042,13272749,0,0x0,6
tick,0x7d8294d2a042,13273824,0,0x0,6
tick,0x7d8294d2a042,13275062,0,0x0,6
tick,0x7d8294d2a042,13276138,0,0x0,6
tick,0x7d8294d2a042,13277290,0,0x0,6
tick,0x7d8294d2a042,13278436,0,0x0,6
tick,0x7d8294d2a042,13279556,0,0x0,6
tick,0x7d8294d2a042,13280743,0,0x0,6
tick,0x7d8294d2a042,13281890,0,0x0,6
tick,0x7d8294d2a042,13282975,0,0x0,6
tick,0x7d8294d2a042,13284052,0,0x0,6
tick,0x7d8294d2a042,13285212,0,0x0,6
tick,0x7d8294d2a042,13286361,0,0x0,6
tick,0x7d8294d2a042,13287487,0,0x0,6
tick,0x7d8294d2a042,13288731,0,0x0,6
tick,0x7d8294d2a042,13289870,0,0x0,6
tick,0x7d8294d2a042,13291016,0,0x0,6
tick,0x7d8294d2a042,13292025,0,0x0,6
tick,0x7d8294d2a042,13293187,0,0x0,6
tick,0x7d8294d2a042,13294335,0,0x0,6
tick,0x7d8294d2a042,13295560,0,0x0,6
tick,0x7d8294d2a042,13296716,0,0x0,6
tick,0x7d8294d2a042,13297850,0,0x0,6
tick,0x7d8294d2a042,13299001,0,0x0,6
tick,0x7d8294d2a042,13300077,0,0x0,6
tick,0x7d8294d2a042,13301170,0,0x0,6
tick,0x7d8294d2a042,13302391,0,0x0,6
tick,0x7d8294d2a042,13303445,0,0x0,6
tick,0x7d8294d2a042,13304632,0,0x0,6
tick,0x7d8294d2a042,13305840,0,0x0,6
tick,0x7d8294d2a042,13306993,0,0x0,6
tick,0x7d8294d2a042,13308072,0,0x0,6
tick,0x7d8294d2a042,13309242,0,0x0,6
tick,0x7d8294d2a042,13310382,0,0x0,6
tick,0x7d8294d2a042,13311476,0,0x0,6
tick,0x7d8294d2a042,13312686,0,0x0,6
tick,0x7d8294d2a042,13313777,0,0x0,6
tick,0x7d8294d2a042,13314921,0,0x0,6
tick,0x7d8294d2a042,13316067,0,0x0,6
tick,0x7d8294d2a042,13317229,0,0x0,6
tick,0x7d8294d2a042,13318383,0,0x0,6
tick,0x7d8294d2a042,13319506,0,0x0,6
tick,0x7d8294d2a042,13320678,0,0x0,6
tick,0x7d8294d2a042,13321763,0,0x0,6
tick,0x7d8294d2a042,13322908,0,0x0,6
tick,0x7d8294d2a042,13323985,0,0x0,6
tick,0x7d8294d2a042,13325152,0,0x0,6
tick,0x7d8294d2a042,13326370,0,0x0,6
tick,0x7d8294d2a042,13327531,0,0x0,6
tick,0x7d8294d2a042,13328611,0,0x0,6
tick,0x7d8294d2a042,13329841,0,0x0,6
tick,0x7d8294d2a042,13330971,0,0x0,6
tick,0x7d8294d2a042,13331979,0,0x0,6
tick,0x7d8294d2a042,13333128,0,0x0,6
tick,0x7d8294d2a042,13334280,0,0x0,6
tick,0x7d8294d2a042,13335504,0,0x0,6
tick,0x7d8294d2a042,13336663,0,0x0,6
tick,0x7d8294d2a042,13337815,0,0x0,6
tick,0x7d8294d2a042,13338970,0,0x0,6
tick,0x7d8294d2a042,13340064,0,0x0,6
tick,0x7d8294d2a042,13341138,0,0x0,6
tick,0x7d8294d2a042,13342345,0,0x0,6
tick,0x7d8294d2a042,13343498,0,0x0,6
tick,0x7d8294d2a042,13344664,0,0x0,6
tick,0x7d8294d2a042,13345737,0,0x0,6
tick,0x7d8294d2a042,13346951,0,0x0,6
tick,0x7d8294d2a042,13348030,0,0x0,6
tick,0x7d8294d2a042,13349197,0,0x0,6
tick,0x7d8294d2a042,13350353,0,0x0,6
tick,0x7d8294d2a042,13351501,0,0x0,6
tick,0x7d8294d2a042,13352655,0,0x0,6
tick,0x7d8294d2a042,13353797,0,0x0,6
tick,0x7d8294d2a042,13354943,0,0x0,6
tick,0x7d8294d2a042,13356025,0,0x0,6
tick,0x7d8294d2a042,13357173,0,0x0,6
tick,0x7d8294d2a042,13358317,0,0x0,6
tick,0x7d8294d2a042,13359469,0,0x0,6
tick,0x7d8294d2a042,13360550,0,0x0,6
tick,0x7d8294d2a042,13361624,0,0x0,6
tick,0x7d8294d2a042,13362782,0,0x0,6
tick,0x7d8294d2a042,13363857,0,0x0,6
tick,0x7d8294d2a042,13364998,0,0x0,6
tick,0x7d8294d2a042,13366164,0,0x0,6
tick,0x7d8294d2a042,13367299,0,0x0,6
tick,0x7d8294d2a042,13368451,0,0x0,6
tick,0x7d8294d2a042,13369519,0,0x0,6
tick,0x7d8294d2a042,13370678,0,0x0,6
tick,0x7d8294d2a042,13371708,0,0x0,6
tick,0x7d8294d2a042,13372818,0,0x0,6
tick,0x7d8294d2a042,13373982,0,0x0,6
tick,0x7d8294d2a042,13375132,0,0x0,6
tick,0x7d8294d2a042,13376210,0,0x0,6
tick,0x7d8294d2a042,13377292,0,0x0,6
tick,0x7d8294d2a042,13378438,0,0x0,6
tick,0x7d8294d2a042,13379495,0,0x0,6
tick,0x7d8294d2a042,13380680,0,0x0,6
tick,0x7d8294d2a042,13381852,0,0x0,6
tick,0x7d8294d2a042,13383069,0,0x0,6
tick,0x7d8294d2a042,13384136,0,0x0,6
tick,0x7d8294d2a042,13385300,0,0x0,6
tick,0x7d8294d2a042,13386453,0,0x0,6
tick,0x7d8294d2a042,13387578,0,0x0,6
tick,0x7d8294d2a042,13388731,0,0x0,6
tick,0x7d8294d2a042,13389882,0,0x0,6
tick,0x7d8294d2a042,13391044,0,0x0,6
tick,0x7d8294d2a042,13392031,0,0x0,6
tick,0x7d8294d2a042,13393190,0,0x0,6
tick,0x7d8294d2a042,13394341,0,0x0,6
tick,0x7d8294d2a042,13395494,0,0x0,6
tick,0x7d8294d2a042,13396719,0,0x0,6
tick,0x7d8294d2a042,13397874,0,0x0,6
tick,0x7d8294d2a042,13399037,0,0x0,6
tick,0x7d8294d2a042,13400112,0,0x0,6
tick,0x7d8294d2a042,13401265,0,0x0,6
tick,0x7d8294d2a042,13402346,0,0x0,6
tick,0x7d8294d2a042,13403548,0,0x0,6
tick,0x7d8294d2a042,13404750,0,0x0,6
tick,0x7d8294d2a042,13405890,0,0x0,6
tick,0x7d8294d2a042,13407046,0,0x0,6
tick,0x7d8294d2a042,13408117,0,0x0,6
tick,0x7d8294d2a042,13409276,0,0x0,6
tick,0x7d8294d2a042,13410423,0,0x0,6
tick,0x7d8294d2a042,13411560,0,0x0,6
tick,0x7d8294d2a042,13412738,0,0x0,6
tick,0x7d8294d2a042,13413811,0,0x0,6
tick,0x7d8294d2a042,13414962,0,0x0,6
tick,0x7d8294d2a042,13416128,0,0x0,6
tick,0x7d8294d2a042,13417263,0,0x0,6
tick,0x7d8294d2a042,13418338,0,0x0,6
tick,0x7d8294d2a042,13419477,0,0x0,6
tick,0x7d8294d2a042,13420709,0,0x0,6
tick,0x7d8294d2a042,13421889,0,0x0,6
tick,0x7d8294d2a042,13422984,0,0x0,6
tick,0x7d8294d2a042,13424076,0,0x0,6
tick,0x7d8294d2a042,13425219,0,0x0,6
tick,0x7d8294d2a042,13426438,0,0x0,6
tick,0x7d8294d2a042,13427550,0,0x0,6
tick,0x7d8294d2a042,13428666,0,0x0,6
tick,0x7d8294d2a042,13429812,0,0x0,6
tick,0x7d8294d2a042,13431051,0,0x0,6
tick,0x7d8294d2a042,13432030,0,0x0,6
tick,0x7d8294d2a042,13433190,0,0x0,6
tick,0x7d8294d2a042,13434349,0,0x0,6
tick,0x7d8294d2a042,13435573,0,0x0,6
tick,0x7d8294d2a042,13436652,0,0x0,6
tick,0x7d8294d2a042,13437657,0,0x0,6
tick,0x7d8294d2a042,13438827,0,0x0,6
tick,0x7d8294d2a042,13439969,0,0x0,6
tick,0x7d8294d2a042,13441053,0,0x0,6
tick,0x7d8294d2a042,13442276,0,0x0,6
tick,0x7d8294d2a042,13443442,0,0x0,6
tick,0x7d8294d2a042,13444585,0,0x0,6
tick,0x7d8294d2a042,13445669,0,0x0,6
tick,0x7d8294d2a042,13446750,0,0x0,6
tick,0x7d8294d2a042,13447818,0,0x0,6
tick,0x7d8294d2a042,13448969,0,0x0,6
tick,0x7d8294d2a042,13450116,0,0x0,6
tick,0x7d8294d2a042,13451263,0,0x0,6
tick,0x7d8294d2a042,13452339,0,0x0,6
tick,0x7d8294d2a042,13453491,0,0x0,6
tick,0x7d8294d2a042,13454638,0,0x0,6
tick,0x7d8294d2a042,13455657,0,0x0,6
tick,0x7d8294d2a042,13456851,0,0x0,6
tick,0x7d8294d2a042,13458008,0,0x0,6
tick,0x7d8294d2a042,13459156,0,0x0,6
tick,0x7d8294d2a042,13460225,0,0x0,6
tick,0x7d8294d2a042,13461239,0,0x0,6
tick,0x7d8294d2a042,13462459,0,0x0,6
tick,0x7d8294d2a042,13463570,0,0x0,6
tick,0x7d8294d2a042,13464734,0,0x0,6
tick,0x7d8294d2a042,13465905,0,0x0,6
tick,0x7d8294d2a042,13467042,0,0x0,6
tick,0x7d8294d2a042,13468123,0,0x0,6
tick,0x7d8294d2a042,13469277,0,0x0,6
tick,0x7d8294d2a042,13470366,0,0x0,6
tick,0x7d8294d2a042,13471578,0,0x0,6
tick,0x7d8294d2a042,13472782,0,0x0,6
tick,0x7d8294d2a042,13473923,0,0x0,6
tick,0x7d8294d2a042,13475061,0,0x0,6
tick,0x7d8294d2a042,13476153,0,0x0,6
tick,0x7d8294d2a042,13477301,0,0x0,6
tick,0x7d8294d2a042,13478456,0,0x0,6
tick,0x7d8294d2a042,13479551,0,0x0,6
tick,0x7d8294d2a042,13480744,0,0x0,6
tick,0x7d8294d2a042,13481936,0,0x0,6
tick,0x7d8294d2a042,13483065,0,0x0,6
tick,0x7d8294d2a042,13484118,0,0x0,6
tick,0x7d8294d2a042,13485278,0,0x0,6
tick,0x7d8294d2a042,13486447,0,0x0,6
tick,0x7d8294d2a042,13487566,0,0x0,6
tick,0x7d8294d2a042,13488674,0,0x0,6
tick,0x7d8294d2a042,13489839,0,0x0,6
tick,0x7d8294d2a042,13491084,0,0x0,6
tick,0x7d8294d2a042,13492155,0,0x0,6
tick,0x7d8294d2a042,13493266,0,0x0,6
tick,0x7d8294d2a042,13494411,0,0x0,6
tick,0x7d8294d2a042,13495560,0,0x0,6
tick,0x7d8294d2a042,13496739,0,0x0,6
tick,0x7d8294d2a042,13497897,0,0x0,6
tick,0x7d8294d2a042,13499054,0,0x0,6
tick,0x7d8294d2a042,13500145,0,0x0,6
tick,0x7d8294d2a042,13501278,0,0x0,6
tick,0x7d8294d2a042,13502429,0,0x0,6
tick,0x7d8294d2a042,13503592,0,0x0,6
tick,0x7d8294d2a042,13504793,0,0x0,6
tick,0x7d8294d2a042,13505950,0,0x0,6
tick,0x7d8294d2a042,13507112,0,0x0,6
tick,0x7d8294d2a042,13508166,0,0x0,6
tick,0x7d8294d2a042,13509325,0,0x0,6
tick,0x7d8294d2a042,13510420,0,0x0,6
tick,0x7d8294d2a042,13511520,0,0x0,6
tick,0x7d8294d2a042,13512785,0,0x0,6
tick,0x7d8294d2a042,13513932,0,0x0,6
tick,0x7d8294d2a042,13515086,0,0x0,6
tick,0x7d8294d2a042,13516164,0,0x0,6
tick,0x7d8294d2a042,13517251,0,0x0,6
tick,0x7d8294d2a042,13518407,0,0x0,6
tick,0x7d8294d2a042,13519484,0,0x0,6
tick,0x7d8294d2a042,13520710,0,0x0,6
tick,0x7d8294d2a042,13521793,0,0x0,6
tick,0x7d8294d2a042,13522946,0,0x0,6
tick,0x7d8294d2a042,13524112,0,0x0,6
tick,0x7d8294d2a042,13525278,0,0x0,6
tick,0x7d8294d2a042,13526440,0,0x0,6
tick,0x7d8294d2a042,13527564,0,0x0,6
tick,0x7d8294d2a042,13528757,0,0x0,6
tick,0x7d8294d2a042,13529910,0,0x0,6
tick,0x7d8294d2a042,13530995,0,0x0,6
tick,0x7d8294d2a042,13532070,0,0x0,6
tick,0x7d8294d2a042,13533264,0,0x0,6
tick,0x7d8294d2a042,13534513,0,0x0,6
tick,0x7d8294d2a042,13535554,0,0x0,6
tick,0x7d8294d2a042,13536769,0,0x0,6
tick,0x7d8294d2a042,13537906,0,0x0,6
tick,0x7d8294d2a042,13539067,0,0x0,6
tick,0x7d8294d2a042,13540052,0,0x0,6
tick,0x7d8294d2a042,13541229,0,0x0,6
tick,0x7d8294d2a042,13542386,0,0x0,6
tick,0x7d8294d2a042,13543563,0,0x0,6
tick,0x7d8294d2a042,13544753,0,0x0,6
tick,0x7d8294d2a042,13545910,0,0x0,6
tick,0x7d8294d2a042,13547068,0,0x0,6
tick,0x7d8294d2a042,13548151,0,0x0,6
tick,0x7d8294d2a042,13549304,0,0x0,6
tick,0x7d8294d2a042,13550380,0,0x0,6
tick,0x7d8294d2a042,13551550,0,0x0,6
tick,0x7d8294d2a042,13552756,0,0x0,6
tick,0x7d8294d2a042,13553893,0,0x0,6
tick,0x7d8294d2a042,13555042,0,0x0,6
tick,0x7d8294d2a042,13556134,0,0x0,6
tick,0x7d8294d2a042,13557284,0,0x0,6
tick,0x7d8294d2a042,13558510,0,0x0,6
tick,0x7d8294d2a042,13559562,0,0x0,6
tick,0x7d8294d2a042,13560769,0,0x0,6
tick,0x7d8294d2a042,13561860,0,0x0,6
tick,0x7d8294d2a042,13563031,0,0x0,6
tick,0x7d8294d2a042,13564199,0,0x0,6
tick,0x7d8294d2a042,13565340,0,0x0,6
tick,0x7d8294d2a042,13566498,0,0x0,6
tick,0x7d8294d2a042,13567589,0,0x0,6
tick,0x7d8294d2a042,13568752,0,0x0,6
tick,0x7d8294d2a042,13569830,0,0x0,6
tick,0x7d8294d2a042,13570981,0,0x0,6
tick,0x7d8294d2a042,13572050,0,0x0,6
tick,0x7d8294d2a042,13573218,0,0x0,6
tick,0x7d8294d2a042,13574445,0,0x0,6
tick,0x7d8294d2a042,13575599,0,0x0,6
tick,0x7d8294d2a042,13576757,0,0x0,6
tick,0x7d8294d2a042,13577919,0,0x0,6
tick,0x7d8294d2a042,13579077,0,0x0,6
tick,0x7d8294d2a042,13580079,0,0x0,6
tick,0x7d8294d2a042,13581227,0,0x0,6
tick,0x7d8294d2a042,13582384,0,0x0,6
tick,0x7d8294d2a042,13583577,0,0x0,6
tick,0x7d8294d2a042,13584736,0,0x0,6
tick,0x7d8294d2a042,13585895,0,0x0,6
tick,0x7d8294d2a042,13587046,0,0x0,6
tick,0x7d8294d2a042,13588136,0,0x0,6
tick,0x7d8294d2a042,13589206,0,0x0,6
tick,0x7d8294d2a042,13590370,0,0x0,6
tick,0x7d8294d2a042,13591550,0,0x0,6
tick,0x7d8294d2a042,13592593,0,0x0,6
tick,0x7d8294d2a042,13593819,0,0x0,6
tick,0x7d8294d2a042,13594951,0,0x0,6
tick,0x7d8294d2a042,13596028,0,0x0,6
tick,0x7d8294d2a042,13597090,0,0x0,6
tick,0x7d8294d2a042,13598235,0,0x0,6
tick,0x7d8294d2a042,13599402,0,0x0,6
tick,0x7d8294d2a042,13600471,0,0x0,6
tick,0x7d8294d2a042,13601504,0,0x0,6
tick,0x7d8294d2a042,13602637,0,0x0,6
tick,0x7d8294d2a042,13603650,0,0x0,6
tick,0x7d8294d2a042,13604778,0,0x0,6
tick,0x7d8294d2a042,13605849,0,0x0,6
tick,0x7d8294d2a042,13606929,0,0x0,6
tick,0x7d8294d2a042,13608002,0,0x0,6
tick,0x7d8294d2a042,13609170,0,0x0,6
tick,0x7d8294d2a042,13610251,0,0x0,6
tick,0x7d8294d2a042,13611383,0,0x0,6
tick,0x7d8294d2a042,13612533,0,0x0,6
tick,0x7d8294d2a042,13613599,0,0x0,6
tick,0x7d8294d2a042,13614691,0,0x0,6
tick,0x7d8294d2a042,13615686,0,0x0,6
tick,0x7d8294d2a042,13616810,0,0x0,6
tick,0x7d8294d2a042,13617901,0,0x0,6
tick,0x7d8294d2a042,13618983,0,0x0,6
tick,0x7d8294d2a042,13620075,0,0x0,6
tick,0x7d8294d2a042,13621146,0,0x0,6
tick,0x7d8294d2a042,13622256,0,0x0,6
tick,0x7d8294d2a042,13623319,0,0x0,6
tick,0x7d8294d2a042,13624453,0,0x0,6
tick,0x7d8294d2a042,13625527,0,0x0,6
tick,0x7d8294d2a042,13626556,0,0x0,6
tick,0x7d8294d2a042,13627566,0,0x0,6
tick,0x7d8294d2a042,13628861,0,0x0,6
tick,0x7d8294d2a042,13629975,0,0x0,6
tick,0x7d8294d2a042,13631112,0,0x0,6
tick,0x7d8294d2a042,13632194,0,0x0,6
tick,0x7d8294d2a042,13633278,0,0x0,6
tick,0x7d8294d2a042,13634416,0,0x0,6
tick,0x7d8294d2a042,13635507,0,0x0,6
tick,0x7d8294d2a042,13636746,0,0x0,6
tick,0x7d8294d2a042,13637828,0,0x0,6
tick,0x7d8294d2a042,13638973,0,0x0,6
tick,0x7d8294d2a042,13640127,0,0x0,6
tick,0x7d8294d2a042,13641281,0,0x0,6
tick,0x7d8294d2a042,13642426,0,0x0,6
tick,0x7d8294d2a042,13643562,0,0x0,6
tick,0x7d8294d2a042,13644725,0,0x0,6
tick,0x7d8294d2a042,13645813,0,0x0,6
tick,0x7d8294d2a042,13647029,0,0x0,6
tick,0x7d8294d2a042,13648096,0,0x0,6
tick,0x7d8294d2a042,13649263,0,0x0,6
tick,0x7d8294d2a042,13650402,0,0x0,6
tick,0x7d8294d2a042,13651467,0,0x0,6
tick,0x7d8294d2a042,13652687,0,0x0,6
tick,0x7d8294d2a042,13653844,0,0x0,6
tick,0x7d8294d2a042,13654992,0,0x0,6
tick,0x7d8294d2a042,13656070,0,0x0,6
tick,0x7d8294d2a042,13657226,0,0x0,6
tick,0x7d8294d2a042,13658369,0,0x0,6
tick,0x7d8294d2a042,13659474,0,0x0,6
tick,0x7d8294d2a042,13660689,0,0x0,6
tick,0x7d8294d2a042,13661844,0,0x0,6
tick,0x7d8294d2a042,13662996,0,0x0,6
tick,0x7d8294d2a042,13663999,0,0x0,6
tick,0x7d8294d2a042,13665161,0,0x0,6
tick,0x7d8294d2a042,13666402,0,0x0,6
tick,0x7d8294d2a042,13667554,0,0x0,6
tick,0x7d8294d2a042,13668806,0,0x0,6
tick,0x7d8294d2a042,13669951,0,0x0,6
tick,0x7d8294d2a042,13671065,0,0x0,6
tick,0x7d8294d2a042,13672190,0,0x0,6
tick,0x7d8294d2a042,13673310,0,0x0,6
tick,0x7d8294d2a042,13674386,0,0x0,6
tick,0x7d8294d2a042,13675507,0,0x0,6
tick,0x7d8294d2a042,13676746,0,0x0,6
tick,0x7d8294d2a042,13677992,0,0x0,6
tick,0x7d8294d2a042,13679046,0,0x0,6
tick,0x7d8294d2a042,13680230,0,0x0,6
tick,0x7d8294d2a042,13681329,0,0x0,6
tick,0x7d8294d2a042,13682426,0,0x0,6
tick,0x7d8294d2a042,13683565,0,0x0,6
tick,0x7d8294d2a042,13684763,0,0x0,6
tick,0x7d8294d2a042,13685898,0,0x0,6
tick,0x7d8294d2a042,13687153,0,0x0,6
tick,0x7d8294d2a042,13688231,0,0x0,6
tick,0x7d8294d2a042,13689398,0,0x0,6
tick,0x7d8294d2a042,13690553,0,0x0,6
tick,0x7d8294d2a042,13691489,0,0x0,6
tick,0x7d8294d2a042,13692540,0,0x0,6
tick,0x7d8294d2a042,13693780,0,0x0,6
tick,0x7d8294d2a042,13694962,0,0x0,6
tick,0x7d8294d2a042,13696048,0,0x0,6
tick,0x7d8294d2a042,13697189,0,0x0,6
tick,0x7d8294d2a042,13698332,0,0x0,6
tick,0x7d8294d2a042,13699478,0,0x0,6
tick,0x7d8294d2a042,13700632,0,0x0,6
tick,0x7d8294d2a042,13701717,0,0x0,6
tick,0x7d8294d2a042,13702819,0,0x0,6
tick,0x7d8294d2a042,13703852,0,0x0,6
tick,0x7d8294d2a042,13704996,0,0x0,6
tick,0x7d8294d2a042,13706007,0,0x0,6
tick,0x7d8294d2a042,13707150,0,0x0,6
tick,0x7d8294d2a042,13708336,0,0x0,6
tick,0x7d8294d2a042,13709556,0,0x0,6
tick,0x7d8294d2a042,13710704,0,0x0,6
tick,0x7d8294d2a042,13711763,0,0x0,6
tick,0x7d8294d2a042,13712920,0,0x0,6
tick,0x7d8294d2a042,13714049,0,0x0,6
tick,0x7d8294d2a042,13715138,0,0x0,6
tick,0x7d8294d2a042,13716148,0,0x0,6
tick,0x7d8294d2a042,13717225,0,0x0,6
tick,0x7d8294d2a042,13718539,0,0x0,6
tick,0x7d8294d2a042,13719680,0,0x0,6
tick,0x7d8294d2a042,13720823,0,0x0,6
tick,0x7d8294d2a042,13721953,0,0x0,6
tick,0x7d8294d2a042,13723111,0,0x0,6
tick,0x7d8294d2a042,13724146,0,0x0,6
tick,0x7d8294d2a042,13725289,0,0x0,6
tick,0x7d8294d2a042,13726473,0,0x0,6
tick,0x7d8294d2a042,13727572,0,0x0,6
tick,0x7d8294d2a042,13728844,0,0x0,6
tick,0x7d8294d2a042,13729951,0,0x0,6
tick,0x7d8294d2a042,13731107,0,0x0,6
tick,0x7d8294d2a042,13732190,0,0x0,6
tick,0x7d8294d2a042,13733357,0,0x0,6
tick,0x7d8294d2a042,13734456,0,0x0,6
tick,0x7d8294d2a042,13735608,0,0x0,6
tick,0x7d8294d2a042,13736860,0,0x0,6
tick,0x7d8294d2a042,13738006,0,0x0,6
tick,0x7d8294d2a042,13739107,0,0x0,6
tick,0x7d8294d2a042,13740220,0,0x0,6
tick,0x7d8294d2a042,13741349,0,0x0,6
tick,0x7d8294d2a042,13742496,0,0x0,6
tick,0x7d8294d2a042,13743570,0,0x0,6
tick,0x7d8294d2a042,13744788,0,0x0,6
tick,0x7d8294d2a042,13745907,0,0x0,6
tick,0x7d8294d2a042,13747019,0,0x0,6
tick,0x7d8294d2a042,13748248,0,0x0,6
tick,0x7d8294d2a042,13749333,0,0x0,6
tick,0x7d8294d2a042,13750427,0,0x0,6
tick,0x7d8294d2a042,13751470,0,0x0,6
tick,0x7d8294d2a042,13752593,0,0x0,6
tick,0x7d8294d2a042,13753607,0,0x0,6
tick,0x7d8294d2a042,13754762,0,0x0,6
tick,0x7d8294d2a042,13755923,0,0x0,6
tick,0x7d8294d2a042,13757064,0,0x0,6
tick,0x7d8294d2a042,13758216,0,0x0,6
tick,0x7d8294d2a042,13759290,0,0x0,6
tick,0x7d8294d2a042,13760446,0,0x0,6
tick,0x7d8294d2a042,13761521,0,0x0,6
tick,0x7d8294d2a042,13762615,0,0x0,6
tick,0x7d8294d2a042,13763657,0,0x0,6
tick,0x7d8294d2a042,13764819,0,0x0,6
tick,0x7d8294d2a042,13765899,0,0x0,6
tick,0x7d8294d2a042,13766970,0,0x0,6
tick,0x7d8294d2a042,13768052,0,0x0,6
tick,0x7d8294d2a042,13769129,0,0x0,6
tick,0x7d8294d2a042,13770288,0,0x0,6
tick,0x7d8294d2a042,13771368,0,0x0,6
tick,0x7d8294d2a042,13772519,0,0x0,6
tick,0x7d8294d2a042,13773610,0,0x0,6
tick,0x7d8294d2a042,13774683,0,0x0,6
tick,0x7d8294d2a042,13775662,0,0x0,6
tick,0x7d8294d2a042,13776810,0,0x0,6
tick,0x7d8294d2a042,13777966,0,0x0,6
tick,0x7d8294d2a042,13779043,0,0x0,6
tick,0x7d8294d2a042,13780117,0,0x0,6
tick,0x7d8294d2a042,13781148,0,0x0,6
tick,0x7d8294d2a042,13782232,0,0x0,6
tick,0x7d8294d2a042,13783201,0,0x0,6
tick,0x7d8294d2a042,13784345,0,0x0,6
tick,0x7d8294d2a042,13785469,0,0x0,6
tick,0x7d8294d2a042,13786550,0,0x0,6
tick,0x7d8294d2a042,13787550,0,0x0,6
tick,0x7d8294d2a042,13788665,0,0x0,6
tick,0x7d8294d2a042,13789849,0,0x0,6
tick,0x7d8294d2a042,13790978,0,0x0,6
tick,0x7d8294d2a042,13792054,0,0x0,6
tick,0x7d8294d2a042,13793143,0,0x0,6
tick,0x7d8294d2a042,13794150,0,0x0,6
tick,0x7d8294d2a042,13795229,0,0x0,6
tick,0x7d8294d2a042,13796380,0,0x0,6
tick,0x7d8294d2a042,13797451,0,0x0,6
tick,0x7d8294d2a042,13798521,0,0x0,6
tick,0x7d8294d2a042,13799575,0,0x0,6
tick,0x7d8294d2a042,13800736,0,0x0,6
tick,0x7d8294d2a042,13801872,0,0x0,6
tick,0x7d8294d2a042,13803042,0,0x0,6
tick,0x7d8294d2a042,13804108,0,0x0,6
tick,0x7d8294d2a042,13805125,0,0x0,6
tick,0x7d8294d2a042,13806273,0,0x0,6
tick,0x7d8294d2a042,13807407,0,0x0,6
tick,0x7d8294d2a042,13808659,0,0x0,6
tick,0x7d8294d2a042,13809787,0,0x0,6
tick,0x7d8294d2a042,13810942,0,0x0,6
tick,0x7d8294d2a042,13811997,0,0x0,6
tick,0x7d8294d2a042,13813155,0,0x0,6
tick,0x7d8294d2a042,13814298,0,0x0,6
tick,0x7d8294d2a042,13815386,0,0x0,6
tick,0x7d8294d2a042,13816463,0,0x0,6
tick,0x7d8294d2a042,13817547,0,0x0,6
tick,0x7d8294d2a042,13818704,0,0x0,6
tick,0x7d8294d2a042,13819845,0,0x0,6
tick,0x7d8294d2a042,13820997,0,0x0,6
tick,0x7d8294d2a042,13822146,0,0x0,6
tick,0x7d8294d2a042,13823298,0,0x0,6
tick,0x7d8294d2a042,13824519,0,0x0,6
tick,0x7d8294d2a042,13825533,0,0x0,6
tick,0x7d8294d2a042,13826692,0,0x0,6
tick,0x7d8294d2a042,13827881,0,0x0,6
tick,0x7d8294d2a042,13829022,0,0x0,6
tick,0x7d8294d2a042,13830169,0,0x0,6
tick,0x7d8294d2a042,13831283,0,0x0,6
tick,0x7d8294d2a042,13832450,0,0x0,6
tick,0x7d8294d2a042,13833574,0,0x0,6
tick,0x7d8294d2a042,13834700,0,0x0,6
tick,0x7d8294d2a042,13835681,0,0x0,6
tick,0x7d8294d2a042,13836853,0,0x0,6
tick,0x7d8294d2a042,13838003,0,0x0,6
tick,0x7d8294d2a042,13839132,0,0x0,6
tick,0x7d8294d2a042,13840185,0,0x0,6
tick,0x7d8294d2a042,13841318,0,0x0,6
tick,0x7d8294d2a042,13842492,0,0x0,6
tick,0x7d8294d2a042,13843608,0,0x0,6
tick,0x7d8294d2a042,13844671,0,0x0,6
tick,0x7d8294d2a042,13845755,0,0x0,6
tick,0x7d8294d2a042,13846914,0,0x0,6
tick,0x7d8294d2a042,13848028,0,0x0,6
tick,0x7d8294d2a042,13849178,0,0x0,6
tick,0x7d8294d2a042,13850205,0,0x0,6
tick,0x7d8294d2a042,13851298,0,0x0,6
tick,0x7d8294d2a042,13852464,0,0x0,6
tick,0x7d8294d2a042,13853530,0,0x0,6
tick,0x7d8294d2a042,13854660,0,0x0,6
tick,0x7d8294d2a042,13855659,0,0x0,6
tick,0x7d8294d2a042,13856739,0,0x0,6
tick,0x7d8294d2a042,13857817,0,0x0,6
tick,0x7d8294d2a042,13858908,0,0x0,6
tick,0x7d8294d2a042,13859985,0,0x0,6
tick,0x7d8294d2a042,13861072,0,0x0,6
tick,0x7d8294d2a042,13862219,0,0x0,6
tick,0x7d8294d2a042,13863298,0,0x0,6
tick,0x7d8294d2a042,13864457,0,0x0,6
tick,0x7d8294d2a042,13865458,0,0x0,6
tick,0x7d8294d2a042,13866533,0,0x0,6
tick,0x7d8294d2a042,13867642,0,0x0,6
tick,0x7d8294d2a042,13868721,0,0x0,6
tick,0x7d8294d2a042,13869784,0,0x0,6
tick,0x7d8294d2a042,13870872,0,0x0,6
tick,0x7d8294d2a042,13871940,0,0x0,6
tick,0x7d8294d2a042,13873035,0,0x0,6
tick,0x7d8294d2a042,13874118,0,0x0,6
tick,0x7d8294d2a042,13875202,0,0x0,6
tick,0x7d8294d2a042,13876267,0,0x0,6
tick,0x7d8294d2a042,13877350,0,0x0,6
tick,0x7d8294d2a042,13878465,0,0x0,6
tick,0x7d8294d2a042,13879574,0,0x0,6
tick,0x7d8294d2a042,13880679,0,0x0,6
tick,0x7d8294d2a042,13881756,0,0x0,6
tick,0x7d8294d2a042,13882890,0,0x0,6
tick,0x7d8294d2a042,13884007,0,0x0,6
tick,0x7d8294d2a042,13885167,0,0x0,6
tick,0x7d8294d2a042,13886305,0,0x0,6
tick,0x7d8294d2a042,13887483,0,0x0,6
tick,0x7d8294d2a042,13888584,0,0x0,6
tick,0x7d8294d2a042,13889595,0,0x0,6
tick,0x7d8294d2a042,13890754,0,0x0,6
tick,0x7d8294d2a042,13891881,0,0x0,6
tick,0x7d8294d2a042,13893037,0,0x0,6
tick,0x7d8294d2a042,13894191,0,0x0,6
tick,0x7d8294d2a042,13895284,0,0x0,6
tick,0x7d8294d2a042,13896376,0,0x0,6
tick,0x7d8294d2a042,13897566,0,0x0,6
tick,0x7d8294d2a042,13898664,0,0x0,6
tick,0x7d8294d2a042,13899721,0,0x0,6
tick,0x7d8294d2a042,13900859,0,0x0,6
tick,0x7d8294d2a042,13902010,0,0x0,6
tick,0x7d8294d2a042,13903127,0,0x0,6
tick,0x7d8294d2a042,13904192,0,0x0,6
tick,0x7d8294d2a042,13905263,0,0x0,6
tick,0x7d8294d2a042,13906469,0,0x0,6
tick,0x7d8294d2a042,13907598,0,0x0,6
tick,0x7d8294d2a042,13908814,0,0x0,6
tick,0x7d8294d2a042,13909859,0,0x0,6
tick,0x7d8294d2a042,13910908,0,0x0,6
tick,0x7d8294d2a042,13912007,0,0x0,6
tick,0x7d8294d2a042,13913167,0,0x0,6
tick,0x7d8294d2a042,13914313,0,0x0,6
tick,0x7d8294d2a042,13915431,0,0x0,6
tick,0x7d8294d2a042,13916506,0,0x0,6
tick,0x7d8294d2a042,13917591,0,0x0,6
tick,0x7d8294d2a042,13918684,0,0x0,6
tick,0x7d8294d2a042,13919884,0,0x0,6
tick,0x7d8294d2a042,13921033,0,0x0,6
tick,0x7d8294d2a042,13922069,0,0x0,6
tick,0x7d8294d2a042,13923146,0,0x0,6
tick,0x7d8294d2a042,13924227,0,0x0,6
tick,0x7d8294d2a042,13925361,0,0x0,6
tick,0x7d8294d2a042,13926514,0,0x0,6
tick,0x7d8294d2a042,13927608,0,0x0,6
tick,0x7d8294d2a042,13928807,0,0x0,6
tick,0x7d8294d2a042,13929929,0,0x0,6
tick,0x7d8294d2a042,13931055,0,0x0,6
tick,0x7d8294d2a042,13932205,0,0x0,6
tick,0x7d8294d2a042,13933311,0,0x0,6
tick,0x7d8294d2a042,13934486,0,0x0,6
tick,0x7d8294d2a042,13935580,0,0x0,6
tick,0x7d8294d2a042,13936788,0,0x0,6
tick,0x7d8294d2a042,13937934,0,0x0,6
tick,0x7d8294d2a042,13939049,0,0x0,6
tick,0x7d8294d2a042,13940171,0,0x0,6
tick,0x7d8294d2a042,13941338,0,0x0,6
tick,0x7d8294d2a042,13942484,0,0x0,6
tick,0x7d8294d2a042,13943601,0,0x0,6
tick,0x7d8294d2a042,13944779,0,0x0,6
tick,0x7d8294d2a042,13945933,0,0x0,6
tick,0x7d8294d2a042,13947039,0,0x0,6
tick,0x7d8294d2a042,13948161,0,0x0,6
tick,0x7d8294d2a042,13949344,0,0x0,6
tick,0x7d8294d2a042,13950498,0,0x0,6
tick,0x7d8294d2a042,13951602,0,0x0,6
tick,0x7d8294d2a042,13952815,0,0x0,6
tick,0x7d8294d2a042,13953942,0,0x0,6
tick,0x7d8294d2a042,13955055,0,0x0,6
tick,0x7d8294d2a042,13956198,0,0x0,6
tick,0x7d8294d2a042,13957331,0,0x0,6
tick,0x7d8294d2a042,13958377,0,0x0,6
tick,0x7d8294d2a042,13959457,0,0x0,6
tick,0x7d8294d2a042,13960540,0,0x0,6
tick,0x7d8294d2a042,13961628,0,0x0,6
tick,0x7d8294d2a042,13962705,0,0x0,6
tick,0x7d8294d2a042,13963888,0,0x0,6
tick,0x7d8294d2a042,13965062,0,0x0,6
tick,0x7d8294d2a042,13966217,0,0x0,6
tick,0x7d8294d2a042,13967322,0,0x0,6
tick,0x7d8294d2a042,13968472,0,0x0,6
tick,0x7d8294d2a042,13969588,0,0x0,6
tick,0x7d8294d2a042,13970577,0,0x0,6
tick,0x7d8294d2a042,13971642,0,0x0,6
tick,0x7d8294d2a042,13972836,0,0x0,6
tick,0x7d8294d2a042,13973985,0,0x0,6
tick,0x7d8294d2a042,13975020,0,0x0,6
tick,0x7d8294d2a042,13976128,0,0x0,6
tick,0x7d8294d2a042,13977223,0,0x0,6
tick,0x7d8294d2a042,13978386,0,0x0,6
tick,0x7d8294d2a042,13979565,0,0x0,6
tick,0x7d8294d2a042,13980709,0,0x0,6
tick,0x7d8294d2a042,13981813,0,0x0,6
tick,0x7d8294d2a042,13982892,0,0x0,6
tick,0x7d8294d2a042,13984068,0,0x0,6
tick,0x7d8294d2a042,13985124,0,0x0,6
tick,0x7d8294d2a042,13986215,0,0x0,6
tick,0x7d8294d2a042,13987293,0,0x0,6
tick,0x7d8294d2a042,13988456,0,0x0,6
tick,0x7d8294d2a042,13989547,0,0x0,6
tick,0x7d8294d2a042,13990668,0,0x0,6
tick,0x7d8294d2a042,13991698,0,0x0,6
tick,0x7d8294d2a042,13992861,0,0x0,6
tick,0x7d8294d2a042,13994072,0,0x0,6
tick,0x7d8294d2a042,13995179,0,0x0,6
tick,0x7d8294d2a042,13996280,0,0x0,6
tick,0x7d8294d2a042,13997383,0,0x0,6
tick,0x7d8294d2a042,13998531,0,0x0,6
tick,0x7d8294d2a042,13999622,0,0x0,6
tick,0x7d8294d2a042,14000814,0,0x0,6
tick,0x7d8294d2a042,14001945,0,0x0,6
tick,0x7d8294d2a042,14002983,0,0x0,6
tick,0x7d8294d2a042,14004079,0,0x0,6
tick,0x7d8294d2a042,14005157,0,0x0,6
tick,0x7d8294d2a042,14006364,0,0x0,6
tick,0x7d8294d2a042,14007538,0,0x0,6
tick,0x7d8294d2a042,14008684,0,0x0,6
tick,0x7d8294d2a042,14009799,0,0x0,6
tick,0x7d8294d2a042,14010884,0,0x0,6
tick,0x7d8294d2a042,14012066,0,0x0,6
tick,0x7d8294d2a042,14013185,0,0x0,6
tick,0x7d8294d2a042,14014336,0,0x0,6
tick,0x7d8294d2a042,14015357,0,0x0,6
tick,0x7d8294d2a042,14016526,0,0x0,6
tick,0x7d8294d2a042,14017591,0,0x0,6
tick,0x7d8294d2a042,14018655,0,0x0,6
tick,0x7d8294d2a042,14019709,0,0x0,6
tick,0x7d8294d2a042,14020763,0,0x0,6
tick,0x7d8294d2a042,14021843,0,0x0,6
tick,0x7d8294d2a042,14022924,0,0x0,6
tick,0x7d8294d2a042,14023974,0,0x0,6
tick,0x7d8294d2a042,14025022,0,0x0,6
tick,0x7d8294d2a042,14026086,0,0x0,6
tick,0x7d8294d2a042,14027193,0,0x0,6
tick,0x7d8294d2a042,14028231,0,0x0,6
tick,0x7d8294d2a042,14029206,0,0x0,6
tick,0x7d8294d2a042,14030279,0,0x0,6
tick,0x7d8294d2a042,14031353,0,0x0,6
tick,0x7d8294d2a042,14032497,0,0x0,6
tick,0x7d8294d2a042,14033579,0,0x0,6
tick,0x7d8294d2a042,14034595,0,0x0,6
tick,0x7d8294d2a042,14035624,0,0x0,6
tick,0x7d8294d2a042,14036779,0,0x0,6
tick,0x7d8294d2a042,14037842,0,0x0,6
tick,0x7d8294d2a042,14038900,0,0x0,6
tick,0x7d8294d2a042,14039961,0,0x0,6
tick,0x7d8294d2a042,14041026,0,0x0,6
tick,0x7d8294d2a042,14042183,0,0x0,6
tick,0x7d8294d2a042,14043297,0,0x0,6
tick,0x7d8294d2a042,14044355,0,0x0,6
tick,0x7d8294d2a042,14045378,0,0x0,6
tick,0x7d8294d2a042,14046520,0,0x0,6
tick,0x7d8294d2a042,14047558,0,0x0,6
tick,0x7d8294d2a042,14048727,0,0x0,6
tick,0x7d8294d2a042,14049763,0,0x0,6
tick,0x7d8294d2a042,14050842,0,0x0,6
tick,0x7d8294d2a042,14051919,0,0x0,6
tick,0x7d8294d2a042,14053004,0,0x0,6
tick,0x7d8294d2a042,14054137,0,0x0,6
tick,0x7d8294d2a042,14055269,0,0x0,6
tick,0x7d8294d2a042,14056292,0,0x0,6
tick,0x7d8294d2a042,14057441,0,0x0,6
tick,0x7d8294d2a042,14058530,0,0x0,6
tick,0x7d8294d2a042,14059568,0,0x0,6
tick,0x7d8294d2a042,14060568,0,0x0,6
tick,0x7d8294d2a042,14061761,0,0x0,6
tick,0x7d8294d2a042,14062846,0,0x0,6
tick,0x7d8294d2a042,14063931,0,0x0,6
tick,0x7d8294d2a042,14065030,0,0x0,6
tick,0x7d8294d2a042,14066098,0,0x0,6
tick,0x7d8294d2a042,14067248,0,0x0,6
tick,0x7d8294d2a042,14068332,0,0x0,6
tick,0x7d8294d2a042,14069413,0,0x0,6
tick,0x7d8294d2a042,14070553,0,0x0,6
tick,0x7d8294d2a042,14071499,0,0x0,6
tick,0x7d8294d2a042,14072774,0,0x0,6
tick,0x7d8294d2a042,14073940,0,0x0,6
tick,0x7d8294d2a042,14075091,0,0x0,6
tick,0x7d8294d2a042,14076170,0,0x0,6
tick,0x7d8294d2a042,14077244,0,0x0,6
tick,0x7d8294d2a042,14078384,0,0x0,6
tick,0x7d8294d2a042,14079481,0,0x0,6
tick,0x7d8294d2a042,14080695,0,0x0,6
tick,0x7d8294d2a042,14081779,0,0x0,6
tick,0x7d8294d2a042,14083018,0,0x0,6
tick,0x7d8294d2a042,14084086,0,0x0,6
tick,0x7d8294d2a042,14085235,0,0x0,6
tick,0x7d8294d2a042,14086395,0,0x0,6
tick,0x7d8294d2a042,14087482,0,0x0,6
tick,0x7d8294d2a042,14088612,0,0x0,6
tick,0x7d8294d2a042,14089759,0,0x0,6
tick,0x7d8294d2a042,14090989,0,0x0,6
tick,0x7d8294d2a042,14092073,0,0x0,6
tick,0x7d8294d2a042,14093224,0,0x0,6
tick,0x7d8294d2a042,14094375,0,0x0,6
tick,0x7d8294d2a042,14095488,0,0x0,6
tick,0x7d8294d2a042,14096693,0,0x0,6
tick,0x7d8294d2a042,14097857,0,0x0,6
tick,0x7d8294d2a042,14099001,0,0x0,6
tick,0x7d8294d2a042,14100069,0,0x0,6
tick,0x7d8294d2a042,14101225,0,0x0,6
tick,0x7d8294d2a042,14102430,0,0x0,6
tick,0x7d8294d2a042,14103485,0,0x0,6
tick,0x7d8294d2a042,14104685,0,0x0,6
tick,0x7d8294d2a042,14105843,0,0x0,6
tick,0x7d8294d2a042,14106982,0,0x0,6
tick,0x7d8294d2a042,14108054,0,0x0,6
tick,0x7d8294d2a042,14109210,0,0x0,6
tick,0x7d8294d2a042,14110354,0,0x0,6
tick,0x7d8294d2a042,14111496,0,0x0,6
tick,0x7d8294d2a042,14112694,0,0x0,6
tick,0x7d8294d2a042,14113837,0,0x0,6
tick,0x7d8294d2a042,14114978,0,0x0,6
tick,0x7d8294d2a042,14115975,0,0x0,6
tick,0x7d8294d2a042,14117137,0,0x0,6
tick,0x7d8294d2a042,14118296,0,0x0,6
tick,0x7d8294d2a042,14119514,0,0x0,6
tick,0x7d8294d2a042,14120689,0,0x0,6
tick,0x7d8294d2a042,14121866,0,0x0,6
tick,0x7d8294d2a042,14123013,0,0x0,6
tick,0x7d8294d2a042,14124095,0,0x0,6
tick,0x7d8294d2a042,14125261,0,0x0,6
tick,0x7d8294d2a042,14126336,0,0x0,6
tick,0x7d8294d2a042,14127526,0,0x0,6
tick,0x7d8294d2a042,14128729,0,0x0,6
tick,0x7d8294d2a042,14129878,0,0x0,6
tick,0x7d8294d2a042,14131050,0,0x0,6
tick,0x7d8294d2a042,14132123,0,0x0,6
tick,0x7d8294d2a042,14133271,0,0x0,6
tick,0x7d8294d2a042,14134442,0,0x0,6
tick,0x7d8294d2a042,14135563,0,0x0,6
tick,0x7d8294d2a042,14136736,0,0x0,6
tick,0x7d8294d2a042,14137808,0,0x0,6
tick,0x7d8294d2a042,14138957,0,0x0,6
tick,0x7d8294d2a042,14140117,0,0x0,6
tick,0x7d8294d2a042,14141264,0,0x0,6
tick,0x7d8294d2a042,14142490,0,0x0,6
tick,0x7d8294d2a042,14143570,0,0x0,6
tick,0x7d8294d2a042,14144753,0,0x0,6
tick,0x7d8294d2a042,14145903,0,0x0,6
tick,0x7d8294d2a042,14146987,0,0x0,6
tick,0x7d8294d2a042,14148051,0,0x0,6
tick,0x7d8294d2a042,14149222,0,0x0,6
tick,0x7d8294d2a042,14150442,0,0x0,6
tick,0x7d8294d2a042,14151630,0,0x0,6
tick,0x7d8294d2a042,14152757,0,0x0,6
tick,0x7d8294d2a042,14153916,0,0x0,6
tick,0x7d8294d2a042,14155067,0,0x0,6
tick,0x7d8294d2a042,14156032,0,0x0,6
tick,0x7d8294d2a042,14157182,0,0x0,6
tick,0x7d8294d2a042,14158178,0,0x0,6
tick,0x7d8294d2a042,14159331,0,0x0,6
tick,0x7d8294d2a042,14160497,0,0x0,6
tick,0x7d8294d2a042,14161583,0,0x0,6
tick,0x7d8294d2a042,14162657,0,0x0,6
tick,0x7d8294d2a042,14163614,0,0x0,6
tick,0x7d8294d2a042,14164794,0,0x0,6
tick,0x7d8294d2a042,14165878,0,0x0,6
tick,0x7d8294d2a042,14167021,0,0x0,6
tick,0x7d8294d2a042,14168190,0,0x0,6
tick,0x7d8294d2a042,14169274,0,0x0,6
tick,0x7d8294d2a042,14170442,0,0x0,6
tick,0x7d8294d2a042,14171387,0,0x0,6
tick,0x7d8294d2a042,14172539,0,0x0,6
tick,0x7d8294d2a042,14173737,0,0x0,6
tick,0x7d8294d2a042,14174884,0,0x0,6
tick,0x7d8294d2a042,14175957,0,0x0,6
tick,0x7d8294d2a042,14177112,0,0x0,6
tick,0x7d8294d2a042,14178192,0,0x0,6
tick,0x7d8294d2a042,14179290,0,0x0,6
tick,0x7d8294d2a042,14180536,0,0x0,6
tick,0x7d8294d2a042,14181630,0,0x0,6
tick,0x7d8294d2a042,14182707,0,0x0,6
tick,0x7d8294d2a042,14183759,0,0x0,6
tick,0x7d8294d2a042,14184834,0,0x0,6
tick,0x7d8294d2a042,14186008,0,0x0,6
tick,0x7d8294d2a042,14187149,0,0x0,6
tick,0x7d8294d2a042,14188133,0,0x0,6
tick,0x7d8294d2a042,14189219,0,0x0,6
tick,0x7d8294d2a042,14190373,0,0x0,6
tick,0x7d8294d2a042,14191537,0,0x0,6
tick,0x7d8294d2a042,14192731,0,0x0,6
tick,0x7d8294d2a042,14193878,0,0x0,6
tick,0x7d8294d2a042,14195043,0,0x0,6
tick,0x7d8294d2a042,14196117,0,0x0,6
tick,0x7d8294d2a042,14197194,0,0x0,6
tick,0x7d8294d2a042,14198413,0,0x0,6
tick,0x7d8294d2a042,14199465,0,0x0,6
tick,0x7d8294d2a042,14200813,0,0x0,6
tick,0x7d8294d2a042,14201877,0,0x0,6
tick,0x7d8294d2a042,14203041,0,0x0,6
tick,0x7d8294d2a042,14204117,0,0x0,6
tick,0x7d8294d2a042,14205276,0,0x0,6
tick,0x7d8294d2a042,14206446,0,0x0,6
tick,0x7d8294d2a042,14207519,0,0x0,6
tick,0x7d8294d2a042,14208758,0,0x0,6
tick,0x7d8294d2a042,14209844,0,0x0,6
tick,0x7d8294d2a042,14211091,0,0x0,6
tick,0x7d8294d2a042,14212173,0,0x0,6
tick,0x7d8294d2a042,14213318,0,0x0,6
tick,0x7d8294d2a042,14214478,0,0x0,6
tick,0x7d8294d2a042,14215497,0,0x0,6
tick,0x7d8294d2a042,14216730,0,0x0,6
tick,0x7d8294d2a042,14217809,0,0x0,6
tick,0x7d8294d2a042,14219037,0,0x0,6
tick,0x7d8294d2a042,14220123,0,0x0,6
tick,0x7d8294d2a042,14221266,0,0x0,6
tick,0x7d8294d2a042,14222413,0,0x0,6
tick,0x7d8294d2a042,14223494,0,0x0,6
tick,0x7d8294d2a042,14224661,0,0x0,6
tick,0x7d8294d2a042,14225872,0,0x0,6
tick,0x7d8294d2a042,14226949,0,0x0,6
tick,0x7d8294d2a042,14228119,0,0x0,6
tick,0x7d8294d2a042,14229207,0,0x0,6
tick,0x7d8294d2a042,14230425,0,0x0,6
tick,0x7d8294d2a042,14231490,0,0x0,6
tick,0x7d8294d2a042,14232723,0,0x0,6
tick,0x7d8294d2a042,14233863,0,0x0,6
tick,0x7d8294d2a042,14235013,0,0x0,6
tick,0x7d8294d2a042,14236086,0,0x0,6
tick,0x7d8294d2a042,14237240,0,0x0,6
tick,0x7d8294d2a042,14238395,0,0x0,6
tick,0x7d8294d2a042,14239488,0,0x0,6
tick,0x7d8294d2a042,14240705,0,0x0,6
tick,0x7d8294d2a042,14241780,0,0x0,6
tick,0x7d8294d2a042,14243003,0,0x0,6
tick,0x7d8294d2a042,14244084,0,0x0,6
tick,0x7d8294d2a042,14245253,0,0x0,6
tick,0x7d8294d2a042,14246393,0,0x0,6
tick,0x7d8294d2a042,14247501,0,0x0,6
tick,0x7d8294d2a042,14248711,0,0x0,6
tick,0x7d8294d2a042,14249870,0,0x0,6
tick,0x7d8294d2a042,14251035,0,0x0,6
tick,0x7d8294d2a042,14252104,0,0x0,6
tick,0x7d8294d2a042,14253258,0,0x0,6
tick,0x7d8294d2a042,14254412,0,0x0,6
tick,0x7d8294d2a042,14255478,0,0x0,6
tick,0x7d8294d2a042,14256644,0,0x0,6
tick,0x7d8294d2a042,14257792,0,0x0,6
tick,0x7d8294d2a042,14259043,0,0x0,6
tick,0x7d8294d2a042,14260114,0,0x0,6
tick,0x7d8294d2a042,14261274,0,0x0,6
tick,0x7d8294d2a042,14262448,0,0x0,6
tick,0x7d8294d2a042,14263578,0,0x0,6
tick,0x7d8294d2a042,14264766,0,0x0,6
tick,0x7d8294d2a042,14265906,0,0x0,6
tick,0x7d8294d2a042,14267035,0,0x0,6
tick,0x7d8294d2a042,14268146,0,0x0,6
tick,0x7d8294d2a042,14269243,0,0x0,6
tick,0x7d8294d2a042,14270409,0,0x0,6
tick,0x7d8294d2a042,14271491,0,0x0,6
tick,0x7d8294d2a042,14272729,0,0x0,6
tick,0x7d8294d2a042,14273881,0,0x0,6
tick,0x7d8294d2a042,14274889,0,0x0,6
tick,0x7d8294d2a042,14276007,0,0x0,6
tick,0x7d8294d2a042,14277129,0,0x0,6
tick,0x7d8294d2a042,14278134,0,0x0,6
tick,0x7d8294d2a042,14279212,0,0x0,6
tick,0x7d8294d2a042,14280354,0,0x0,6
tick,0x7d8294d2a042,14281440,0,0x0,6
tick,0x7d8294d2a042,14282520,0,0x0,6
tick,0x7d8294d2a042,14283507,0,0x0,6
tick,0x7d8294d2a042,14284565,0,0x0,6
tick,0x7d8294d2a042,14285833,0,0x0,6
tick,0x7d8294d2a042,14286988,0,0x0,6
tick,0x7d8294d2a042,14287976,0,0x0,6
tick,0x7d8294d2a042,14289138,0,0x0,6
tick,0x7d8294d2a042,14290358,0,0x0,6
tick,0x7d8294d2a042,14291506,0,0x0,6
tick,0x7d8294d2a042,14292701,0,0x0,6
tick,0x7d8294d2a042,14293785,0,0x0,6
tick,0x7d8294d2a042,14295009,0,0x0,6
tick,0x7d8294d2a042,14296096,0,0x0,6
tick,0x7d8294d2a042,14297175,0,0x0,6
tick,0x7d8294d2a042,14298422,0,0x0,6
tick,0x7d8294d2a042,14299556,0,0x0,6
tick,0x7d8294d2a042,14300775,0,0x0,6
tick,0x7d8294d2a042,14301932,0,0x0,6
tick,0x7d8294d2a042,14303075,0,0x0,6
tick,0x7d8294d2a042,14304166,0,0x0,6
tick,0x7d8294d2a042,14305315,0,0x0,6
tick,0x7d8294d2a042,14306488,0,0x0,6
tick,0x7d8294d2a042,14307587,0,0x0,6
tick,0x7d8294d2a042,14308769,0,0x0,6
tick,0x7d8294d2a042,14309902,0,0x0,6
tick,0x7d8294d2a042,14310999,0,0x0,6
tick,0x7d8294d2a042,14312138,0,0x0,6
tick,0x7d8294d2a042,14313229,0,0x0,6
tick,0x7d8294d2a042,14314307,0,0x0,6
tick,0x7d8294d2a042,14315397,0,0x0,6
tick,0x7d8294d2a042,14316534,0,0x0,6
tick,0x7d8294d2a042,14317606,0,0x0,6
tick,0x7d8294d2a042,14318675,0,0x0,6
tick,0x7d8294d2a042,14319712,0,0x0,6
tick,0x7d8294d2a042,14320836,0,0x0,6
tick,0x7d8294d2a042,14321902,0,0x0,6
tick,0x7d8294d2a042,14323064,0,0x0,6
tick,0x7d8294d2a042,14324133,0,0x0,6
tick,0x7d8294d2a042,14325224,0,0x0,6
tick,0x7d8294d2a042,14326358,0,0x0,6
tick,0x7d8294d2a042,14327521,0,0x0,6
tick,0x7d8294d2a042,14328600,0,0x0,6
tick,0x7d8294d2a042,14329743,0,0x0,6
tick,0x7d8294d2a042,14330894,0,0x0,6
tick,0x7d8294d2a042,14331962,0,0x0,6
tick,0x7d8294d2a042,14333132,0,0x0,6
tick,0x7d8294d2a042,14334345,0,0x0,6
tick,0x7d8294d2a042,14335502,0,0x0,6
tick,0x7d8294d2a042,14336657,0,0x0,6
tick,0x7d8294d2a042,14337812,0,0x0,6
tick,0x7d8294d2a042,14338955,0,0x0,6
tick,0x7d8294d2a042,14340032,0,0x0,6
tick,0x7d8294d2a042,14341206,0,0x0,6
tick,0x7d8294d2a042,14342358,0,0x0,6
tick,0x7d8294d2a042,14343530,0,0x0,6
tick,0x7d8294d2a042,14344699,0,0x0,6
tick,0x7d8294d2a042,14345857,0,0x0,6
tick,0x7d8294d2a042,14347006,0,0x0,6
tick,0x7d8294d2a042,14348082,0,0x0,6
tick,0x7d8294d2a042,14349165,0,0x0,6
tick,0x7d8294d2a042,14350387,0,0x0,6
tick,0x7d8294d2a042,14351548,0,0x0,6
tick,0x7d8294d2a042,14352711,0,0x0,6
tick,0x7d8294d2a042,14353948,0,0x0,6
tick,0x7d8294d2a042,14355093,0,0x0,6
tick,0x7d8294d2a042,14356187,0,0x0,6
tick,0x7d8294d2a042,14357351,0,0x0,6
tick,0x7d8294d2a042,14358424,0,0x0,6
tick,0x7d8294d2a042,14359563,0,0x0,6
tick,0x7d8294d2a042,14360760,0,0x0,6
tick,0x7d8294d2a042,14361907,0,0x0,6
tick,0x7d8294d2a042,14363123,0,0x0,6
tick,0x7d8294d2a042,14364200,0,0x0,6
tick,0x7d8294d2a042,14365354,0,0x0,6
tick,0x7d8294d2a042,14366512,0,0x0,6
tick,0x7d8294d2a042,14367537,0,0x0,6
tick,0x7d8294d2a042,14368747,0,0x0,6
tick,0x7d8294d2a042,14369904,0,0x0,6
tick,0x7d8294d2a042,14371049,0,0x0,6
tick,0x7d8294d2a042,14372156,0,0x0,6
tick,0x7d8294d2a042,14373317,0,0x0,6
tick,0x7d8294d2a042,14374466,0,0x0,6
tick,0x7d8294d2a042,14375495,0,0x0,6
tick,0x7d8294d2a042,14376745,0,0x0,6
tick,0x7d8294d2a042,14377904,0,0x0,6
tick,0x7d8294d2a042,14379049,0,0x0,6
tick,0x7d8294d2a042,14380137,0,0x0,6
tick,0x7d8294d2a042,14381292,0,0x0,6
tick,0x7d8294d2a042,14382386,0,0x0,6
tick,0x7d8294d2a042,14383539,0,0x0,6
tick,0x7d8294d2a042,14384773,0,0x0,6
tick,0x7d8294d2a042,14385909,0,0x0,6
tick,0x7d8294d2a042,14387046,0,0x0,6
tick,0x7d8294d2a042,14388143,0,0x0,6
tick,0x7d8294d2a042,14389293,0,0x0,6
tick,0x7d8294d2a042,14390463,0,0x0,6
tick,0x7d8294d2a042,14391572,0,0x0,6
tick,0x7d8294d2a042,14392766,0,0x0,6
tick,0x7d8294d2a042,14393836,0,0x0,6
tick,0x7d8294d2a042,14395008,0,0x0,6
tick,0x7d8294d2a042,14396183,0,0x0,6
tick,0x7d8294d2a042,14397339,0,0x0,6
tick,0x7d8294d2a042,14398502,0,0x0,6
tick,0x7d8294d2a042,14399568,0,0x0,6
tick,0x7d8294d2a042,14400696,0,0x0,6
tick,0x7d8294d2a042,14401792,0,0x0,6
tick,0x7d8294d2a042,14402851,0,0x0,6
tick,0x7d8294d2a042,14403930,0,0x0,6
tick,0x7d8294d2a042,14405009,0,0x0,6
tick,0x7d8294d2a042,14406178,0,0x0,6
tick,0x7d8294d2a042,14407273,0,0x0,6
tick,0x7d8294d2a042,14408443,0,0x0,6
tick,0x7d8294d2a042,14409562,0,0x0,6
tick,0x7d8294d2a042,14410721,0,0x0,6
tick,0x7d8294d2a042,14411725,0,0x0,6
tick,0x7d8294d2a042,14412883,0,0x0,6
tick,0x7d8294d2a042,14414042,0,0x0,6
tick,0x7d8294d2a042,14415205,0,0x0,6
tick,0x7d8294d2a042,14416274,0,0x0,6
tick,0x7d8294d2a042,14417431,0,0x0,6
tick,0x7d8294d2a042,14418578,0,0x0,6
tick,0x7d8294d2a042,14419577,0,0x0,6
tick,0x7d8294d2a042,14420891,0,0x0,6
tick,0x7d8294d2a042,14421969,0,0x0,6
tick,0x7d8294d2a042,14423046,0,0x0,6
tick,0x7d8294d2a042,14424115,0,0x0,6
tick,0x7d8294d2a042,14425332,0,0x0,6
tick,0x7d8294d2a042,14426402,0,0x0,6
tick,0x7d8294d2a042,14427540,0,0x0,6
tick,0x7d8294d2a042,14428667,0,0x0,6
tick,0x7d8294d2a042,14429673,0,0x0,6
tick,0x7d8294d2a042,14430760,0,0x0,6
tick,0x7d8294d2a042,14431902,0,0x0,6
tick,0x7d8294d2a042,14433042,0,0x0,6
tick,0x7d8294d2a042,14434167,0,0x0,6
tick,0x7d8294d2a042,14435318,0,0x0,6
tick,0x7d8294d2a042,14436454,0,0x0,6
tick,0x7d8294d2a042,14437507,0,0x0,6
tick,0x7d8294d2a042,14438518,0,0x0,6
tick,0x7d8294d2a042,14439600,0,0x0,6
tick,0x7d8294d2a042,14440779,0,0x0,6
tick,0x7d8294d2a042,14441921,0,0x0,6
tick,0x7d8294d2a042,14443039,0,0x0,6
tick,0x7d8294d2a042,14444107,0,0x0,6
tick,0x7d8294d2a042,14445245,0,0x0,6
tick,0x7d8294d2a042,14446382,0,0x0,6
tick,0x7d8294d2a042,14447560,0,0x0,6
tick,0x7d8294d2a042,14448606,0,0x0,6
tick,0x7d8294d2a042,14449610,0,0x0,6
tick,0x7d8294d2a042,14450766,0,0x0,6
tick,0x7d8294d2a042,14451972,0,0x0,6
tick,0x7d8294d2a042,14453111,0,0x0,6
tick,0x7d8294d2a042,14454255,0,0x0,6
tick,0x7d8294d2a042,14455368,0,0x0,6
tick,0x7d8294d2a042,14456516,0,0x0,6
tick,0x7d8294d2a042,14457642,0,0x0,6
tick,0x7d8294d2a042,14458725,0,0x0,6
tick,0x7d8294d2a042,14459683,0,0x0,6
tick,0x7d8294d2a042,14460829,0,0x0,6
tick,0x7d8294d2a042,14461904,0,0x0,6
tick,0x7d8294d2a042,14463018,0,0x0,6
tick,0x7d8294d2a042,14464071,0,0x0,6
tick,0x7d8294d2a042,14465152,0,0x0,6
tick,0x7d8294d2a042,14466292,0,0x0,6
tick,0x7d8294d2a042,14467374,0,0x0,6
tick,0x7d8294d2a042,14468412,0,0x0,6
tick,0x7d8294d2a042,14469439,0,0x0,6
tick,0x7d8294d2a042,14470493,0,0x0,6
tick,0x7d8294d2a042,14471584,0,0x0,6
tick,0x7d8294d2a042,14472771,0,0x0,6
tick,0x7d8294d2a042,14473905,0,0x0,6
tick,0x7d8294d2a042,14475090,0,0x0,6
tick,0x7d8294d2a042,14476132,0,0x0,6
tick,0x7d8294d2a042,14477206,0,0x0,6
tick,0x7d8294d2a042,14478277,0,0x0,6
tick,0x7d8294d2a042,14479369,0,0x0,6
tick,0x7d8294d2a042,14480515,0,0x0,6
tick,0x7d8294d2a042,14481508,0,0x0,6
tick,0x7d8294d2a042,14482600,0,0x0,6
tick,0x7d8294d2a042,14483678,0,0x0,6
tick,0x7d8294d2a042,14484812,0,0x0,6
tick,0x7d8294d2a042,14485958,0,0x0,6
tick,0x7d8294d2a042,14487117,0,0x0,6
tick,0x7d8294d2a042,14488214,0,0x0,6
tick,0x7d8294d2a042,14489277,0,0x0,6
tick,0x7d8294d2a042,14490434,0,0x0,6
tick,0x7d8294d2a042,14491577,0,0x0,6
tick,0x7d8294d2a042,14492754,0,0x0,6
tick,0x7d8294d2a042,14493899,0,0x0,6
tick,0x7d8294d2a042,14495062,0,0x0,6
tick,0x7d8294d2a042,14496123,0,0x0,6
tick,0x7d8294d2a042,14497289,0,0x0,6
tick,0x7d8294d2a042,14498448,0,0x0,6
tick,0x7d8294d2a042,14499573,0,0x0,6
tick,0x7d8294d2a042,14500739,0,0x0,6
tick,0x7d8294d2a042,14501886,0,0x0,6
tick,0x7d8294d2a042,14503037,0,0x0,6
tick,0x7d8294d2a042,14504136,0,0x0,6
tick,0x7d8294d2a042,14505271,0,0x0,6
tick,0x7d8294d2a042,14506436,0,0x0,6
tick,0x7d8294d2a042,14507574,0,0x0,6
tick,0x7d8294d2a042,14508748,0,0x0,6
tick,0x7d8294d2a042,14509907,0,0x0,6
tick,0x7d8294d2a042,14511077,0,0x0,6
tick,0x7d8294d2a042,14512137,0,0x0,6
tick,0x7d8294d2a042,14513297,0,0x0,6
tick,0x7d8294d2a042,14514452,0,0x0,6
tick,0x7d8294d2a042,14515602,0,0x0,6
tick,0x7d8294d2a042,14516763,0,0x0,6
tick,0x7d8294d2a042,14517905,0,0x0,6
tick,0x7d8294d2a042,14519061,0,0x0,6
tick,0x7d8294d2a042,14520134,0,0x0,6
tick,0x7d8294d2a042,14521284,0,0x0,6
tick,0x7d8294d2a042,14522439,0,0x0,6
tick,0x7d8294d2a042,14523485,0,0x0,6
tick,0x7d8294d2a042,14524549,0,0x0,6
tick,0x7d8294d2a042,14525638,0,0x0,6
tick,0x7d8294d2a042,14526784,0,0x0,6
tick,0x7d8294d2a042,14527925,0,0x0,6
tick,0x7d8294d2a042,14529084,0,0x0,6
tick,0x7d8294d2a042,14530237,0,0x0,6
tick,0x7d8294d2a042,14531402,0,0x0,6
tick,0x7d8294d2a042,14532532,0,0x0,6
tick,0x7d8294d2a042,14533536,0,0x0,6
tick,0x7d8294d2a042,14534689,0,0x0,6
tick,0x7d8294d2a042,14535720,0,0x0,6
tick,0x7d8294d2a042,14536901,0,0x0,6
tick,0x7d8294d2a042,14537974,0,0x0,6
tick,0x7d8294d2a042,14539123,0,0x0,6
tick,0x7d8294d2a042,14540243,0,0x0,6
tick,0x7d8294d2a042,14541319,0,0x0,6
tick,0x7d8294d2a042,14542488,0,0x0,6
tick,0x7d8294d2a042,14543578,0,0x0,6
tick,0x7d8294d2a042,14544750,0,0x0,6
tick,0x7d8294d2a042,14545910,0,0x0,6
tick,0x7d8294d2a042,14546994,0,0x0,6
tick,0x7d8294d2a042,14548063,0,0x0,6
tick,0x7d8294d2a042,14549253,0,0x0,6
tick,0x7d8294d2a042,14550493,0,0x0,6
tick,0x7d8294d2a042,14551573,0,0x0,6
tick,0x7d8294d2a042,14552766,0,0x0,6
tick,0x7d8294d2a042,14553912,0,0x0,6
tick,0x7d8294d2a042,14555053,0,0x0,6
tick,0x7d8294d2a042,14556139,0,0x0,6
tick,0x7d8294d2a042,14557295,0,0x0,6
tick,0x7d8294d2a042,14558381,0,0x0,6
tick,0x7d8294d2a042,14559566,0,0x0,6
tick,0x7d8294d2a042,14560770,0,0x0,6
tick,0x7d8294d2a042,14561944,0,0x0,6
tick,0x7d8294d2a042,14563074,0,0x0,6
tick,0x7d8294d2a042,14564142,0,0x0,6
tick,0x7d8294d2a042,14565313,0,0x0,6
tick,0x7d8294d2a042,14566475,0,0x0,6
tick,0x7d8294d2a042,14567553,0,0x0,6
tick,0x7d8294d2a042,14568772,0,0x0,6
tick,0x7d8294d2a042,14569946,0,0x0,6
tick,0x7d8294d2a042,14571110,0,0x0,6
tick,0x7d8294d2a042,14572175,0,0x0,6
tick,0x7d8294d2a042,14573321,0,0x0,6
tick,0x7d8294d2a042,14574481,0,0x0,6
tick,0x7d8294d2a042,14575513,0,0x0,6
tick,0x7d8294d2a042,14576751,0,0x0,6
tick,0x7d8294d2a042,14577822,0,0x0,6
tick,0x7d8294d2a042,14578982,0,0x0,6
tick,0x7d8294d2a042,14580154,0,0x0,6
tick,0x7d8294d2a042,14581310,0,0x0,6
tick,0x7d8294d2a042,14582480,0,0x0,6
tick,0x7d8294d2a042,14583568,0,0x0,6
tick,0x7d8294d2a042,14584759,0,0x0,6
tick,0x7d8294d2a042,14585831,0,0x0,6
tick,0x7d8294d2a042,14587067,0,0x0,6
tick,0x7d8294d2a042,14588152,0,0x0,6
tick,0x7d8294d2a042,14589307,0,0x0,6
tick,0x7d8294d2a042,14590478,0,0x0,6
tick,0x7d8294d2a042,14591572,0,0x0,6
tick,0x7d8294d2a042,14592772,0,0x0,6
tick,0x7d8294d2a042,14593932,0,0x0,6
tick,0x7d8294d2a042,14595004,0,0x0,6
tick,0x7d8294d2a042,14596086,0,0x0,6
tick,0x7d8294d2a042,14597259,0,0x0,6
tick,0x7d8294d2a042,14598526,0,0x0,6
tick,0x7d8294d2a042,14599579,0,0x0,6
tick,0x7d8294d2a042,14600764,0,0x0,6
tick,0x7d8294d2a042,14601914,0,0x0,6
tick,0x7d8294d2a042,14603076,0,0x0,6
tick,0x7d8294d2a042,14604064,0,0x0,6
tick,0x7d8294d2a042,14605240,0,0x0,6
tick,0x7d8294d2a042,14606415,0,0x0,6
tick,0x7d8294d2a042,14607575,0,0x0,6
tick,0x7d8294d2a042,14608773,0,0x0,6
tick,0x7d8294d2a042,14609931,0,0x0,6
tick,0x7d8294d2a042,14611096,0,0x0,6
tick,0x7d8294d2a042,14612173,0,0x0,6
tick,0x7d8294d2a042,14613264,0,0x0,6
tick,0x7d8294d2a042,14614340,0,0x0,6
tick,0x7d8294d2a042,14615572,0,0x0,6
tick,0x7d8294d2a042,14616760,0,0x0,6
tick,0x7d8294d2a042,14617918,0,0x0,6
tick,0x7d8294d2a042,14619010,0,0x0,6
tick,0x7d8294d2a042,14620165,0,0x0,6
tick,0x7d8294d2a042,14621316,0,0x0,6
tick,0x7d8294d2a042,14622481,0,0x0,6
tick,0x7d8294d2a042,14623567,0,0x0,6
tick,0x7d8294d2a042,14624753,0,0x0,6
tick,0x7d8294d2a042,14625853,0,0x0,6
tick,0x7d8294d2a042,14627025,0,0x0,6
tick,0x7d8294d2a042,14628190,0,0x0,6
tick,0x7d8294d2a042,14629347,0,0x0,6
tick,0x7d8294d2a042,14630517,0,0x0,6
tick,0x7d8294d2a042,14631579,0,0x0,6
tick,0x7d8294d2a042,14632762,0,0x0,6
tick,0x7d8294d2a042,14633923,0,0x0,6
tick,0x7d8294d2a042,14634992,0,0x0,6
tick,0x7d8294d2a042,14636084,0,0x0,6
tick,0x7d8294d2a042,14637239,0,0x0,6
tick,0x7d8294d2a042,14638509,0,0x0,6
tick,0x7d8294d2a042,14639586,0,0x0,6
tick,0x7d8294d2a042,14640792,0,0x0,6
tick,0x7d8294d2a042,14641947,0,0x0,6
tick,0x7d8294d2a042,14643110,0,0x0,6
tick,0x7d8294d2a042,14644172,0,0x0,6
tick,0x7d8294d2a042,14645261,0,0x0,6
tick,0x7d8294d2a042,14646338,0,0x0,6
tick,0x7d8294d2a042,14647415,0,0x0,6
tick,0x7d8294d2a042,14648656,0,0x0,6
tick,0x7d8294d2a042,14649815,0,0x0,6
tick,0x7d8294d2a042,14650973,0,0x0,6
tick,0x7d8294d2a042,14651963,0,0x0,6
tick,0x7d8294d2a042,14653119,0,0x0,6
tick,0x7d8294d2a042,14654373,0,0x0,6
tick,0x7d8294d2a042,14655429,0,0x0,6
tick,0x7d8294d2a042,14656603,0,0x0,6
tick,0x7d8294d2a042,14657773,0,0x0,6
tick,0x7d8294d2a042,14658947,0,0x0,6
tick,0x7d8294d2a042,14660039,0,0x0,6
tick,0x7d8294d2a042,14661186,0,0x0,6
tick,0x7d8294d2a042,14662332,0,0x0,6
tick,0x7d8294d2a042,14663530,0,0x0,6
tick,0x7d8294d2a042,14664678,0,0x0,6
tick,0x7d8294d2a042,14665749,0,0x0,6
tick,0x7d8294d2a042,14666897,0,0x0,6
tick,0x7d8294d2a042,14668070,0,0x0,6
tick,0x7d8294d2a042,14669140,0,0x0,6
tick,0x7d8294d2a042,14670297,0,0x0,6
tick,0x7d8294d2a042,14671530,0,0x0,6
tick,0x7d8294d2a042,14672740,0,0x0,6
tick,0x7d8294d2a042,14673876,0,0x0,6
tick,0x7d8294d2a042,14675052,0,0x0,6
tick,0x7d8294d2a042,14676112,0,0x0,6
tick,0x7d8294d2a042,14677183,0,0x0,6
tick,0x7d8294d2a042,14678340,0,0x0,6
tick,0x7d8294d2a042,14679539,0,0x0,6
tick,0x7d8294d2a042,14680763,0,0x0,6
tick,0x7d8294d2a042,14681913,0,0x0,6
tick,0x7d8294d2a042,14683055,0,0x0,6
tick,0x7d8294d2a042,14684140,0,0x0,6
tick,0x7d8294d2a042,14685302,0,0x0,6
tick,0x7d8294d2a042,14686448,0,0x0,6
tick,0x7d8294d2a042,14687590,0,0x0,6
tick,0x7d8294d2a042,14688768,0,0x0,6
tick,0x7d8294d2a042,14689905,0,0x0,6
tick,0x7d8294d2a042,14691058,0,0x0,6
tick,0x7d8294d2a042,14692140,0,0x0,6
tick,0x7d8294d2a042,14693315,0,0x0,6
tick,0x7d8294d2a042,14694465,0,0x0,6
tick,0x7d8294d2a042,14695508,0,0x0,6
tick,0x7d8294d2a042,14696744,0,0x0,6
tick,0x7d8294d2a042,14697907,0,0x0,6
tick,0x7d8294d2a042,14699041,0,0x0,6
tick,0x7d8294d2a042,14700135,0,0x0,6
tick,0x7d8294d2a042,14701275,0,0x0,6
tick,0x7d8294d2a042,14702419,0,0x0,6
tick,0x7d8294d2a042,14703601,0,0x0,6
tick,0x7d8294d2a042,14704778,0,0x0,6
tick,0x7d8294d2a042,14705921,0,0x0,6
tick,0x7d8294d2a042,14707065,0,0x0,6
tick,0x7d8294d2a042,14708147,0,0x0,6
tick,0x7d8294d2a042,14709293,0,0x0,6
tick,0x7d8294d2a042,14710435,0,0x0,6
tick,0x7d8294d2a042,14711504,0,0x0,6
tick,0x7d8294d2a042,14712731,0,0x0,6
tick,0x7d8294d2a042,14713818,0,0x0,6
tick,0x7d8294d2a042,14715040,0,0x0,6
tick,0x7d8294d2a042,14716112,0,0x0,6
tick,0x7d8294d2a042,14717260,0,0x0,6
tick,0x7d8294d2a042,14718408,0,0x0,6
tick,0x7d8294d2a042,14719524,0,0x0,6
tick,0x7d8294d2a042,14720739,0,0x0,6
tick,0x7d8294d2a042,14721822,0,0x0,6
tick,0x7d8294d2a042,14723056,0,0x0,6
tick,0x7d8294d2a042,14724141,0,0x0,6
tick,0x7d8294d2a042,14725274,0,0x0,6
tick,0x7d8294d2a042,14726431,0,0x0,6
tick,0x7d8294d2a042,14727592,0,0x0,6
tick,0x7d8294d2a042,14728677,0,0x0,6
tick,0x7d8294d2a042,14729904,0,0x0,6
tick,0x7d8294d2a042,14730976,0,0x0,6
tick,0x7d8294d2a042,14732165,0,0x0,6
tick,0x7d8294d2a042,14733226,0,0x0,6
tick,0x7d8294d2a042,14734308,0,0x0,6
tick,0x7d8294d2a042,14735390,0,0x0,6
tick,0x7d8294d2a042,14736530,0,0x0,6
tick,0x7d8294d2a042,14737608,0,0x0,6
tick,0x7d8294d2a042,14738684,0,0x0,6
tick,0x7d8294d2a042,14739686,0,0x0,6
tick,0x7d8294d2a042,14740829,0,0x0,6
tick,0x7d8294d2a042,14741971,0,0x0,6
tick,0x7d8294d2a042,14743121,0,0x0,6
tick,0x7d8294d2a042,14744170,0,0x0,6
tick,0x7d8294d2a042,14745256,0,0x0,6
tick,0x7d8294d2a042,14746346,0,0x0,6
tick,0x7d8294d2a042,14747379,0,0x0,6
tick,0x7d8294d2a042,14748552,0,0x0,6
tick,0x7d8294d2a042,14749622,0,0x0,6
tick,0x7d8294d2a042,14750683,0,0x0,6
tick,0x7d8294d2a042,14751685,0,0x0,6
tick,0x7d8294d2a042,14752822,0,0x0,6
tick,0x7d8294d2a042,14753899,0,0x0,6
tick,0x7d8294d2a042,14754981,0,0x0,6
tick,0x7d8294d2a042,14756062,0,0x0,6
tick,0x7d8294d2a042,14757140,0,0x0,6
tick,0x7d8294d2a042,14758223,0,0x0,6
tick,0x7d8294d2a042,14759382,0,0x0,6
tick,0x7d8294d2a042,14760603,0,0x0,6
tick,0x7d8294d2a042,14761782,0,0x0,6
tick,0x7d8294d2a042,14762936,0,0x0,6
tick,0x7d8294d2a042,14764000,0,0x0,6
tick,0x7d8294d2a042,14765159,0,0x0,6
tick,0x7d8294d2a042,14766240,0,0x0,6
tick,0x7d8294d2a042,14767467,0,0x0,6
tick,0x7d8294d2a042,14768469,0,0x0,6
tick,0x7d8294d2a042,14769559,0,0x0,6
tick,0x7d8294d2a042,14770777,0,0x0,6
tick,0x7d8294d2a042,14771865,0,0x0,6
tick,0x7d8294d2a042,14772987,0,0x0,6
tick,0x7d8294d2a042,14774155,0,0x0,6
tick,0x7d8294d2a042,14775315,0,0x0,6
tick,0x7d8294d2a042,14776441,0,0x0,6
tick,0x7d8294d2a042,14777513,0,0x0,6
tick,0x7d8294d2a042,14778705,0,0x0,6
tick,0x7d8294d2a042,14779750,0,0x0,6
tick,0x7d8294d2a042,14780865,0,0x0,6
tick,0x7d8294d2a042,14782025,0,0x0,6
tick,0x7d8294d2a042,14783229,0,0x0,6
tick,0x7d8294d2a042,14784412,0,0x0,6
tick,0x7d8294d2a042,14785463,0,0x0,6
tick,0x7d8294d2a042,14786622,0,0x0,6
tick,0x7d8294d2a042,14787625,0,0x0,6
tick,0x7d8294d2a042,14788736,0,0x0,6
tick,0x7d8294d2a042,14789813,0,0x0,6
tick,0x7d8294d2a042,14790894,0,0x0,6
tick,0x7d8294d2a042,14791949,0,0x0,6
tick,0x7d8294d2a042,14793016,0,0x0,6
tick,0x7d8294d2a042,14794087,0,0x0,6
tick,0x7d8294d2a042,14795062,0,0x0,6
tick,0x7d8294d2a042,14796187,0,0x0,6
tick,0x7d8294d2a042,14797187,0,0x0,6
tick,0x7d8294d2a042,14798229,0,0x0,6
tick,0x7d8294d2a042,14799287,0,0x0,6
tick,0x7d8294d2a042,14800407,0,0x0,6
tick,0x7d8294d2a042,14801478,0,0x0,6
tick,0x7d8294d2a042,14802542,0,0x0,6
tick,0x7d8294d2a042,14803592,0,0x0,6
tick,0x7d8294d2a042,14804597,0,0x0,6
tick,0x7d8294d2a042,14805643,0,0x0,6
tick,0x7d8294d2a042,14806700,0,0x0,6
tick,0x7d8294d2a042,14807754,0,0x0,6
tick,0x7d8294d2a042,14808803,0,0x0,6
tick,0x7d8294d2a042,14809935,0,0x0,6
tick,0x7d8294d2a042,14810996,0,0x0,6
tick,0x7d8294d2a042,14812043,0,0x0,6
tick,0x7d8294d2a042,14813103,0,0x0,6
tick,0x7d8294d2a042,14814162,0,0x0,6
tick,0x7d8294d2a042,14815150,0,0x0,6
tick,0x7d8294d2a042,14816280,0,0x0,6
tick,0x7d8294d2a042,14817267,0,0x0,6
tick,0x7d8294d2a042,14818395,0,0x0,6
tick,0x7d8294d2a042,14819478,0,0x0,6
tick,0x7d8294d2a042,14820518,0,0x0,6
tick,0x7d8294d2a042,14821501,0,0x0,6
tick,0x7d8294d2a042,14822553,0,0x0,6
tick,0x7d8294d2a042,14823626,0,0x0,6
tick,0x7d8294d2a042,14824667,0,0x0,6
tick,0x7d8294d2a042,14825810,0,0x0,6
tick,0x7d8294d2a042,14826855,0,0x0,6
tick,0x7d8294d2a042,14827904,0,0x0,6
tick,0x7d8294d2a042,14828972,0,0x0,6
tick,0x7d8294d2a042,14830035,0,0x0,6
tick,0x7d8294d2a042,14831076,0,0x0,6
tick,0x7d8294d2a042,14832071,0,0x0,6
tick,0x7d8294d2a042,14833133,0,0x0,6
tick,0x7d8294d2a042,14834255,0,0x0,6
tick,0x7d8294d2a042,14835314,0,0x0,6
tick,0x7d8294d2a042,14836301,0,0x0,6
tick,0x7d8294d2a042,14837431,0,0x0,6
tick,0x7d8294d2a042,14838417,0,0x0,6
tick,0x7d8294d2a042,14839484,0,0x0,6
tick,0x7d8294d2a042,14840604,0,0x0,6
tick,0x7d8294d2a042,14841596,0,0x0,6
tick,0x7d8294d2a042,14842722,0,0x0,6
tick,0x7d8294d2a042,14843766,0,0x0,6
tick,0x7d8294d2a042,14844831,0,0x0,6
tick,0x7d8294d2a042,14845906,0,0x0,6
tick,0x7d8294d2a042,14846951,0,0x0,6
tick,0x7d8294d2a042,14847996,0,0x0,6
tick,0x7d8294d2a042,14849071,0,0x0,6
tick,0x7d8294d2a042,14850194,0,0x0,6
tick,0x7d8294d2a042,14851245,0,0x0,6
tick,0x7d8294d2a042,14852159,0,0x0,6
tick,0x7d8294d2a042,14853223,0,0x0,6
tick,0x7d8294d2a042,14854345,0,0x0,6
tick,0x7d8294d2a042,14855408,0,0x0,6
tick,0x7d8294d2a042,14856561,0,0x0,6
tick,0x7d8294d2a042,14857572,0,0x0,6
tick,0x7d8294d2a042,14858737,0,0x0,6
tick,0x7d8294d2a042,14859780,0,0x0,6
tick,0x7d8294d2a042,14860928,0,0x0,6
tick,0x7d8294d2a042,14861981,0,0x0,6
tick,0x7d8294d2a042,14863062,0,0x0,6
tick,0x7d8294d2a042,14864067,0,0x0,6
tick,0x7d8294d2a042,14865159,0,0x0,6
tick,0x7d8294d2a042,14866317,0,0x0,6
tick,0x7d8294d2a042,14867494,0,0x0,6
tick,0x7d8294d2a042,14868550,0,0x0,6
tick,0x7d8294d2a042,14869549,0,0x0,6
tick,0x7d8294d2a042,14870707,0,0x0,6
tick,0x7d8294d2a042,14871870,0,0x0,6
tick,0x7d8294d2a042,14873007,0,0x0,6
tick,0x7d8294d2a042,14874173,0,0x0,6
tick,0x7d8294d2a042,14875301,0,0x0,6
tick,0x7d8294d2a042,14876466,0,0x0,6
tick,0x7d8294d2a042,14877543,0,0x0,6
tick,0x7d8294d2a042,14878557,0,0x0,6
tick,0x7d8294d2a042,14879627,0,0x0,6
tick,0x7d8294d2a042,14880843,0,0x0,6
tick,0x7d8294d2a042,14882009,0,0x0,6
tick,0x7d8294d2a042,14883158,0,0x0,6
tick,0x7d8294d2a042,14884228,0,0x0,6
tick,0x7d8294d2a042,14885302,0,0x0,6
tick,0x7d8294d2a042,14886405,0,0x0,6
tick,0x7d8294d2a042,14887498,0,0x0,6
tick,0x7d8294d2a042,14888624,0,0x0,6
tick,0x7d8294d2a042,14889708,0,0x0,6
tick,0x7d8294d2a042,14890853,0,0x0,6
tick,0x7d8294d2a042,14891924,0,0x0,6
tick,0x7d8294d2a042,14893054,0,0x0,6
tick,0x7d8294d2a042,14894295,0,0x0,6
tick,0x7d8294d2a042,14895463,0,0x0,6
tick,0x7d8294d2a042,14896521,0,0x0,6
tick,0x7d8294d2a042,14897615,0,0x0,6
tick,0x7d8294d2a042,14898787,0,0x0,6
tick,0x7d8294d2a042,14899861,0,0x0,6
tick,0x7d8294d2a042,14900939,0,0x0,6
tick,0x7d8294d2a042,14902033,0,0x0,6
tick,0x7d8294d2a042,14903148,0,0x0,6
tick,0x7d8294d2a042,14904456,0,0x0,6
tick,0x7d8294d2a042,14905473,0,0x0,6
tick,0x7d8294d2a042,14906641,0,0x0,6
tick,0x7d8294d2a042,14907645,0,0x0,6
tick,0x7d8294d2a042,14908838,0,0x0,6
tick,0x7d8294d2a042,14909987,0,0x0,6
tick,0x7d8294d2a042,14911143,0,0x0,6
tick,0x7d8294d2a042,14912223,0,0x0,6
tick,0x7d8294d2a042,14913299,0,0x0,6
tick,0x7d8294d2a042,14914453,0,0x0,6
tick,0x7d8294d2a042,14915578,0,0x0,6
tick,0x7d8294d2a042,14916739,0,0x0,6
tick,0x7d8294d2a042,14917901,0,0x0,6
tick,0x7d8294d2a042,14918977,0,0x0,6
tick,0x7d8294d2a042,14920123,0,0x0,6
tick,0x7d8294d2a042,14921277,0,0x0,6
tick,0x7d8294d2a042,14922440,0,0x0,6
tick,0x7d8294d2a042,14923576,0,0x0,6
tick,0x7d8294d2a042,14924722,0,0x0,6
tick,0x7d8294d2a042,14925856,0,0x0,6
tick,0x7d8294d2a042,14927004,0,0x0,6
tick,0x7d8294d2a042,14928006,0,0x0,6
tick,0x7d8294d2a042,14929209,0,0x0,6
tick,0x7d8294d2a042,14930356,0,0x0,6
tick,0x7d8294d2a042,14931554,0,0x0,6
tick,0x7d8294d2a042,14932687,0,0x0,6
tick,0x7d8294d2a042,14933841,0,0x0,6
tick,0x7d8294d2a042,14934943,0,0x0,6
tick,0x7d8294d2a042,14936022,0,0x0,6
tick,0x7d8294d2a042,14937109,0,0x0,6
tick,0x7d8294d2a042,14938189,0,0x0,6
tick,0x7d8294d2a042,14939349,0,0x0,6
tick,0x7d8294d2a042,14940432,0,0x0,6
tick,0x7d8294d2a042,14941547,0,0x0,6
tick,0x7d8294d2a042,14942655,0,0x0,6
tick,0x7d8294d2a042,14943734,0,0x0,6
tick,0x7d8294d2a042,14944870,0,0x0,6
tick,0x7d8294d2a042,14945901,0,0x0,6
tick,0x7d8294d2a042,14946951,0,0x0,6
tick,0x7d8294d2a042,14948035,0,0x0,6
tick,0x7d8294d2a042,14949176,0,0x0,6
tick,0x7d8294d2a042,14950329,0,0x0,6
tick,0x7d8294d2a042,14951514,0,0x0,6
tick,0x7d8294d2a042,14952641,0,0x0,6
tick,0x7d8294d2a042,14953823,0,0x0,6
tick,0x7d8294d2a042,14954979,0,0x0,6
tick,0x7d8294d2a042,14956059,0,0x0,6
tick,0x7d8294d2a042,14957144,0,0x0,6
tick,0x7d8294d2a042,14958232,0,0x0,6
tick,0x7d8294d2a042,14959376,0,0x0,6
tick,0x7d8294d2a042,14960530,0,0x0,6
tick,0x7d8294d2a042,14961607,0,0x0,6
tick,0x7d8294d2a042,14962684,0,0x0,6
tick,0x7d8294d2a042,14963682,0,0x0,6
tick,0x7d8294d2a042,14964827,0,0x0,6
tick,0x7d8294d2a042,14965946,0,0x0,6
tick,0x7d8294d2a042,14967048,0,0x0,6
tick,0x7d8294d2a042,14968056,0,0x0,6
tick,0x7d8294d2a042,14969130,0,0x0,6
tick,0x7d8294d2a042,14970276,0,0x0,6
tick,0x7d8294d2a042,14971494,0,0x0,6
tick,0x7d8294d2a042,14972683,0,0x0,6
tick,0x7d8294d2a042,14973831,0,0x0,6
tick,0x7d8294d2a042,14974970,0,0x0,6
tick,0x7d8294d2a042,14976037,0,0x0,6
tick,0x7d8294d2a042,14977137,0,0x0,6
tick,0x7d8294d2a042,14978365,0,0x0,6
tick,0x7d8294d2a042,14979495,0,0x0,6
tick,0x7d8294d2a042,14980682,0,0x0,6
tick,0x7d8294d2a042,14981839,0,0x0,6
tick,0x7d8294d2a042,14982961,0,0x0,6
tick,0x7d8294d2a042,14984046,0,0x0,6
tick,0x7d8294d2a042,14985182,0,0x0,6
tick,0x7d8294d2a042,14986346,0,0x0,6
tick,0x7d8294d2a042,14987406,0,0x0,6
tick,0x7d8294d2a042,14988573,0,0x0,6
tick,0x7d8294d2a042,14989718,0,0x0,6
tick,0x7d8294d2a042,14990951,0,0x0,6
tick,0x7d8294d2a042,14992023,0,0x0,6
tick,0x7d8294d2a042,14993179,0,0x0,6
tick,0x7d8294d2a042,14994254,0,0x0,6
tick,0x7d8294d2a042,14995332,0,0x0,6
tick,0x7d8294d2a042,14996339,0,0x0,6
tick,0x7d8294d2a042,14997470,0,0x0,6
tick,0x7d8294d2a042,14998552,0,0x0,6
tick,0x7d8294d2a042,14999624,0,0x0,6
tick,0x7d8294d2a042,15000765,0,0x0,6
tick,0x7d8294d2a042,15001907,0,0x0,6
tick,0x7d8294d2a042,15003057,0,0x0,6
tick,0x7d8294d2a042,15004148,0,0x0,6
tick,0x7d8294d2a042,15005216,0,0x0,6
tick,0x7d8294d2a042,15006375,0,0x0,6
tick,0x7d8294d2a042,15007465,0,0x0,6
tick,0x7d8294d2a042,15008684,0,0x0,6
tick,0x7d8294d2a042,15009831,0,0x0,6
tick,0x7d8294d2a042,15010901,0,0x0,6
tick,0x7d8294d2a042,15011979,0,0x0,6
tick,0x7d8294d2a042,15013131,0,0x0,6
tick,0x7d8294d2a042,15014387,0,0x0,6
tick,0x7d8294d2a042,15015480,0,0x0,6
tick,0x7d8294d2a042,15016687,0,0x0,6
tick,0x7d8294d2a042,15017821,0,0x0,6
tick,0x7d8294d2a042,15018979,0,0x0,6
tick,0x7d8294d2a042,15019987,0,0x0,6
tick,0x7d8294d2a042,15021135,0,0x0,6
tick,0x7d8294d2a042,15022295,0,0x0,6
tick,0x7d8294d2a042,15023473,0,0x0,6
tick,0x7d8294d2a042,15024687,0,0x0,6
tick,0x7d8294d2a042,15025852,0,0x0,6
tick,0x7d8294d2a042,15026998,0,0x0,6
tick,0x7d8294d2a042,15028065,0,0x0,6
tick,0x7d8294d2a042,15029141,0,0x0,6
tick,0x7d8294d2a042,15030372,0,0x0,6
tick,0x7d8294d2a042,15031438,0,0x0,6
tick,0x7d8294d2a042,15032740,0,0x0,6
tick,0x7d8294d2a042,15033892,0,0x0,6
tick,0x7d8294d2a042,15035026,0,0x0,6
tick,0x7d8294d2a042,15036101,0,0x0,6
tick,0x7d8294d2a042,15037265,0,0x0,6
tick,0x7d8294d2a042,15038403,0,0x0,6
tick,0x7d8294d2a042,15039471,0,0x0,6
tick,0x7d8294d2a042,15040709,0,0x0,6
tick,0x7d8294d2a042,15041798,0,0x0,6
tick,0x7d8294d2a042,15042940,0,0x0,6
tick,0x7d8294d2a042,15044094,0,0x0,6
tick,0x7d8294d2a042,15045253,0,0x0,6
tick,0x7d8294d2a042,15046411,0,0x0,6
tick,0x7d8294d2a042,15047472,0,0x0,6
tick,0x7d8294d2a042,15048701,0,0x0,6
tick,0x7d8294d2a042,15049849,0,0x0,6
tick,0x7d8294d2a042,15051008,0,0x0,6
tick,0x7d8294d2a042,15052012,0,0x0,6
tick,0x7d8294d2a042,15053158,0,0x0,6
tick,0x7d8294d2a042,15054395,0,0x0,6
tick,0x7d8294d2a042,15055476,0,0x0,6
tick,0x7d8294d2a042,15056694,0,0x0,6
tick,0x7d8294d2a042,15057846,0,0x0,6
tick,0x7d8294d2a042,15058988,0,0x0,6
tick,0x7d8294d2a042,15060069,0,0x0,6
tick,0x7d8294d2a042,15061240,0,0x0,6
tick,0x7d8294d2a042,15062397,0,0x0,6
tick,0x7d8294d2a042,15063476,0,0x0,6
tick,0x7d8294d2a042,15064707,0,0x0,6
tick,0x7d8294d2a042,15065858,0,0x0,6
tick,0x7d8294d2a042,15067015,0,0x0,6
tick,0x7d8294d2a042,15068098,0,0x0,6
tick,0x7d8294d2a042,15069183,0,0x0,6
tick,0x7d8294d2a042,15070427,0,0x0,6
tick,0x7d8294d2a042,15071475,0,0x0,6
tick,0x7d8294d2a042,15072570,0,0x0,6
tick,0x7d8294d2a042,15073650,0,0x0,6
tick,0x7d8294d2a042,15074785,0,0x0,6
tick,0x7d8294d2a042,15075850,0,0x0,6
tick,0x7d8294d2a042,15076987,0,0x0,6
tick,0x7d8294d2a042,15078148,0,0x0,6
tick,0x7d8294d2a042,15079290,0,0x0,6
tick,0x7d8294d2a042,15080440,0,0x0,6
tick,0x7d8294d2a042,15081515,0,0x0,6
tick,0x7d8294d2a042,15082676,0,0x0,6
tick,0x7d8294d2a042,15083681,0,0x0,6
tick,0x7d8294d2a042,15084874,0,0x0,6
tick,0x7d8294d2a042,15085970,0,0x0,6
tick,0x7d8294d2a042,15087056,0,0x0,6
tick,0x7d8294d2a042,15088111,0,0x0,6
tick,0x7d8294d2a042,15089205,0,0x0,6
tick,0x7d8294d2a042,15090279,0,0x0,6
tick,0x7d8294d2a042,15091440,0,0x0,6
tick,0x7d8294d2a042,15092520,0,0x0,6
tick,0x7d8294d2a042,15093511,0,0x0,6
tick,0x7d8294d2a042,15094567,0,0x0,6
tick,0x7d8294d2a042,15095586,0,0x0,6
tick,0x7d8294d2a042,15096658,0,0x0,6
tick,0x7d8294d2a042,15097733,0,0x0,6
tick,0x7d8294d2a042,15098811,0,0x0,6
tick,0x7d8294d2a042,15099894,0,0x0,6
tick,0x7d8294d2a042,15100974,0,0x0,6
tick,0x7d8294d2a042,15102055,0,0x0,6
tick,0x7d8294d2a042,15103138,0,0x0,6
tick,0x7d8294d2a042,15104219,0,0x0,6
tick,0x7d8294d2a042,15105299,0,0x0,6
tick,0x7d8294d2a042,15106381,0,0x0,6
tick,0x7d8294d2a042,15107434,0,0x0,6
tick,0x7d8294d2a042,15108501,0,0x0,6
tick,0x7d8294d2a042,15109565,0,0x0,6
tick,0x7d8294d2a042,15110645,0,0x0,6
tick,0x7d8294d2a042,15111726,0,0x0,6
tick,0x7d8294d2a042,15112805,0,0x0,6
tick,0x7d8294d2a042,15113891,0,0x0,6
tick,0x7d8294d2a042,15114968,0,0x0,6
tick,0x7d8294d2a042,15116054,0,0x0,6
tick,0x7d8294d2a042,15117130,0,0x0,6
tick,0x7d8294d2a042,15118209,0,0x0,6
tick,0x7d8294d2a042,15119289,0,0x0,6
tick,0x7d8294d2a042,15120468,0,0x0,6
tick,0x7d8294d2a042,15121548,0,0x0,6
tick,0x7d8294d2a042,15122628,0,0x0,6
tick,0x7d8294d2a042,15123707,0,0x0,6
tick,0x7d8294d2a042,15124786,0,0x0,6
tick,0x7d8294d2a042,15125868,0,0x0,6
tick,0x7d8294d2a042,15126949,0,0x0,6
tick,0x7d8294d2a042,15128029,0,0x0,6
tick,0x7d8294d2a042,15129110,0,0x0,6
tick,0x7d8294d2a042,15130193,0,0x0,6
tick,0x7d8294d2a042,15131245,0,0x0,6
tick,0x7d8294d2a042,15132394,0,0x0,6
tick,0x7d8294d2a042,15133470,0,0x0,6
tick,0x7d8294d2a042,15134550,0,0x0,6
tick,0x7d8294d2a042,15135603,0,0x0,6
tick,0x7d8294d2a042,15136687,0,0x0,6
tick,0x7d8294d2a042,15137739,0,0x0,6
tick,0x7d8294d2a042,15138793,0,0x0,6
tick,0x7d8294d2a042,15139873,0,0x0,6
tick,0x7d8294d2a042,15140951,0,0x0,6
tick,0x7d8294d2a042,15142032,0,0x0,6
tick,0x7d8294d2a042,15143121,0,0x0,6
tick,0x7d8294d2a042,15144190,0,0x0,6
tick,0x7d8294d2a042,15145275,0,0x0,6
tick,0x7d8294d2a042,15146333,0,0x0,6
tick,0x7d8294d2a042,15147396,0,0x0,6
tick,0x7d8294d2a042,15148434,0,0x0,6
tick,0x7d8294d2a042,15149526,0,0x0,6
tick,0x7d8294d2a042,15150580,0,0x0,6
tick,0x7d8294d2a042,15151646,0,0x0,6
tick,0x7d8294d2a042,15152770,0,0x0,6
tick,0x7d8294d2a042,15153751,0,0x0,6
tick,0x7d8294d2a042,15154895,0,0x0,6
tick,0x7d8294d2a042,15155958,0,0x0,6
tick,0x7d8294d2a042,15157010,0,0x0,6
tick,0x7d8294d2a042,15158068,0,0x0,6
tick,0x7d8294d2a042,15159179,0,0x0,6
tick,0x7d8294d2a042,15160242,0,0x0,6
tick,0x7d8294d2a042,15161227,0,0x0,6
tick,0x7d8294d2a042,15162342,0,0x0,6
tick,0x7d8294d2a042,15163244,0,0x0,6
tick,0x7d8294d2a042,15164468,0,0x0,6
tick,0x7d8294d2a042,15165426,0,0x0,6
tick,0x7d8294d2a042,15166483,0,0x0,6
tick,0x7d8294d2a042,15167568,0,0x0,6
tick,0x7d8294d2a042,15168708,0,0x0,6
tick,0x7d8294d2a042,15169767,0,0x0,6
tick,0x7d8294d2a042,15170815,0,0x0,6
tick,0x7d8294d2a042,15171873,0,0x0,6
tick,0x7d8294d2a042,15172923,0,0x0,6
tick,0x7d8294d2a042,15173981,0,0x0,6
tick,0x7d8294d2a042,15174984,0,0x0,6
tick,0x7d8294d2a042,15176105,0,0x0,6
tick,0x7d8294d2a042,15177153,0,0x0,6
tick,0x7d8294d2a042,15178220,0,0x0,6
tick,0x7d8294d2a042,15179287,0,0x0,6
tick,0x7d8294d2a042,15180320,0,0x0,6
tick,0x7d8294d2a042,15181379,0,0x0,6
tick,0x7d8294d2a042,15182382,0,0x0,6
tick,0x7d8294d2a042,15183420,0,0x0,6
tick,0x7d8294d2a042,15184555,0,0x0,6
tick,0x7d8294d2a042,15185616,0,0x0,6
tick,0x7d8294d2a042,15186688,0,0x0,6
tick,0x7d8294d2a042,15187654,0,0x0,6
tick,0x7d8294d2a042,15188802,0,0x0,6
tick,0x7d8294d2a042,15189820,0,0x0,6
tick,0x7d8294d2a042,15190898,0,0x0,6
tick,0x7d8294d2a042,15191954,0,0x0,6
tick,0x7d8294d2a042,15193023,0,0x0,6
tick,0x7d8294d2a042,15194076,0,0x0,6
tick,0x7d8294d2a042,15195146,0,0x0,6
tick,0x7d8294d2a042,15196190,0,0x0,6
tick,0x7d8294d2a042,15197251,0,0x0,6
tick,0x7d8294d2a042,15198302,0,0x0,6
tick,0x7d8294d2a042,15199357,0,0x0,6
tick,0x7d8294d2a042,15200428,0,0x0,6
tick,0x7d8294d2a042,15201473,0,0x0,6
tick,0x7d8294d2a042,15202546,0,0x0,6
tick,0x7d8294d2a042,15203553,0,0x0,6
tick,0x7d8294d2a042,15204609,0,0x0,6
tick,0x7d8294d2a042,15205693,0,0x0,6
tick,0x7d8294d2a042,15206675,0,0x0,6
tick,0x7d8294d2a042,15207770,0,0x0,6
tick,0x7d8294d2a042,15208839,0,0x0,6
tick,0x7d8294d2a042,15209906,0,0x0,6
tick,0x7d8294d2a042,15210966,0,0x0,6
tick,0x7d8294d2a042,15212010,0,0x0,6
tick,0x7d8294d2a042,15213088,0,0x0,6
tick,0x7d8294d2a042,15214148,0,0x0,6
tick,0x7d8294d2a042,15215206,0,0x0,6
tick,0x7d8294d2a042,15216223,0,0x0,6
tick,0x7d8294d2a042,15217310,0,0x0,6
tick,0x7d8294d2a042,15218375,0,0x0,6
tick,0x7d8294d2a042,15219258,0,0x0,6
tick,0x7d8294d2a042,15220434,0,0x0,6
tick,0x7d8294d2a042,15221548,0,0x0,6
tick,0x7d8294d2a042,15222601,0,0x0,6
tick,0x7d8294d2a042,15223581,0,0x0,6
tick,0x7d8294d2a042,15224730,0,0x0,6
tick,0x7d8294d2a042,15225797,0,0x0,6
tick,0x7d8294d2a042,15226834,0,0x0,6
tick,0x7d8294d2a042,15227884,0,0x0,6
tick,0x7d8294d2a042,15228952,0,0x0,6
tick,0x7d8294d2a042,15230022,0,0x0,6
tick,0x7d8294d2a042,15231069,0,0x0,6
tick,0x7d8294d2a042,15232082,0,0x0,6
tick,0x7d8294d2a042,15233185,0,0x0,6
tick,0x7d8294d2a042,15234240,0,0x0,6
tick,0x7d8294d2a042,15235301,0,0x0,6
tick,0x7d8294d2a042,15236344,0,0x0,6
tick,0x7d8294d2a042,15237406,0,0x0,6
tick,0x7d8294d2a042,15238475,0,0x0,6
tick,0x7d8294d2a042,15239526,0,0x0,6
tick,0x7d8294d2a042,15240598,0,0x0,6
tick,0x7d8294d2a042,15241640,0,0x0,6
tick,0x7d8294d2a042,15242556,0,0x0,6
tick,0x7d8294d2a042,15243564,0,0x0,6
tick,0x7d8294d2a042,15244806,0,0x0,6
tick,0x7d8294d2a042,15245874,0,0x0,6
tick,0x7d8294d2a042,15246932,0,0x0,6
tick,0x7d8294d2a042,15247980,0,0x0,6
tick,0x7d8294d2a042,15249057,0,0x0,6
tick,0x7d8294d2a042,15250104,0,0x0,6
tick,0x7d8294d2a042,15251171,0,0x0,6
tick,0x7d8294d2a042,15252078,0,0x0,6
tick,0x7d8294d2a042,15253126,0,0x0,6
tick,0x7d8294d2a042,15254349,0,0x0,6
tick,0x7d8294d2a042,15255251,0,0x0,6
tick,0x7d8294d2a042,15256450,0,0x0,6
tick,0x7d8294d2a042,15257511,0,0x0,6
tick,0x7d8294d2a042,15258578,0,0x0,6
tick,0x7d8294d2a042,15259575,0,0x0,6
tick,0x7d8294d2a042,15260676,0,0x0,6
tick,0x7d8294d2a042,15261750,0,0x0,6
tick,0x7d8294d2a042,15262737,0,0x0,6
tick,0x7d8294d2a042,15263822,0,0x0,6
tick,0x7d8294d2a042,15264901,0,0x0,6
tick,0x7d8294d2a042,15265956,0,0x0,6
tick,0x7d8294d2a042,15267032,0,0x0,6
tick,0x7d8294d2a042,15268072,0,0x0,6
tick,0x7d8294d2a042,15269135,0,0x0,6
tick,0x7d8294d2a042,15270214,0,0x0,6
tick,0x7d8294d2a042,15271253,0,0x0,6
tick,0x7d8294d2a042,15272306,0,0x0,6
tick,0x7d8294d2a042,15273367,0,0x0,6
tick,0x7d8294d2a042,15274353,0,0x0,6
tick,0x7d8294d2a042,15275353,0,0x0,6
tick,0x7d8294d2a042,15276484,0,0x0,6
tick,0x7d8294d2a042,15277609,0,0x0,6
tick,0x7d8294d2a042,15278662,0,0x0,6
tick,0x7d8294d2a042,15279631,0,0x0,6
tick,0x7d8294d2a042,15280797,0,0x0,6
tick,0x7d8294d2a042,15281887,0,0x0,6
tick,0x7d8294d2a042,15282840,0,0x0,6
tick,0x7d8294d2a042,15283947,0,0x0,6
tick,0x7d8294d2a042,15285019,0,0x0,6
tick,0x7d8294d2a042,15286065,0,0x0,6
tick,0x7d8294d2a042,15287130,0,0x0,6
tick,0x7d8294d2a042,15288202,0,0x0,6
tick,0x7d8294d2a042,15289284,0,0x0,6
tick,0x7d8294d2a042,15290300,0,0x0,6
tick,0x7d8294d2a042,15291347,0,0x0,6
tick,0x7d8294d2a042,15292353,0,0x0,6
tick,0x7d8294d2a042,15293462,0,0x0,6
tick,0x7d8294d2a042,15294459,0,0x0,6
tick,0x7d8294d2a042,15295489,0,0x0,6
tick,0x7d8294d2a042,15296620,0,0x0,6
tick,0x7d8294d2a042,15297694,0,0x0,6
tick,0x7d8294d2a042,15298724,0,0x0,6
tick,0x7d8294d2a042,15299820,0,0x0,6
tick,0x7d8294d2a042,15300919,0,0x0,6
tick,0x7d8294d2a042,15302133,0,0x0,6
tick,0x7d8294d2a042,15303302,0,0x0,6
tick,0x7d8294d2a042,15304307,0,0x0,6
tick,0x7d8294d2a042,15305448,0,0x0,6
tick,0x7d8294d2a042,15306547,0,0x0,6
tick,0x7d8294d2a042,15307572,0,0x0,6
tick,0x7d8294d2a042,15308621,0,0x0,6
tick,0x7d8294d2a042,15309660,0,0x0,6
tick,0x7d8294d2a042,15310742,0,0x0,6
tick,0x7d8294d2a042,15311646,0,0x0,6
tick,0x7d8294d2a042,15312869,0,0x0,6
tick,0x7d8294d2a042,15313916,0,0x0,6
tick,0x7d8294d2a042,15314974,0,0x0,6
tick,0x7d8294d2a042,15316033,0,0x0,6
tick,0x7d8294d2a042,15317093,0,0x0,6
tick,0x7d8294d2a042,15318128,0,0x0,6
tick,0x7d8294d2a042,15319206,0,0x0,6
tick,0x7d8294d2a042,15320251,0,0x0,6
tick,0x7d8294d2a042,15321306,0,0x0,6
tick,0x7d8294d2a042,15322366,0,0x0,6
tick,0x7d8294d2a042,15323426,0,0x0,6
tick,0x7d8294d2a042,15324402,0,0x0,6
tick,0x7d8294d2a042,15325550,0,0x0,6
tick,0x7d8294d2a042,15326604,0,0x0,6
tick,0x7d8294d2a042,15327605,0,0x0,6
tick,0x7d8294d2a042,15328727,0,0x0,6
tick,0x7d8294d2a042,15329760,0,0x0,6
tick,0x7d8294d2a042,15330814,0,0x0,6
tick,0x7d8294d2a042,15331870,0,0x0,6
tick,0x7d8294d2a042,15332937,0,0x0,6
tick,0x7d8294d2a042,15333992,0,0x0,6
tick,0x7d8294d2a042,15335056,0,0x0,6
tick,0x7d8294d2a042,15336106,0,0x0,6
tick,0x7d8294d2a042,15337182,0,0x0,6
tick,0x7d8294d2a042,15338219,0,0x0,6
tick,0x7d8294d2a042,15339277,0,0x0,6
tick,0x7d8294d2a042,15340343,0,0x0,6
tick,0x7d8294d2a042,15341393,0,0x0,6
tick,0x7d8294d2a042,15342443,0,0x0,6
tick,0x7d8294d2a042,15343507,0,0x0,6
tick,0x7d8294d2a042,15344583,0,0x0,6
tick,0x7d8294d2a042,15345551,0,0x0,6
tick,0x7d8294d2a042,15346535,0,0x0,6
tick,0x7d8294d2a042,15347674,0,0x0,6
tick,0x7d8294d2a042,15348780,0,0x0,6
tick,0x7d8294d2a042,15349806,0,0x0,6
tick,0x7d8294d2a042,15350894,0,0x0,6
tick,0x7d8294d2a042,15351959,0,0x0,6
tick,0x7d8294d2a042,15353020,0,0x0,6
tick,0x7d8294d2a042,15354087,0,0x0,6
tick,0x7d8294d2a042,15355139,0,0x0,6
tick,0x7d8294d2a042,15356125,0,0x0,6
tick,0x7d8294d2a042,15357246,0,0x0,6
tick,0x7d8294d2a042,15358310,0,0x0,6
tick,0x7d8294d2a042,15359379,0,0x0,6
tick,0x7d8294d2a042,15360421,0,0x0,6
tick,0x7d8294d2a042,15361493,0,0x0,6
tick,0x7d8294d2a042,15362476,0,0x0,6
tick,0x7d8294d2a042,15363488,0,0x0,6
tick,0x7d8294d2a042,15364614,0,0x0,6
tick,0x7d8294d2a042,15365677,0,0x0,6
tick,0x7d8294d2a042,15366754,0,0x0,6
tick,0x7d8294d2a042,15367767,0,0x0,6
tick,0x7d8294d2a042,15368845,0,0x0,6
tick,0x7d8294d2a042,15369899,0,0x0,6
tick,0x7d8294d2a042,15370957,0,0x0,6
tick,0x7d8294d2a042,15372012,0,0x0,6
tick,0x7d8294d2a042,15373071,0,0x0,6
tick,0x7d8294d2a042,15374070,0,0x0,6
tick,0x7d8294d2a042,15375188,0,0x0,6
tick,0x7d8294d2a042,15376246,0,0x0,6
tick,0x7d8294d2a042,15377309,0,0x0,6
tick,0x7d8294d2a042,15378372,0,0x0,6
tick,0x7d8294d2a042,15379329,0,0x0,6
tick,0x7d8294d2a042,15380384,0,0x0,6
tick,0x7d8294d2a042,15381541,0,0x0,6
tick,0x7d8294d2a042,15382474,0,0x0,6
tick,0x7d8294d2a042,15383586,0,0x0,6
tick,0x7d8294d2a042,15384716,0,0x0,6
tick,0x7d8294d2a042,15385779,0,0x0,6
tick,0x7d8294d2a042,15386834,0,0x0,6
tick,0x7d8294d2a042,15387871,0,0x0,6
tick,0x7d8294d2a042,15388949,0,0x0,6
tick,0x7d8294d2a042,15390020,0,0x0,6
tick,0x7d8294d2a042,15391081,0,0x0,6
tick,0x7d8294d2a042,15392072,0,0x0,6
tick,0x7d8294d2a042,15393128,0,0x0,6
tick,0x7d8294d2a042,15394245,0,0x0,6
tick,0x7d8294d2a042,15395271,0,0x0,6
tick,0x7d8294d2a042,15396356,0,0x0,6
tick,0x7d8294d2a042,15397420,0,0x0,6
tick,0x7d8294d2a042,15398486,0,0x0,6
tick,0x7d8294d2a042,15399541,0,0x0,6
tick,0x7d8294d2a042,15400594,0,0x0,6
tick,0x7d8294d2a042,15401508,0,0x0,6
tick,0x7d8294d2a042,15402557,0,0x0,6
tick,0x7d8294d2a042,15403664,0,0x0,6
tick,0x7d8294d2a042,15404831,0,0x0,6
tick,0x7d8294d2a042,15405879,0,0x0,6
tick,0x7d8294d2a042,15406937,0,0x0,6
tick,0x7d8294d2a042,15407985,0,0x0,6
tick,0x7d8294d2a042,15409047,0,0x0,6
tick,0x7d8294d2a042,15410112,0,0x0,6
tick,0x7d8294d2a042,15411177,0,0x0,6
tick,0x7d8294d2a042,15412220,0,0x0,6
tick,0x7d8294d2a042,15413257,0,0x0,6
tick,0x7d8294d2a042,15414325,0,0x0,6
tick,0x7d8294d2a042,15415299,0,0x0,6
tick,0x7d8294d2a042,15416446,0,0x0,6
tick,0x7d8294d2a042,15417523,0,0x0,6
tick,0x7d8294d2a042,15418564,0,0x0,6
tick,0x7d8294d2a042,15419579,0,0x0,6
tick,0x7d8294d2a042,15420685,0,0x0,6
tick,0x7d8294d2a042,15421665,0,0x0,6
tick,0x7d8294d2a042,15422783,0,0x0,6
tick,0x7d8294d2a042,15423824,0,0x0,6
tick,0x7d8294d2a042,15424913,0,0x0,6
tick,0x7d8294d2a042,15425988,0,0x0,6
tick,0x7d8294d2a042,15427033,0,0x0,6
tick,0x7d8294d2a042,15428079,0,0x0,6
tick,0x7d8294d2a042,15429137,0,0x0,6
tick,0x7d8294d2a042,15430159,0,0x0,6
tick,0x7d8294d2a042,15431208,0,0x0,6
tick,0x7d8294d2a042,15432309,0,0x0,6
tick,0x7d8294d2a042,15433317,0,0x0,6
tick,0x7d8294d2a042,15434355,0,0x0,6
tick,0x7d8294d2a042,15435476,0,0x0,6
tick,0x7d8294d2a042,15436508,0,0x0,6
tick,0x7d8294d2a042,15437624,0,0x0,6
tick,0x7d8294d2a042,15438673,0,0x0,6
tick,0x7d8294d2a042,15439670,0,0x0,6
tick,0x7d8294d2a042,15440734,0,0x0,6
tick,0x7d8294d2a042,15441788,0,0x0,6
tick,0x7d8294d2a042,15442755,0,0x0,6
tick,0x7d8294d2a042,15443880,0,0x0,6
tick,0x7d8294d2a042,15444947,0,0x0,6
tick,0x7d8294d2a042,15446061,0,0x0,6
tick,0x7d8294d2a042,15447127,0,0x0,6
tick,0x7d8294d2a042,15448184,0,0x0,6
tick,0x7d8294d2a042,15449248,0,0x0,6
tick,0x7d8294d2a042,15450250,0,0x0,6
tick,0x7d8294d2a042,15451219,0,0x0,6
tick,0x7d8294d2a042,15452417,0,0x0,6
tick,0x7d8294d2a042,15453429,0,0x0,6
tick,0x7d8294d2a042,15454565,0,0x0,6
tick,0x7d8294d2a042,15455712,0,0x0,6
tick,0x7d8294d2a042,15456948,0,0x0,6
tick,0x7d8294d2a042,15458157,0,0x0,6
tick,0x7d8294d2a042,15459250,0,0x0,6
tick,0x7d8294d2a042,15460255,0,0x0,6
tick,0x7d8294d2a042,15461409,0,0x0,6
tick,0x7d8294d2a042,15462435,0,0x0,6
tick,0x7d8294d2a042,15463587,0,0x0,6
tick,0x7d8294d2a042,15464615,0,0x0,6
tick,0x7d8294d2a042,15465677,0,0x0,6
tick,0x7d8294d2a042,15466716,0,0x0,6
tick,0x7d8294d2a042,15467748,0,0x0,6
tick,0x7d8294d2a042,15468847,0,0x0,6
tick,0x7d8294d2a042,15469908,0,0x0,6
tick,0x7d8294d2a042,15470955,0,0x0,6
tick,0x7d8294d2a042,15472013,0,0x0,6
tick,0x7d8294d2a042,15473084,0,0x0,6
tick,0x7d8294d2a042,15474122,0,0x0,6
tick,0x7d8294d2a042,15475199,0,0x0,6
tick,0x7d8294d2a042,15476241,0,0x0,6
tick,0x7d8294d2a042,15477304,0,0x0,6
tick,0x7d8294d2a042,15478362,0,0x0,6
tick,0x7d8294d2a042,15479428,0,0x0,6
tick,0x7d8294d2a042,15480512,0,0x0,6
tick,0x7d8294d2a042,15481463,0,0x0,6
tick,0x7d8294d2a042,15482622,0,0x0,6
tick,0x7d8294d2a042,15483552,0,0x0,6
tick,0x7d8294d2a042,15484731,0,0x0,6
tick,0x7d8294d2a042,15485797,0,0x0,6
tick,0x7d8294d2a042,15486851,0,0x0,6
tick,0x7d8294d2a042,15487898,0,0x0,6
tick,0x7d8294d2a042,15488960,0,0x0,6
tick,0x7d8294d2a042,15490025,0,0x0,6
tick,0x7d8294d2a042,15491033,0,0x0,6
tick,0x7d8294d2a042,15491996,0,0x0,6
tick,0x7d8294d2a042,15493050,0,0x0,6
tick,0x7d8294d2a042,15494277,0,0x0,6
tick,0x7d8294d2a042,15495248,0,0x0,6
tick,0x7d8294d2a042,15496388,0,0x0,6
tick,0x7d8294d2a042,15497447,0,0x0,6
tick,0x7d8294d2a042,15498493,0,0x0,6
tick,0x7d8294d2a042,15499483,0,0x0,6
tick,0x7d8294d2a042,15500548,0,0x0,6
tick,0x7d8294d2a042,15501672,0,0x0,6
tick,0x7d8294d2a042,15502727,0,0x0,6
tick,0x7d8294d2a042,15503748,0,0x0,6
tick,0x7d8294d2a042,15504834,0,0x0,6
tick,0x7d8294d2a042,15505823,0,0x0,6
tick,0x7d8294d2a042,15506878,0,0x0,6
tick,0x7d8294d2a042,15508002,0,0x0,6
tick,0x7d8294d2a042,15509077,0,0x0,6
tick,0x7d8294d2a042,15510124,0,0x0,6
tick,0x7d8294d2a042,15511202,0,0x0,6
tick,0x7d8294d2a042,15512237,0,0x0,6
tick,0x7d8294d2a042,15513294,0,0x0,6
tick,0x7d8294d2a042,15514352,0,0x0,6
tick,0x7d8294d2a042,15515355,0,0x0,6
tick,0x7d8294d2a042,15516399,0,0x0,6
tick,0x7d8294d2a042,15517458,0,0x0,6
tick,0x7d8294d2a042,15518547,0,0x0,6
tick,0x7d8294d2a042,15519494,0,0x0,6
tick,0x7d8294d2a042,15520695,0,0x0,6
tick,0x7d8294d2a042,15521762,0,0x0,6
tick,0x7d8294d2a042,15522841,0,0x0,6
tick,0x7d8294d2a042,15523830,0,0x0,6
tick,0x7d8294d2a042,15524927,0,0x0,6
tick,0x7d8294d2a042,15525980,0,0x0,6
tick,0x7d8294d2a042,15526969,0,0x0,6
tick,0x7d8294d2a042,15528028,0,0x0,6
tick,0x7d8294d2a042,15529085,0,0x0,6
tick,0x7d8294d2a042,15530217,0,0x0,6
tick,0x7d8294d2a042,15531273,0,0x0,6
tick,0x7d8294d2a042,15532335,0,0x0,6
tick,0x7d8294d2a042,15533397,0,0x0,6
tick,0x7d8294d2a042,15534473,0,0x0,6
tick,0x7d8294d2a042,15535391,0,0x0,6
tick,0x7d8294d2a042,15536400,0,0x0,6
tick,0x7d8294d2a042,15537624,0,0x0,6
tick,0x7d8294d2a042,15538701,0,0x0,6
tick,0x7d8294d2a042,15539636,0,0x0,6
tick,0x7d8294d2a042,15540809,0,0x0,6
tick,0x7d8294d2a042,15541859,0,0x0,6
tick,0x7d8294d2a042,15542929,0,0x0,6
tick,0x7d8294d2a042,15543901,0,0x0,6
tick,0x7d8294d2a042,15544988,0,0x0,6
tick,0x7d8294d2a042,15546059,0,0x0,6
tick,0x7d8294d2a042,15547163,0,0x0,6
tick,0x7d8294d2a042,15548232,0,0x0,6
tick,0x7d8294d2a042,15549276,0,0x0,6
tick,0x7d8294d2a042,15550407,0,0x0,6
tick,0x7d8294d2a042,15551418,0,0x0,6
tick,0x7d8294d2a042,15552482,0,0x0,6
tick,0x7d8294d2a042,15553480,0,0x0,6
tick,0x7d8294d2a042,15554438,0,0x0,6
tick,0x7d8294d2a042,15555489,0,0x0,6
tick,0x7d8294d2a042,15556698,0,0x0,6
tick,0x7d8294d2a042,15557770,0,0x0,6
tick,0x7d8294d2a042,15558840,0,0x0,6
tick,0x7d8294d2a042,15559881,0,0x0,6
tick,0x7d8294d2a042,15560940,0,0x0,6
tick,0x7d8294d2a042,15562010,0,0x0,6
tick,0x7d8294d2a042,15563061,0,0x0,6
tick,0x7d8294d2a042,15564054,0,0x0,6
tick,0x7d8294d2a042,15565128,0,0x0,6
tick,0x7d8294d2a042,15566250,0,0x0,6
tick,0x7d8294d2a042,15567241,0,0x0,6
tick,0x7d8294d2a042,15568317,0,0x0,6
tick,0x7d8294d2a042,15569430,0,0x0,6
tick,0x7d8294d2a042,15570513,0,0x0,6
tick,0x7d8294d2a042,15571538,0,0x0,6
tick,0x7d8294d2a042,15572642,0,0x0,6
tick,0x7d8294d2a042,15573698,0,0x0,6
tick,0x7d8294d2a042,15574751,0,0x0,6
tick,0x7d8294d2a042,15575789,0,0x0,6
tick,0x7d8294d2a042,15576861,0,0x0,6
tick,0x7d8294d2a042,15577916,0,0x0,6
tick,0x7d8294d2a042,15578978,0,0x0,6
tick,0x7d8294d2a042,15579960,0,0x0,6
tick,0x7d8294d2a042,15581018,0,0x0,6
tick,0x7d8294d2a042,15582159,0,0x0,6
tick,0x7d8294d2a042,15583240,0,0x0,6
tick,0x7d8294d2a042,15584202,0,0x0,6
tick,0x7d8294d2a042,15585265,0,0x0,6
tick,0x7d8294d2a042,15586382,0,0x0,6
tick,0x7d8294d2a042,15587382,0,0x0,6
tick,0x7d8294d2a042,15588494,0,0x0,6
tick,0x7d8294d2a042,15589405,0,0x0,6
tick,0x7d8294d2a042,15590597,0,0x0,6
tick,0x7d8294d2a042,15591552,0,0x0,6
tick,0x7d8294d2a042,15592731,0,0x0,6
tick,0x7d8294d2a042,15593779,0,0x0,6
tick,0x7d8294d2a042,15594835,0,0x0,6
tick,0x7d8294d2a042,15595880,0,0x0,6
tick,0x7d8294d2a042,15596933,0,0x0,6
tick,0x7d8294d2a042,15597964,0,0x0,6
tick,0x7d8294d2a042,15599013,0,0x0,6
tick,0x7d8294d2a042,15600131,0,0x0,6
tick,0x7d8294d2a042,15601199,0,0x0,6
tick,0x7d8294d2a042,15602244,0,0x0,6
tick,0x7d8294d2a042,15603315,0,0x0,6
tick,0x7d8294d2a042,15604356,0,0x0,6
tick,0x7d8294d2a042,15605395,0,0x0,6
tick,0x7d8294d2a042,15606414,0,0x0,6
tick,0x7d8294d2a042,15607348,0,0x0,6
tick,0x7d8294d2a042,15608595,0,0x0,6
tick,0x7d8294d2a042,15609654,0,0x0,6
tick,0x7d8294d2a042,15610715,0,0x0,6
tick,0x7d8294d2a042,15611717,0,0x0,6
tick,0x7d8294d2a042,15612829,0,0x0,6
tick,0x7d8294d2a042,15613880,0,0x0,6
tick,0x7d8294d2a042,15614953,0,0x0,6
tick,0x7d8294d2a042,15615919,0,0x0,6
tick,0x7d8294d2a042,15616993,0,0x0,6
tick,0x7d8294d2a042,15618119,0,0x0,6
tick,0x7d8294d2a042,15619167,0,0x0,6
tick,0x7d8294d2a042,15620225,0,0x0,6
tick,0x7d8294d2a042,15621272,0,0x0,6
tick,0x7d8294d2a042,15622326,0,0x0,6
tick,0x7d8294d2a042,15623410,0,0x0,6
tick,0x7d8294d2a042,15624445,0,0x0,6
tick,0x7d8294d2a042,15625431,0,0x0,6
tick,0x7d8294d2a042,15626555,0,0x0,6
tick,0x7d8294d2a042,15627571,0,0x0,6
tick,0x7d8294d2a042,15628595,0,0x0,6
tick,0x7d8294d2a042,15629639,0,0x0,6
tick,0x7d8294d2a042,15630724,0,0x0,6
tick,0x7d8294d2a042,15631770,0,0x0,6
tick,0x7d8294d2a042,15632907,0,0x0,6
tick,0x7d8294d2a042,15633960,0,0x0,6
tick,0x7d8294d2a042,15635016,0,0x0,6
tick,0x7d8294d2a042,15636086,0,0x0,6
tick,0x7d8294d2a042,15637125,0,0x0,6
tick,0x7d8294d2a042,15638198,0,0x0,6
tick,0x7d8294d2a042,15639241,0,0x0,6
tick,0x7d8294d2a042,15640165,0,0x0,6
tick,0x7d8294d2a042,15641353,0,0x0,6
tick,0x7d8294d2a042,15642433,0,0x0,6
tick,0x7d8294d2a042,15643475,0,0x0,6
tick,0x7d8294d2a042,15644540,0,0x0,6
tick,0x7d8294d2a042,15645594,0,0x0,6
tick,0x7d8294d2a042,15646507,0,0x0,6
tick,0x7d8294d2a042,15647578,0,0x0,6
tick,0x7d8294d2a042,15648753,0,0x0,6
tick,0x7d8294d2a042,15649815,0,0x0,6
tick,0x7d8294d2a042,15650877,0,0x0,6
tick,0x7d8294d2a042,15651921,0,0x0,6
tick,0x7d8294d2a042,15653002,0,0x0,6
tick,0x7d8294d2a042,15654033,0,0x0,6
tick,0x7d8294d2a042,15655106,0,0x0,6
tick,0x7d8294d2a042,15656021,0,0x0,6
tick,0x7d8294d2a042,15657074,0,0x0,6
tick,0x7d8294d2a042,15658275,0,0x0,6
tick,0x7d8294d2a042,15659334,0,0x0,6
tick,0x7d8294d2a042,15660397,0,0x0,6
tick,0x7d8294d2a042,15661459,0,0x0,6
tick,0x7d8294d2a042,15662445,0,0x0,6
tick,0x7d8294d2a042,15663572,0,0x0,6
tick,0x7d8294d2a042,15664620,0,0x0,6
tick,0x7d8294d2a042,15665686,0,0x0,6
tick,0x7d8294d2a042,15666747,0,0x0,6
tick,0x7d8294d2a042,15667722,0,0x0,6
tick,0x7d8294d2a042,15668844,0,0x0,6
tick,0x7d8294d2a042,15669888,0,0x0,6
tick,0x7d8294d2a042,15670966,0,0x0,6
tick,0x7d8294d2a042,15672014,0,0x0,6
tick,0x7d8294d2a042,15673071,0,0x0,6
tick,0x7d8294d2a042,15674121,0,0x0,6
tick,0x7d8294d2a042,15675186,0,0x0,6
tick,0x7d8294d2a042,15676234,0,0x0,6
tick,0x7d8294d2a042,15677288,0,0x0,6
tick,0x7d8294d2a042,15678347,0,0x0,6
tick,0x7d8294d2a042,15679415,0,0x0,6
tick,0x7d8294d2a042,15680449,0,0x0,6
tick,0x7d8294d2a042,15681516,0,0x0,6
tick,0x7d8294d2a042,15682588,0,0x0,6
tick,0x7d8294d2a042,15683534,0,0x0,6
tick,0x7d8294d2a042,15684688,0,0x0,6
tick,0x7d8294d2a042,15685740,0,0x0,6
tick,0x7d8294d2a042,15686794,0,0x0,6
tick,0x7d8294d2a042,15687797,0,0x0,6
tick,0x7d8294d2a042,15688895,0,0x0,6
tick,0x7d8294d2a042,15689963,0,0x0,6
tick,0x7d8294d2a042,15691008,0,0x0,6
tick,0x7d8294d2a042,15692066,0,0x0,6
tick,0x7d8294d2a042,15693133,0,0x0,6
tick,0x7d8294d2a042,15694179,0,0x0,6
tick,0x7d8294d2a042,15695252,0,0x0,6
tick,0x7d8294d2a042,15696301,0,0x0,6
tick,0x7d8294d2a042,15697346,0,0x0,6
tick,0x7d8294d2a042,15698413,0,0x0,6
tick,0x7d8294d2a042,15699481,0,0x0,6
tick,0x7d8294d2a042,15700527,0,0x0,6
tick,0x7d8294d2a042,15701590,0,0x0,6
tick,0x7d8294d2a042,15702636,0,0x0,6
tick,0x7d8294d2a042,15703586,0,0x0,6
tick,0x7d8294d2a042,15704753,0,0x0,6
tick,0x7d8294d2a042,15705823,0,0x0,6
tick,0x7d8294d2a042,15706850,0,0x0,6
tick,0x7d8294d2a042,15707927,0,0x0,6
tick,0x7d8294d2a042,15708977,0,0x0,6
tick,0x7d8294d2a042,15710041,0,0x0,6
tick,0x7d8294d2a042,15711091,0,0x0,6
tick,0x7d8294d2a042,15712141,0,0x0,6
tick,0x7d8294d2a042,15713219,0,0x0,6
tick,0x7d8294d2a042,15714249,0,0x0,6
tick,0x7d8294d2a042,15715313,0,0x0,6
tick,0x7d8294d2a042,15716376,0,0x0,6
tick,0x7d8294d2a042,15717429,0,0x0,6
tick,0x7d8294d2a042,15718491,0,0x0,6
tick,0x7d8294d2a042,15719482,0,0x0,6
tick,0x7d8294d2a042,15720621,0,0x0,6
tick,0x7d8294d2a042,15721586,0,0x0,6
tick,0x7d8294d2a042,15722734,0,0x0,6
tick,0x7d8294d2a042,15723717,0,0x0,6
tick,0x7d8294d2a042,15724839,0,0x0,6
tick,0x7d8294d2a042,15725892,0,0x0,6
tick,0x7d8294d2a042,15726899,0,0x0,6
tick,0x7d8294d2a042,15727937,0,0x0,6
tick,0x7d8294d2a042,15728999,0,0x0,6
tick,0x7d8294d2a042,15730117,0,0x0,6
tick,0x7d8294d2a042,15731166,0,0x0,6
tick,0x7d8294d2a042,15732228,0,0x0,6
tick,0x7d8294d2a042,15733303,0,0x0,6
tick,0x7d8294d2a042,15734340,0,0x0,6
tick,0x7d8294d2a042,15735216,0,0x0,6
tick,0x7d8294d2a042,15736399,0,0x0,6
tick,0x7d8294d2a042,15737517,0,0x0,6
tick,0x7d8294d2a042,15738559,0,0x0,6
tick,0x7d8294d2a042,15739515,0,0x0,6
tick,0x7d8294d2a042,15740587,0,0x0,6
tick,0x7d8294d2a042,15741743,0,0x0,6
tick,0x7d8294d2a042,15742798,0,0x0,6
tick,0x7d8294d2a042,15743826,0,0x0,6
tick,0x7d8294d2a042,15744891,0,0x0,6
tick,0x7d8294d2a042,15745949,0,0x0,6
tick,0x7d8294d2a042,15747017,0,0x0,6
tick,0x7d8294d2a042,15748055,0,0x0,6
tick,0x7d8294d2a042,15749129,0,0x0,6
tick,0x7d8294d2a042,15750142,0,0x0,6
tick,0x7d8294d2a042,15751245,0,0x0,6
tick,0x7d8294d2a042,15752299,0,0x0,6
tick,0x7d8294d2a042,15753324,0,0x0,6
tick,0x7d8294d2a042,15754311,0,0x0,6
tick,0x7d8294d2a042,15755464,0,0x0,6
tick,0x7d8294d2a042,15756447,0,0x0,6
tick,0x7d8294d2a042,15757572,0,0x0,6
tick,0x7d8294d2a042,15758624,0,0x0,6
tick,0x7d8294d2a042,15759555,0,0x0,6
tick,0x7d8294d2a042,15760738,0,0x0,6
tick,0x7d8294d2a042,15761804,0,0x0,6
tick,0x7d8294d2a042,15762851,0,0x0,6
tick,0x7d8294d2a042,15763847,0,0x0,6
tick,0x7d8294d2a042,15764889,0,0x0,6
tick,0x7d8294d2a042,15766020,0,0x0,6
tick,0x7d8294d2a042,15767094,0,0x0,6
tick,0x7d8294d2a042,15768135,0,0x0,6
tick,0x7d8294d2a042,15769201,0,0x0,6
tick,0x7d8294d2a042,15770243,0,0x0,6
tick,0x7d8294d2a042,15771303,0,0x0,6
tick,0x7d8294d2a042,15772355,0,0x0,6
tick,0x7d8294d2a042,15773419,0,0x0,6
tick,0x7d8294d2a042,15774477,0,0x0,6
tick,0x7d8294d2a042,15775469,0,0x0,6
tick,0x7d8294d2a042,15776608,0,0x0,6
tick,0x7d8294d2a042,15777575,0,0x0,6
tick,0x7d8294d2a042,15778733,0,0x0,6
tick,0x7d8294d2a042,15779665,0,0x0,6
tick,0x7d8294d2a042,15780825,0,0x0,6
tick,0x7d8294d2a042,15781891,0,0x0,6
tick,0x7d8294d2a042,15782793,0,0x0,6
tick,0x7d8294d2a042,15783980,0,0x0,6
tick,0x7d8294d2a042,15785050,0,0x0,6
tick,0x7d8294d2a042,15786097,0,0x0,6
tick,0x7d8294d2a042,15787166,0,0x0,6
tick,0x7d8294d2a042,15788225,0,0x0,6
tick,0x7d8294d2a042,15789268,0,0x0,6
tick,0x7d8294d2a042,15790322,0,0x0,6
tick,0x7d8294d2a042,15791385,0,0x0,6
tick,0x7d8294d2a042,15792438,0,0x0,6
tick,0x7d8294d2a042,15793503,0,0x0,6
tick,0x7d8294d2a042,15794410,0,0x0,6
tick,0x7d8294d2a042,15795413,0,0x0,6
tick,0x7d8294d2a042,15796567,0,0x0,6
tick,0x7d8294d2a042,15797678,0,0x0,6
tick,0x7d8294d2a042,15798741,0,0x0,6
tick,0x7d8294d2a042,15799742,0,0x0,6
tick,0x7d8294d2a042,15800851,0,0x0,6
tick,0x7d8294d2a042,15801906,0,0x0,6
tick,0x7d8294d2a042,15802902,0,0x0,6
tick,0x7d8294d2a042,15803964,0,0x0,6
tick,0x7d8294d2a042,15805115,0,0x0,6
tick,0x7d8294d2a042,15806198,0,0x0,6
tick,0x7d8294d2a042,15807292,0,0x0,6
tick,0x7d8294d2a042,15808425,0,0x0,6
tick,0x7d8294d2a042,15809510,0,0x0,6
tick,0x7d8294d2a042,15810655,0,0x0,6
tick,0x7d8294d2a042,15811662,0,0x0,6
tick,0x7d8294d2a042,15812877,0,0x0,6
tick,0x7d8294d2a042,15814029,0,0x0,6
tick,0x7d8294d2a042,15815169,0,0x0,6
tick,0x7d8294d2a042,15816267,0,0x0,6
tick,0x7d8294d2a042,15817313,0,0x0,6
tick,0x7d8294d2a042,15818395,0,0x0,6
tick,0x7d8294d2a042,15819501,0,0x0,6
tick,0x7d8294d2a042,15820604,0,0x0,6
tick,0x7d8294d2a042,15821604,0,0x0,6
tick,0x7d8294d2a042,15822686,0,0x0,6
tick,0x7d8294d2a042,15823765,0,0x0,6
tick,0x7d8294d2a042,15824839,0,0x0,6
tick,0x7d8294d2a042,15825913,0,0x0,6
tick,0x7d8294d2a042,15826995,0,0x0,6
tick,0x7d8294d2a042,15828075,0,0x0,6
tick,0x7d8294d2a042,15829160,0,0x0,6
tick,0x7d8294d2a042,15830234,0,0x0,6
tick,0x7d8294d2a042,15831320,0,0x0,6
tick,0x7d8294d2a042,15832399,0,0x0,6
tick,0x7d8294d2a042,15833482,0,0x0,6
tick,0x7d8294d2a042,15834555,0,0x0,6
tick,0x7d8294d2a042,15835607,0,0x0,6
tick,0x7d8294d2a042,15836683,0,0x0,6
tick,0x7d8294d2a042,15837763,0,0x0,6
tick,0x7d8294d2a042,15838843,0,0x0,6
tick,0x7d8294d2a042,15839922,0,0x0,6
tick,0x7d8294d2a042,15841013,0,0x0,6
tick,0x7d8294d2a042,15842113,0,0x0,6
tick,0x7d8294d2a042,15843164,0,0x0,6
tick,0x7d8294d2a042,15844256,0,0x0,6
tick,0x7d8294d2a042,15845306,0,0x0,6
tick,0x7d8294d2a042,15846322,0,0x0,6
tick,0x7d8294d2a042,15847418,0,0x0,6
tick,0x7d8294d2a042,15848599,0,0x0,6
tick,0x7d8294d2a042,15849573,0,0x0,6
tick,0x7d8294d2a042,15850668,0,0x0,6
tick,0x7d8294d2a042,15851699,0,0x0,6
tick,0x7d8294d2a042,15852778,0,0x0,6
tick,0x7d8294d2a042,15853833,0,0x0,6
tick,0x7d8294d2a042,15854910,0,0x0,6
tick,0x7d8294d2a042,15855985,0,0x0,6
tick,0x7d8294d2a042,15857067,0,0x0,6
tick,0x7d8294d2a042,15858151,0,0x0,6
tick,0x7d8294d2a042,15859226,0,0x0,6
tick,0x7d8294d2a042,15860306,0,0x0,6
tick,0x7d8294d2a042,15861381,0,0x0,6
tick,0x7d8294d2a042,15862461,0,0x0,6
tick,0x7d8294d2a042,15863515,0,0x0,6
tick,0x7d8294d2a042,15864600,0,0x0,6
tick,0x7d8294d2a042,15865681,0,0x0,6
tick,0x7d8294d2a042,15866754,0,0x0,6
tick,0x7d8294d2a042,15867827,0,0x0,6
tick,0x7d8294d1ba9a,15868903,0,0x0,6
tick,0x7d8294d1ba9a,15870080,0,0x0,6
tick,0x64950afa91b2,15871096,0,0x0,6
tick,0x7d8294d2a042,15872236,0,0x0,6
tick,0x7d8294d1ba9a,15873330,0,0x0,6
tick,0x7d8294d2a042,15874285,0,0x0,6
tick,0x64950cfc98a4,15875331,0,0x0,6
tick,0x7d8294d2a042,15876514,0,0x0,6
tick,0x7d8294d2a042,15877698,0,0x0,6
tick,0x7d8294d2a042,15878772,0,0x0,6
tick,0x7d8294d2a042,15879918,0,0x0,6
tick,0x7d8294d2a042,15881084,0,0x0,6
tick,0x7d8294d2a042,15882100,0,0x0,6
tick,0x7d8294d2a042,15883170,0,0x0,6
tick,0x64950d16ff4b,15884833,0,0x0,1
delete,MemoryChunk,0x7d827012dd30
delete,MemoryChunk,0x7d82701564a0
delete,MemoryChunk,0x7d8270086330
delete,MemoryChunk,0x7d82701585f0
code-move,0x2c3700580040,0x2c3700308ed8
new,MemoryChunk,0x2c3700c80000,262144
code-move,0x2c37005800b8,0x2c3700c80034
code-move,0x2c37005801f8,0x2c3700c80174
code-move,0x2c3700580260,0x2c3700c801dc
code-move,0x2c370058032c,0x2c3700c802a8
code-move,0x2c3700580388,0x2c3700c80304
code-move,0x2c3700580424,0x2c3700c803a0
code-move,0x2c37005804c4,0x2c3700c80440
code-move,0x2c3700580594,0x2c3700c80510
code-move,0x2c37005805f0,0x2c3700c8056c
code-move,0x2c3700580644,0x2c3700c805c0
code-move,0x2c37005806a0,0x2c3700c8061c
code-move,0x2c37005806f8,0x2c3700c80674
code-move,0x2c370058074c,0x2c3700c806c8
code-move,0x2c37005807b8,0x2c3700c80734
code-move,0x2c370058081c,0x2c3700c80798
code-move,0x2c3700580880,0x2c3700c807fc
code-move,0x2c3700580904,0x2c3700c80880
code-move,0x2c37005809ac,0x2c3700c80928
code-move,0x2c3700580a44,0x2c3700c809c0
code-move,0x2c3700580bf0,0x2c3700c80b6c
code-move,0x2c3700580e6c,0x2c3700c80de8
code-move,0x2c3700580f10,0x2c3700c80e8c
code-move,0x2c370058107c,0x2c3700c80ff8
code-move,0x2c3700581310,0x2c3700c8128c
code-move,0x2c3700581548,0x2c3700c814c4
code-move,0x2c3700581714,0x2c3700c81690
code-move,0x2c3700581798,0x2c3700c81714
code-move,0x2c37005818b4,0x2c3700c81830
code-move,0x2c3700581964,0x2c3700c818e0
code-move,0x2c37005819cc,0x2c3700c81948
code-move,0x2c3700581a58,0x2c3700c819d4
code-move,0x2c3700581ab4,0x2c3700c81a30
code-move,0x2c3700581b98,0x2c3700c81b14
code-move,0x2c3700582078,0x2c3700c81ff4
code-move,0x2c37005820d8,0x2c3700c82054
code-move,0x2c37005821a8,0x2c3700c82124
code-move,0x2c37005825f4,0x2c3700c82570
code-move,0x2c37005826cc,0x2c3700c82648
code-move,0x2c3700582904,0x2c3700c82880
code-move,0x2c3700582c0c,0x2c3700c82b88
code-move,0x2c3700582c8c,0x2c3700c82c08
code-move,0x2c3700582cdc,0x2c3700c82c58
code-move,0x2c3700582d38,0x2c3700c82cb4
code-move,0x2c3700582e44,0x2c3700c82dc0
code-move,0x2c370058309c,0x2c3700c83018
code-move,0x2c3700583110,0x2c3700c8308c
code-move,0x2c3700583208,0x2c3700c83184
code-move,0x2c37005838c0,0x2c3700c8383c
code-move,0x2c3700583904,0x2c3700c83880
code-move,0x2c3700584cf0,0x2c3700c83a38
code-move,0x2c3700584ee4,0x2c3700c83c2c
code-move,0x2c37005850a8,0x2c3700c83df0
code-move,0x2c3700585394,0x2c3700c840dc
code-move,0x2c37005854a0,0x2c3700c841e8
code-move,0x2c3700585594,0x2c3700c842dc
code-move,0x2c37005856b4,0x2c3700c843fc
code-move,0x2c37005857b4,0x2c3700c844fc
code-move,0x2c370058580c,0x2c3700c84554
code-move,0x2c3700585878,0x2c3700c845c0
code-move,0x2c3700585990,0x2c3700c846d8
code-move,0x2c3700585a7c,0x2c3700c847c4
code-move,0x2c3700585af4,0x2c3700c8483c
code-move,0x2c3700585ba4,0x2c3700c848ec
code-move,0x2c3700585c9c,0x2c3700c849e4
code-move,0x2c3700585e98,0x2c3700c84be0
code-move,0x2c37005860f4,0x2c3700c84e3c
code-move,0x2c3700586248,0x2c3700c84f90
code-move,0x2c370058643c,0x2c3700c85184
code-move,0x2c37005864f8,0x2c3700c85240
code-move,0x2c3700586628,0x2c3700c85370
code-move,0x2c3700586700,0x2c3700c85448
code-move,0x2c37005868fc,0x2c3700c85644
code-move,0x2c3700586970,0x2c3700c856b8
code-move,0x2c37005869e0,0x2c3700c85728
code-move,0x2c3700586a24,0x2c3700c8576c
code-move,0x2c3700586a68,0x2c3700c857b0
code-move,0x2c3700586af4,0x2c3700c8583c
code-move,0x2c3700586c40,0x2c3700c85988
code-move,0x2c3700586e10,0x2c3700c85b58
code-move,0x2c3700586e7c,0x2c3700c85bc4
code-move,0x2c3700586ed8,0x2c3700c85c20
code-move,0x2c3700586ff0,0x2c3700c85d38
code-move,0x2c3700587340,0x2c3700c86088
code-move,0x2c3700587390,0x2c3700c860d8
code-move,0x2c37005873e4,0x2c3700c8612c
code-move,0x2c3700587470,0x2c3700c861b8
code-move,0x2c3700587560,0x2c3700c862a8
code-move,0x2c3700587624,0x2c3700c8636c
code-move,0x2c37005877a0,0x2c3700c864e8
code-move,0x2c3700587814,0x2c3700c8655c
code-move,0x2c370058787c,0x2c3700c865c4
code-move,0x2c37005878d0,0x2c3700c86618
code-move,0x2c370058792c,0x2c3700c86674
code-move,0x2c37005879a0,0x2c3700c866e8
code-move,0x2c3700587a28,0x2c3700c86770
code-move,0x2c3700587aa4,0x2c3700c867ec
code-move,0x2c3700587b24,0x2c3700c8686c
code-move,0x2c3700587b94,0x2c3700c868dc
code-move,0x2c3700587bfc,0x2c3700c86944
code-move,0x2c3700587cc8,0x2c3700c86a10
code-move,0x2c3700587df8,0x2c3700c86b40
code-move,0x2c3700587efc,0x2c3700c86c44
code-move,0x2c3700587f70,0x2c3700c86cb8
code-move,0x2c3700587fdc,0x2c3700c86d24
code-move,0x2c3700588050,0x2c3700c86d98
code-move,0x2c370058809c,0x2c3700c86de4
code-move,0x2c3700588114,0x2c3700c86e5c
code-move,0x2c3700588194,0x2c3700c86edc
delete,MemoryChunk,0x7d8268007000
delete,MemoryChunk,0x7d82700352d0
delete,MemoryChunk,0x7d82701a9ee0
delete,MemoryChunk,0x7d82701ac030
delete,MemoryChunk,0x7d827003b280
delete,MemoryChunk,0x7d8270039130
delete,MemoryChunk,0x7d827002ebd0
delete,MemoryChunk,0x7d827002ca80
delete,MemoryChunk,0x7d82701a7d90
delete,MemoryChunk,0x7d82701a5c40
delete,MemoryChunk,0x7d82701a3af0
delete,MemoryChunk,0x7d827003d3d0
delete,MemoryChunk,0x7d82700e8f30
delete,MemoryChunk,0x7d82700ed370
delete,MemoryChunk,0x7d82700e6d30
delete,MemoryChunk,0x7d82700eb150
tick,0x7d8294d25c1b,15885886,0,0x0,1
code-creation,JS,9,15886105,0x2c3700c86f80,26,readableStreamThrowIfErrored ext:deno_web/06_streams.js:1177:38,0x2c37001e5a00,~
code-source-info,0x2c3700c86f80,21,31741,31827,C0O31765C5O31764C11O31773C16O31794C18O31807C20O31806C23O31794C25O31826,,
code-creation,JS,9,15886156,0x2c3700c87014,120,readableStreamClose ext:deno_web/06_streams.js:1650:29,0x2c37001e5a3c,~
code-source-info,0x2c3700c87014,21,45119,45737,C0O45132C6O45146C11O45145C17O45154C21O45132C25O45180C31O45188C35O45277C37O45284C39O45283C43O45296C45O45315C46O45322C47O45329C50O45333C56O45440C58O45447C60O45446C64O45487C70O45492C75O45540C80O45540C85O45569C90O45569C94O45467C98O45693C100O45700C102O45699C106O45716C113O45716C119O45736,,
code-creation,JS,9,15886185,0x2c3700c87114,43,resolve ext:deno_web/06_streams.js:145:10,0x2c37001e5de8,~
code-source-info,0x2c3700c87114,21,3464,3635,C0O3522C2O3531C8O3538C13O3561C14O3568C15O3579C20O3591C24O3610C26O3615C36O3623C42O3634,,
code-creation,JS,9,15886287,0x2c3700c8719c,53, ext:runtime/40_process.js:298:54,0x2c37008457c8,~
code-source-info,0x2c3700c8719c,297,6067,6179,C0O6084C14O6105C18O6092C24O6113C27O6112C35O6129C46O6148C50O6162C52O6173,,
new,MemoryChunk,0x2c3700580000,262144
code-creation,JS,10,15886474,0x64956d803c00,144,compareMeasurements ext:cli/40_bench.js:187:29,0x2c370055f1e0,^
code-source-info,0x64956d803c00,309,5332,5402,,,
code-creation,JS,10,15886497,0x64956d803cc0,112,SafeIterator ext:core/00_primordials.js:316:18,0x2c37001c84e8,^
code-source-info,0x64956d803cc0,3,10020,10084,,,
code-creation,JS,10,15886503,0x64956d803d40,40, ext:core/00_primordials.js:322:23,0x2c37001c8580,^
code-source-info,0x64956d803d40,3,10167,10200,,,
code-creation,JS,10,15886508,0x64956d803d80,104,next ext:core/00_primordials.js:319:11,0x2c37001c8534,^
code-source-info,0x64956d803d80,3,10095,10144,,,
code-creation,JS,10,15886513,0x64956d803e00,256,assert ext:deno_web/00_infra.js:372:16,0x2c37001d83b0,^
code-source-info,0x64956d803e00,12,8847,8938,,,
code-creation,JS,10,15886519,0x64956d803f40,4172,eventLoopTick ext:core/01_core.js:155:25,0x2c37001ca06c,^
code-source-info,0x64956d803f40,5,3844,5908,,,
tick,0x7d8294d2a042,15887003,0,0x0,6
tick,0x7d8294d2a042,15888072,0,0x0,6
code-creation,Script,9,15889077,0x2c3700c8727c,259, file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:1:1,0x2c370085339c,~
script-source,312,file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs,import { toList\x2C prepend as listPrepend\x2C CustomType as $CustomType } from "./gleam.mjs";\n\nexport class R extends $CustomType {}\n\nexport class B extends $CustomType {}\n\nexport class G extends $CustomType {}\n\nexport class Red extends $CustomType {}\n\nexport class Black extends $CustomType {}\n\nexport class Node extends $CustomType {\n  constructor(x0\x2C x1\x2C x2\x2C x3) {\n    super();\n    this[0] = x0;\n    this[1] = x1;\n    this[2] = x2;\n    this[3] = x3;\n  }\n}\n\nexport class Empty extends $CustomType {}\n\nfunction balance(c\x2C v\x2C t1\x2C t2) {\n  if (c instanceof Black) {\n  if (t1 instanceof Node) {\n  if (t1[0] instanceof Red) {\n  if (t1[2] instanceof Node) {\n  if (t1[2][0] instanceof Red) {\n  let d = t2;\n  let b = t1[2][3];\n  let a = t1[2][2];\n  let y = t1[1];\n  let c1 = t1[3];\n  let z = v;\n  let x = t1[2][1];\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t1[3] instanceof Node) {\n  if (t1[3][0] instanceof Red) {\n  let d = t2;\n  let b = t1[3][2];\n  let a = t1[2];\n  let y = t1[3][1];\n  let c1 = t1[3][3];\n  let z = v;\n  let x = t1[1];\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}}\n  } else {\n  if (t1[3] instanceof Node) {\n  if (t1[3][0] instanceof Red) {\n  let d = t2;\n  let b = t1[3][2];\n  let a = t1[2];\n  let y = t1[3][1];\n  let c1 = t1[3][3];\n  let z = v;\n  let x = t1[1];\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}}\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2 instanceof Node) {\n  if (t2[0] instanceof Red) {\n  if (t2[2] instanceof Node) {\n  if (t2[2][0] instanceof Red) {\n  let d = t2[3];\n  let b = t2[2][2];\n  let a = t1;\n  let y = t2[2][1];\n  let c1 = t2[2][3];\n  let z = t2[1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  if (t2[3] instanceof Node) {\n  if (t2[3][0] instanceof Red) {\n  let d = t2[3][3];\n  let b = t2[2];\n  let a = t1;\n  let y = t2[1];\n  let c1 = t2[3][2];\n  let z = t2[3][1];\n  let x = v;\n  return new Node(\n    new Red()\x2C\n    y\x2C\n    new Node(new Black()\x2C x\x2C a\x2C b)\x2C\n    new Node(new Black()\x2C z\x2C c1\x2C d)\x2C\n  );\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}}\n  } else {\n  let c2 = t1;\n  let b = v;\n  let a = c;\n  let d = t2;\n  return new Node(a\x2C b\x2C c2\x2C d);}\n}\n\nfunction balance_tuple(x) {\n  return balance(x[0]\x2C x[1]\x2C x[2]\x2C x[3]);\n}\n\nfunction map_acc(loop$xs\x2C loop$f\x2C loop$acc) {\n  while (true) {\n    let xs = loop$xs;\n    let f = loop$f;\n    let acc = loop$acc;\n    if (xs.atLeastLength(1)) {\n    let ys= xs.tail;\n    let x= xs.head;\n    loop$xs = ys;\n    loop$f = f;\n    loop$acc = listPrepend(f(x)\x2C acc);\n    }else if (xs.hasLength(0)) {\n    return acc;\n    }\n  }\n}\n\nfunction map(xs\x2C f) {\n  return map_acc(xs\x2C f\x2C toList([]));\n}\n\nexport function main() {\n  let cases = toList([\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      1\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      1\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Empty()\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      2\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Empty()\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Empty()\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Red()\x2C\n      3\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Black()\x2C\n        1\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        3\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Empty()\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Red()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        2\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Black()\x2C\n        2\x2C\n        new Node(new Black()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Empty()\x2C\n      )\x2C\n    ]\x2C\n    [\n      new Black()\x2C\n      3\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Red()\x2C 2\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Red()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n      new Node(\n        new Red()\x2C\n        1\x2C\n        new Node(new Black()\x2C 1\x2C new Empty()\x2C new Empty())\x2C\n        new Node(new Black()\x2C 3\x2C new Empty()\x2C new Empty())\x2C\n      )\x2C\n    ]\x2C\n  ]);\n  return map(cases\x2C balance_tuple);\n}\n
code-source-info,0x2c3700c8727c,312,0,31010,C10O0C52O0C72O0C79O113C103O97C106O152C128O136C131O191C153O175C156O232C178O214C181O275C203O255C206O317C228O298C231O482C253O462C258O31010,,
tick,0x7d8294c869a8,15889818,0,0x0,9
code-creation,Script,9,15889843,0x2c3700c873f0,45, file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/gleam.mjs:1:1,0x2c3700853e4c,~
script-source,313,file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/gleam.mjs,export * from "../prelude.mjs";\n
code-source-info,0x2c3700c873f0,313,0,32,C10O0C15O0C35O0C44O32,,
code-creation,Script,9,15890060,0x2c3700c87548,498, file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:1:1,0x2c3700855200,~
script-source,314,file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs,// Values marked with @internal are not part of the public API and may change\n// without notice.\n\nexport class CustomType {\n  withFields(fields) {\n    let properties = Object.keys(this).map((label) =>\n      label in fields ? fields[label] : this[label]\x2C\n    );\n    return new this.constructor(...properties);\n  }\n}\n\nexport class List {\n  static fromArray(array\x2C tail) {\n    let t = tail || new Empty();\n    for (let i = array.length - 1; i >= 0; --i) {\n      t = new NonEmpty(array[i]\x2C t);\n    }\n    return t;\n  }\n\n  [Symbol.iterator]() {\n    return new ListIterator(this);\n  }\n\n  toArray() {\n    return [...this];\n  }\n\n  // @internal\n  atLeastLength(desired) {\n    for (let _ of this) {\n      if (desired <= 0) return true;\n      desired--;\n    }\n    return desired <= 0;\n  }\n\n  // @internal\n  hasLength(desired) {\n    for (let _ of this) {\n      if (desired <= 0) return false;\n      desired--;\n    }\n    return desired === 0;\n  }\n\n  countLength() {\n    let length = 0;\n    for (let _ of this) length++;\n    return length;\n  }\n}\n\n// @internal\nexport function prepend(element\x2C tail) {\n  return new NonEmpty(element\x2C tail);\n}\n\nexport function toList(elements\x2C tail) {\n  return List.fromArray(elements\x2C tail);\n}\n\n// @internal\nclass ListIterator {\n  #current;\n\n  constructor(current) {\n    this.#current = current;\n  }\n\n  next() {\n    if (this.#current instanceof Empty) {\n      return { done: true };\n    } else {\n      let { head\x2C tail } = this.#current;\n      this.#current = tail;\n      return { value: head\x2C done: false };\n    }\n  }\n}\n\nexport class Empty extends List {}\n\nexport class NonEmpty extends List {\n  constructor(head\x2C tail) {\n    super();\n    this.head = head;\n    this.tail = tail;\n  }\n}\n\nexport class BitArray {\n  constructor(buffer) {\n    if (!(buffer instanceof Uint8Array)) {\n      throw "BitArray can only be constructed from a Uint8Array";\n    }\n    this.buffer = buffer;\n  }\n\n  // @internal\n  get length() {\n    return this.buffer.length;\n  }\n\n  // @internal\n  byteAt(index) {\n    return this.buffer[index];\n  }\n\n  // @internal\n  floatAt(index) {\n    return byteArrayToFloat(this.buffer.slice(index\x2C index + 8));\n  }\n\n  // @internal\n  intFromSlice(start\x2C end) {\n    return byteArrayToInt(this.buffer.slice(start\x2C end));\n  }\n\n  // @internal\n  binaryFromSlice(start\x2C end) {\n    return new BitArray(this.buffer.slice(start\x2C end));\n  }\n\n  // @internal\n  sliceAfter(index) {\n    return new BitArray(this.buffer.slice(index));\n  }\n}\n\nexport class UtfCodepoint {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\n// @internal\nexport function toBitArray(segments) {\n  let size = (segment) =>\n    segment instanceof Uint8Array ? segment.byteLength : 1;\n  let bytes = segments.reduce((acc\x2C segment) => acc + size(segment)\x2C 0);\n  let view = new DataView(new ArrayBuffer(bytes));\n  let cursor = 0;\n  for (let segment of segments) {\n    if (segment instanceof Uint8Array) {\n      new Uint8Array(view.buffer).set(segment\x2C cursor);\n      cursor += segment.byteLength;\n    } else {\n      view.setInt8(cursor\x2C segment);\n      cursor++;\n    }\n  }\n  return new BitArray(new Uint8Array(view.buffer));\n}\n\n// @internal\n// Derived from this answer https://stackoverflow.com/questions/8482309/converting-javascript-integer-to-byte-array-and-back\nexport function sizedInt(int\x2C size) {\n  let value = int;\n  if (size < 0) {\n    return new Uint8Array();\n  }\n  if (size % 8 != 0) {\n    const msg = `Bit arrays must be byte aligned on JavaScript\x2C got size of ${size} bits`;\n    throw new globalThis.Error(msg);\n  }\n  const byteArray = new Uint8Array(size / 8);\n\n  for (let index = 0; index < byteArray.length; index++) {\n    const byte = value & 0xff;\n    byteArray[index] = byte;\n    value = (value - byte) / 256;\n  }\n  return byteArray.reverse();\n}\n\n// @internal\nexport function byteArrayToInt(byteArray) {\n  byteArray = byteArray.reverse();\n  let value = 0;\n  for (let i = byteArray.length - 1; i >= 0; i--) {\n    value = value * 256 + byteArray[i];\n  }\n  return value;\n}\n\n// @internal\nexport function byteArrayToFloat(byteArray) {\n  return new Float64Array(byteArray.reverse().buffer)[0];\n}\n\n// @internal\nexport function stringBits(string) {\n  return new TextEncoder().encode(string);\n}\n\n// @internal\nexport function codepointBits(codepoint) {\n  return stringBits(String.fromCodePoint(codepoint.value));\n}\n\n// @internal\nexport function float64Bits(float) {\n  return new Uint8Array(Float64Array.from([float]).buffer).reverse();\n}\n\nexport class Result extends CustomType {\n  // @internal\n  static isResult(data) {\n    return data instanceof Result;\n  }\n}\n\nexport class Ok extends Result {\n  constructor(value) {\n    super();\n    this[0] = value;\n  }\n\n  // @internal\n  isOk() {\n    return true;\n  }\n}\n\nexport class Error extends Result {\n  constructor(detail) {\n    super();\n    this[0] = detail;\n  }\n\n  // @internal\n  isOk() {\n    return false;\n  }\n}\n\nexport function isEqual(x\x2C y) {\n  let values = [x\x2C y];\n\n  while (values.length) {\n    let a = values.pop();\n    let b = values.pop();\n    if (a === b) continue;\n\n    if (!isObject(a) || !isObject(b)) return false;\n    let unequal =\n      !structurallyCompatibleObjects(a\x2C b) ||\n      unequalDates(a\x2C b) ||\n      unequalBuffers(a\x2C b) ||\n      unequalArrays(a\x2C b) ||\n      unequalMaps(a\x2C b) ||\n      unequalSets(a\x2C b) ||\n      unequalRegExps(a\x2C b);\n    if (unequal) return false;\n\n    const proto = Object.getPrototypeOf(a);\n    if (proto !== null && typeof proto.equals === "function") {\n      try {\n        if (a.equals(b)) continue;\n        else return false;\n      } catch {}\n    }\n\n    let [keys\x2C get] = getters(a);\n    for (let k of keys(a)) {\n      values.push(get(a\x2C k)\x2C get(b\x2C k));\n    }\n  }\n\n  return true;\n}\n\nfunction getters(object) {\n  if (object instanceof Map) {\n    return [(x) => x.keys()\x2C (x\x2C y) => x.get(y)];\n  } else {\n    let extra = object instanceof globalThis.Error ? ["message"] : [];\n    return [(x) => [...extra\x2C ...Object.keys(x)]\x2C (x\x2C y) => x[y]];\n  }\n}\n\nfunction unequalDates(a\x2C b) {\n  return a instanceof Date && (a > b || a < b);\n}\n\nfunction unequalBuffers(a\x2C b) {\n  return (\n    a.buffer instanceof ArrayBuffer &&\n    a.BYTES_PER_ELEMENT &&\n    !(a.byteLength === b.byteLength && a.every((n\x2C i) => n === b[i]))\n  );\n}\n\nfunction unequalArrays(a\x2C b) {\n  return Array.isArray(a) && a.length !== b.length;\n}\n\nfunction unequalMaps(a\x2C b) {\n  return a instanceof Map && a.size !== b.size;\n}\n\nfunction unequalSets(a\x2C b) {\n  return (\n    a instanceof Set && (a.size != b.size || [...a].some((e) => !b.has(e)))\n  );\n}\n\nfunction unequalRegExps(a\x2C b) {\n  return a instanceof RegExp && (a.source !== b.source || a.flags !== b.flags);\n}\n\nfunction isObject(a) {\n  return typeof a === "object" && a !== null;\n}\n\nfunction structurallyCompatibleObjects(a\x2C b) {\n  if (typeof a !== "object" && typeof b !== "object" && (!a || !b))\n    return false;\n\n  let nonstructural = [Promise\x2C WeakSet\x2C WeakMap\x2C Function];\n  if (nonstructural.some((c) => a instanceof c)) return false;\n\n  return a.constructor === b.constructor;\n}\n\n// @internal\nexport function remainderInt(a\x2C b) {\n  if (b === 0) {\n    return 0;\n  } else {\n    return a % b;\n  }\n}\n\n// @internal\nexport function divideInt(a\x2C b) {\n  return Math.trunc(divideFloat(a\x2C b));\n}\n\n// @internal\nexport function divideFloat(a\x2C b) {\n  if (b === 0) {\n    return 0;\n  } else {\n    return a / b;\n  }\n}\n\n// @internal\nexport function makeError(variant\x2C module\x2C line\x2C fn\x2C message\x2C extra) {\n  let error = new globalThis.Error(message);\n  error.gleam_error = variant;\n  error.module = module;\n  error.line = line;\n  error.fn = fn;\n  for (let k in extra) error[k] = extra[k];\n  return error;\n}\n
code-source-info,0x2c3700c87548,314,0,7589,C10O0C85O0C105O0C137O105C155O525C159O525C200O323C255O1225C257O1566C279O1546C282O1605C304O1582C368O1711C391O2457C401O4458C432O4437C435O4578C462O4561C465O4726C492O4706C497O7589,,
code-creation,JS,9,15890253,0x2c3700c877a4,11,ListIterator file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:65:20,0x2c3700855f64,~
code-source-info,0x2c3700c877a4,314,1244,1537,C4O1248C10O1537,,
tick,0x7d8294c86a8e,15890264,0,0x0,9
code-creation,JS,9,15890353,0x2c3700c87804,78,start ext:cli/40_bench.js:385:10,0x2c37005686d0,~
code-source-info,0x2c3700c87804,309,10603,10991,C0O10614C10O10642C14O10633C19O10656C31O10662C36O10656C37O10782C46O10835C58O10841C63O10835C64O10942C69O10974C72O10972C77O10990,,
code-creation,JS,9,15890693,0x2c3700c87998,18439,main file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:625:21,0x2c3700853638,~
code-source-info,0x2c3700c
code-creation,JS,9,15891176,0x2c3700c8d420,31,Red file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:9:8,0x2c3700853818,~
code-source-info,0x2c3700c8d420,312,214,214,C3O214C24O214C30O214,,
code-creation,JS,9,15891190,0x2c3700c8d478,2,CustomType file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:4:8,0x2c3700855cd0,~
code-source-info,0x2c3700c8d478,314,105,105,C1O105,,
code-creation,JS,9,15891202,0x2c3700c8d4b0,31,Black file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:11:8,0x2c3700853854,~
code-source-info,0x2c3700c8d4b0,312,255,255,C3O255C24O255C30O255,,
code-creation,JS,9,15891215,0x2c3700c8d508,31,Empty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:23:8,0x2c37008538cc,~
code-source-info,0x2c3700c8d508,312,462,462,C3O462C24O462C30O462,,
code-creation,JS,9,15891234,0x2c3700c8d560,75,Node file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:14:14,0x2c3700853890,~
code-source-info,0x2c3700c8d560,312,344,451,C3O367C24O367C36O380C40O388C44O398C49O406C53O416C58O424C62O434C67O442C74O450,,
tick,0x64950d3cfd94,15891292,0,0x0,0,0x64950d50da40,0x2c3700c8d588,0x2c3700c88bf7,0x2c3700c83f9b,0x64950d873576
code-creation,JS,9,15891355,0x2c3700c8d604,18,toList file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:60:23,0x2c37008557a8,~
code-source-info,0x2c3700c8d604,314,1149,1210,C0O1170C6O1182C11O1182C17O1208,,
code-creation,JS,9,15891393,0x2c3700c8d664,65,fromArray file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:14:19,0x2c3700855d84,~
code-source-info,0x2c3700c8d664,314,354,513,C0O382C4O394C10O390C16O426C20O433C24O440C25O440C30O459C38O481C47O463C53O448C58O407C62O500C64O509,,
code-creation,JS,9,15891412,0x2c3700c8d6f8,31,Empty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:83:8,0x2c3700855f90,~
code-source-info,0x2c3700c8d6f8,314,1546,1546,C3O1546C24O1546C30O1546,,
code-creation,JS,9,15891423,0x2c3700c8d750,2,List file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:13:8,0x2c3700855d48,~
code-source-info,0x2c3700c8d750,314,323,323,C1O323,,
code-creation,JS,9,15891439,0x2c3700c8d798,52,NonEmpty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:86:14,0x2c3700855fcc,~
code-source-info,0x2c3700c8d798,314,1625,1700,C3O1644C24O1644C36O1657C38O1667C42O1679C44O1689C51O1699,,
code-creation,JS,9,15891474,0x2c3700c8d818,29,map file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:621:13,0x2c3700853728,~
code-source-info,0x2c3700c8d818,312,11697,11745,C0O11709C3O11731C12O11731C23O11716C28O11743,,
code-creation,JS,9,15891505,0x2c3700c8d890,81,map_acc file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:604:17,0x2c37008536ec,~
code-source-info,0x2c3700c8d890,312,11365,11683,C0O11425C3O11446C6O11468C9O11489C17O11489C24O11524C29O11544C34O11554C37O11572C40O11588C46O11611C51O11599C60O11640C67O11640C74O11660C76O11671C77O11397,,
code-creation,JS,9,15891534,0x2c3700c8d984,144,atLeastLength file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:31:16,0x2c3700855e38,~
code-source-info,0x2c3700c8d984,314,650,776,C0O680C19O675C47O675C50O694C51O706C56O712C63O731C69O666C139O752C140O767C143O772,,
code-creation,JS,9,15891549,0x2c3700c8da68,13, file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:22:20,0x2c3700855dc0,~
code-source-info,0x2c3700c8da68,314,534,577,C0O543C7O550C12O573,,
code-creation,JS,9,15891562,0x2c3700c8dabc,25,ListIterator file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:68:14,0x2c3700855eec,~
code-source-info,0x2c3700c8dabc,314,1272,1316,C0O1272C14O1288C19O1302C24O1315,,
code-creation,JS,9,15891589,0x2c3700c8db30,60,next file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:72:7,0x2c3700855f28,~
code-source-info,0x2c3700c8db30,314,1324,1535,C0O1333C2O1342C6O1362C11O1351C16O1377C20O1399C21O1440C23O1445C27O1425C32O1431C37O1461C42O1475C46O1489C53O1505C59O1525,,
code-creation,JS,9,15891614,0x2c3700c8dbbc,32,balance_tuple file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:600:23,0x2c37008536b0,~
code-source-info,0x2c3700c8dbbc,312,11298,11347,C0O11306C4O11322C10O11328C16O11334C22O11340C26O11313C31O11345,,
code-creation,JS,9,15891901,0x2c3700c8dcac,9531,balance file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:25:17,0x2c3700853674,~
code-source-info,0x2c3700c8dcac
code-creation,JS,9,15892162,0x2c3700c90adc,20,prepend file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:56:24,0x2c370085576c,~
code-source-info,0x2c3700c90adc,314,1068,1125,C0O1088C14O1095C19O1123,,
code-creation,JS,9,15892320,0x2c3700c90b70,144,hasLength file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:40:12,0x2c3700855e74,~
code-source-info,0x2c3700c90b70,314,804,932,C0O834C19O829C47O829C50O848C51O860C56O866C63O886C69O820C139O907C140O922C143O928,,
code-creation,JS,9,15892350,0x2c3700c90c68,81,end ext:cli/40_bench.js:398:8,0x2c370056870c,~
code-source-info,0x2c3700c90c68,309,11000,11384,C0O11023C5O11023C9O11041C19O11069C23O11060C28O11083C40O11089C45O11083C46O11209C55O11260C67O11266C72O11260C73O11344C75O11372C80O11383,,
tick,0x7d8294c939f7,15892370,0,0x0,9,0x64950db65500,0x2c3700c83fa5,0x64950d873576
code-creation,JS,10,15892888,0x64956d805740,128,hasTickScheduled ext:core/01_core.js:643:23,0x2c37001caf68,^
code-source-info,0x64956d805740,5,16806,16835,,,
code-creation,JS,10,15892899,0x64956d805800,128,runMicrotasks ext:core/01_core.js:642:20,0x2c37001caf04,^
code-source-info,0x64956d805800,5,16757,16782,,,
code-creation,JS,10,15892904,0x64956d8058c0,204,Empty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:23:8,0x2c37008538cc,^
code-source-info,0x64956d8058c0,312,462,462,,,
code-creation,JS,10,15892911,0x64956d8059c0,416,Node file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:14:14,0x2c3700853890,^
code-source-info,0x64956d8059c0,312,344,451,,,
code-creation,JS,10,15892917,0x64956d805b80,204,Red file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:9:8,0x2c3700853818,^
code-source-info,0x64956d805b80,312,214,214,,,
code-creation,JS,10,15892924,0x64956d805c80,204,Black file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:11:8,0x2c3700853854,^
code-source-info,0x64956d805c80,312,255,255,,,
code-creation,JS,10,15892930,0x64956d805d80,348,NonEmpty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:86:14,0x2c3700855fcc,^
code-source-info,0x64956d805d80,314,1625,1700,,,
code-creation,JS,10,15892937,0x64956d805f00,596,fromArray file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:14:19,0x2c3700855d84,^
code-source-info,0x64956d805f00,314,354,513,,,
code-creation,JS,10,15892943,0x64956d806180,420,next file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:72:7,0x2c3700855f28,^
code-source-info,0x64956d806180,314,1324,1535,,,
code-creation,JS,10,15892949,0x64956d806340,1036,atLeastLength file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:31:16,0x2c3700855e38,^
code-source-info,0x64956d806340,314,650,776,,,
code-creation,JS,10,15892955,0x64956d806780,88,ListIterator file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:65:20,0x2c3700855f64,^
code-source-info,0x64956d806780,314,1244,1537,,,
code-creation,JS,10,15892961,0x64956d806800,152,ListIterator file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:68:14,0x2c3700855eec,^
code-source-info,0x64956d806800,314,1272,1316,,,
code-creation,JS,10,15892967,0x64956d8068c0,136, file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:22:20,0x2c3700855dc0,^
code-source-info,0x64956d8068c0,314,534,577,,,
code-creation,JS,10,15892974,0x64956d806980,30892,balance file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:25:17,0x2c3700853674,^
code-source-info,0x64956d806980,312,514,11274,,,
tick,0x64950cf4c50f,15893439,0,0x0,0,0x2c3700c84ad8,0x2c3700c84924,0x2c3700c84876,0x2c3700c83ed7,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,15894539,0,0x0,6
tick,0x7d8294d2a042,15895616,0,0x0,6
tick,0x7d8294d2a042,15896745,0,0x0,6
tick,0x7d8294d2a042,15897822,0,0x0,6
tick,0x7d8294d2a042,15898902,0,0x0,6
tick,0x7d8294d2a042,15900048,0,0x0,6
tick,0x7d8294d2a042,15901200,0,0x0,6
tick,0x7d8294d2a042,15902281,0,0x0,6
tick,0x7d8294d2a042,15903374,0,0x0,6
tick,0x7d8294d2a042,15904513,0,0x0,6
tick,0x7d8294d2a042,15905670,0,0x0,6
tick,0x7d8294d2a042,15906758,0,0x0,6
tick,0x7d8294d2a042,15907898,0,0x0,6
tick,0x7d8294d2a042,15909057,0,0x0,6
tick,0x7d8294d2a042,15910131,0,0x0,6
tick,0x7d8294d2a042,15911209,0,0x0,6
tick,0x7d8294d2a042,15912365,0,0x0,6
tick,0x7d8294d2a042,15913515,0,0x0,6
tick,0x7d8294d2a042,15914598,0,0x0,6
tick,0x7d8294d2a042,15915674,0,0x0,6
tick,0x7d8294d2a042,15916893,0,0x0,6
tick,0x7d8294d2a042,15918050,0,0x0,6
tick,0x7d8294d2a042,15919128,0,0x0,6
tick,0x7d8294d2a042,15920256,0,0x0,6
tick,0x7d8294d2a042,15921420,0,0x0,6
tick,0x7d8294d2a042,15922504,0,0x0,6
tick,0x7d8294d2a042,15923574,0,0x0,6
tick,0x7d8294d2a042,15924796,0,0x0,6
tick,0x7d8294d2a042,15925956,0,0x0,6
tick,0x7d8294d2a042,15927039,0,0x0,6
tick,0x7d8294d2a042,15928181,0,0x0,6
tick,0x7d8294d2a042,15929353,0,0x0,6
tick,0x7d8294d2a042,15930435,0,0x0,6
tick,0x7d8294d2a042,15931517,0,0x0,6
tick,0x7d8294d2a042,15932712,0,0x0,6
tick,0x7d8294d2a042,15933866,0,0x0,6
tick,0x7d8294d2a042,15935027,0,0x0,6
tick,0x7d8294d2a042,15936094,0,0x0,6
tick,0x7d8294d2a042,15937259,0,0x0,6
tick,0x7d8294d2a042,15938337,0,0x0,6
tick,0x7d8294d2a042,15939504,0,0x0,6
tick,0x7d8294d2a042,15940672,0,0x0,6
tick,0x7d8294d2a042,15941750,0,0x0,6
tick,0x7d8294d2a042,15942909,0,0x0,6
tick,0x7d8294d2a042,15943970,0,0x0,6
tick,0x7d8294d2a042,15945133,0,0x0,6
tick,0x7d8294d2a042,15946279,0,0x0,6
tick,0x7d8294d2a042,15947244,0,0x0,6
tick,0x7d8294d2a042,15948408,0,0x0,6
tick,0x7d8294d2a042,15949586,0,0x0,6
tick,0x7d8294d2a042,15950669,0,0x0,6
tick,0x7d8294d2a042,15951809,0,0x0,6
tick,0x7d8294d2a042,15952970,0,0x0,6
tick,0x7d8294d2a042,15954047,0,0x0,6
tick,0x7d8294d2a042,15955122,0,0x0,6
tick,0x7d8294d2a042,15956265,0,0x0,6
tick,0x7d8294d2a042,15957434,0,0x0,6
tick,0x7d8294d2a042,15958580,0,0x0,6
tick,0x7d8294d2a042,15959633,0,0x0,6
tick,0x7d8294d2a042,15960723,0,0x0,6
tick,0x7d8294d2a042,15961870,0,0x0,6
tick,0x7d8294d2a042,15963015,0,0x0,6
tick,0x7d8294d2a042,15964073,0,0x0,6
tick,0x7d8294d2a042,15965253,0,0x0,6
tick,0x7d8294d2a042,15966331,0,0x0,6
tick,0x7d8294d2a042,15967484,0,0x0,6
tick,0x7d8294d2a042,15968634,0,0x0,6
tick,0x7d8294d2a042,15969780,0,0x0,6
tick,0x7d8294d2a042,15970859,0,0x0,6
tick,0x7d8294d2a042,15971855,0,0x0,6
tick,0x7d8294d2a042,15972935,0,0x0,6
tick,0x7d8294d2a042,15974107,0,0x0,6
tick,0x7d8294d2a042,15975255,0,0x0,6
tick,0x7d8294d2a042,15976348,0,0x0,6
tick,0x7d8294d2a042,15977422,0,0x0,6
tick,0x7d8294d2a042,15978501,0,0x0,6
tick,0x7d8294d2a042,15979555,0,0x0,6
tick,0x7d8294d2a042,15980760,0,0x0,6
tick,0x7d8294d2a042,15981846,0,0x0,6
tick,0x7d8294d2a042,15982992,0,0x0,6
tick,0x7d8294d2a042,15984056,0,0x0,6
tick,0x7d8294d2a042,15985217,0,0x0,6
tick,0x7d8294d2a042,15986284,0,0x0,6
tick,0x7d8294d2a042,15987454,0,0x0,6
tick,0x7d8294d2a042,15988605,0,0x0,6
tick,0x7d8294d2a042,15989756,0,0x0,6
tick,0x7d8294d2a042,15990903,0,0x0,6
tick,0x7d8294d2a042,15991901,0,0x0,6
tick,0x7d8294d2a042,15992987,0,0x0,6
tick,0x7d8294d2a042,15994152,0,0x0,6
tick,0x7d8294d2a042,15995154,0,0x0,6
tick,0x7d8294d2a042,15996298,0,0x0,6
tick,0x7d8294d2a042,15997460,0,0x0,6
tick,0x7d8294d2a042,15998538,0,0x0,6
tick,0x7d8294d2a042,15999600,0,0x0,6
tick,0x7d8294d2a042,16000890,0,0x0,6
tick,0x7d8294d2a042,16002004,0,0x0,6
tick,0x7d8294d2a042,16003042,0,0x0,6
tick,0x7d8294d2a042,16004223,0,0x0,6
tick,0x7d8294d2a042,16005387,0,0x0,6
tick,0x7d8294d2a042,16006509,0,0x0,6
tick,0x7d8294d2a042,16007567,0,0x0,6
tick,0x7d8294d2a042,16008783,0,0x0,6
tick,0x7d8294d2a042,16009930,0,0x0,6
tick,0x7d8294d2a042,16010956,0,0x0,6
tick,0x7d8294d2a042,16012149,0,0x0,6
tick,0x7d8294d2a042,16013098,0,0x0,6
tick,0x7d8294d2a042,16014212,0,0x0,6
tick,0x7d8294d2a042,16015285,0,0x0,6
tick,0x7d8294d2a042,16016466,0,0x0,6
tick,0x7d8294d2a042,16017541,0,0x0,6
tick,0x7d8294d2a042,16018751,0,0x0,6
tick,0x7d8294d2a042,16019794,0,0x0,6
tick,0x7d8294d2a042,16020908,0,0x0,6
tick,0x7d8294d2a042,16022104,0,0x0,6
tick,0x7d8294d2a042,16023143,0,0x0,6
tick,0x7d8294d2a042,16024213,0,0x0,6
tick,0x7d8294d2a042,16025350,0,0x0,6
tick,0x7d8294d2a042,16026514,0,0x0,6
tick,0x7d8294d2a042,16027446,0,0x0,6
tick,0x7d8294d2a042,16028600,0,0x0,6
tick,0x7d8294d2a042,16029750,0,0x0,6
tick,0x7d8294d2a042,16030797,0,0x0,6
tick,0x7d8294d2a042,16031867,0,0x0,6
tick,0x7d8294d2a042,16032953,0,0x0,6
tick,0x7d8294d2a042,16034111,0,0x0,6
tick,0x7d8294d2a042,16035206,0,0x0,6
tick,0x7d8294d2a042,16036294,0,0x0,6
tick,0x7d8294d2a042,16037438,0,0x0,6
tick,0x7d8294d2a042,16038486,0,0x0,6
tick,0x7d8294d2a042,16039496,0,0x0,6
tick,0x7d8294d2a042,16040482,0,0x0,6
tick,0x7d8294d2a042,16041573,0,0x0,6
tick,0x7d8294d2a042,16042647,0,0x0,6
tick,0x7d8294d2a042,16043704,0,0x0,6
tick,0x7d8294d2a042,16044750,0,0x0,6
tick,0x7d8294d2a042,16045840,0,0x0,6
tick,0x7d8294d2a042,16046955,0,0x0,6
tick,0x7d8294d2a042,16047932,0,0x0,6
tick,0x7d8294d2a042,16049043,0,0x0,6
tick,0x7d8294d2a042,16050132,0,0x0,6
tick,0x7d8294d2a042,16051211,0,0x0,6
tick,0x7d8294d2a042,16052357,0,0x0,6
tick,0x7d8294d2a042,16053376,0,0x0,6
tick,0x7d8294d2a042,16054427,0,0x0,6
tick,0x7d8294d2a042,16055535,0,0x0,6
tick,0x7d8294d2a042,16056739,0,0x0,6
tick,0x7d8294d2a042,16057669,0,0x0,6
tick,0x7d8294d2a042,16058748,0,0x0,6
tick,0x7d8294d2a042,16059973,0,0x0,6
tick,0x7d8294d2a042,16061056,0,0x0,6
tick,0x7d8294d2a042,16062057,0,0x0,6
tick,0x7d8294d2a042,16063200,0,0x0,6
tick,0x7d8294d2a042,16064368,0,0x0,6
tick,0x7d8294d2a042,16065475,0,0x0,6
tick,0x7d8294d2a042,16066546,0,0x0,6
tick,0x7d8294d2a042,16067624,0,0x0,6
tick,0x7d8294d2a042,16068825,0,0x0,6
tick,0x7d8294d1ba9a,16069955,0,0x0,6
tick,0x7d8294d1ba9a,16071044,0,0x0,6
tick,0x7d8294d2a042,16072186,0,0x0,6
tick,0x7d8294d2a042,16073359,0,0x0,6
tick,0x7d8294d2a042,16074462,0,0x0,6
tick,0x7d8294d2a042,16075589,0,0x0,6
tick,0x7d8294d2a042,16076747,0,0x0,6
tick,0x7d8294d2a042,16077827,0,0x0,6
tick,0x7d8294d2a042,16078822,0,0x0,6
tick,0x7d8294d2a042,16079905,0,0x0,6
tick,0x7d8294d2a042,16080928,0,0x0,6
code-creation,JS,10,16081258,0x64956d80e240,176,balance_tuple file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:600:23,0x2c37008536b0,^
code-source-info,0x64956d80e240,312,11298,11347,,,
code-creation,JS,10,16081275,0x64956d80e300,172,prepend file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:56:24,0x2c370085576c,^
code-source-info,0x64956d80e300,314,1068,1125,,,
code-creation,JS,10,16081282,0x64956d80e3c0,608,map_acc file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:604:17,0x2c37008536ec,^
code-source-info,0x64956d80e3c0,312,11365,11683,,,
code-creation,JS,10,16081289,0x64956d80e640,332,runNextTicks ext:deno_node/_next_tick.ts:61:29,0x2c37002d2ef4,^
code-source-info,0x64956d80e640,167,2170,2521,,,
code-creation,JS,10,16081295,0x64956d80e7c0,304,SafePromise ext:core/00_primordials.js:484:18,0x2c37001c8978,^
code-source-info,0x64956d80e7c0,3,14470,14515,,,
code-creation,JS,10,16081301,0x64956d80e900,300,isReadableStreamDefaultReader ext:deno_web/06_streams.js:714:39,0x2c37001e3468,^
code-source-info,0x64956d80e900,21,18736,18833,,,
code-creation,JS,10,16081307,0x64956d80ea40,200, ext:core/00_infra.js:127:33,0x2c370057f9c8,^
code-source-info,0x64956d80ea40,4,3371,3425,,,
code-creation,JS,10,16081312,0x64956d80eb40,68,unwrapOpError ext:core/00_infra.js:171:25,0x2c37001c9030,^
code-source-info,0x64956d80eb40,4,4662,5418,,,
code-creation,JS,10,16081317,0x64956d80ebc0,1008,setPromise ext:core/00_infra.js:118:22,0x2c37001c8f7c,^
code-source-info,0x64956d80ebc0,4,3049,3601,,,
code-creation,JS,10,16081322,0x64956d80efc0,876,__resolvePromise ext:core/00_infra.js:138:28,0x2c37001c8fb8,^
code-source-info,0x64956d80efc0,4,3630,4283,,,
code-creation,JS,10,16081328,0x64956d80f340,708,pathFromURL ext:deno_web/00_infra.js:444:21,0x2c37001d8428,^
code-source-info,0x64956d80f340,12,10434,10745,,,
tick,0x7d8294d2a042,16082100,0,0x0,6
tick,0x7d8294d2a042,16083130,0,0x0,6
tick,0x7d8294d2a042,16084310,0,0x0,6
tick,0x7d8294d2a042,16085475,0,0x0,6
tick,0x7d8294d2a042,16086582,0,0x0,6
tick,0x7d8294d2a042,16087670,0,0x0,6
tick,0x7d8294d2a042,16088846,0,0x0,6
tick,0x7d8294d2a042,16089955,0,0x0,6
tick,0x7d8294d2a042,16090974,0,0x0,6
tick,0x7d8294d2a042,16092172,0,0x0,6
tick,0x7d8294d2a042,16093310,0,0x0,6
tick,0x7d8294d2a042,16094430,0,0x0,6
tick,0x7d8294d2a042,16095549,0,0x0,6
tick,0x7d8294d2a042,16096706,0,0x0,6
tick,0x7d8294d2a042,16097862,0,0x0,6
tick,0x7d8294d2a042,16098825,0,0x0,6
tick,0x7d8294d2a042,16100022,0,0x0,6
tick,0x7d8294d2a042,16101196,0,0x0,6
tick,0x7d8294d2a042,16102162,0,0x0,6
tick,0x7d8294d2a042,16103241,0,0x0,6
tick,0x7d8294d2a042,16104506,0,0x0,6
tick,0x7d8294d2a042,16105686,0,0x0,6
tick,0x7d8294d2a042,16106646,0,0x0,6
tick,0x7d8294d2a042,16107889,0,0x0,6
tick,0x7d8294d2a042,16108977,0,0x0,6
tick,0x7d8294d2a042,16110125,0,0x0,6
tick,0x7d8294d2a042,16111088,0,0x0,6
tick,0x7d8294d2a042,16112279,0,0x0,6
tick,0x7d8294d2a042,16113443,0,0x0,6
tick,0x7d8294d2a042,16114419,0,0x0,6
tick,0x7d8294d2a042,16115511,0,0x0,6
tick,0x7d8294d2a042,16116799,0,0x0,6
tick,0x7d8294d2a042,16117897,0,0x0,6
tick,0x7d8294d2a042,16118985,0,0x0,6
tick,0x7d8294d2a042,16120035,0,0x0,6
tick,0x7d8294d2a042,16121334,0,0x0,6
tick,0x7d8294d2a042,16122495,0,0x0,6
tick,0x7d8294d2a042,16123605,0,0x0,6
tick,0x7d8294d2a042,16124793,0,0x0,6
tick,0x7d8294d2a042,16125951,0,0x0,6
tick,0x7d8294d2a042,16127035,0,0x0,6
tick,0x7d8294d2a042,16128114,0,0x0,6
tick,0x7d8294d2a042,16129121,0,0x0,6
tick,0x7d8294d2a042,16130272,0,0x0,6
tick,0x7d8294d2a042,16131447,0,0x0,6
tick,0x7d8294d2a042,16132501,0,0x0,6
tick,0x7d8294d2a042,16133644,0,0x0,6
tick,0x7d8294d2a042,16134769,0,0x0,6
tick,0x7d8294d2a042,16135868,0,0x0,6
tick,0x7d8294d2a042,16136905,0,0x0,6
tick,0x7d8294d2a042,16138043,0,0x0,6
tick,0x7d8294d2a042,16139159,0,0x0,6
tick,0x7d8294d2a042,16140220,0,0x0,6
tick,0x7d8294d2a042,16141292,0,0x0,6
tick,0x7d8294d2a042,16142391,0,0x0,6
tick,0x7d8294d2a042,16143461,0,0x0,6
tick,0x7d8294d2a042,16144540,0,0x0,6
tick,0x7d8294d2a042,16145637,0,0x0,6
tick,0x7d8294d2a042,16146713,0,0x0,6
tick,0x7d8294d2a042,16147829,0,0x0,6
tick,0x7d8294d2a042,16149029,0,0x0,6
tick,0x7d8294d2a042,16150180,0,0x0,6
tick,0x7d8294d2a042,16151292,0,0x0,6
tick,0x7d8294d2a042,16152352,0,0x0,6
tick,0x7d8294d2a042,16153484,0,0x0,6
tick,0x7d8294d2a042,16154594,0,0x0,6
tick,0x7d8294d2a042,16155635,0,0x0,6
tick,0x7d8294d2a042,16156837,0,0x0,6
tick,0x7d8294d2a042,16157984,0,0x0,6
tick,0x7d8294d2a042,16159032,0,0x0,6
tick,0x7d8294d2a042,16160108,0,0x0,6
tick,0x7d8294d2a042,16161190,0,0x0,6
tick,0x7d8294d2a042,16162383,0,0x0,6
tick,0x7d8294d2a042,16163522,0,0x0,6
tick,0x7d8294d2a042,16164706,0,0x0,6
tick,0x7d8294d2a042,16165787,0,0x0,6
tick,0x7d8294d2a042,16166944,0,0x0,6
tick,0x7d8294d2a042,16168018,0,0x0,6
tick,0x7d8294d2a042,16169109,0,0x0,6
tick,0x7d8294d2a042,16170184,0,0x0,6
tick,0x7d8294d2a042,16171336,0,0x0,6
tick,0x7d8294d2a042,16172420,0,0x0,6
tick,0x7d8294d2a042,16173573,0,0x0,6
tick,0x7d8294d2a042,16174635,0,0x0,6
tick,0x7d8294d2a042,16175748,0,0x0,6
tick,0x7d8294d2a042,16176902,0,0x0,6
tick,0x7d8294d2a042,16178049,0,0x0,6
tick,0x7d8294d2a042,16179138,0,0x0,6
tick,0x7d8294d2a042,16180219,0,0x0,6
tick,0x7d8294d2a042,16181299,0,0x0,6
tick,0x7d8294d2a042,16182511,0,0x0,6
tick,0x7d8294d2a042,16183610,0,0x0,6
tick,0x7d8294d2a042,16184816,0,0x0,6
tick,0x7d8294d2a042,16185947,0,0x0,6
tick,0x7d8294d2a042,16187069,0,0x0,6
tick,0x7d8294d2a042,16188205,0,0x0,6
tick,0x7d8294d2a042,16189338,0,0x0,6
tick,0x7d8294d2a042,16190498,0,0x0,6
tick,0x7d8294d2a042,16191621,0,0x0,6
tick,0x7d8294d2a042,16192772,0,0x0,6
tick,0x7d8294d2a042,16193865,0,0x0,6
tick,0x7d8294d2a042,16194957,0,0x0,6
tick,0x7d8294d2a042,16196141,0,0x0,6
tick,0x7d8294d2a042,16197315,0,0x0,6
tick,0x7d8294d2a042,16198477,0,0x0,6
tick,0x7d8294d2a042,16199614,0,0x0,6
tick,0x7d8294d2a042,16200742,0,0x0,6
tick,0x7d8294d2a042,16201805,0,0x0,6
tick,0x7d8294d2a042,16202984,0,0x0,6
tick,0x7d8294d2a042,16204121,0,0x0,6
tick,0x7d8294d2a042,16205281,0,0x0,6
tick,0x7d8294d2a042,16206460,0,0x0,6
tick,0x7d8294d2a042,16207620,0,0x0,6
tick,0x7d8294d2a042,16208818,0,0x0,6
tick,0x7d8294d2a042,16209946,0,0x0,6
tick,0x7d8294d2a042,16211063,0,0x0,6
tick,0x7d8294d2a042,16212195,0,0x0,6
tick,0x7d8294d2a042,16213331,0,0x0,6
tick,0x7d8294d2a042,16214503,0,0x0,6
tick,0x7d8294d2a042,16215608,0,0x0,6
tick,0x7d8294d2a042,16216790,0,0x0,6
tick,0x7d8294d2a042,16217844,0,0x0,6
tick,0x7d8294d2a042,16218904,0,0x0,6
tick,0x7d8294d2a042,16219996,0,0x0,6
tick,0x7d8294d2a042,16221106,0,0x0,6
tick,0x7d8294d2a042,16222190,0,0x0,6
tick,0x7d8294d2a042,16223274,0,0x0,6
tick,0x7d8294d2a042,16224406,0,0x0,6
tick,0x7d8294d2a042,16225518,0,0x0,6
tick,0x7d8294d2a042,16226575,0,0x0,6
tick,0x7d8294d2a042,16227631,0,0x0,6
tick,0x7d8294d2a042,16228826,0,0x0,6
tick,0x7d8294d2a042,16229984,0,0x0,6
tick,0x7d8294d2a042,16231136,0,0x0,6
tick,0x7d8294d2a042,16232153,0,0x0,6
tick,0x7d8294d2a042,16233225,0,0x0,6
tick,0x7d8294d2a042,16234236,0,0x0,6
tick,0x7d8294d2a042,16235338,0,0x0,6
tick,0x7d8294d2a042,16236530,0,0x0,6
tick,0x7d8294d2a042,16237542,0,0x0,6
tick,0x7d8294d2a042,16238605,0,0x0,6
tick,0x7d8294d2a042,16239689,0,0x0,6
tick,0x7d8294d2a042,16240687,0,0x0,6
tick,0x7d8294d2a042,16241810,0,0x0,6
tick,0x7d8294d2a042,16242885,0,0x0,6
tick,0x7d8294d2a042,16244032,0,0x0,6
tick,0x7d8294d2a042,16245138,0,0x0,6
tick,0x7d8294d2a042,16246125,0,0x0,6
tick,0x7d8294d2a042,16247277,0,0x0,6
tick,0x7d8294d2a042,16248438,0,0x0,6
tick,0x7d8294d2a042,16249604,0,0x0,6
tick,0x7d8294d2a042,16250668,0,0x0,6
tick,0x7d8294d2a042,16251895,0,0x0,6
tick,0x7d8294d2a042,16253033,0,0x0,6
tick,0x7d8294d2a042,16254052,0,0x0,6
tick,0x7d8294d2a042,16255194,0,0x0,6
tick,0x7d8294d2a042,16256427,0,0x0,6
tick,0x7d8294d2a042,16257469,0,0x0,6
tick,0x7d8294d2a042,16258539,0,0x0,6
tick,0x7d8294d1ba9a,16259624,0,0x0,6
tick,0x7d8294d2a042,16260804,0,0x0,6
tick,0x7d8294d2a042,16261956,0,0x0,6
tick,0x7d8294d2a042,16263106,0,0x0,6
tick,0x64950cef47d7,16264172,0,0x0,6
tick,0x7d8294d2a042,16265355,0,0x0,6
tick,0x7d8294d2a042,16266430,0,0x0,6
tick,0x7d8294d2a042,16267557,0,0x0,6
tick,0x7d8294d2a042,16268792,0,0x0,6
tick,0x7d8294d2a042,16269936,0,0x0,6
tick,0x7d8294d2a042,16271108,0,0x0,6
tick,0x7d8294d2a042,16272213,0,0x0,6
tick,0x7d8294d2a042,16273128,0,0x0,6
tick,0x7d8294d2a042,16274254,0,0x0,6
tick,0x7d8294d2a042,16275348,0,0x0,6
tick,0x7d8294d2a042,16276423,0,0x0,6
tick,0x7d8294d2a042,16277507,0,0x0,6
tick,0x7d8294d2a042,16278499,0,0x0,6
tick,0x7d8294d2a042,16279602,0,0x0,6
tick,0x7d8294d2a042,16280773,0,0x0,6
tick,0x7d8294d2a042,16281818,0,0x0,6
tick,0x7d8294d2a042,16282874,0,0x0,6
tick,0x7d8294d2a042,16284005,0,0x0,6
tick,0x7d8294d2a042,16285106,0,0x0,6
tick,0x7d8294d2a042,16286027,0,0x0,6
tick,0x7d8294d2a042,16287181,0,0x0,6
tick,0x7d8294d2a042,16288458,0,0x0,6
tick,0x7d8294d2a042,16289573,0,0x0,6
tick,0x7d8294d2a042,16290646,0,0x0,6
tick,0x7d8294d2a042,16291715,0,0x0,6
tick,0x7d8294d2a042,16292916,0,0x0,6
tick,0x7d8294d2a042,16294057,0,0x0,6
tick,0x7d8294d2a042,16295176,0,0x0,6
tick,0x7d8294d2a042,16296287,0,0x0,6
tick,0x7d8294d2a042,16297422,0,0x0,6
tick,0x7d8294d2a042,16298441,0,0x0,6
tick,0x7d8294d2a042,16299614,0,0x0,6
tick,0x7d8294d2a042,16300864,0,0x0,6
tick,0x7d8294d2a042,16301945,0,0x0,6
tick,0x7d8294d2a042,16303019,0,0x0,6
tick,0x7d8294d2a042,16304232,0,0x0,6
tick,0x7d8294d2a042,16305400,0,0x0,6
tick,0x7d8294d2a042,16306495,0,0x0,6
tick,0x7d8294d2a042,16307605,0,0x0,6
tick,0x7d8294d2a042,16308856,0,0x0,6
tick,0x7d8294d2a042,16310038,0,0x0,6
tick,0x7d8294d2a042,16311016,0,0x0,6
tick,0x7d8294d2a042,16312236,0,0x0,6
tick,0x7d8294d2a042,16313402,0,0x0,6
tick,0x7d8294d2a042,16314490,0,0x0,6
tick,0x7d8294d2a042,16315594,0,0x0,6
tick,0x7d8294d2a042,16316843,0,0x0,6
tick,0x7d8294d2a042,16318005,0,0x0,6
tick,0x7d8294d2a042,16319000,0,0x0,6
tick,0x7d8294d2a042,16320214,0,0x0,6
tick,0x7d8294d2a042,16321371,0,0x0,6
tick,0x7d8294d2a042,16322539,0,0x0,6
tick,0x7d8294d2a042,16323610,0,0x0,6
tick,0x7d8294d2a042,16324837,0,0x0,6
tick,0x7d8294d2a042,16325984,0,0x0,6
tick,0x7d8294d2a042,16326978,0,0x0,6
tick,0x7d8294d2a042,16328204,0,0x0,6
tick,0x7d8294d2a042,16329396,0,0x0,6
tick,0x7d8294d2a042,16330516,0,0x0,6
tick,0x7d8294d2a042,16331598,0,0x0,6
tick,0x7d8294d2a042,16332834,0,0x0,6
tick,0x7d8294d2a042,16333992,0,0x0,6
tick,0x7d8294d2a042,16335151,0,0x0,6
tick,0x7d8294d2a042,16336213,0,0x0,6
tick,0x7d8294d2a042,16337366,0,0x0,6
tick,0x7d8294d2a042,16338458,0,0x0,6
tick,0x7d8294d2a042,16339607,0,0x0,6
tick,0x7d8294d2a042,16340933,0,0x0,6
tick,0x7d8294d2a042,16341989,0,0x0,6
tick,0x7d8294d2a042,16343142,0,0x0,6
tick,0x7d8294d2a042,16344299,0,0x0,6
tick,0x7d8294d2a042,16345445,0,0x0,6
tick,0x7d8294d2a042,16346585,0,0x0,6
tick,0x7d8294d2a042,16347610,0,0x0,6
tick,0x7d8294d2a042,16348853,0,0x0,6
tick,0x7d8294d2a042,16349981,0,0x0,6
tick,0x7d8294d2a042,16351078,0,0x0,6
tick,0x7d8294d2a042,16352238,0,0x0,6
tick,0x7d8294d2a042,16353369,0,0x0,6
tick,0x7d8294d2a042,16354468,0,0x0,6
tick,0x7d8294d2a042,16355613,0,0x0,6
tick,0x7d8294d2a042,16356837,0,0x0,6
tick,0x7d8294d2a042,16357969,0,0x0,6
tick,0x7d8294d2a042,16359114,0,0x0,6
tick,0x7d8294d2a042,16360216,0,0x0,6
tick,0x7d8294d2a042,16361385,0,0x0,6
tick,0x7d8294d2a042,16362532,0,0x0,6
tick,0x7d8294d2a042,16363596,0,0x0,6
tick,0x7d8294d2a042,16364667,0,0x0,6
tick,0x7d8294d2a042,16365951,0,0x0,6
tick,0x7d8294d2a042,16367064,0,0x0,6
tick,0x7d8294d2a042,16368206,0,0x0,6
tick,0x7d8294d2a042,16369334,0,0x0,6
tick,0x7d8294d2a042,16370492,0,0x0,6
tick,0x7d8294d2a042,16371607,0,0x0,6
tick,0x7d8294d2a042,16372780,0,0x0,6
tick,0x7d8294d2a042,16373952,0,0x0,6
tick,0x7d8294d2a042,16374986,0,0x0,6
tick,0x7d8294d2a042,16376173,0,0x0,6
tick,0x7d8294d2a042,16377333,0,0x0,6
tick,0x7d8294d2a042,16378490,0,0x0,6
tick,0x7d8294d2a042,16379629,0,0x0,6
tick,0x7d8294d2a042,16380826,0,0x0,6
tick,0x7d8294d2a042,16381952,0,0x0,6
tick,0x7d8294d2a042,16383056,0,0x0,6
tick,0x7d8294d2a042,16384171,0,0x0,6
tick,0x7d8294d2a042,16385278,0,0x0,6
tick,0x7d8294d2a042,16386437,0,0x0,6
tick,0x7d8294d2a042,16387631,0,0x0,6
tick,0x7d8294d2a042,16388797,0,0x0,6
tick,0x7d8294d2a042,16389967,0,0x0,6
tick,0x7d8294d2a042,16391081,0,0x0,6
tick,0x7d8294d2a042,16392203,0,0x0,6
tick,0x7d8294d2a042,16393337,0,0x0,6
tick,0x7d8294d2a042,16394357,0,0x0,6
tick,0x7d8294d2a042,16395519,0,0x0,6
tick,0x7d8294d2a042,16396778,0,0x0,6
tick,0x7d8294d2a042,16397915,0,0x0,6
tick,0x7d8294d2a042,16399021,0,0x0,6
tick,0x7d8294d2a042,16400211,0,0x0,6
tick,0x7d8294d2a042,16401350,0,0x0,6
tick,0x7d8294d2a042,16402453,0,0x0,6
tick,0x7d8294d2a042,16403644,0,0x0,6
tick,0x7d8294d2a042,16404778,0,0x0,6
tick,0x7d8294d2a042,16405915,0,0x0,6
tick,0x7d8294d2a042,16407038,0,0x0,6
tick,0x7d8294d2a042,16408152,0,0x0,6
tick,0x7d8294d2a042,16409325,0,0x0,6
tick,0x7d8294d2a042,16410344,0,0x0,6
tick,0x7d8294d2a042,16411344,0,0x0,6
tick,0x7d8294d2a042,16412575,0,0x0,6
tick,0x7d8294d2a042,16413680,0,0x0,6
tick,0x7d8294d2a042,16414756,0,0x0,6
tick,0x7d8294d2a042,16415845,0,0x0,6
tick,0x7d8294d2a042,16416984,0,0x0,6
tick,0x7d8294d2a042,16418090,0,0x0,6
tick,0x7d8294d2a042,16419213,0,0x0,6
tick,0x7d8294d2a042,16420340,0,0x0,6
tick,0x7d8294d2a042,16421456,0,0x0,6
tick,0x7d8294d2a042,16422384,0,0x0,6
tick,0x7d8294d2a042,16423515,0,0x0,6
tick,0x7d8294d2a042,16424557,0,0x0,6
tick,0x7d8294d2a042,16425631,0,0x0,6
tick,0x7d8294d2a042,16426633,0,0x0,6
tick,0x7d8294d2a042,16427787,0,0x0,6
tick,0x7d8294d2a042,16428800,0,0x0,6
tick,0x7d8294d2a042,16429839,0,0x0,6
tick,0x7d8294d2a042,16430912,0,0x0,6
tick,0x7d8294d2a042,16432059,0,0x0,6
tick,0x7d8294d2a042,16433075,0,0x0,6
tick,0x7d8294d2a042,16434161,0,0x0,6
tick,0x7d8294d2a042,16435239,0,0x0,6
tick,0x7d8294d2a042,16436341,0,0x0,6
tick,0x7d8294d2a042,16437475,0,0x0,6
tick,0x7d8294d2a042,16438487,0,0x0,6
tick,0x7d8294d2a042,16439559,0,0x0,6
tick,0x7d8294d2a042,16440698,0,0x0,6
tick,0x7d8294d2a042,16441838,0,0x0,6
tick,0x7d8294d2a042,16442860,0,0x0,6
tick,0x7d8294d2a042,16444044,0,0x0,6
tick,0x7d8294d2a042,16445194,0,0x0,6
tick,0x7d8294d1ba9a,16446145,0,0x0,6
tick,0x7d8294d2a042,16447222,0,0x0,6
tick,0x7d8294d1ba9a,16448369,0,0x0,6
tick,0x7d8294d2a042,16449530,0,0x0,6
tick,0x7d8294d2a042,16450613,0,0x0,6
tick,0x7d8294d2a042,16451691,0,0x0,6
tick,0x7d8294d2a042,16452837,0,0x0,6
tick,0x7d8294d2a042,16454068,0,0x0,6
tick,0x7d8294d2a042,16455090,0,0x0,6
tick,0x7d8294d2a042,16456236,0,0x0,6
tick,0x7d8294d2a042,16457408,0,0x0,6
tick,0x7d8294d2a042,16458366,0,0x0,6
tick,0x7d8294d2a042,16459604,0,0x0,6
tick,0x7d8294d2a042,16460724,0,0x0,6
tick,0x64950d417d5c,16461897,0,0x0,0,0x64950d50da40,0x64956d805ac8,0x2c3700c87d33,0x2c3700c83f9b,0x64950d873576
code-creation,JS,10,16462750,0x64956d80f640,168,Queue ext:deno_web/06_streams.js:230:13,0x2c37001e60ec,^
code-source-info,0x64956d80f640,21,5652,6331,,,
code-creation,JS,10,16462768,0x64956d80f700,112,Queue ext:deno_web/06_streams.js:230:1,0x2c37001e5fac,^
code-source-info,0x64956d80f700,21,5640,5640,,,
code-creation,JS,10,16462774,0x64956d80f780,160,isReadableStreamLocked ext:deno_web/06_streams.js:706:32,0x2c37001e342c,^
code-source-info,0x64956d80f780,21,18559,18611,,,
code-creation,JS,10,16462786,0x64956d80f840,984,async_op_2 ext:core/00_infra.js:238:33,0x2c37001c9120,^
code-source-info,0x64956d80f840,4,6921,7449,,,
code-creation,JS,10,16462791,0x64956d80fc40,172, ext:core/00_primordials.js:505:36,0x2c370084e990,^
code-source-info,0x64956d80fc40,3,15083,15122,,,
code-creation,JS,10,16462796,0x64956d80fd00,480, ext:core/00_primordials.js:503:9,0x2c370084e8f8,^
code-source-info,0x64956d80fd00,3,14972,15166,,,
code-creation,JS,10,16462802,0x64956d80ff00,244,readableStreamHasDefaultReader ext:deno_web/06_streams.js:2625:40,0x2c37001e4320,^
code-source-info,0x64956d80ff00,21,72837,73019,,,
code-creation,JS,10,16462807,0x64956d810040,56,get size ext:deno_web/06_streams.js:269:11,0x2c37001e609c,^
code-source-info,0x64956d810040,21,6298,6329,,,
code-creation,JS,10,16462850,0x64956d8100c0,444,assertBranded ext:deno_webidl/00_webidl.js:1014:23,0x2c37001ce3ec,^
script-source,8,ext:deno_webidl/00_webidl.js,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n\n// Adapted from https://github.com/jsdom/webidl-conversions.\n// Copyright Domenic Denicola. Licensed under BSD-2-Clause License.\n// Original license at https://github.com/jsdom/webidl-conversions/blob/master/LICENSE.md.\n\n/// <reference path="../../core/internal.d.ts" />\n\nimport { core\x2C primordials } from "ext:core/mod.js";\nconst {\n  isArrayBuffer\x2C\n  isDataView\x2C\n  isSharedArrayBuffer\x2C\n  isTypedArray\x2C\n} = core;\nconst {\n  ArrayBufferIsView\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSort\x2C\n  ArrayIteratorPrototype\x2C\n  BigInt\x2C\n  BigIntAsIntN\x2C\n  BigIntAsUintN\x2C\n  DataViewPrototypeGetBuffer\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  Int16Array\x2C\n  Int32Array\x2C\n  Int8Array\x2C\n  MathFloor\x2C\n  MathFround\x2C\n  MathMax\x2C\n  MathMin\x2C\n  MathPow\x2C\n  MathRound\x2C\n  MathTrunc\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectHasOwn\x2C\n  ObjectPrototypeIsPrototypeOf\x2C\n  ObjectIs\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectDefineProperty\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectHas\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeTest\x2C\n  SafeRegExp\x2C\n  SafeSet\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeForEach\x2C\n  SetPrototypeKeys\x2C\n  SetPrototypeValues\x2C\n  SetPrototypeHas\x2C\n  SetPrototypeClear\x2C\n  SetPrototypeDelete\x2C\n  SetPrototypeAdd\x2C\n  // TODO(lucacasonato): add SharedArrayBuffer to primordials\n  // SharedArrayBufferPrototype\x2C\n  String\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n  TypeError\x2C\n  Uint16Array\x2C\n  Uint32Array\x2C\n  Uint8Array\x2C\n  Uint8ClampedArray\x2C\n} = primordials;\n\nfunction makeException(ErrorType\x2C message\x2C prefix\x2C context) {\n  return new ErrorType(\n    `${prefix ? prefix + ": " : ""}${context ? context : "Value"} ${message}`\x2C\n  );\n}\n\nfunction toNumber(value) {\n  if (typeof value === "bigint") {\n    throw TypeError("Cannot convert a BigInt value to a number");\n  }\n  return Number(value);\n}\n\nfunction type(V) {\n  if (V === null) {\n    return "Null";\n  }\n  switch (typeof V) {\n    case "undefined":\n      return "Undefined";\n    case "boolean":\n      return "Boolean";\n    case "number":\n      return "Number";\n    case "string":\n      return "String";\n    case "symbol":\n      return "Symbol";\n    case "bigint":\n      return "BigInt";\n    case "object":\n    // Falls through\n    case "function":\n    // Falls through\n    default:\n      // Per ES spec\x2C typeof returns an implementation-defined value that is not any of the existing ones for\n      // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\n      // such cases. So treat the default case as an object.\n      return "Object";\n  }\n}\n\n// Round x to the nearest integer\x2C choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if (\n    (x > 0 && x % 1 === +0.5 && (x & 1) === 0) ||\n    (x < 0 && x % 1 === -0.5 && (x & 1) === 1)\n  ) {\n    return censorNegativeZero(MathFloor(x));\n  }\n\n  return censorNegativeZero(MathRound(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(MathTrunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x\x2C y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength\x2C typeOpts) {\n  const isSigned = !typeOpts.unsigned;\n\n  let lowerBound;\n  let upperBound;\n  if (bitLength === 64) {\n    upperBound = NumberMAX_SAFE_INTEGER;\n    lowerBound = !isSigned ? 0 : NumberMIN_SAFE_INTEGER;\n  } else if (!isSigned) {\n    lowerBound = 0;\n    upperBound = MathPow(2\x2C bitLength) - 1;\n  } else {\n    lowerBound = -MathPow(2\x2C bitLength - 1);\n    upperBound = MathPow(2\x2C bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = MathPow(2\x2C bitLength);\n  const twoToOneLessThanTheBitLength = MathPow(2\x2C bitLength - 1);\n\n  return (\n    V\x2C\n    prefix = undefined\x2C\n    context = undefined\x2C\n    opts = { __proto__: null }\x2C\n  ) => {\n    let x = toNumber(V);\n    x = censorNegativeZero(x);\n\n    if (opts.enforceRange) {\n      if (!NumberIsFinite(x)) {\n        throw makeException(\n          TypeError\x2C\n          "is not a finite number"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError\x2C\n          `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return x;\n    }\n\n    if (!NumberIsNaN(x) && opts.clamp) {\n      x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!NumberIsFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2\x2C 64) is not accurately representable in JavaScript\x2C so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64\x2C but oh well. See the README for more details.\n    x = modulo(x\x2C twoToTheBitLength);\n    if (isSigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength\x2C { unsigned }) {\n  const upperBound = NumberMAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : NumberMIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigIntAsUintN : BigIntAsIntN;\n\n  return (\n    V\x2C\n    prefix = undefined\x2C\n    context = undefined\x2C\n    opts = { __proto__: null }\x2C\n  ) => {\n    let x = toNumber(V);\n    x = censorNegativeZero(x);\n\n    if (opts.enforceRange) {\n      if (!NumberIsFinite(x)) {\n        throw makeException(\n          TypeError\x2C\n          "is not a finite number"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError\x2C\n          `is outside the accepted range of ${lowerBound} to ${upperBound}\x2C inclusive`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return x;\n    }\n\n    if (!NumberIsNaN(x) && opts.clamp) {\n      x = MathMin(MathMax(x\x2C lowerBound)\x2C upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!NumberIsFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength\x2C xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nconst converters = [];\n\nconverters.any = (V) => {\n  return V;\n};\n\nconverters.boolean = function (val) {\n  return !!val;\n};\n\nconverters.byte = createIntegerConversion(8\x2C { unsigned: false });\nconverters.octet = createIntegerConversion(8\x2C { unsigned: true });\n\nconverters.short = createIntegerConversion(16\x2C { unsigned: false });\nconverters["unsigned short"] = createIntegerConversion(16\x2C {\n  unsigned: true\x2C\n});\n\nconverters.long = createIntegerConversion(32\x2C { unsigned: false });\nconverters["unsigned long"] = createIntegerConversion(32\x2C { unsigned: true });\n\nconverters["long long"] = createLongLongConversion(64\x2C { unsigned: false });\nconverters["unsigned long long"] = createLongLongConversion(64\x2C {\n  unsigned: true\x2C\n});\n\nconverters.float = (V\x2C prefix\x2C context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (!NumberIsFinite(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a finite floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  if (ObjectIs(x\x2C -0)) {\n    return x;\n  }\n\n  const y = MathFround(x);\n\n  if (!NumberIsFinite(y)) {\n    throw makeException(\n      TypeError\x2C\n      "is outside the range of a single-precision floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return y;\n};\n\nconverters["unrestricted float"] = (V\x2C _prefix\x2C _context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (NumberIsNaN(x)) {\n    return x;\n  }\n\n  if (ObjectIs(x\x2C -0)) {\n    return x;\n  }\n\n  return MathFround(x);\n};\n\nconverters.double = (V\x2C prefix\x2C context\x2C _opts) => {\n  const x = toNumber(V);\n\n  if (!NumberIsFinite(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a finite floating-point value"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return x;\n};\n\nconverters["unrestricted double"] = (V\x2C _prefix\x2C _context\x2C _opts) => {\n  const x = toNumber(V);\n\n  return x;\n};\n\nconverters.DOMString = function (\n  V\x2C\n  prefix\x2C\n  context\x2C\n  opts = { __proto__: null }\x2C\n) {\n  if (typeof V === "string") {\n    return V;\n  } else if (V === null && opts.treatNullAsEmptyString) {\n    return "";\n  } else if (typeof V === "symbol") {\n    throw makeException(\n      TypeError\x2C\n      "is a symbol\x2C which cannot be converted to a string"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return String(V);\n};\n\nfunction isByteString(input) {\n  for (let i = 0; i < input.length; i++) {\n    if (StringPrototypeCharCodeAt(input\x2C i) > 255) {\n      // If a character code is greater than 255\x2C it means the string is not a byte string.\n      return false;\n    }\n  }\n  return true;\n}\n\nconverters.ByteString = (V\x2C prefix\x2C context\x2C opts) => {\n  const x = converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n  if (!isByteString(x)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a valid ByteString"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  return x;\n};\n\nconverters.USVString = (V\x2C prefix\x2C context\x2C opts) => {\n  const S = converters.DOMString(V\x2C prefix\x2C context\x2C opts);\n  return StringPrototypeToWellFormed(S);\n};\n\nconverters.object = (V\x2C prefix\x2C context\x2C _opts) => {\n  if (type(V) !== "Object") {\n    throw makeException(\n      TypeError\x2C\n      "is not an object"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\n// Not exported\x2C but used in Function and VoidFunction.\n\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull]\x2C so\n// handling for that is omitted.\nfunction convertCallbackFunction(V\x2C prefix\x2C context\x2C _opts) {\n  if (typeof V !== "function") {\n    throw makeException(\n      TypeError\x2C\n      "is not a function"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  return V;\n}\n\nconverters.ArrayBuffer = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = { __proto__: null }\x2C\n) => {\n  if (!isArrayBuffer(V)) {\n    if (opts.allowShared && !isSharedArrayBuffer(V)) {\n      throw makeException(\n        TypeError\x2C\n        "is not an ArrayBuffer or SharedArrayBuffer"\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.DataView = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = { __proto__: null }\x2C\n) => {\n  if (!isDataView(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a DataView"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  if (\n    !opts.allowShared &&\n    isSharedArrayBuffer(DataViewPrototypeGetBuffer(V))\n  ) {\n    throw makeException(\n      TypeError\x2C\n      "is backed by a SharedArrayBuffer\x2C which is not allowed"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nArrayPrototypeForEach(\n  [\n    Int8Array\x2C\n    Int16Array\x2C\n    Int32Array\x2C\n    Uint8Array\x2C\n    Uint16Array\x2C\n    Uint32Array\x2C\n    Uint8ClampedArray\x2C\n    // TODO(petamoriken): add Float16Array converter\n    // Float16Array\x2C\n    Float32Array\x2C\n    Float64Array\x2C\n  ]\x2C\n  (func) => {\n    const name = func.name;\n    const article = RegExpPrototypeTest(new SafeRegExp(/^[AEIOU]/)\x2C name)\n      ? "an"\n      : "a";\n    converters[name] = (\n      V\x2C\n      prefix = undefined\x2C\n      context = undefined\x2C\n      opts = { __proto__: null }\x2C\n    ) => {\n      if (TypedArrayPrototypeGetSymbolToStringTag(V) !== name) {\n        throw makeException(\n          TypeError\x2C\n          `is not ${article} ${name} object`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n      if (\n        !opts.allowShared &&\n        isSharedArrayBuffer(TypedArrayPrototypeGetBuffer(V))\n      ) {\n        throw makeException(\n          TypeError\x2C\n          "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n\n      return V;\n    };\n  }\x2C\n);\n\n// Common definitions\n\nconverters.ArrayBufferView = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = { __proto__: null }\x2C\n) => {\n  if (!ArrayBufferIsView(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not a view on an ArrayBuffer or SharedArrayBuffer"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  let buffer;\n  if (isTypedArray(V)) {\n    buffer = TypedArrayPrototypeGetBuffer(V);\n  } else {\n    buffer = DataViewPrototypeGetBuffer(V);\n  }\n  if (!opts.allowShared && isSharedArrayBuffer(buffer)) {\n    throw makeException(\n      TypeError\x2C\n      "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.BufferSource = (\n  V\x2C\n  prefix = undefined\x2C\n  context = undefined\x2C\n  opts = { __proto__: null }\x2C\n) => {\n  if (ArrayBufferIsView(V)) {\n    let buffer;\n    if (isTypedArray(V)) {\n      buffer = TypedArrayPrototypeGetBuffer(V);\n    } else {\n      buffer = DataViewPrototypeGetBuffer(V);\n    }\n    if (!opts.allowShared && isSharedArrayBuffer(buffer)) {\n      throw makeException(\n        TypeError\x2C\n        "is a view on a SharedArrayBuffer\x2C which is not allowed"\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n\n    return V;\n  }\n\n  if (!opts.allowShared && !isArrayBuffer(V)) {\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer or a view on one"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n  if (\n    opts.allowShared &&\n    !isSharedArrayBuffer(V) &&\n    !isArrayBuffer(V)\n  ) {\n    throw makeException(\n      TypeError\x2C\n      "is not an ArrayBuffer\x2C SharedArrayBuffer\x2C or a view on one"\x2C\n      prefix\x2C\n      context\x2C\n    );\n  }\n\n  return V;\n};\n\nconverters.DOMTimeStamp = converters["unsigned long long"];\nconverters.DOMHighResTimeStamp = converters["double"];\n\nconverters.Function = convertCallbackFunction;\n\nconverters.VoidFunction = convertCallbackFunction;\n\nconverters["UVString?"] = createNullableConverter(\n  converters.USVString\x2C\n);\nconverters["sequence<double>"] = createSequenceConverter(\n  converters.double\x2C\n);\nconverters["sequence<object>"] = createSequenceConverter(\n  converters.object\x2C\n);\nconverters["Promise<undefined>"] = createPromiseConverter(() => undefined);\n\nconverters["sequence<ByteString>"] = createSequenceConverter(\n  converters.ByteString\x2C\n);\nconverters["sequence<sequence<ByteString>>"] = createSequenceConverter(\n  converters["sequence<ByteString>"]\x2C\n);\nconverters["record<ByteString\x2C ByteString>"] = createRecordConverter(\n  converters.ByteString\x2C\n  converters.ByteString\x2C\n);\n\nconverters["sequence<USVString>"] = createSequenceConverter(\n  converters.USVString\x2C\n);\nconverters["sequence<sequence<USVString>>"] = createSequenceConverter(\n  converters["sequence<USVString>"]\x2C\n);\nconverters["record<USVString\x2C USVString>"] = createRecordConverter(\n  converters.USVString\x2C\n  converters.USVString\x2C\n);\n\nconverters["sequence<DOMString>"] = createSequenceConverter(\n  converters.DOMString\x2C\n);\n\nfunction requiredArguments(length\x2C required\x2C prefix) {\n  if (length < required) {\n    const errMsg = `${prefix ? prefix + ": " : ""}${required} argument${\n      required === 1 ? "" : "s"\n    } required\x2C but only ${length} present.`;\n    throw new TypeError(errMsg);\n  }\n}\n\nfunction createDictionaryConverter(name\x2C ...dictionaries) {\n  let hasRequiredKey = false;\n  const allMembers = [];\n  for (let i = 0; i < dictionaries.length; ++i) {\n    const members = dictionaries[i];\n    for (let j = 0; j < members.length; ++j) {\n      const member = members[j];\n      if (member.required) {\n        hasRequiredKey = true;\n      }\n      ArrayPrototypePush(allMembers\x2C member);\n    }\n  }\n  ArrayPrototypeSort(allMembers\x2C (a\x2C b) => {\n    if (a.key == b.key) {\n      return 0;\n    }\n    return a.key < b.key ? -1 : 1;\n  });\n\n  const defaultValues = { __proto__: null };\n  for (let i = 0; i < allMembers.length; ++i) {\n    const member = allMembers[i];\n    if (ReflectHas(member\x2C "defaultValue")) {\n      const idlMemberValue = member.defaultValue;\n      const imvType = typeof idlMemberValue;\n      // Copy by value types can be directly assigned\x2C copy by reference types\n      // need to be re-created for each allocation.\n      if (\n        imvType === "number" || imvType === "boolean" ||\n        imvType === "string" || imvType === "bigint" ||\n        imvType === "undefined"\n      ) {\n        defaultValues[member.key] = member.converter(idlMemberValue\x2C {});\n      } else {\n        ObjectDefineProperty(defaultValues\x2C member.key\x2C {\n          get() {\n            return member.converter(idlMemberValue\x2C member.defaultValue);\n          }\x2C\n          enumerable: true\x2C\n        });\n      }\n    }\n  }\n\n  return function (\n    V\x2C\n    prefix = undefined\x2C\n    context = undefined\x2C\n    opts = { __proto__: null }\x2C\n  ) {\n    const typeV = type(V);\n    switch (typeV) {\n      case "Undefined":\n      case "Null":\n      case "Object":\n        break;\n      default:\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to a dictionary"\x2C\n          prefix\x2C\n          context\x2C\n        );\n    }\n    const esDict = V;\n\n    const idlDict = ObjectAssign({}\x2C defaultValues);\n\n    // NOTE: fast path Null and Undefined.\n    if ((V === undefined || V === null) && !hasRequiredKey) {\n      return idlDict;\n    }\n\n    for (let i = 0; i < allMembers.length; ++i) {\n      const member = allMembers[i];\n      const key = member.key;\n\n      let esMemberValue;\n      if (typeV === "Undefined" || typeV === "Null") {\n        esMemberValue = undefined;\n      } else {\n        esMemberValue = esDict[key];\n      }\n\n      if (esMemberValue !== undefined) {\n        const memberContext = `'${key}' of '${name}'${\n          context ? ` (${context})` : ""\n        }`;\n        const converter = member.converter;\n        const idlMemberValue = converter(\n          esMemberValue\x2C\n          prefix\x2C\n          memberContext\x2C\n          opts\x2C\n        );\n        idlDict[key] = idlMemberValue;\n      } else if (member.required) {\n        throw makeException(\n          TypeError\x2C\n          `can not be converted to '${name}' because '${key}' is required in '${name}'.`\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n    }\n\n    return idlDict;\n  };\n}\n\n// https://heycam.github.io/webidl/#es-enumeration\nfunction createEnumConverter(name\x2C values) {\n  const E = new SafeSet(values);\n\n  return function (\n    V\x2C\n    prefix = undefined\x2C\n    _context = undefined\x2C\n    _opts = { __proto__: null }\x2C\n  ) {\n    const S = String(V);\n\n    if (!E.has(S)) {\n      throw new TypeError(\n        `${\n          prefix ? prefix + ": " : ""\n        }The provided value '${S}' is not a valid enum value of type ${name}.`\x2C\n      );\n    }\n\n    return S;\n  };\n}\n\nfunction createNullableConverter(converter) {\n  return (\n    V\x2C\n    prefix = undefined\x2C\n    context = undefined\x2C\n    opts = { __proto__: null }\x2C\n  ) => {\n    // FIXME: If Type(V) is not Object\x2C and the conversion to an IDL value is\n    // being performed due to V being assigned to an attribute whose type is a\n    // nullable callback function that is annotated with\n    // [LegacyTreatNonObjectAsNull]\x2C then return the IDL nullable type T?\n    // value null.\n\n    if (V === null || V === undefined) return null;\n    return converter(V\x2C prefix\x2C context\x2C opts);\n  };\n}\n\n// https://heycam.github.io/webidl/#es-sequence\nfunction createSequenceConverter(converter) {\n  return function (\n    V\x2C\n    prefix = undefined\x2C\n    context = undefined\x2C\n    opts = { __proto__: null }\x2C\n  ) {\n    if (type(V) !== "Object") {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to sequence."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const iter = V?.[SymbolIterator]?.();\n    if (iter === undefined) {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to sequence."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const array = [];\n    while (true) {\n      const res = iter?.next?.();\n      if (res === undefined) {\n        throw makeException(\n          TypeError\x2C\n          "can not be converted to sequence."\x2C\n          prefix\x2C\n          context\x2C\n        );\n      }\n      if (res.done === true) break;\n      const val = converter(\n        res.value\x2C\n        prefix\x2C\n        `${context}\x2C index ${array.length}`\x2C\n        opts\x2C\n      );\n      ArrayPrototypePush(array\x2C val);\n    }\n    return array;\n  };\n}\n\nfunction createRecordConverter(keyConverter\x2C valueConverter) {\n  return (V\x2C prefix\x2C context\x2C opts) => {\n    if (type(V) !== "Object") {\n      throw makeException(\n        TypeError\x2C\n        "can not be converted to dictionary."\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    const result = { __proto__: null };\n    // Fast path for common case (not a Proxy)\n    if (!core.isProxy(V)) {\n      for (const key in V) {\n        if (!ObjectHasOwn(V\x2C key)) {\n          continue;\n        }\n        const typedKey = keyConverter(key\x2C prefix\x2C context\x2C opts);\n        const value = V[key];\n        const typedValue = valueConverter(value\x2C prefix\x2C context\x2C opts);\n        result[typedKey] = typedValue;\n      }\n      return result;\n    }\n    // Slow path if Proxy (e.g: in WPT tests)\n    const keys = ReflectOwnKeys(V);\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const desc = ObjectGetOwnPropertyDescriptor(V\x2C key);\n      if (desc !== undefined && desc.enumerable === true) {\n        const typedKey = keyConverter(key\x2C prefix\x2C context\x2C opts);\n        const value = V[key];\n        const typedValue = valueConverter(value\x2C prefix\x2C context\x2C opts);\n        result[typedKey] = typedValue;\n      }\n    }\n    return result;\n  };\n}\n\nfunction createPromiseConverter(converter) {\n  return (V\x2C prefix\x2C context\x2C opts) =>\n    // should be able to handle thenables\n    // see: https://github.com/web-platform-tests/wpt/blob/a31d3ba53a79412793642366f3816c9a63f0cf57/streams/writable-streams/close.any.js#L207\n    typeof V?.then === "function"\n      ? PromisePrototypeThen(PromiseResolve(V)\x2C (V) =>\n        converter(V\x2C prefix\x2C context\x2C opts))\n      : PromiseResolve(converter(V\x2C prefix\x2C context\x2C opts));\n}\n\nfunction invokeCallbackFunction(\n  callable\x2C\n  args\x2C\n  thisArg\x2C\n  returnValueConverter\x2C\n  prefix\x2C\n  returnsPromise\x2C\n) {\n  try {\n    const rv = ReflectApply(callable\x2C thisArg\x2C args);\n    return returnValueConverter(rv\x2C prefix\x2C "return value");\n  } catch (err) {\n    if (returnsPromise === true) {\n      return PromiseReject(err);\n    }\n    throw err;\n  }\n}\n\nconst brand = Symbol("[[webidl.brand]]");\n\nfunction createInterfaceConverter(name\x2C prototype) {\n  return (V\x2C prefix\x2C context\x2C _opts) => {\n    if (!ObjectPrototypeIsPrototypeOf(prototype\x2C V) || V[brand] !== brand) {\n      throw makeException(\n        TypeError\x2C\n        `is not of type ${name}.`\x2C\n        prefix\x2C\n        context\x2C\n      );\n    }\n    return V;\n  };\n}\n\n// TODO(lucacasonato): have the user pass in the prototype\x2C and not the type.\nfunction createBranded(Type) {\n  const t = ObjectCreate(Type.prototype);\n  t[brand] = brand;\n  return t;\n}\n\nfunction assertBranded(self\x2C prototype) {\n  if (\n    !ObjectPrototypeIsPrototypeOf(prototype\x2C self) || self[brand] !== brand\n  ) {\n    throw new TypeError("Illegal invocation");\n  }\n}\n\nfunction illegalConstructor() {\n  throw new TypeError("Illegal constructor");\n}\n\nfunction define(target\x2C source) {\n  const keys = ReflectOwnKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    const descriptor = ReflectGetOwnPropertyDescriptor(source\x2C key);\n    if (descriptor && !ReflectDefineProperty(target\x2C key\x2C descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nconst _iteratorInternal = Symbol("iterator internal");\n\nconst globalIteratorPrototype = ObjectGetPrototypeOf(ArrayIteratorPrototype);\n\nfunction mixinPairIterable(name\x2C prototype\x2C dataSymbol\x2C keyKey\x2C valueKey) {\n  const iteratorPrototype = ObjectCreate(globalIteratorPrototype\x2C {\n    [SymbolToStringTag]: { configurable: true\x2C value: `${name} Iterator` }\x2C\n  });\n  define(iteratorPrototype\x2C {\n    next() {\n      const internal = this && this[_iteratorInternal];\n      if (!internal) {\n        throw new TypeError(\n          `next() called on a value that is not a ${name} iterator object`\x2C\n        );\n      }\n      const { target\x2C kind\x2C index } = internal;\n      const values = target[dataSymbol];\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined\x2C done: true };\n      }\n      const pair = values[index];\n      internal.index = index + 1;\n      let result;\n      switch (kind) {\n        case "key":\n          result = pair[keyKey];\n          break;\n        case "value":\n          result = pair[valueKey];\n          break;\n        case "key+value":\n          result = [pair[keyKey]\x2C pair[valueKey]];\n          break;\n      }\n      return { value: result\x2C done: false };\n    }\x2C\n  });\n  function createDefaultIterator(target\x2C kind) {\n    const iterator = ObjectCreate(iteratorPrototype);\n    ObjectDefineProperty(iterator\x2C _iteratorInternal\x2C {\n      value: { target\x2C kind\x2C index: 0 }\x2C\n      configurable: true\x2C\n    });\n    return iterator;\n  }\n\n  function entries() {\n    assertBranded(this\x2C prototype.prototype);\n    return createDefaultIterator(this\x2C "key+value");\n  }\n\n  const properties = {\n    entries: {\n      value: entries\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    [SymbolIterator]: {\n      value: entries\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n    }\x2C\n    keys: {\n      value: function keys() {\n        assertBranded(this\x2C prototype.prototype);\n        return createDefaultIterator(this\x2C "key");\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    values: {\n      value: function values() {\n        assertBranded(this\x2C prototype.prototype);\n        return createDefaultIterator(this\x2C "value");\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n    forEach: {\n      value: function forEach(idlCallback\x2C thisArg = undefined) {\n        assertBranded(this\x2C prototype.prototype);\n        const prefix = `Failed to execute 'forEach' on '${name}'`;\n        requiredArguments(arguments.length\x2C 1\x2C { prefix });\n        idlCallback = converters["Function"](idlCallback\x2C {\n          prefix\x2C\n          context: "Argument 1"\x2C\n        });\n        idlCallback = FunctionPrototypeBind(\n          idlCallback\x2C\n          thisArg ?? globalThis\x2C\n        );\n        const pairs = this[dataSymbol];\n        for (let i = 0; i < pairs.length; i++) {\n          const entry = pairs[i];\n          idlCallback(entry[valueKey]\x2C entry[keyKey]\x2C this);\n        }\n      }\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n    }\x2C\n  };\n  return ObjectDefineProperties(prototype.prototype\x2C properties);\n}\n\nfunction configureInterface(interface_) {\n  configureProperties(interface_);\n  configureProperties(interface_.prototype);\n  ObjectDefineProperty(interface_.prototype\x2C SymbolToStringTag\x2C {\n    value: interface_.name\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: false\x2C\n  });\n}\n\nfunction configureProperties(obj) {\n  const descriptors = ObjectGetOwnPropertyDescriptors(obj);\n  for (const key in descriptors) {\n    if (!ObjectHasOwn(descriptors\x2C key)) {\n      continue;\n    }\n    if (key === "constructor") continue;\n    if (key === "prototype") continue;\n    const descriptor = descriptors[key];\n    if (\n      ReflectHas(descriptor\x2C "value") &&\n      typeof descriptor.value === "function"\n    ) {\n      ObjectDefineProperty(obj\x2C key\x2C {\n        enumerable: true\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      });\n    } else if (ReflectHas(descriptor\x2C "get")) {\n      ObjectDefineProperty(obj\x2C key\x2C {\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n}\n\nconst setlikeInner = Symbol("[[set]]");\n\n// Ref: https://webidl.spec.whatwg.org/#es-setlike\nfunction setlike(obj\x2C objPrototype\x2C readonly) {\n  ObjectDefineProperties(obj\x2C {\n    size: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      get() {\n        assertBranded(this\x2C objPrototype);\n        return obj[setlikeInner].size;\n      }\x2C\n    }\x2C\n    [SymbolIterator]: {\n      configurable: true\x2C\n      enumerable: false\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return obj[setlikeInner][SymbolIterator]();\n      }\x2C\n    }\x2C\n    entries: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeEntries(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    keys: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeKeys(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    values: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value() {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeValues(obj[setlikeInner]);\n      }\x2C\n    }\x2C\n    forEach: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value(callbackfn\x2C thisArg) {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeForEach(obj[setlikeInner]\x2C callbackfn\x2C thisArg);\n      }\x2C\n    }\x2C\n    has: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\x2C\n      value(value) {\n        assertBranded(this\x2C objPrototype);\n        return SetPrototypeHas(obj[setlikeInner]\x2C value);\n      }\x2C\n    }\x2C\n  });\n\n  if (!readonly) {\n    ObjectDefineProperties(obj\x2C {\n      add: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value(value) {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeAdd(obj[setlikeInner]\x2C value);\n        }\x2C\n      }\x2C\n      delete: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value(value) {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeDelete(obj[setlikeInner]\x2C value);\n        }\x2C\n      }\x2C\n      clear: {\n        configurable: true\x2C\n        enumerable: true\x2C\n        writable: true\x2C\n        value() {\n          assertBranded(this\x2C objPrototype);\n          return SetPrototypeClear(obj[setlikeInner]);\n        }\x2C\n      }\x2C\n    });\n  }\n}\n\nexport {\n  assertBranded\x2C\n  brand\x2C\n  configureInterface\x2C\n  converters\x2C\n  createBranded\x2C\n  createDictionaryConverter\x2C\n  createEnumConverter\x2C\n  createInterfaceConverter\x2C\n  createNullableConverter\x2C\n  createPromiseConverter\x2C\n  createRecordConverter\x2C\n  createSequenceConverter\x2C\n  illegalConstructor\x2C\n  invokeCallbackFunction\x2C\n  makeException\x2C\n  mixinPairIterable\x2C\n  requiredArguments\x2C\n  setlike\x2C\n  setlikeInner\x2C\n  type\x2C\n};\n
code-source-info,0x64956d8100c0,8,24229,24390,,,
code-creation,JS,10,16463691,0x64956d8102c0,344,ReadableStream ext:deno_web/06_streams.js:5119:22,0x2c37001e7034,^
code-source-info,0x64956d8102c0,21,147141,155715,,,
code-creation,JS,10,16463697,0x64956d810440,428,initializeReadableStream ext:deno_web/06_streams.js:601:34,0x2c37001e32b4,^
code-source-info,0x64956d810440,21,16028,16155,,,
code-creation,JS,10,16463704,0x64956d810600,604,ReadableByteStreamController ext:deno_web/06_streams.js:5797:36,0x2c37001e80a8,^
code-source-info,0x64956d810600,21,166580,172318,,,
code-creation,JS,10,16463710,0x64956d810880,360,ReadableByteStreamController ext:deno_web/06_streams.js:5825:14,0x2c37001e7e18,^
code-source-info,0x64956d810880,21,167302,167423,,,
tick,0x7d8294c869a8,16463722,0,0x0,9,0x64950db6a140,0x64956d80ebd4,0x2c3700c858bb,0x2c3700c85d87,0x2c3700c85c3a,0x2c3700c85a30,0x2c3700c8492f,0x2c3700c84876,0x2c3700c83ed7,0x64950d873576,0x64956d804390
code-creation,JS,10,16463738,0x64956d810a00,312,resetQueue ext:deno_web/06_streams.js:1541:20,0x2c37001e3984,^
code-source-info,0x64956d810a00,21,42081,42165,,,
code-creation,JS,10,16463745,0x64956d810b80,44,noop ext:deno_web/06_streams.js:392:14,0x2c37001e2fe4,^
code-source-info,0x64956d810b80,21,10522,10527,,,
code-creation,JS,10,16463750,0x64956d810bc0,184,setPromiseIsHandledToTrue ext:deno_web/06_streams.js:174:35,0x2c37001e2e04,^
code-source-info,0x64956d810bc0,21,4118,4207,,,
code-creation,JS,10,16463755,0x64956d810cc0,2200,setUpReadableByteStreamController ext:deno_web/06_streams.js:3484:43,0x2c37001e4704,^
code-source-info,0x64956d810cc0,21,96599,97885,,,
code-creation,JS,10,16463760,0x64956d811580,1328,setUpReadableByteStreamControllerFromUnderlyingSource ext:deno_web/06_streams.js:3533:63,0x2c37001e4740,^
code-source-info,0x64956d811580,21,98159,99955,,,
code-creation,JS,10,16463766,0x64956d811ac0,1220,readableStreamForRidUnrefable ext:deno_web/06_streams.js:977:39,0x2c37001e5800,^
code-source-info,0x64956d811ac0,21,26253,27384,,,
tick,0x7d8294d2a042,16463945,0,0x0,6
tick,0x7d8294d2a042,16465120,0,0x0,6
tick,0x7d8294d2a042,16466261,0,0x0,6
tick,0x7d8294d2a042,16467351,0,0x0,6
tick,0x7d8294d2a042,16468503,0,0x0,6
tick,0x7d8294d2a042,16469633,0,0x0,6
tick,0x7d8294d2a042,16470656,0,0x0,6
tick,0x7d8294d2a042,16471859,0,0x0,6
tick,0x7d8294d2a042,16472994,0,0x0,6
tick,0x7d8294d2a042,16474098,0,0x0,6
tick,0x7d8294d2a042,16475191,0,0x0,6
tick,0x7d8294d2a042,16476458,0,0x0,6
tick,0x7d8294d2a042,16477547,0,0x0,6
tick,0x7d8294d2a042,16478652,0,0x0,6
tick,0x7d8294d2a042,16479750,0,0x0,6
tick,0x7d8294d2a042,16480943,0,0x0,6
tick,0x7d8294d2a042,16482100,0,0x0,6
tick,0x7d8294d2a042,16483207,0,0x0,6
tick,0x7d8294d2a042,16484263,0,0x0,6
tick,0x7d8294d2a042,16485391,0,0x0,6
tick,0x7d8294d2a042,16486558,0,0x0,6
tick,0x7d8294d2a042,16487684,0,0x0,6
tick,0x7d8294d2a042,16488798,0,0x0,6
tick,0x7d8294d2a042,16489936,0,0x0,6
tick,0x7d8294d2a042,16490970,0,0x0,6
tick,0x7d8294d2a042,16492108,0,0x0,6
tick,0x7d8294d2a042,16493270,0,0x0,6
tick,0x7d8294d2a042,16494484,0,0x0,6
tick,0x7d8294d2a042,16495642,0,0x0,6
tick,0x7d8294d2a042,16496792,0,0x0,6
tick,0x7d8294d2a042,16497946,0,0x0,6
tick,0x7d8294d2a042,16499048,0,0x0,6
tick,0x7d8294d2a042,16500157,0,0x0,6
tick,0x7d8294d2a042,16501328,0,0x0,6
tick,0x7d8294d2a042,16502422,0,0x0,6
tick,0x7d8294d2a042,16503646,0,0x0,6
tick,0x7d8294d2a042,16504803,0,0x0,6
tick,0x7d8294d2a042,16505958,0,0x0,6
tick,0x7d8294d2a042,16507062,0,0x0,6
tick,0x7d8294d2a042,16508174,0,0x0,6
tick,0x7d8294d2a042,16509344,0,0x0,6
tick,0x7d8294d2a042,16510504,0,0x0,6
tick,0x7d8294d2a042,16511604,0,0x0,6
tick,0x7d8294d2a042,16512788,0,0x0,6
tick,0x7d8294d2a042,16513943,0,0x0,6
tick,0x7d8294d2a042,16515041,0,0x0,6
tick,0x7d8294d2a042,16516157,0,0x0,6
tick,0x7d8294d2a042,16517316,0,0x0,6
tick,0x7d8294d2a042,16518469,0,0x0,6
tick,0x7d8294d2a042,16519644,0,0x0,6
tick,0x7d8294d2a042,16520774,0,0x0,6
tick,0x7d8294d2a042,16521876,0,0x0,6
tick,0x7d8294d2a042,16522957,0,0x0,6
tick,0x7d8294d2a042,16524148,0,0x0,6
tick,0x7d8294d2a042,16525329,0,0x0,6
tick,0x7d8294d2a042,16526484,0,0x0,6
tick,0x7d8294d2a042,16527630,0,0x0,6
tick,0x7d8294d2a042,16528776,0,0x0,6
tick,0x7d8294d2a042,16529933,0,0x0,6
tick,0x7d8294d2a042,16530968,0,0x0,6
tick,0x7d8294d2a042,16532099,0,0x0,6
tick,0x7d8294d2a042,16533243,0,0x0,6
tick,0x7d8294d2a042,16534460,0,0x0,6
tick,0x7d8294d2a042,16535630,0,0x0,6
tick,0x7d8294d2a042,16536785,0,0x0,6
tick,0x7d8294d2a042,16537930,0,0x0,6
tick,0x7d8294d2a042,16539024,0,0x0,6
tick,0x7d8294d2a042,16540157,0,0x0,6
tick,0x7d8294d2a042,16541301,0,0x0,6
tick,0x7d8294d2a042,16542394,0,0x0,6
tick,0x7d8294d2a042,16543624,0,0x0,6
tick,0x7d8294d2a042,16544751,0,0x0,6
tick,0x7d8294d2a042,16545897,0,0x0,6
tick,0x7d8294d2a042,16547007,0,0x0,6
tick,0x7d8294d2a042,16548112,0,0x0,6
tick,0x7d8294d2a042,16549276,0,0x0,6
tick,0x7d8294d2a042,16550435,0,0x0,6
tick,0x7d8294d2a042,16551621,0,0x0,6
tick,0x7d8294d2a042,16552666,0,0x0,6
tick,0x7d8294d2a042,16553769,0,0x0,6
tick,0x7d8294d2a042,16554844,0,0x0,6
tick,0x7d8294d2a042,16555954,0,0x0,6
tick,0x7d8294d2a042,16557122,0,0x0,6
tick,0x7d8294d2a042,16558278,0,0x0,6
tick,0x7d8294d2a042,16559366,0,0x0,6
tick,0x7d8294d2a042,16560505,0,0x0,6
tick,0x7d8294d2a042,16561576,0,0x0,6
tick,0x7d8294d2a042,16562657,0,0x0,6
tick,0x7d8294d2a042,16563615,0,0x0,6
tick,0x7d8294d2a042,16564795,0,0x0,6
tick,0x7d8294d2a042,16565937,0,0x0,6
tick,0x7d8294d2a042,16567030,0,0x0,6
tick,0x7d8294d2a042,16568102,0,0x0,6
tick,0x7d8294d2a042,16569260,0,0x0,6
tick,0x7d8294d2a042,16570370,0,0x0,6
tick,0x7d8294d2a042,16571526,0,0x0,6
tick,0x7d8294d2a042,16572700,0,0x0,6
tick,0x7d8294d2a042,16573800,0,0x0,6
tick,0x7d8294d2a042,16574878,0,0x0,6
tick,0x7d8294d2a042,16576063,0,0x0,6
tick,0x7d8294d2a042,16577220,0,0x0,6
tick,0x7d8294d2a042,16578365,0,0x0,6
tick,0x7d8294d2a042,16579542,0,0x0,6
tick,0x7d8294d2a042,16580512,0,0x0,6
tick,0x7d8294d2a042,16581512,0,0x0,6
tick,0x7d8294d2a042,16582569,0,0x0,6
tick,0x7d8294d2a042,16583625,0,0x0,6
tick,0x7d8294d2a042,16584869,0,0x0,6
tick,0x7d8294d2a042,16586014,0,0x0,6
tick,0x7d8294d2a042,16587182,0,0x0,6
tick,0x7d8294d2a042,16588259,0,0x0,6
tick,0x7d8294d2a042,16589392,0,0x0,6
tick,0x7d8294d2a042,16590508,0,0x0,6
tick,0x7d8294d2a042,16591612,0,0x0,6
tick,0x7d8294d2a042,16592799,0,0x0,6
tick,0x7d8294d2a042,16593938,0,0x0,6
tick,0x7d8294d2a042,16595041,0,0x0,6
tick,0x7d8294d2a042,16596147,0,0x0,6
tick,0x7d8294d2a042,16597313,0,0x0,6
tick,0x7d8294d2a042,16598411,0,0x0,6
tick,0x7d8294d2a042,16599484,0,0x0,6
tick,0x7d8294d2a042,16600532,0,0x0,6
tick,0x7d8294d2a042,16601709,0,0x0,6
tick,0x7d8294d2a042,16602823,0,0x0,6
tick,0x7d8294d2a042,16603934,0,0x0,6
tick,0x7d8294d2a042,16605089,0,0x0,6
tick,0x7d8294d2a042,16606246,0,0x0,6
tick,0x7d8294d2a042,16607470,0,0x0,6
tick,0x7d8294d2a042,16608383,0,0x0,6
tick,0x7d8294d2a042,16609464,0,0x0,6
tick,0x7d8294d2a042,16610566,0,0x0,6
tick,0x7d8294d2a042,16611633,0,0x0,6
tick,0x7d8294d2a042,16612736,0,0x0,6
tick,0x7d8294d2a042,16613724,0,0x0,6
tick,0x7d8294d2a042,16614785,0,0x0,6
tick,0x7d8294d2a042,16615966,0,0x0,6
tick,0x7d8294d2a042,16616957,0,0x0,6
tick,0x7d8294d2a042,16617982,0,0x0,6
tick,0x7d8294d2a042,16619067,0,0x0,6
tick,0x7d8294d2a042,16620124,0,0x0,6
tick,0x7d8294d2a042,16621181,0,0x0,6
tick,0x7d8294d2a042,16622235,0,0x0,6
tick,0x7d8294d2a042,16623294,0,0x0,6
tick,0x7d8294d2a042,16624430,0,0x0,6
tick,0x7d8294d2a042,16625417,0,0x0,6
tick,0x7d8294d2a042,16626473,0,0x0,6
tick,0x7d8294d2a042,16627601,0,0x0,6
tick,0x7d8294d2a042,16628744,0,0x0,6
tick,0x7d8294d2a042,16629728,0,0x0,6
tick,0x7d8294d2a042,16630713,0,0x0,6
tick,0x7d8294d2a042,16631929,0,0x0,6
tick,0x7d8294d2a042,16632960,0,0x0,6
tick,0x7d8294d2a042,16633864,0,0x0,6
tick,0x7d8294d2a042,16634921,0,0x0,6
tick,0x7d8294d2a042,16636049,0,0x0,6
tick,0x7d8294d2a042,16637101,0,0x0,6
tick,0x7d8294d2a042,16638096,0,0x0,6
tick,0x7d8294d2a042,16639153,0,0x0,6
tick,0x7d8294d2a042,16640285,0,0x0,6
tick,0x7d8294d2a042,16641348,0,0x0,6
tick,0x7d8294d2a042,16642419,0,0x0,6
tick,0x7d8294d2a042,16643514,0,0x0,6
tick,0x7d8294d2a042,16644570,0,0x0,6
tick,0x7d8294d2a042,16645678,0,0x0,6
tick,0x7d8294d2a042,16646724,0,0x0,6
tick,0x7d8294d2a042,16647701,0,0x0,6
tick,0x7d8294d2a042,16648816,0,0x0,6
tick,0x64950d19c3c6,16650003,0,0x0,1
new,MemoryChunk,0x2c37005c0000,262144
new,MemoryChunk,0x2c3700600000,262144
new,MemoryChunk,0x2c37000c0000,262144
new,MemoryChunk,0x2c3700100000,262144
tick,0x7d8294c98d5f,16650860,0,0x0,1
new,MemoryChunk,0x2c3700140000,262144
code-move,0x2c3700c80034,0x2c3700142ed4
code-move,0x2c3700c80174,0x2c3700143014
code-move,0x2c3700c801dc,0x2c370014307c
code-move,0x2c3700c802a8,0x2c3700143148
code-move,0x2c3700c80304,0x2c37001431a4
code-move,0x2c3700c803a0,0x2c3700143240
code-move,0x2c3700c80440,0x2c37001432e0
code-move,0x2c3700c80510,0x2c37001433b0
code-move,0x2c3700c8056c,0x2c370014340c
code-move,0x2c3700c805c0,0x2c3700143460
code-move,0x2c3700c8061c,0x2c37001434bc
code-move,0x2c3700c80674,0x2c3700143514
code-move,0x2c3700c806c8,0x2c3700143568
code-move,0x2c3700c80734,0x2c37001435d4
code-move,0x2c3700c80798,0x2c3700143638
code-move,0x2c3700c807fc,0x2c370014369c
code-move,0x2c3700c80880,0x2c3700143720
code-move,0x2c3700c80928,0x2c37001437c8
code-move,0x2c3700c809c0,0x2c3700143860
code-move,0x2c3700c80b6c,0x2c3700143a0c
code-move,0x2c3700c80de8,0x2c3700143c88
code-move,0x2c3700c80e8c,0x2c3700143d2c
code-move,0x2c3700c80ff8,0x2c3700143e98
code-move,0x2c3700c8128c,0x2c370014412c
code-move,0x2c3700c814c4,0x2c3700144364
code-move,0x2c3700c81690,0x2c3700144530
code-move,0x2c3700c81714,0x2c37001445b4
code-move,0x2c3700c81830,0x2c37001446d0
code-move,0x2c3700c818e0,0x2c3700144780
code-move,0x2c3700c81948,0x2c37001447e8
code-move,0x2c3700c819d4,0x2c3700144874
code-move,0x2c3700c81a30,0x2c37001448d0
code-move,0x2c3700c81b14,0x2c37001449b4
code-move,0x2c3700c81ff4,0x2c3700144e94
code-move,0x2c3700c82054,0x2c3700144ef4
code-move,0x2c3700c82124,0x2c3700144fc4
code-move,0x2c3700c82570,0x2c3700145410
code-move,0x2c3700c82648,0x2c37001454e8
code-move,0x2c3700c82880,0x2c3700145720
code-move,0x2c3700c82b88,0x2c3700145a28
code-move,0x2c3700c82c08,0x2c3700145aa8
code-move,0x2c3700c82c58,0x2c3700145af8
code-move,0x2c3700c82cb4,0x2c3700145b54
code-move,0x2c3700c82dc0,0x2c3700145c60
code-move,0x2c3700c83018,0x2c3700145eb8
code-move,0x2c3700c8308c,0x2c3700145f2c
code-move,0x2c3700c83184,0x2c3700146024
code-move,0x2c3700c8383c,0x2c37001466dc
code-move,0x2c3700c83880,0x2c3700146720
code-move,0x2c3700c83a38,0x2c37001468d8
code-move,0x2c3700c83c2c,0x2c3700146acc
code-move,0x2c3700c83df0,0x2c3700146c90
code-move,0x2c3700c840dc,0x2c3700146f7c
code-move,0x2c3700c841e8,0x2c3700147088
code-move,0x2c3700c842dc,0x2c370014717c
code-move,0x2c3700c843fc,0x2c370014729c
code-move,0x2c3700c844fc,0x2c370014739c
code-move,0x2c3700c84554,0x2c37001473f4
code-move,0x2c3700c845c0,0x2c3700147460
code-move,0x2c3700c846d8,0x2c3700147578
code-move,0x2c3700c847c4,0x2c3700147664
code-move,0x2c3700c8483c,0x2c37001476dc
code-move,0x2c3700c848ec,0x2c370014778c
code-move,0x2c3700c849e4,0x2c3700147884
code-move,0x2c3700c84be0,0x2c3700147a80
code-move,0x2c3700c84e3c,0x2c3700147cdc
code-move,0x2c3700c84f90,0x2c3700147e30
code-move,0x2c3700c85184,0x2c3700148024
code-move,0x2c3700c85240,0x2c37001480e0
code-move,0x2c3700c85370,0x2c3700148210
code-move,0x2c3700c85448,0x2c37001482e8
code-move,0x2c3700c85644,0x2c37001484e4
code-move,0x2c3700c856b8,0x2c3700148558
code-move,0x2c3700c85728,0x2c37001485c8
code-move,0x2c3700c8576c,0x2c370014860c
code-move,0x2c3700c857b0,0x2c3700148650
code-move,0x2c3700c8583c,0x2c37001486dc
code-move,0x2c3700c85988,0x2c3700148828
code-move,0x2c3700c85b58,0x2c37001489f8
code-move,0x2c3700c85bc4,0x2c3700148a64
code-move,0x2c3700c85c20,0x2c3700148ac0
code-move,0x2c3700c85d38,0x2c3700148bd8
code-move,0x2c3700c86088,0x2c3700148f28
code-move,0x2c3700c860d8,0x2c3700148f78
code-move,0x2c3700c8612c,0x2c3700148fcc
code-move,0x2c3700c861b8,0x2c3700149058
code-move,0x2c3700c862a8,0x2c3700149148
code-move,0x2c3700c8636c,0x2c370014920c
code-move,0x2c3700c864e8,0x2c3700149388
code-move,0x2c3700c8655c,0x2c37001493fc
code-move,0x2c3700c865c4,0x2c3700149464
code-move,0x2c3700c86618,0x2c37001494b8
code-move,0x2c3700c86674,0x2c3700149514
code-move,0x2c3700c866e8,0x2c3700149588
code-move,0x2c3700c86770,0x2c3700149610
code-move,0x2c3700c867ec,0x2c370014968c
code-move,0x2c3700c8686c,0x2c370014970c
code-move,0x2c3700c868dc,0x2c370014977c
code-move,0x2c3700c86944,0x2c37001497e4
code-move,0x2c3700c86a10,0x2c37001498b0
code-move,0x2c3700c86b40,0x2c37001499e0
code-move,0x2c3700c86c44,0x2c3700149ae4
code-move,0x2c3700c86cb8,0x2c3700149b58
code-move,0x2c3700c86d24,0x2c3700149bc4
code-move,0x2c3700c86d98,0x2c3700149c38
code-move,0x2c3700c86de4,0x2c3700149c84
code-move,0x2c3700c86e5c,0x2c3700149cfc
code-move,0x2c3700c86edc,0x2c3700149d7c
code-move,0x2c3700c86f80,0x2c3700149e20
code-move,0x2c3700c87014,0x2c3700149eb4
code-move,0x2c3700c87114,0x2c3700149fb4
code-move,0x2c3700c8719c,0x2c370014a03c
code-move,0x2c3700c8727c,0x2c370014a11c
code-move,0x2c3700c873f0,0x2c370014a290
code-move,0x2c3700c87548,0x2c370014a3e8
code-move,0x2c3700c877a4,0x2c370014a644
code-move,0x2c3700c87804,0x2c370014a6a4
code-move,0x2c3700c87998,0x2c370014a838
code-move,0x2c3700c8d420,0x2c37001502c0
code-move,0x2c3700c8d478,0x2c3700150318
code-move,0x2c3700c8d4b0,0x2c3700150350
code-move,0x2c3700c8d508,0x2c37001503a8
code-move,0x2c3700c8d560,0x2c3700150400
code-move,0x2c3700c8d604,0x2c37001504a4
code-move,0x2c3700c8d664,0x2c3700150504
code-move,0x2c3700c8d6f8,0x2c3700150598
code-move,0x2c3700c8d750,0x2c37001505f0
code-move,0x2c3700c8d798,0x2c3700150638
code-move,0x2c3700c8d818,0x2c37001506b8
code-move,0x2c3700c8d890,0x2c3700150730
code-move,0x2c3700c8d984,0x2c3700150824
code-move,0x2c3700c8da68,0x2c3700150908
code-move,0x2c3700c8dabc,0x2c370015095c
code-move,0x2c3700c8db30,0x2c37001509d0
code-move,0x2c3700c8dbbc,0x2c3700150a5c
code-move,0x2c3700c8dcac,0x2c3700150b4c
code-move,0x2c3700c90adc,0x2c370015397c
code-move,0x2c3700c90b70,0x2c3700153a10
code-move,0x2c3700c90c68,0x2c3700153b08
delete,MemoryChunk,0x7d8200018eb0
delete,MemoryChunk,0x7d82701ae180
delete,MemoryChunk,0x7d8270113fe0
delete,MemoryChunk,0x7d827014a120
delete,MemoryChunk,0x7d82701390e0
delete,MemoryChunk,0x7d82700841e0
code-creation,JS,10,16651826,0x64956d811fc0,244,get locked ext:deno_web/06_streams.js:5239:13,0x2c37001e6e3c,^
code-source-info,0x64956d811fc0,21,150581,150687,,,
code-creation,JS,10,16651836,0x64956d812100,112,getReadableStreamResourceBacking ext:deno_web/06_streams.js:1043:42,0x2c37001e58dc,^
code-source-info,0x64956d812100,21,28073,28120,,,
code-creation,JS,10,16651842,0x64956d812180,112,getReadableStreamResourceBackingUnrefable ext:deno_web/06_streams.js:1047:51,0x2c37001e3600,^
code-source-info,0x64956d812180,21,28172,28228,,,
code-creation,JS,10,16651847,0x64956d812200,172,ReadableStreamDefaultReader ext:deno_web/06_streams.js:5435:35,0x2c37001e7480,^
code-source-info,0x64956d812200,21,156253,158995,,,
code-creation,JS,10,16651853,0x64956d8122c0,220,Deferred ext:deno_web/06_streams.js:107:16,0x2c37001e5e24,^
code-source-info,0x64956d8122c0,21,2663,3637,,,
code-creation,JS,10,16651858,0x64956d8123c0,160, ext:deno_web/06_streams.js:118:33,0x2c370084dc0c,^
code-source-info,0x64956d8123c0,21,2935,3023,,,
code-creation,JS,10,16651864,0x64956d812480,408,Deferred ext:deno_web/06_streams.js:117:14,0x2c37001e5cc8,^
code-source-info,0x64956d812480,21,2898,3029,,,
code-creation,JS,10,16651869,0x64956d812640,1536,readableStreamReaderGenericInitialize ext:deno_web/06_streams.js:2940:47,0x2c37001e44ac,^
code-source-info,0x64956d812640,21,80786,81304,,,
code-creation,JS,10,16651875,0x64956d812c80,472,setUpReadableStreamDefaultReader ext:deno_web/06_streams.js:3728:42,0x2c37001e4830,^
code-source-info,0x64956d812c80,21,104094,104308,,,
code-creation,JS,10,16651880,0x64956d812e80,272,acquireReadableStreamDefaultReader ext:deno_web/06_streams.js:407:44,0x2c37001e305c,^
code-source-info,0x64956d812e80,21,10996,11135,,,
code-creation,JS,10,16651886,0x64956d812fc0,136,readableStreamDisturb ext:deno_web/06_streams.js:1676:31,0x2c37001e5a78,^
code-source-info,0x64956d812fc0,21,45848,45889,,,
code-creation,JS,10,16651891,0x64956d813080,200,readableStreamIsUnrefable ext:deno_web/06_streams.js:1019:35,0x2c37001e35c4,^
code-source-info,0x64956d813080,21,27420,27471,,,
code-creation,JS,10,16651897,0x64956d813180,348,collectOutput ext:runtime/40_process.js:214:23,0x2c370034fa40,^
code-source-info,0x64956d813180,297,4363,4557,,,
code-creation,JS,10,16651902,0x64956d813300,404,readableStreamGetNumReadRequests ext:deno_web/06_streams.js:2601:42,0x2c37001e42a8,^
code-source-info,0x64956d813300,21,72334,72451,,,
tick,0x64950d87748e,16651925,0,0x0,0
tick,0x64950cff6d90,16653008,0,0x0,0,0x64956d80f8f7,0x2c3700148c27,0x64956d8132ca,0x2c37001488d0,0x2c37001477cf,0x2c3700147716,0x2c3700146d77,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,16654086,0,0x0,6
tick,0x7d8294d2a042,16655180,0,0x0,6
tick,0x7d8294d2a042,16656324,0,0x0,6
tick,0x7d8294d2a042,16657340,0,0x0,6
tick,0x7d8294d2a042,16658417,0,0x0,6
tick,0x7d8294d2a042,16659494,0,0x0,6
tick,0x7d8294d2a042,16660701,0,0x0,6
tick,0x7d8294d2a042,16661706,0,0x0,6
tick,0x7d8294d2a042,16662784,0,0x0,6
tick,0x7d8294d2a042,16663959,0,0x0,6
tick,0x7d8294d2a042,16665093,0,0x0,6
tick,0x7d8294d2a042,16666101,0,0x0,6
tick,0x7d8294d2a042,16667179,0,0x0,6
tick,0x7d8294d2a042,16668352,0,0x0,6
tick,0x7d8294d2a042,16669429,0,0x0,6
tick,0x7d8294d2a042,16670437,0,0x0,6
tick,0x7d8294d2a042,16671518,0,0x0,6
tick,0x7d8294d2a042,16672732,0,0x0,6
tick,0x7d8294d2a042,16673886,0,0x0,6
tick,0x7d8294d2a042,16674895,0,0x0,6
tick,0x7d8294d2a042,16676039,0,0x0,6
tick,0x7d8294d2a042,16677196,0,0x0,6
tick,0x7d8294d2a042,16678208,0,0x0,6
tick,0x7d8294d2a042,16679286,0,0x0,6
tick,0x7d8294d2a042,16680518,0,0x0,6
tick,0x7d8294d2a042,16681591,0,0x0,6
tick,0x7d8294d2a042,16682606,0,0x0,6
tick,0x7d8294d2a042,16683679,0,0x0,6
tick,0x7d8294d2a042,16684828,0,0x0,6
tick,0x7d8294d2a042,16685976,0,0x0,6
tick,0x7d8294d2a042,16687057,0,0x0,6
tick,0x7d8294d2a042,16688207,0,0x0,6
tick,0x7d8294d2a042,16689285,0,0x0,6
tick,0x7d8294d2a042,16690368,0,0x0,6
tick,0x7d8294d2a042,16691584,0,0x0,6
tick,0x7d8294d2a042,16692753,0,0x0,6
tick,0x7d8294d2a042,16693926,0,0x0,6
tick,0x7d8294d2a042,16695000,0,0x0,6
tick,0x7d8294d2a042,16696146,0,0x0,6
tick,0x7d8294d2a042,16697307,0,0x0,6
tick,0x7d8294d2a042,16698383,0,0x0,6
tick,0x7d8294d2a042,16699564,0,0x0,6
tick,0x7d8294d2a042,16700755,0,0x0,6
tick,0x7d8294d2a042,16701883,0,0x0,6
tick,0x7d8294d2a042,16703037,0,0x0,6
tick,0x7d8294d2a042,16704139,0,0x0,6
tick,0x7d8294d2a042,16705202,0,0x0,6
tick,0x7d8294d2a042,16706294,0,0x0,6
tick,0x7d8294d2a042,16707290,0,0x0,6
tick,0x7d8294d2a042,16708432,0,0x0,6
tick,0x7d8294d2a042,16709567,0,0x0,6
tick,0x7d8294d2a042,16710635,0,0x0,6
tick,0x7d8294d2a042,16711647,0,0x0,6
tick,0x7d8294d2a042,16712775,0,0x0,6
tick,0x7d8294d2a042,16713928,0,0x0,6
tick,0x7d8294d2a042,16715096,0,0x0,6
tick,0x7d8294d2a042,16716168,0,0x0,6
tick,0x7d8294d2a042,16717244,0,0x0,6
tick,0x7d8294d2a042,16718402,0,0x0,6
tick,0x7d8294d2a042,16719499,0,0x0,6
tick,0x7d8294d2a042,16720715,0,0x0,6
tick,0x7d8294d2a042,16721824,0,0x0,6
tick,0x7d8294d2a042,16722996,0,0x0,6
tick,0x7d8294d2a042,16724052,0,0x0,6
tick,0x7d8294d2a042,16725157,0,0x0,6
tick,0x7d8294d2a042,16726298,0,0x0,6
tick,0x7d8294d2a042,16727458,0,0x0,6
tick,0x7d8294d2a042,16728544,0,0x0,6
tick,0x7d8294d2a042,16729535,0,0x0,6
tick,0x7d8294d2a042,16730771,0,0x0,6
tick,0x7d8294d2a042,16731839,0,0x0,6
tick,0x7d8294d2a042,16732987,0,0x0,6
tick,0x7d8294d2a042,16734128,0,0x0,6
tick,0x7d8294d2a042,16735284,0,0x0,6
tick,0x7d8294d2a042,16736444,0,0x0,6
tick,0x7d8294d2a042,16737534,0,0x0,6
tick,0x7d8294d2a042,16738669,0,0x0,6
tick,0x7d8294d2a042,16739731,0,0x0,6
tick,0x7d8294d2a042,16740824,0,0x0,6
tick,0x7d8294d2a042,16741884,0,0x0,6
tick,0x7d8294d2a042,16743027,0,0x0,6
tick,0x7d8294d2a042,16744201,0,0x0,6
tick,0x7d8294d2a042,16745270,0,0x0,6
tick,0x7d8294d2a042,16746418,0,0x0,6
tick,0x7d8294d2a042,16747558,0,0x0,6
tick,0x7d8294d2a042,16748758,0,0x0,6
tick,0x7d8294d2a042,16749794,0,0x0,6
tick,0x7d8294d2a042,16750915,0,0x0,6
tick,0x7d8294d2a042,16751972,0,0x0,6
tick,0x7d8294d2a042,16753058,0,0x0,6
tick,0x7d8294d2a042,16754111,0,0x0,6
tick,0x7d8294d2a042,16755202,0,0x0,6
tick,0x7d8294d2a042,16756283,0,0x0,6
tick,0x7d8294d2a042,16757365,0,0x0,6
tick,0x7d8294d2a042,16758447,0,0x0,6
tick,0x7d8294d2a042,16759423,0,0x0,6
tick,0x7d8294d2a042,16760611,0,0x0,6
tick,0x7d8294d2a042,16761766,0,0x0,6
tick,0x7d8294d2a042,16762819,0,0x0,6
tick,0x7d8294d2a042,16763970,0,0x0,6
tick,0x7d8294d2a042,16765016,0,0x0,6
tick,0x7d8294d2a042,16766115,0,0x0,6
tick,0x7d8294d2a042,16767112,0,0x0,6
tick,0x7d8294d2a042,16768263,0,0x0,6
tick,0x7d8294d2a042,16769358,0,0x0,6
tick,0x7d8294d2a042,16770361,0,0x0,6
tick,0x7d8294d2a042,16771501,0,0x0,6
tick,0x7d8294d2a042,16772672,0,0x0,6
tick,0x7d8294d2a042,16773746,0,0x0,6
tick,0x64950cfb1c6a,16774684,0,0x0,6
tick,0x7d8294d2a042,16775822,0,0x0,6
tick,0x7d8294d2a042,16776945,0,0x0,6
tick,0x7d8294d2a042,16778059,0,0x0,6
tick,0x7d8294d2a042,16779042,0,0x0,6
tick,0x7d8294d2a042,16780193,0,0x0,6
tick,0x7d8294d2a042,16781292,0,0x0,6
tick,0x7d8294d2a042,16782368,0,0x0,6
tick,0x7d8294d2a042,16783351,0,0x0,6
tick,0x7d8294d2a042,16784494,0,0x0,6
tick,0x7d8294d2a042,16785580,0,0x0,6
tick,0x7d8294d2a042,16786559,0,0x0,6
tick,0x7d8294d2a042,16787639,0,0x0,6
tick,0x7d8294d2a042,16788698,0,0x0,6
tick,0x7d8294d2a042,16789758,0,0x0,6
tick,0x7d8294d2a042,16790904,0,0x0,6
tick,0x7d8294d2a042,16792059,0,0x0,6
tick,0x7d8294d2a042,16793116,0,0x0,6
tick,0x7d8294d2a042,16794242,0,0x0,6
tick,0x7d8294d2a042,16795324,0,0x0,6
tick,0x7d8294d2a042,16796509,0,0x0,6
tick,0x7d8294d2a042,16797564,0,0x0,6
tick,0x7d8294d2a042,16798675,0,0x0,6
tick,0x7d8294d2a042,16799721,0,0x0,6
tick,0x7d8294d2a042,16800877,0,0x0,6
tick,0x7d8294d2a042,16801851,0,0x0,6
tick,0x7d8294d2a042,16802965,0,0x0,6
tick,0x7d8294d2a042,16804047,0,0x0,6
tick,0x7d8294d2a042,16805140,0,0x0,6
tick,0x7d8294d2a042,16806197,0,0x0,6
tick,0x7d8294d2a042,16807312,0,0x0,6
tick,0x7d8294d2a042,16808359,0,0x0,6
tick,0x7d8294d2a042,16809421,0,0x0,6
tick,0x7d8294d2a042,16810525,0,0x0,6
tick,0x7d8294d2a042,16811591,0,0x0,6
tick,0x7d8294d2a042,16812646,0,0x0,6
tick,0x7d8294d2a042,16813719,0,0x0,6
tick,0x7d8294d2a042,16814820,0,0x0,6
tick,0x7d8294d2a042,16815898,0,0x0,6
tick,0x7d8294d2a042,16816979,0,0x0,6
tick,0x7d8294d2a042,16818060,0,0x0,6
tick,0x7d8294d2a042,16819138,0,0x0,6
tick,0x7d8294d2a042,16820228,0,0x0,6
tick,0x7d8294d2a042,16821277,0,0x0,6
tick,0x7d8294d2a042,16822360,0,0x0,6
tick,0x7d8294d2a042,16823394,0,0x0,6
tick,0x7d8294d2a042,16824480,0,0x0,6
tick,0x7d8294d2a042,16825561,0,0x0,6
tick,0x7d8294d2a042,16826641,0,0x0,6
tick,0x7d8294d2a042,16827769,0,0x0,6
tick,0x7d8294d2a042,16828836,0,0x0,6
tick,0x7d8294d2a042,16829821,0,0x0,6
tick,0x7d8294d2a042,16830895,0,0x0,6
tick,0x7d8294d2a042,16831973,0,0x0,6
tick,0x7d8294d2a042,16833046,0,0x0,6
tick,0x7d8294d2a042,16834119,0,0x0,6
tick,0x7d8294d2a042,16835193,0,0x0,6
tick,0x7d8294d1ba9a,16836270,0,0x0,6
tick,0x7d8294d1ba9a,16837344,0,0x0,6
tick,0x7d8294d2a042,16838450,0,0x0,6
tick,0x7d8294d2a042,16839479,0,0x0,6
tick,0x7d8294d2a042,16840578,0,0x0,6
tick,0x7d8294d2a042,16841663,0,0x0,6
tick,0x7d8294d2a042,16842741,0,0x0,6
tick,0x7d8294d2a042,16843881,0,0x0,6
tick,0x7d8294d2a042,16844907,0,0x0,6
tick,0x64950d014bd0,16845944,0,0x0,6
tick,0x7d8294d2a042,16847015,0,0x0,6
tick,0x7d8294d2a042,16848181,0,0x0,6
tick,0x7d8294d2a042,16849181,0,0x0,6
tick,0x7d8294d2a042,16850272,0,0x0,6
tick,0x7d8294d2a042,16851349,0,0x0,6
tick,0x7d8294d2a042,16852505,0,0x0,6
tick,0x7d8294d2a042,16853579,0,0x0,6
tick,0x7d8294d2a042,16854593,0,0x0,6
tick,0x7d8294d2a042,16855665,0,0x0,6
tick,0x7d8294d2a042,16856810,0,0x0,6
tick,0x7d8294d2a042,16857863,0,0x0,6
tick,0x7d8294d2a042,16859011,0,0x0,6
tick,0x7d8294d2a042,16860169,0,0x0,6
tick,0x7d8294d2a042,16861247,0,0x0,6
tick,0x7d8294d2a042,16862337,0,0x0,6
tick,0x7d8294d2a042,16863497,0,0x0,6
tick,0x7d8294d2a042,16864696,0,0x0,6
tick,0x7d8294d2a042,16865708,0,0x0,6
tick,0x7d8294d2a042,16866782,0,0x0,6
tick,0x7d8294d2a042,16867929,0,0x0,6
tick,0x7d8294d2a042,16869103,0,0x0,6
tick,0x7d8294d2a042,16870184,0,0x0,6
tick,0x7d8294d2a042,16871275,0,0x0,6
tick,0x7d8294d2a042,16872379,0,0x0,6
tick,0x7d8294d2a042,16873515,0,0x0,6
tick,0x7d8294d2a042,16874519,0,0x0,6
tick,0x7d8294d2a042,16875593,0,0x0,6
tick,0x7d8294d2a042,16876806,0,0x0,6
tick,0x7d8294d2a042,16877887,0,0x0,6
tick,0x7d8294d2a042,16879036,0,0x0,6
tick,0x7d8294d2a042,16880196,0,0x0,6
tick,0x7d8294d2a042,16881269,0,0x0,6
tick,0x7d8294d2a042,16882354,0,0x0,6
tick,0x7d8294d2a042,16883556,0,0x0,6
tick,0x7d8294d2a042,16884782,0,0x0,6
tick,0x7d8294d2a042,16885931,0,0x0,6
tick,0x7d8294d2a042,16887011,0,0x0,6
tick,0x7d8294d2a042,16888089,0,0x0,6
tick,0x7d8294d2a042,16889245,0,0x0,6
tick,0x7d8294d2a042,16890468,0,0x0,6
tick,0x7d8294d2a042,16891568,0,0x0,6
tick,0x7d8294d2a042,16892796,0,0x0,6
tick,0x7d8294d2a042,16893953,0,0x0,6
tick,0x7d8294d2a042,16895014,0,0x0,6
tick,0x7d8294d2a042,16896082,0,0x0,6
tick,0x7d8294d2a042,16897251,0,0x0,6
tick,0x7d8294d2a042,16898439,0,0x0,6
tick,0x7d8294d2a042,16899650,0,0x0,6
tick,0x7d8294d2a042,16900797,0,0x0,6
tick,0x7d8294d2a042,16901945,0,0x0,6
tick,0x7d8294d2a042,16903094,0,0x0,6
tick,0x7d8294d2a042,16904157,0,0x0,6
tick,0x7d8294d2a042,16905258,0,0x0,6
tick,0x7d8294d2a042,16906400,0,0x0,6
tick,0x7d8294d2a042,16907484,0,0x0,6
tick,0x7d8294d2a042,16908633,0,0x0,6
tick,0x7d8294d2a042,16909774,0,0x0,6
tick,0x7d8294d2a042,16910930,0,0x0,6
tick,0x7d8294d2a042,16912015,0,0x0,6
tick,0x7d8294d2a042,16913150,0,0x0,6
tick,0x7d8294d2a042,16914226,0,0x0,6
tick,0x7d8294d2a042,16915312,0,0x0,6
tick,0x7d8294d2a042,16916556,0,0x0,6
tick,0x7d8294d2a042,16917644,0,0x0,6
tick,0x7d8294d2a042,16918654,0,0x0,6
tick,0x7d8294d2a042,16919776,0,0x0,6
tick,0x7d8294d2a042,16920931,0,0x0,6
tick,0x7d8294d2a042,16922077,0,0x0,6
tick,0x7d8294d2a042,16923150,0,0x0,6
tick,0x7d8294d2a042,16924215,0,0x0,6
tick,0x7d8294d2a042,16925371,0,0x0,6
tick,0x7d8294d2a042,16926536,0,0x0,6
tick,0x7d8294d2a042,16927526,0,0x0,6
tick,0x7d8294d2a042,16928742,0,0x0,6
tick,0x7d8294d2a042,16929889,0,0x0,6
tick,0x7d8294d2a042,16930983,0,0x0,6
tick,0x7d8294d2a042,16932040,0,0x0,6
tick,0x7d8294d2a042,16933212,0,0x0,6
tick,0x7d8294d2a042,16934358,0,0x0,6
tick,0x7d8294d2a042,16935585,0,0x0,6
tick,0x7d8294d2a042,16936806,0,0x0,6
tick,0x7d8294d2a042,16937857,0,0x0,6
tick,0x7d8294d2a042,16939017,0,0x0,6
tick,0x7d8294d2a042,16940102,0,0x0,6
tick,0x7d8294d2a042,16941179,0,0x0,6
tick,0x7d8294d2a042,16942330,0,0x0,6
tick,0x7d8294d2a042,16943561,0,0x0,6
tick,0x7d8294d2a042,16944487,0,0x0,6
tick,0x7d8294d2a042,16945649,0,0x0,6
tick,0x7d8294d2a042,16946740,0,0x0,6
tick,0x7d8294d2a042,16947803,0,0x0,6
tick,0x7d8294d2a042,16948974,0,0x0,6
tick,0x7d8294d2a042,16950045,0,0x0,6
tick,0x7d8294d2a042,16951206,0,0x0,6
tick,0x7d8294d2a042,16952270,0,0x0,6
tick,0x7d8294d2a042,16953356,0,0x0,6
tick,0x7d8294d2a042,16954444,0,0x0,6
tick,0x7d8294d2a042,16955569,0,0x0,6
tick,0x7d8294d2a042,16956741,0,0x0,6
tick,0x7d8294d2a042,16957897,0,0x0,6
tick,0x7d8294d2a042,16959071,0,0x0,6
tick,0x7d8294d2a042,16960134,0,0x0,6
tick,0x7d8294d2a042,16961224,0,0x0,6
tick,0x7d8294d2a042,16962374,0,0x0,6
tick,0x7d8294d2a042,16963458,0,0x0,6
tick,0x7d8294d2a042,16964601,0,0x0,6
tick,0x7d8294d2a042,16965682,0,0x0,6
tick,0x7d8294d2a042,16966853,0,0x0,6
tick,0x7d8294d1ba9a,16967808,0,0x0,6
tick,0x7d8294d2a042,16968882,0,0x0,6
tick,0x7d8294d2a042,16969987,0,0x0,6
tick,0x7d8294d2a042,16971071,0,0x0,6
tick,0x7d8294d2a042,16972150,0,0x0,6
tick,0x7d8294d2a042,16973231,0,0x0,6
tick,0x7d8294d2a042,16974311,0,0x0,6
tick,0x7d8294d2a042,16975511,0,0x0,6
tick,0x7d8294d2a042,16976650,0,0x0,6
tick,0x7d8294d2a042,16977807,0,0x0,6
tick,0x7d8294d2a042,16978952,0,0x0,6
tick,0x7d8294d2a042,16980031,0,0x0,6
tick,0x7d8294d2a042,16981121,0,0x0,6
tick,0x7d8294d2a042,16982263,0,0x0,6
tick,0x7d8294d2a042,16983468,0,0x0,6
tick,0x7d8294d2a042,16984487,0,0x0,6
tick,0x7d8294d2a042,16985558,0,0x0,6
tick,0x7d8294d2a042,16986633,0,0x0,6
tick,0x7d8294d2a042,16987629,0,0x0,6
tick,0x7d8294d2a042,16988703,0,0x0,6
tick,0x7d8294d2a042,16989751,0,0x0,6
tick,0x7d8294d2a042,16990910,0,0x0,6
tick,0x7d8294d2a042,16991991,0,0x0,6
tick,0x7d8294d2a042,16992984,0,0x0,6
tick,0x7d8294d2a042,16994090,0,0x0,6
tick,0x7d8294d2a042,16995047,0,0x0,6
tick,0x7d8294d2a042,16996201,0,0x0,6
tick,0x7d8294d2a042,16997270,0,0x0,6
tick,0x7d8294d2a042,16998352,0,0x0,6
tick,0x7d8294d2a042,16999365,0,0x0,6
tick,0x7d8294d2a042,17000508,0,0x0,6
tick,0x7d8294d2a042,17001559,0,0x0,6
tick,0x7d8294d2a042,17002664,0,0x0,6
tick,0x7d8294d2a042,17003666,0,0x0,6
tick,0x7d8294d2a042,17004788,0,0x0,6
tick,0x7d8294d2a042,17005861,0,0x0,6
tick,0x7d8294d2a042,17006873,0,0x0,6
tick,0x7d8294d2a042,17008020,0,0x0,6
tick,0x7d8294d2a042,17009096,0,0x0,6
tick,0x7d8294d2a042,17010272,0,0x0,6
tick,0x7d8294d2a042,17011242,0,0x0,6
tick,0x7d8294d1ba9a,17012316,0,0x0,6
tick,0x7d8294d2a042,17013388,0,0x0,6
tick,0x7d8294d2a042,17014461,0,0x0,6
tick,0x7d8294d1ba9a,17015513,0,0x0,6
tick,0x7d8294d2a042,17016588,0,0x0,6
tick,0x7d8294d2a042,17017663,0,0x0,6
tick,0x7d8294d2a042,17018741,0,0x0,6
tick,0x7d8294d2a042,17019847,0,0x0,6
tick,0x7d8294d2a042,17020927,0,0x0,6
tick,0x7d8294d2a042,17021997,0,0x0,6
tick,0x7d8294d2a042,17023082,0,0x0,6
tick,0x7d8294d2a042,17024180,0,0x0,6
tick,0x7d8294d2a042,17025350,0,0x0,6
tick,0x7d8294d2a042,17026405,0,0x0,6
tick,0x64950d82fb57,17027498,0,0x0,0,0x64956d8058f5,0x2c370014abcb,0x2c3700146e3b,0x64950d873576
tick,0x7d8294d2a042,17028565,0,0x0,6
tick,0x7d8294d2a042,17029672,0,0x0,6
tick,0x7d8294d2a042,17030750,0,0x0,6
tick,0x7d8294d2a042,17031826,0,0x0,6
tick,0x7d8294d2a042,17032912,0,0x0,6
tick,0x7d8294d2a042,17033988,0,0x0,6
tick,0x7d8294d2a042,17035067,0,0x0,6
tick,0x7d8294d2a042,17036213,0,0x0,6
tick,0x7d8294d2a042,17037371,0,0x0,6
tick,0x7d8294d2a042,17038466,0,0x0,6
tick,0x7d8294d2a042,17039556,0,0x0,6
tick,0x7d8294d2a042,17040737,0,0x0,6
tick,0x7d8294d2a042,17041830,0,0x0,6
tick,0x7d8294d2a042,17042908,0,0x0,6
tick,0x7d8294d2a042,17044065,0,0x0,6
tick,0x7d8294d2a042,17045221,0,0x0,6
tick,0x7d8294d2a042,17046303,0,0x0,6
tick,0x7d8294d2a042,17047397,0,0x0,6
tick,0x7d8294d2a042,17048550,0,0x0,6
tick,0x7d8294d2a042,17049701,0,0x0,6
tick,0x7d8294d2a042,17050777,0,0x0,6
tick,0x7d8294d2a042,17051921,0,0x0,6
tick,0x7d8294d2a042,17053066,0,0x0,6
tick,0x7d8294d2a042,17054231,0,0x0,6
tick,0x7d8294d2a042,17055444,0,0x0,6
tick,0x7d8294d2a042,17056457,0,0x0,6
tick,0x7d8294d2a042,17057485,0,0x0,6
tick,0x7d8294d2a042,17058551,0,0x0,6
tick,0x7d8294d2a042,17059581,0,0x0,6
tick,0x7d8294d2a042,17060793,0,0x0,6
tick,0x7d8294d2a042,17061875,0,0x0,6
tick,0x7d8294d2a042,17063038,0,0x0,6
tick,0x7d8294d2a042,17064098,0,0x0,6
tick,0x7d8294d2a042,17065206,0,0x0,6
tick,0x7d8294d2a042,17066270,0,0x0,6
tick,0x7d8294d2a042,17067486,0,0x0,6
tick,0x7d8294d2a042,17068503,0,0x0,6
tick,0x7d8294d2a042,17069586,0,0x0,6
tick,0x7d8294d2a042,17070676,0,0x0,6
tick,0x7d8294d2a042,17071664,0,0x0,6
tick,0x7d8294d2a042,17072885,0,0x0,6
tick,0x7d8294d2a042,17074037,0,0x0,6
tick,0x7d8294d2a042,17075199,0,0x0,6
tick,0x7d8294d2a042,17076268,0,0x0,6
tick,0x7d8294d2a042,17077354,0,0x0,6
tick,0x7d8294d2a042,17078428,0,0x0,6
tick,0x7d8294d2a042,17079563,0,0x0,6
tick,0x7d8294d2a042,17080747,0,0x0,6
tick,0x7d8294d2a042,17081899,0,0x0,6
tick,0x7d8294d2a042,17083060,0,0x0,6
tick,0x7d8294d2a042,17084127,0,0x0,6
tick,0x7d8294d2a042,17085216,0,0x0,6
tick,0x7d8294d2a042,17086372,0,0x0,6
tick,0x7d8294d2a042,17087458,0,0x0,6
tick,0x7d8294d2a042,17088594,0,0x0,6
tick,0x7d8294d2a042,17089735,0,0x0,6
tick,0x7d8294d2a042,17090885,0,0x0,6
tick,0x7d8294d2a042,17091954,0,0x0,6
tick,0x7d8294d2a042,17093113,0,0x0,6
tick,0x7d8294d2a042,17094190,0,0x0,6
tick,0x7d8294d2a042,17095340,0,0x0,6
tick,0x7d8294d2a042,17096407,0,0x0,6
tick,0x7d8294d2a042,17097497,0,0x0,6
tick,0x7d8294d2a042,17098590,0,0x0,6
tick,0x7d8294d2a042,17099609,0,0x0,6
tick,0x7d8294d2a042,17100689,0,0x0,6
tick,0x7d8294d2a042,17101870,0,0x0,6
tick,0x7d8294d2a042,17103059,0,0x0,6
tick,0x7d8294d2a042,17104131,0,0x0,6
tick,0x7d8294d2a042,17105269,0,0x0,6
tick,0x7d8294d2a042,17106443,0,0x0,6
tick,0x7d8294d2a042,17107562,0,0x0,6
tick,0x7d8294d2a042,17108726,0,0x0,6
tick,0x7d8294d2a042,17109823,0,0x0,6
tick,0x7d8294d2a042,17110971,0,0x0,6
tick,0x7d8294d2a042,17112126,0,0x0,6
tick,0x7d8294d2a042,17113279,0,0x0,6
tick,0x7d8294d2a042,17114432,0,0x0,6
tick,0x7d8294d2a042,17115531,0,0x0,6
tick,0x7d8294d2a042,17116719,0,0x0,6
tick,0x7d8294d2a042,17117915,0,0x0,6
tick,0x7d8294d2a042,17119085,0,0x0,6
tick,0x7d8294d2a042,17120147,0,0x0,6
tick,0x7d8294d2a042,17121309,0,0x0,6
tick,0x7d8294d2a042,17122474,0,0x0,6
tick,0x7d8294d2a042,17123551,0,0x0,6
tick,0x7d8294d2a042,17124784,0,0x0,6
tick,0x7d8294d2a042,17125940,0,0x0,6
tick,0x7d8294d2a042,17127019,0,0x0,6
tick,0x7d8294d2a042,17128181,0,0x0,6
tick,0x7d8294d2a042,17129306,0,0x0,6
tick,0x7d8294d2a042,17130487,0,0x0,6
tick,0x7d8294d2a042,17131496,0,0x0,6
tick,0x7d8294d2a042,17132781,0,0x0,6
tick,0x7d8294d2a042,17133933,0,0x0,6
tick,0x7d8294d2a042,17134907,0,0x0,6
tick,0x7d8294d2a042,17136048,0,0x0,6
tick,0x7d8294d2a042,17137190,0,0x0,6
tick,0x7d8294d2a042,17138324,0,0x0,6
tick,0x7d8294d2a042,17139406,0,0x0,6
tick,0x7d8294d2a042,17140648,0,0x0,6
tick,0x7d8294d2a042,17141808,0,0x0,6
tick,0x7d8294d2a042,17142875,0,0x0,6
tick,0x7d8294d2a042,17144022,0,0x0,6
tick,0x7d8294d2a042,17145167,0,0x0,6
tick,0x7d8294d2a042,17146280,0,0x0,6
tick,0x7d8294d2a042,17147377,0,0x0,6
tick,0x7d8294d2a042,17148544,0,0x0,6
tick,0x7d8294d2a042,17149705,0,0x0,6
tick,0x7d8294d2a042,17150864,0,0x0,6
tick,0x7d8294d2a042,17152026,0,0x0,6
tick,0x7d8294d2a042,17153180,0,0x0,6
tick,0x7d8294d2a042,17154305,0,0x0,6
tick,0x7d8294d2a042,17155435,0,0x0,6
tick,0x7d8294d2a042,17156734,0,0x0,6
tick,0x7d8294d2a042,17157901,0,0x0,6
tick,0x7d8294d2a042,17159026,0,0x0,6
tick,0x7d8294d2a042,17160104,0,0x0,6
tick,0x7d8294d2a042,17161194,0,0x0,6
tick,0x7d8294d2a042,17162227,0,0x0,6
tick,0x7d8294d2a042,17163426,0,0x0,6
tick,0x7d8294d2a042,17164632,0,0x0,6
tick,0x7d8294d2a042,17165802,0,0x0,6
tick,0x7d8294d2a042,17166813,0,0x0,6
tick,0x7d8294d2a042,17168059,0,0x0,6
tick,0x7d8294d2a042,17169309,0,0x0,6
tick,0x7d8294d2a042,17170406,0,0x0,6
tick,0x7d8294d2a042,17171291,0,0x0,6
tick,0x7d8294d2a042,17172529,0,0x0,6
tick,0x7d8294d2a042,17173429,0,0x0,6
tick,0x7d8294d2a042,17174545,0,0x0,6
tick,0x7d8294d2a042,17175603,0,0x0,6
tick,0x7d8294d2a042,17176681,0,0x0,6
tick,0x7d8294d2a042,17177766,0,0x0,6
tick,0x7d8294d2a042,17178851,0,0x0,6
tick,0x7d8294d2a042,17179944,0,0x0,6
tick,0x7d8294d2a042,17181103,0,0x0,6
tick,0x7d8294d2a042,17182072,0,0x0,6
tick,0x7d8294d2a042,17183098,0,0x0,6
tick,0x7d8294d2a042,17184154,0,0x0,6
tick,0x7d8294d2a042,17185207,0,0x0,6
tick,0x7d8294d2a042,17186265,0,0x0,6
tick,0x7d8294d2a042,17187379,0,0x0,6
tick,0x7d8294d2a042,17188400,0,0x0,6
tick,0x7d8294d2a042,17189453,0,0x0,6
tick,0x7d8294d2a042,17190510,0,0x0,6
tick,0x7d8294d2a042,17191563,0,0x0,6
tick,0x7d8294d2a042,17192670,0,0x0,6
tick,0x7d8294d2a042,17193747,0,0x0,6
tick,0x7d8294d2a042,17194821,0,0x0,6
tick,0x7d8294d2a042,17195903,0,0x0,6
tick,0x7d8294d2a042,17196984,0,0x0,6
tick,0x7d8294d2a042,17198064,0,0x0,6
tick,0x7d8294d2a042,17199099,0,0x0,6
tick,0x7d8294d2a042,17200267,0,0x0,6
tick,0x7d8294d2a042,17201276,0,0x0,6
tick,0x7d8294d2a042,17202354,0,0x0,6
tick,0x7d8294d2a042,17203422,0,0x0,6
tick,0x7d8294d2a042,17204597,0,0x0,6
tick,0x7d8294d2a042,17205675,0,0x0,6
tick,0x7d8294d2a042,17206657,0,0x0,6
tick,0x7d8294d2a042,17207764,0,0x0,6
tick,0x7d8294d2a042,17208818,0,0x0,6
tick,0x7d8294d2a042,17209890,0,0x0,6
tick,0x7d8294d2a042,17210961,0,0x0,6
tick,0x7d8294d2a042,17212040,0,0x0,6
tick,0x7d8294d2a042,17213114,0,0x0,6
tick,0x7d8294d2a042,17214214,0,0x0,6
tick,0x7d8294d2a042,17215281,0,0x0,6
tick,0x7d8294d2a042,17216380,0,0x0,6
tick,0x7d8294d2a042,17217473,0,0x0,6
tick,0x7d8294d2a042,17218615,0,0x0,6
tick,0x7d8294d2a042,17219629,0,0x0,6
tick,0x7d8294d2a042,17220815,0,0x0,6
tick,0x7d8294d2a042,17221912,0,0x0,6
code-creation,JS,10,17222149,0x64956d8134c0,392,isReadableStreamBYOBReader ext:deno_web/06_streams.js:723:36,0x2c37001e34a4,^
code-source-info,0x64956d8134c0,21,18952,19065,,,
code-creation,JS,10,17222164,0x64956d813680,244,readableStreamHasBYOBReader ext:deno_web/06_streams.js:2610:37,0x2c37001e42e4,^
code-source-info,0x64956d813680,21,72553,72732,,,
code-creation,JS,10,17222169,0x64956d8137c0,496,readableByteStreamControllerGetDesiredSize ext:deno_web/06_streams.js:1526:52,0x2c37001e3948,^
code-source-info,0x64956d8137c0,21,41742,41964,,,
code-creation,JS,10,17222175,0x64956d8139c0,984,readableByteStreamControllerShouldCallPull ext:deno_web/06_streams.js:1566:52,0x2c37001e39fc,^
code-source-info,0x64956d8139c0,21,42770,43397,,,
code-creation,JS,10,17222180,0x64956d813dc0,648, ext:deno_web/06_streams.js:3514:7,0x2c370084d11c,^
code-source-info,0x64956d813dc0,21,97572,97788,,,
code-creation,JS,10,17222185,0x64956d814080,276,readableStreamThrowIfErrored ext:deno_web/06_streams.js:1177:38,0x2c37001e5a00,^
code-source-info,0x64956d814080,21,31741,31827,,,
code-creation,JS,10,17222190,0x64956d8141c0,244,resolve ext:deno_web/06_streams.js:145:10,0x2c37001e5de8,^
code-source-info,0x64956d8141c0,21,3464,3635,,,
code-creation,JS,10,17222195,0x64956d814300,1052,readableStreamClose ext:deno_web/06_streams.js:1650:29,0x2c37001e5a3c,^
code-source-info,0x64956d814300,21,45119,45737,,,
code-creation,JS,10,17222200,0x64956d814740,204,Empty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:83:8,0x2c3700855f90,^
code-source-info,0x64956d814740,314,1546,1546,,,
code-creation,JS,10,17222207,0x64956d814840,168,toList file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:60:23,0x2c37008557a8,^
code-source-info,0x64956d814840,314,1149,1210,,,
code-creation,JS,10,17222217,0x64956d814900,4468,readableStreamCollectIntoUint8Array ext:deno_web/06_streams.js:1051:51,0x2c37001e5918,^
code-source-info,0x64956d814900,21,28280,30208,,,
code-creation,JS,12,17222763,0x64956d815ac0,168,Empty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:23:8,0x2c37008538cc,*
code-source-info,0x64956d815ac0,312,462,462,C36O462,,
tick,0x7d8294d0f727,17223084,0,0x0,0,0x2c3700147978,0x2c37001477c4,0x2c3700147716,0x2c3700146d77,0x64950d873576,0x64956d804390
code-creation,JS,12,17223106,0x64956d815bc0,644,Node file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:14:14,0x2c3700853890,*
code-source-info,0x64956d815bc0,312,344,451,C36O344C54O367C106O388C138O406C235O424C283O442C331O450C357O344C408O367,,
new,MemoryChunk,0x2c3700180000,262144
new,MemoryChunk,0x64956d840000,262144
tick,0x7d8294d2a042,17224194,0,0x0,6
tick,0x7d8294d2a042,17225279,0,0x0,6
tick,0x7d8294d2a042,17226446,0,0x0,6
tick,0x7d8294d2a042,17227415,0,0x0,6
tick,0x7d8294d2a042,17228581,0,0x0,6
tick,0x7d8294d2a042,17229728,0,0x0,6
tick,0x7d8294d2a042,17230735,0,0x0,6
tick,0x7d8294d2a042,17231882,0,0x0,6
tick,0x7d8294d2a042,17232972,0,0x0,6
tick,0x7d8294d2a042,17234051,0,0x0,6
tick,0x7d8294d2a042,17235066,0,0x0,6
tick,0x7d8294d2a042,17236204,0,0x0,6
tick,0x7d8294d2a042,17237299,0,0x0,6
tick,0x7d8294d2a042,17238308,0,0x0,6
tick,0x7d8294d2a042,17239410,0,0x0,6
tick,0x7d8294d2a042,17240622,0,0x0,6
tick,0x7d8294d2a042,17241707,0,0x0,6
tick,0x7d8294d2a042,17242704,0,0x0,6
tick,0x7d8294d2a042,17243858,0,0x0,6
tick,0x7d8294d2a042,17245006,0,0x0,6
tick,0x7d8294d2a042,17246146,0,0x0,6
tick,0x7d8294d2a042,17247219,0,0x0,6
tick,0x7d8294d2a042,17248356,0,0x0,6
tick,0x7d8294d2a042,17249514,0,0x0,6
tick,0x7d8294d2a042,17250609,0,0x0,6
tick,0x7d8294d2a042,17251692,0,0x0,6
tick,0x7d8294d2a042,17252893,0,0x0,6
tick,0x7d8294d2a042,17254045,0,0x0,6
tick,0x7d8294d2a042,17255117,0,0x0,6
tick,0x7d8294d2a042,17256270,0,0x0,6
tick,0x7d8294d2a042,17257421,0,0x0,6
tick,0x7d8294d2a042,17258507,0,0x0,6
tick,0x7d8294d2a042,17259571,0,0x0,6
tick,0x7d8294d2a042,17260717,0,0x0,6
tick,0x7d8294d2a042,17261723,0,0x0,6
tick,0x7d8294d2a042,17262793,0,0x0,6
tick,0x7d8294d2a042,17263944,0,0x0,6
tick,0x7d8294d2a042,17265097,0,0x0,6
tick,0x7d8294d2a042,17266178,0,0x0,6
tick,0x7d8294d2a042,17267251,0,0x0,6
tick,0x7d8294d2a042,17268395,0,0x0,6
tick,0x7d8294d2a042,17269547,0,0x0,6
tick,0x7d8294d2a042,17270625,0,0x0,6
tick,0x7d8294d2a042,17271712,0,0x0,6
tick,0x7d8294d2a042,17272893,0,0x0,6
tick,0x7d8294d2a042,17274039,0,0x0,6
tick,0x7d8294d2a042,17275113,0,0x0,6
tick,0x7d8294d2a042,17276254,0,0x0,6
tick,0x7d8294d2a042,17277421,0,0x0,6
tick,0x7d8294d2a042,17278499,0,0x0,6
tick,0x7d8294d2a042,17279569,0,0x0,6
tick,0x7d8294d2a042,17280803,0,0x0,6
tick,0x7d8294d2a042,17281938,0,0x0,6
tick,0x7d8294d2a042,17283014,0,0x0,6
tick,0x7d8294d2a042,17284160,0,0x0,6
tick,0x7d8294d2a042,17285324,0,0x0,6
tick,0x7d8294d2a042,17286393,0,0x0,6
tick,0x7d8294d2a042,17287496,0,0x0,6
tick,0x7d8294d2a042,17288679,0,0x0,6
tick,0x7d8294d2a042,17289844,0,0x0,6
tick,0x7d8294d2a042,17290986,0,0x0,6
tick,0x7d8294d2a042,17292048,0,0x0,6
tick,0x7d8294d2a042,17293206,0,0x0,6
tick,0x7d8294d2a042,17294204,0,0x0,6
tick,0x7d8294d2a042,17295289,0,0x0,6
tick,0x7d8294d2a042,17296527,0,0x0,6
tick,0x7d8294d2a042,17297693,0,0x0,6
tick,0x7d8294d2a042,17298741,0,0x0,6
tick,0x7d8294d2a042,17299822,0,0x0,6
tick,0x7d8294d2a042,17300991,0,0x0,6
tick,0x7d8294d2a042,17302140,0,0x0,6
tick,0x7d8294d2a042,17303222,0,0x0,6
tick,0x7d8294d2a042,17304294,0,0x0,6
tick,0x7d8294d2a042,17305468,0,0x0,6
tick,0x7d8294d2a042,17306604,0,0x0,6
tick,0x7d8294d2a042,17307648,0,0x0,6
tick,0x7d8294d2a042,17308812,0,0x0,6
tick,0x7d8294d2a042,17309969,0,0x0,6
tick,0x7d8294d2a042,17311113,0,0x0,6
tick,0x7d8294d2a042,17312103,0,0x0,6
tick,0x7d8294d2a042,17313185,0,0x0,6
tick,0x7d8294d2a042,17314268,0,0x0,6
tick,0x7d8294d2a042,17315426,0,0x0,6
tick,0x7d8294d2a042,17316516,0,0x0,6
tick,0x7d8294d2a042,17317580,0,0x0,6
tick,0x7d8294d2a042,17318731,0,0x0,6
tick,0x7d8294d2a042,17319792,0,0x0,6
tick,0x7d8294d2a042,17320953,0,0x0,6
tick,0x7d8294d2a042,17322114,0,0x0,6
tick,0x7d8294d2a042,17323260,0,0x0,6
tick,0x7d8294d2a042,17324322,0,0x0,6
tick,0x7d8294d2a042,17325418,0,0x0,6
tick,0x7d8294d2a042,17326492,0,0x0,6
tick,0x7d8294d2a042,17327563,0,0x0,6
tick,0x7d8294d2a042,17328744,0,0x0,6
tick,0x7d8294d2a042,17329815,0,0x0,6
tick,0x7d8294d2a042,17330965,0,0x0,6
tick,0x7d8294d2a042,17332044,0,0x0,6
tick,0x7d8294d2a042,17333111,0,0x0,6
tick,0x7d8294d2a042,17334276,0,0x0,6
tick,0x7d8294d2a042,17335463,0,0x0,6
tick,0x7d8294d2a042,17336511,0,0x0,6
tick,0x7d8294d2a042,17337498,0,0x0,6
tick,0x7d8294d2a042,17338658,0,0x0,6
tick,0x7d8294d2a042,17339703,0,0x0,6
tick,0x7d8294d2a042,17340854,0,0x0,6
tick,0x7d8294d2a042,17341932,0,0x0,6
tick,0x7d8294d2a042,17343113,0,0x0,6
tick,0x7d8294d2a042,17344194,0,0x0,6
tick,0x7d8294d2a042,17345164,0,0x0,6
tick,0x7d8294d2a042,17346237,0,0x0,6
tick,0x7d8294d2a042,17347343,0,0x0,6
tick,0x7d8294d2a042,17348506,0,0x0,6
tick,0x7d8294d2a042,17349517,0,0x0,6
tick,0x7d8294d2a042,17350599,0,0x0,6
tick,0x7d8294d2a042,17351726,0,0x0,6
tick,0x7d8294d2a042,17352876,0,0x0,6
tick,0x7d8294d2a042,17353949,0,0x0,6
tick,0x7d8294d2a042,17355021,0,0x0,6
tick,0x7d8294d2a042,17356166,0,0x0,6
tick,0x7d8294d2a042,17357182,0,0x0,6
tick,0x7d8294d2a042,17358341,0,0x0,6
tick,0x7d8294d2a042,17359492,0,0x0,6
tick,0x7d8294d2a042,17360677,0,0x0,6
tick,0x7d8294d2a042,17361720,0,0x0,6
tick,0x7d8294d2a042,17362980,0,0x0,6
tick,0x7d8294d2a042,17364052,0,0x0,6
tick,0x7d8294d2a042,17365163,0,0x0,6
tick,0x7d8294d2a042,17366312,0,0x0,6
tick,0x7d8294d2a042,17367421,0,0x0,6
tick,0x7d8294d2a042,17368605,0,0x0,6
tick,0x7d8294d2a042,17369610,0,0x0,6
tick,0x7d8294d2a042,17370646,0,0x0,6
tick,0x7d8294d2a042,17371829,0,0x0,6
tick,0x7d8294d2a042,17372871,0,0x0,6
tick,0x7d8294d2a042,17373979,0,0x0,6
tick,0x7d8294d2a042,17375055,0,0x0,6
tick,0x7d8294d2a042,17376214,0,0x0,6
tick,0x7d8294d2a042,17377333,0,0x0,6
tick,0x7d8294d2a042,17378421,0,0x0,6
tick,0x7d8294d2a042,17379499,0,0x0,6
tick,0x7d8294d2a042,17380559,0,0x0,6
tick,0x7d8294d2a042,17381514,0,0x0,6
tick,0x7d8294d2a042,17382566,0,0x0,6
tick,0x7d8294d2a042,17383619,0,0x0,6
tick,0x7d8294d2a042,17384725,0,0x0,6
tick,0x7d8294d2a042,17385780,0,0x0,6
tick,0x7d8294d2a042,17386837,0,0x0,6
tick,0x7d8294d2a042,17387940,0,0x0,6
tick,0x7d8294d2a042,17389019,0,0x0,6
tick,0x7d8294d2a042,17390095,0,0x0,6
tick,0x7d8294d2a042,17391173,0,0x0,6
tick,0x7d8294d2a042,17392252,0,0x0,6
tick,0x7d8294d2a042,17393334,0,0x0,6
tick,0x7d8294d2a042,17394417,0,0x0,6
tick,0x7d8294d2a042,17395480,0,0x0,6
tick,0x7d8294d2a042,17396695,0,0x0,6
tick,0x7d8294d2a042,17397780,0,0x0,6
tick,0x7d8294d2a042,17398787,0,0x0,6
tick,0x7d8294d2a042,17399951,0,0x0,6
tick,0x7d8294d2a042,17401084,0,0x0,6
tick,0x7d8294d2a042,17402092,0,0x0,6
tick,0x7d8294d2a042,17403143,0,0x0,6
tick,0x7d8294d2a042,17404267,0,0x0,6
tick,0x7d8294d1ba9a,17405325,0,0x0,6
tick,0x7d8294d29ff4,17406309,0,0x0,6
tick,0x7d8294d2a042,17407382,0,0x0,6
tick,0x7d8294d2a042,17408499,0,0x0,6
tick,0x7d8294d2a042,17409544,0,0x0,6
tick,0x7d8294d2a042,17410626,0,0x0,6
tick,0x7d8294d2a042,17411655,0,0x0,6
tick,0x7d8294d2a042,17412870,0,0x0,6
tick,0x7d8294d2a042,17414041,0,0x0,6
tick,0x7d8294d2a042,17415135,0,0x0,6
tick,0x7d8294d2a042,17416213,0,0x0,6
tick,0x7d8294d2a042,17417270,0,0x0,6
code-creation,JS,10,17418195,0x64956d804fc0,996,async_op_3 ext:core/00_infra.js:257:33,0x2c37001c915c,^
code-source-info,0x64956d804fc0,4,7512,8046,,,
code-creation,JS,10,17418210,0x64956d8053c0,128,Command ext:runtime/40_process.js:440:15,0x2c370035064c,^
code-source-info,0x64956d8053c0,297,9333,10230,,,
code-creation,JS,10,17418218,0x64956d805480,188,Command ext:runtime/40_process.js:444:14,0x2c370035055c,^
code-source-info,0x64956d805480,297,9373,9455,,,
code-creation,JS,10,17418231,0x64956d840040,432,ChildProcess ext:runtime/40_process.js:228:20,0x2c37003503f0,^
code-source-info,0x64956d840040,297,4671,7891,,,
code-creation,JS,10,17418243,0x64956d840200,2652,ChildProcess ext:runtime/40_process.js:264:14,0x2c37003500c4,^
code-source-info,0x64956d840200,297,5253,6185,,,
tick,0x64950d022ed7,17418335,0,0x0,9,0x64950db6a140,0x64956d803f54
code-creation,JS,10,17418435,0x64956d840c80,1964,spawnChildInner ext:runtime/40_process.js:171:25,0x2c370034f9c8,^
code-source-info,0x64956d840c80,297,3518,4167,,,
code-creation,JS,10,17418444,0x64956d841440,272,arrayToSafePromiseIterable ext:core/00_primordials.js:499:38,0x2c37001c8ae0,^
code-source-info,0x64956d841440,3,14886,15182,,,
code-creation,JS,10,17418450,0x64956d841580,324, ext:core/00_primordials.js:522:17,0x2c370084de70,^
code-source-info,0x64956d841580,3,15620,15698,,,
code-creation,JS,10,17418456,0x64956d841700,268,primordials.SafePromiseAll ext:core/00_primordials.js:519:32,0x2c37001c8b1c,^
code-source-info,0x64956d841700,3,15485,15704,,,
code-creation,JS,10,17418461,0x64956d841840,504,spawn ext:runtime/40_process.js:376:15,0x2c370034fa7c,^
code-source-info,0x64956d841840,297,7907,8217,,,
code-creation,JS,10,17418467,0x64956d841a80,424,output ext:runtime/40_process.js:449:9,0x2c3700350598,^
code-source-info,0x64956d841a80,297,9465,9701,,,
code-creation,JS,10,17418474,0x64956d841c40,376, ext:runtime/40_process.js:298:54,0x2c37008457c8,^
code-source-info,0x64956d841c40,297,6067,6179,,,
code-creation,JS,10,17418479,0x64956d841e00,2140,output ext:runtime/40_process.js:310:15,0x2c37003502a0,^
code-source-info,0x64956d841e00,297,6259,7099,,,
code-creation,JS,10,17418913,0x64956d842680,676,start ext:cli/40_bench.js:385:10,0x2c37005686d0,^
code-source-info,0x64956d842680,309,10603,10991,,,
code-creation,JS,10,17418942,0x64956d842940,1036,hasLength file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:40:12,0x2c3700855e74,^
code-source-info,0x64956d842940,314,804,932,,,
code-creation,JS,10,17418949,0x64956d842d80,232,map file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:621:13,0x2c3700853728,^
code-source-info,0x64956d842d80,312,11697,11745,,,
code-creation,JS,10,17418956,0x64956d842e80,87596,main file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:625:21,0x2c3700853638,^
code-source-info,0x64956d842e80,312,11767,31009,,,
code-creation,JS,10,17418964,0x64956d8584c0,688,end ext:cli/40_bench.js:398:8,0x2c370056870c,^
code-source-info,0x64956d8584c0,309,11000,11384,,,
code-creation,JS,10,17418969,0x64956d858780,2984, file:///home/harm/git/gleam/test/performance/bench_rbt.js:7:29,0x2c37005610a0,^
code-source-info,0x64956d858780,311,213,1835,,,
code-creation,JS,10,17418975,0x64956d859340,992,remove ext:deno_fs/30_fs.js:256:22,0x2c37002502b4,^
code-source-info,0x64956d859340,55,4967,5096,,,
tick,0x7d8294cad960,17419379,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,17420463,0,0x0,6
tick,0x7d8294d2a042,17421554,0,0x0,6
tick,0x7d8294d2a042,17422653,0,0x0,6
tick,0x7d8294d2a042,17423590,0,0x0,6
tick,0x7d8294d2a042,17424771,0,0x0,6
tick,0x7d8294d2a042,17425874,0,0x0,6
tick,0x7d8294d2a042,17426934,0,0x0,6
tick,0x7d8294d2a042,17428021,0,0x0,6
tick,0x7d8294d2a042,17429092,0,0x0,6
tick,0x7d8294d2a042,17430190,0,0x0,6
tick,0x7d8294d2a042,17431272,0,0x0,6
tick,0x7d8294d2a042,17432348,0,0x0,6
tick,0x7d8294d2a042,17433431,0,0x0,6
tick,0x7d8294d2a042,17434542,0,0x0,6
tick,0x7d8294d2a042,17435490,0,0x0,6
tick,0x7d8294d2a042,17436729,0,0x0,6
tick,0x7d8294d2a042,17437893,0,0x0,6
tick,0x7d8294d2a042,17439046,0,0x0,6
tick,0x7d8294d2a042,17440120,0,0x0,6
tick,0x7d8294d2a042,17441278,0,0x0,6
tick,0x7d8294d2a042,17442447,0,0x0,6
tick,0x7d8294d2a042,17443559,0,0x0,6
tick,0x7d8294d2a042,17444743,0,0x0,6
tick,0x7d8294d2a042,17445893,0,0x0,6
tick,0x7d8294d2a042,17446991,0,0x0,6
tick,0x7d8294d2a042,17448068,0,0x0,6
tick,0x7d8294d2a042,17449219,0,0x0,6
tick,0x7d8294d2a042,17450369,0,0x0,6
tick,0x7d8294d2a042,17451480,0,0x0,6
tick,0x7d8294d2a042,17452682,0,0x0,6
tick,0x7d8294d2a042,17453845,0,0x0,6
tick,0x7d8294d2a042,17454999,0,0x0,6
tick,0x7d8294d2a042,17456068,0,0x0,6
tick,0x7d8294d2a042,17457218,0,0x0,6
tick,0x7d8294d2a042,17458386,0,0x0,6
tick,0x7d8294d2a042,17459489,0,0x0,6
tick,0x7d8294d2a042,17460694,0,0x0,6
tick,0x7d8294d2a042,17461828,0,0x0,6
tick,0x7d8294d2a042,17462980,0,0x0,6
tick,0x7d8294d2a042,17464060,0,0x0,6
tick,0x7d8294d2a042,17465193,0,0x0,6
tick,0x7d8294d2a042,17466342,0,0x0,6
tick,0x7d8294d2a042,17467488,0,0x0,6
tick,0x7d8294d2a042,17468674,0,0x0,6
tick,0x7d8294d2a042,17469873,0,0x0,6
tick,0x7d8294d2a042,17471053,0,0x0,6
tick,0x7d8294d2a042,17472062,0,0x0,6
tick,0x7d8294d2a042,17473207,0,0x0,6
tick,0x7d8294d2a042,17474358,0,0x0,6
tick,0x7d8294d2a042,17475495,0,0x0,6
tick,0x7d8294d2a042,17476682,0,0x0,6
tick,0x7d8294d2a042,17477853,0,0x0,6
tick,0x7d8294d2a042,17478851,0,0x0,6
tick,0x7d8294d2a042,17480009,0,0x0,6
tick,0x7d8294d2a042,17481153,0,0x0,6
tick,0x7d8294d2a042,17482320,0,0x0,6
tick,0x7d8294d2a042,17483473,0,0x0,6
tick,0x7d8294d2a042,17484539,0,0x0,6
tick,0x7d8294d2a042,17485694,0,0x0,6
tick,0x7d8294d2a042,17486861,0,0x0,6
tick,0x7d8294d2a042,17487929,0,0x0,6
tick,0x7d8294d2a042,17489099,0,0x0,6
tick,0x7d8294d2a042,17490106,0,0x0,6
tick,0x7d8294d2a042,17491182,0,0x0,6
tick,0x7d8294d2a042,17492421,0,0x0,6
tick,0x7d8294d2a042,17493507,0,0x0,6
tick,0x7d8294d2a042,17494600,0,0x0,6
tick,0x7d8294d2a042,17495588,0,0x0,6
tick,0x7d8294d2a042,17496790,0,0x0,6
tick,0x7d8294d2a042,17497945,0,0x0,6
tick,0x7d8294d2a042,17498946,0,0x0,6
tick,0x7d8294d2a042,17500023,0,0x0,6
tick,0x7d8294d2a042,17501101,0,0x0,6
tick,0x7d8294d2a042,17502333,0,0x0,6
tick,0x7d8294d2a042,17503486,0,0x0,6
tick,0x7d8294d2a042,17504636,0,0x0,6
tick,0x7d8294d2a042,17505804,0,0x0,6
tick,0x7d8294d2a042,17506973,0,0x0,6
tick,0x7d8294d2a042,17508035,0,0x0,6
tick,0x7d8294d2a042,17509151,0,0x0,6
tick,0x7d8294d2a042,17510208,0,0x0,6
tick,0x7d8294d2a042,17511373,0,0x0,6
tick,0x7d8294d2a042,17512525,0,0x0,6
tick,0x7d8294d2a042,17513612,0,0x0,6
tick,0x7d8294d2a042,17514695,0,0x0,6
tick,0x7d8294d2a042,17515723,0,0x0,6
tick,0x7d8294d2a042,17516819,0,0x0,6
tick,0x7d8294d2a042,17517972,0,0x0,6
tick,0x7d8294d2a042,17519126,0,0x0,6
tick,0x7d8294d2a042,17520208,0,0x0,6
tick,0x7d8294d2a042,17521284,0,0x0,6
tick,0x7d8294d2a042,17522445,0,0x0,6
tick,0x7d8294d2a042,17523489,0,0x0,6
tick,0x7d8294d2a042,17524728,0,0x0,6
tick,0x7d8294d2a042,17525888,0,0x0,6
tick,0x7d8294d2a042,17526965,0,0x0,6
tick,0x7d8294d2a042,17528054,0,0x0,6
tick,0x7d8294d2a042,17529128,0,0x0,6
tick,0x7d8294d2a042,17530274,0,0x0,6
tick,0x7d8294d2a042,17531441,0,0x0,6
tick,0x7d8294d2a042,17532506,0,0x0,6
tick,0x7d8294d2a042,17533586,0,0x0,6
tick,0x7d8294d2a042,17534743,0,0x0,6
tick,0x7d8294d2a042,17535831,0,0x0,6
tick,0x7d8294d2a042,17536966,0,0x0,6
tick,0x7d8294d1ba9a,17538026,0,0x0,6
tick,0x7d8294d2a042,17539069,0,0x0,6
tick,0x7d8294d2a042,17540163,0,0x0,6
tick,0x7d8294d2a042,17541240,0,0x0,6
tick,0x7d8294d2a042,17542360,0,0x0,6
tick,0x7d8294d2a042,17543500,0,0x0,6
tick,0x7d8294d2a042,17544668,0,0x0,6
tick,0x64950cfc294b,17545832,0,0x0,6
tick,0x7d8294d2a042,17546990,0,0x0,6
tick,0x7d8294d2a042,17548140,0,0x0,6
tick,0x7d8294d2a042,17549286,0,0x0,6
tick,0x7d8294d2a042,17550460,0,0x0,6
tick,0x7d8294d2a042,17551505,0,0x0,6
tick,0x7d8294d2a042,17552735,0,0x0,6
tick,0x7d8294d2a042,17553818,0,0x0,6
tick,0x7d8294d2a042,17554917,0,0x0,6
tick,0x7d8294d2a042,17556000,0,0x0,6
tick,0x7d8294d2a042,17557108,0,0x0,6
tick,0x7d8294d2a042,17558179,0,0x0,6
tick,0x7d8294d2a042,17559356,0,0x0,6
tick,0x7d8294d2a042,17560518,0,0x0,6
tick,0x7d8294d2a042,17561624,0,0x0,6
tick,0x7d8294d2a042,17562737,0,0x0,6
tick,0x7d8294d2a042,17563715,0,0x0,6
tick,0x7d8294d2a042,17564879,0,0x0,6
tick,0x7d8294d2a042,17565806,0,0x0,6
tick,0x7d8294d2a042,17566855,0,0x0,6
tick,0x7d8294d2a042,17568021,0,0x0,6
tick,0x7d8294d2a042,17569058,0,0x0,6
tick,0x7d8294d2a042,17570108,0,0x0,6
tick,0x7d8294d2a042,17571153,0,0x0,6
tick,0x7d8294d2a042,17572245,0,0x0,6
tick,0x7d8294d2a042,17573265,0,0x0,6
tick,0x7d8294d2a042,17574362,0,0x0,6
tick,0x7d8294d2a042,17575422,0,0x0,6
tick,0x7d8294d2a042,17576586,0,0x0,6
tick,0x7d8294d2a042,17577667,0,0x0,6
tick,0x7d8294d2a042,17578739,0,0x0,6
tick,0x7d8294d2a042,17579884,0,0x0,6
tick,0x7d8294d2a042,17581049,0,0x0,6
tick,0x7d8294d2a042,17582071,0,0x0,6
tick,0x7d8294d2a042,17583148,0,0x0,6
tick,0x7d8294d2a042,17584308,0,0x0,6
tick,0x7d8294d2a042,17585455,0,0x0,6
tick,0x7d8294d2a042,17586473,0,0x0,6
tick,0x7d8294d2a042,17587549,0,0x0,6
tick,0x7d8294d2a042,17588754,0,0x0,6
tick,0x7d8294d2a042,17589747,0,0x0,6
tick,0x7d8294d2a042,17590798,0,0x0,6
tick,0x7d8294d2a042,17591853,0,0x0,6
tick,0x7d8294d2a042,17592979,0,0x0,6
tick,0x7d8294d2a042,17594043,0,0x0,6
tick,0x7d8294d2a042,17595016,0,0x0,6
tick,0x7d8294d2a042,17596144,0,0x0,6
tick,0x7d8294d2a042,17597206,0,0x0,6
tick,0x7d8294d2a042,17598287,0,0x0,6
tick,0x7d8294d2a042,17599371,0,0x0,6
tick,0x7d8294d2a042,17600522,0,0x0,6
tick,0x7d8294d2a042,17601611,0,0x0,6
tick,0x7d8294d2a042,17602754,0,0x0,6
tick,0x7d8294d2a042,17603865,0,0x0,6
tick,0x7d8294d2a042,17604916,0,0x0,6
tick,0x7d8294d2a042,17605976,0,0x0,6
tick,0x7d8294d2a042,17607086,0,0x0,6
tick,0x7d8294d2a042,17608166,0,0x0,6
tick,0x7d8294d2a042,17609244,0,0x0,6
tick,0x7d8294d2a042,17610311,0,0x0,6
tick,0x7d8294d2a042,17611438,0,0x0,6
tick,0x7d8294d2a042,17612552,0,0x0,6
tick,0x7d8294d2a042,17613653,0,0x0,6
tick,0x7d8294d2a042,17614734,0,0x0,6
tick,0x7d8294d2a042,17615830,0,0x0,6
tick,0x7d8294d2a042,17616957,0,0x0,6
tick,0x7d8294d2a042,17618045,0,0x0,6
tick,0x7d8294d2a042,17619142,0,0x0,6
tick,0x7d8294d2a042,17620213,0,0x0,6
tick,0x7d8294d2a042,17621307,0,0x0,6
tick,0x7d8294d2a042,17622447,0,0x0,6
tick,0x7d8294d2a042,17623557,0,0x0,6
tick,0x7d8294d2a042,17624754,0,0x0,6
tick,0x7d8294d2a042,17625906,0,0x0,6
tick,0x7d8294d2a042,17627067,0,0x0,6
tick,0x7d8294d2a042,17628153,0,0x0,6
tick,0x7d8294d2a042,17629286,0,0x0,6
tick,0x7d8294d2a042,17630432,0,0x0,6
tick,0x7d8294d2a042,17631588,0,0x0,6
tick,0x7d8294d2a042,17632746,0,0x0,6
tick,0x7d8294d2a042,17633899,0,0x0,6
tick,0x7d8294d2a042,17635059,0,0x0,6
tick,0x7d8294d2a042,17636172,0,0x0,6
tick,0x7d8294d2a042,17637292,0,0x0,6
tick,0x7d8294d2a042,17638432,0,0x0,6
tick,0x7d8294d2a042,17639561,0,0x0,6
tick,0x7d8294d2a042,17640765,0,0x0,6
tick,0x7d8294d2a042,17641913,0,0x0,6
tick,0x7d8294d2a042,17643068,0,0x0,6
tick,0x7d8294d2a042,17644151,0,0x0,6
tick,0x7d8294d2a042,17645298,0,0x0,6
tick,0x7d8294d2a042,17646445,0,0x0,6
tick,0x7d8294d2a042,17647565,0,0x0,6
tick,0x7d8294d2a042,17648749,0,0x0,6
tick,0x7d8294d2a042,17649893,0,0x0,6
tick,0x7d8294d2a042,17651057,0,0x0,6
tick,0x7d8294d2a042,17652134,0,0x0,6
tick,0x7d8294d2a042,17653280,0,0x0,6
tick,0x7d8294d2a042,17654441,0,0x0,6
tick,0x7d8294d2a042,17655505,0,0x0,6
tick,0x7d8294d2a042,17656737,0,0x0,6
tick,0x7d8294d2a042,17657874,0,0x0,6
tick,0x7d8294d2a042,17658957,0,0x0,6
tick,0x7d8294d2a042,17660032,0,0x0,6
tick,0x7d8294d2a042,17661182,0,0x0,6
tick,0x7d8294d2a042,17662405,0,0x0,6
tick,0x7d8294d2a042,17663490,0,0x0,6
tick,0x7d8294d2a042,17664729,0,0x0,6
tick,0x7d8294d2a042,17665881,0,0x0,6
tick,0x7d8294d2a042,17667041,0,0x0,6
tick,0x7d8294d2a042,17668039,0,0x0,6
tick,0x7d8294d2a042,17669198,0,0x0,6
tick,0x7d8294d2a042,17670347,0,0x0,6
tick,0x7d8294d2a042,17671481,0,0x0,6
tick,0x7d8294d2a042,17672726,0,0x0,6
tick,0x7d8294d2a042,17673874,0,0x0,6
tick,0x7d8294d2a042,17675025,0,0x0,6
tick,0x7d8294d2a042,17676099,0,0x0,6
tick,0x7d8294d2a042,17677253,0,0x0,6
tick,0x7d8294d2a042,17678420,0,0x0,6
tick,0x7d8294d2a042,17679523,0,0x0,6
tick,0x7d8294d2a042,17680728,0,0x0,6
tick,0x7d8294d2a042,17681873,0,0x0,6
tick,0x7d8294d2a042,17683042,0,0x0,6
tick,0x7d8294d2a042,17684130,0,0x0,6
tick,0x7d8294d2a042,17685257,0,0x0,6
tick,0x7d8294d2a042,17686417,0,0x0,6
tick,0x7d8294d2a042,17687547,0,0x0,6
tick,0x7d8294d2a042,17688756,0,0x0,6
tick,0x7d8294d2a042,17689916,0,0x0,6
tick,0x7d8294d2a042,17691074,0,0x0,6
tick,0x7d8294d2a042,17692139,0,0x0,6
tick,0x7d8294d2a042,17693286,0,0x0,6
tick,0x7d8294d2a042,17694438,0,0x0,6
tick,0x7d8294d2a042,17695540,0,0x0,6
tick,0x7d8294d2a042,17696740,0,0x0,6
tick,0x7d8294d2a042,17697899,0,0x0,6
tick,0x7d8294d2a042,17699070,0,0x0,6
tick,0x7d8294d2a042,17700133,0,0x0,6
tick,0x7d8294d2a042,17701287,0,0x0,6
tick,0x7d8294d2a042,17702436,0,0x0,6
tick,0x7d8294d2a042,17703567,0,0x0,6
tick,0x7d8294d2a042,17704744,0,0x0,6
tick,0x7d8294d2a042,17705887,0,0x0,6
tick,0x7d8294d2a042,17707038,0,0x0,6
tick,0x7d8294d2a042,17708118,0,0x0,6
tick,0x7d8294d2a042,17709254,0,0x0,6
tick,0x7d8294d2a042,17710405,0,0x0,6
tick,0x7d8294d2a042,17711538,0,0x0,6
tick,0x7d8294d2a042,17712772,0,0x0,6
tick,0x7d8294d2a042,17713907,0,0x0,6
tick,0x7d8294d2a042,17715075,0,0x0,6
tick,0x7d8294d2a042,17716162,0,0x0,6
tick,0x7d8294d2a042,17717296,0,0x0,6
tick,0x7d8294d2a042,17718458,0,0x0,6
tick,0x7d8294d2a042,17719565,0,0x0,6
tick,0x7d8294d2a042,17720744,0,0x0,6
tick,0x7d8294d2a042,17721900,0,0x0,6
tick,0x7d8294d2a042,17723058,0,0x0,6
tick,0x7d8294d2a042,17724139,0,0x0,6
tick,0x7d8294d2a042,17725285,0,0x0,6
tick,0x7d8294d1ba9a,17726331,0,0x0,6
tick,0x7d8294d2a042,17727408,0,0x0,6
tick,0x7d8294d2a042,17728472,0,0x0,6
tick,0x7d8294d2a042,17729564,0,0x0,6
tick,0x7d8294d2a042,17730679,0,0x0,6
tick,0x7d8294d2a042,17731656,0,0x0,6
tick,0x7d8294d2a042,17732787,0,0x0,6
tick,0x7d8294d2a042,17733836,0,0x0,6
tick,0x7d8294d2a042,17734999,0,0x0,6
tick,0x7d8294d2a042,17736061,0,0x0,6
tick,0x7d8294d2a042,17737162,0,0x0,6
tick,0x7d8294d2a042,17738306,0,0x0,6
tick,0x7d8294d2a042,17739484,0,0x0,6
tick,0x7d8294d2a042,17740546,0,0x0,6
tick,0x7d8294d2a042,17741631,0,0x0,6
tick,0x7d8294d2a042,17742787,0,0x0,6
tick,0x7d8294d2a042,17743773,0,0x0,6
tick,0x7d8294d2a042,17744873,0,0x0,6
tick,0x7d8294d2a042,17745969,0,0x0,6
tick,0x7d8294d2a042,17747215,0,0x0,6
tick,0x7d8294d2a042,17748361,0,0x0,6
tick,0x7d8294d2a042,17749493,0,0x0,6
tick,0x7d8294d2a042,17750544,0,0x0,6
tick,0x7d8294d2a042,17751566,0,0x0,6
tick,0x7d8294d2a042,17752707,0,0x0,6
tick,0x7d8294d2a042,17753611,0,0x0,6
tick,0x7d8294d2a042,17754747,0,0x0,6
tick,0x7d8294d2a042,17755909,0,0x0,6
tick,0x7d8294d2a042,17757008,0,0x0,6
tick,0x7d8294d2a042,17758079,0,0x0,6
tick,0x7d8294d2a042,17759247,0,0x0,6
tick,0x7d8294d2a042,17760334,0,0x0,6
tick,0x7d8294d2a042,17761530,0,0x0,6
tick,0x7d8294d2a042,17762686,0,0x0,6
tick,0x7d8294d2a042,17763689,0,0x0,6
tick,0x7d8294d2a042,17764721,0,0x0,6
tick,0x7d8294d2a042,17765726,0,0x0,6
tick,0x7d8294d2a042,17766780,0,0x0,6
tick,0x7d8294d2a042,17767874,0,0x0,6
tick,0x7d8294d2a042,17768986,0,0x0,6
tick,0x7d8294d2a042,17770041,0,0x0,6
tick,0x7d8294d2a042,17771127,0,0x0,6
tick,0x7d8294d2a042,17772209,0,0x0,6
tick,0x7d8294d2a042,17773268,0,0x0,6
tick,0x7d8294d2a042,17774325,0,0x0,6
tick,0x7d8294d2a042,17775419,0,0x0,6
tick,0x7d8294d2a042,17776516,0,0x0,6
tick,0x7d8294d2a042,17777583,0,0x0,6
tick,0x7d8294d2a042,17778568,0,0x0,6
tick,0x7d8294d2a042,17779673,0,0x0,6
tick,0x7d8294d2a042,17780822,0,0x0,6
tick,0x7d8294d2a042,17781748,0,0x0,6
tick,0x7d8294d2a042,17782803,0,0x0,6
tick,0x7d8294d2a042,17784001,0,0x0,6
tick,0x7d8294d2a042,17785059,0,0x0,6
tick,0x7d8294d2a042,17785981,0,0x0,6
tick,0x7d8294d1ba9a,17787013,0,0x0,6
tick,0x7d8294d2a042,17788139,0,0x0,6
tick,0x7d8294d2a042,17789258,0,0x0,6
tick,0x7d8294d2a042,17790262,0,0x0,6
tick,0x7d8294d2a042,17791321,0,0x0,6
tick,0x7d8294d2a042,17792382,0,0x0,6
tick,0x7d8294d2a042,17793435,0,0x0,6
tick,0x7d8294d2a042,17794497,0,0x0,6
tick,0x7d8294d2a042,17795500,0,0x0,6
tick,0x7d8294d2a042,17796633,0,0x0,6
tick,0x7d8294d2a042,17797697,0,0x0,6
tick,0x7d8294d2a042,17798813,0,0x0,6
tick,0x7d8294d2a042,17799894,0,0x0,6
tick,0x7d8294d2a042,17800929,0,0x0,6
tick,0x7d8294d2a042,17802032,0,0x0,6
tick,0x7d8294d2a042,17802988,0,0x0,6
tick,0x7d8294d2a042,17804140,0,0x0,6
tick,0x7d8294d2a042,17805228,0,0x0,6
tick,0x7d8294d2a042,17806254,0,0x0,6
tick,0x7d8294d2a042,17807335,0,0x0,6
tick,0x7d8294d2a042,17808465,0,0x0,6
tick,0x7d8294d2a042,17809605,0,0x0,6
tick,0x7d8294d2a042,17810643,0,0x0,6
tick,0x7d8294d2a042,17811664,0,0x0,6
tick,0x7d8294d2a042,17812911,0,0x0,6
tick,0x7d8294d2a042,17814071,0,0x0,6
tick,0x7d8294d2a042,17815154,0,0x0,6
tick,0x7d8294d2a042,17816278,0,0x0,6
tick,0x7d8294d2a042,17817459,0,0x0,6
tick,0x7d8294d2a042,17818531,0,0x0,6
tick,0x7d8294d2a042,17819502,0,0x0,6
tick,0x7d8294d2a042,17820696,0,0x0,6
tick,0x7d8294d2a042,17821883,0,0x0,6
tick,0x7d8294d2a042,17822965,0,0x0,6
tick,0x7d8294d2a042,17824060,0,0x0,6
tick,0x7d8294d2a042,17825111,0,0x0,6
tick,0x7d8294d2a042,17826207,0,0x0,6
tick,0x7d8294d2a042,17827377,0,0x0,6
tick,0x7d8294d2a042,17828515,0,0x0,6
tick,0x7d8294d2a042,17829630,0,0x0,6
tick,0x7d8294d2a042,17830705,0,0x0,6
tick,0x7d8294d2a042,17831766,0,0x0,6
tick,0x7d8294d2a042,17832888,0,0x0,6
tick,0x7d8294d2a042,17834039,0,0x0,6
tick,0x7d8294d2a042,17835196,0,0x0,6
tick,0x7d8294d2a042,17836196,0,0x0,6
tick,0x7d8294d2a042,17837281,0,0x0,6
tick,0x7d8294d2a042,17838495,0,0x0,6
tick,0x7d8294d2a042,17839568,0,0x0,6
tick,0x7d8294d2a042,17840809,0,0x0,6
tick,0x7d8294d2a042,17841942,0,0x0,6
tick,0x7d8294d2a042,17843118,0,0x0,6
tick,0x7d8294d2a042,17844184,0,0x0,6
tick,0x7d8294d2a042,17845369,0,0x0,6
tick,0x7d8294d2a042,17846441,0,0x0,6
tick,0x7d8294d2a042,17847555,0,0x0,6
tick,0x7d8294d2a042,17848833,0,0x0,6
tick,0x7d8294d2a042,17849982,0,0x0,6
tick,0x7d8294d2a042,17851127,0,0x0,6
tick,0x7d8294d2a042,17852198,0,0x0,6
tick,0x7d8294d2a042,17853335,0,0x0,6
tick,0x7d8294d2a042,17854498,0,0x0,6
tick,0x7d8294d2a042,17855557,0,0x0,6
tick,0x7d8294d2a042,17856779,0,0x0,6
tick,0x7d8294d2a042,17857950,0,0x0,6
tick,0x7d8294d2a042,17859027,0,0x0,6
tick,0x7d8294d2a042,17860094,0,0x0,6
tick,0x7d8294d2a042,17861270,0,0x0,6
tick,0x7d8294d2a042,17862463,0,0x0,6
tick,0x7d8294d2a042,17863566,0,0x0,6
tick,0x7d8294d2a042,17864771,0,0x0,6
tick,0x7d8294d2a042,17865917,0,0x0,6
tick,0x7d8294d2a042,17867081,0,0x0,6
tick,0x7d8294d2a042,17868082,0,0x0,6
tick,0x7d8294d2a042,17869235,0,0x0,6
tick,0x7d8294d2a042,17870378,0,0x0,6
tick,0x7d8294d2a042,17871631,0,0x0,6
tick,0x7d8294d2a042,17872731,0,0x0,6
tick,0x7d8294d2a042,17873900,0,0x0,6
tick,0x7d8294d2a042,17875069,0,0x0,6
tick,0x7d8294d2a042,17876140,0,0x0,6
tick,0x7d8294d2a042,17877268,0,0x0,6
tick,0x7d8294d2a042,17878435,0,0x0,6
tick,0x7d8294d2a042,17879552,0,0x0,6
tick,0x7d8294d2a042,17880740,0,0x0,6
tick,0x7d8294d2a042,17881900,0,0x0,6
tick,0x7d8294d2a042,17883039,0,0x0,6
tick,0x7d8294d2a042,17884113,0,0x0,6
tick,0x7d8294d2a042,17885239,0,0x0,6
tick,0x7d8294d2a042,17886395,0,0x0,6
tick,0x7d8294d2a042,17887497,0,0x0,6
tick,0x7d8294d2a042,17888617,0,0x0,6
tick,0x7d8294d2a042,17889718,0,0x0,6
tick,0x7d8294d2a042,17890874,0,0x0,6
tick,0x7d8294d2a042,17891957,0,0x0,6
tick,0x7d8294d2a042,17893073,0,0x0,6
tick,0x7d8294d2a042,17894227,0,0x0,6
tick,0x7d8294d2a042,17895369,0,0x0,6
tick,0x7d8294d2a042,17896524,0,0x0,6
tick,0x7d8294d2a042,17897594,0,0x0,6
tick,0x7d8294d2a042,17898759,0,0x0,6
tick,0x7d8294d2a042,17899767,0,0x0,6
tick,0x7d8294d2a042,17900967,0,0x0,6
tick,0x7d8294d2a042,17902110,0,0x0,6
tick,0x7d8294d2a042,17903320,0,0x0,6
tick,0x7d8294d2a042,17904330,0,0x0,6
tick,0x7d8294d2a042,17905415,0,0x0,6
tick,0x7d8294d2a042,17906580,0,0x0,6
tick,0x7d8294d2a042,17907564,0,0x0,6
tick,0x7d8294d2a042,17908837,0,0x0,6
tick,0x7d8294d2a042,17909904,0,0x0,6
tick,0x7d8294d2a042,17911111,0,0x0,6
tick,0x7d8294d2a042,17912174,0,0x0,6
tick,0x7d8294d2a042,17913255,0,0x0,6
tick,0x7d8294d2a042,17914321,0,0x0,6
tick,0x7d8294d2a042,17915430,0,0x0,6
tick,0x7d8294d2a042,17916408,0,0x0,6
tick,0x7d8294d2a042,17917486,0,0x0,6
tick,0x7d8294d2a042,17918649,0,0x0,6
tick,0x7d8294d2a042,17919648,0,0x0,6
tick,0x7d8294d2a042,17920778,0,0x0,6
tick,0x7d8294d2a042,17921855,0,0x0,6
tick,0x7d8294d2a042,17922942,0,0x0,6
tick,0x7d8294d2a042,17924002,0,0x0,6
tick,0x7d8294d2a042,17925027,0,0x0,6
tick,0x7d8294d2a042,17926071,0,0x0,6
tick,0x7d8294d2a042,17927170,0,0x0,6
tick,0x7d8294d2a042,17928328,0,0x0,6
tick,0x7d8294d2a042,17929332,0,0x0,6
tick,0x7d8294d2a042,17930499,0,0x0,6
tick,0x7d8294d2a042,17931498,0,0x0,6
tick,0x7d8294d2a042,17932716,0,0x0,6
tick,0x7d8294d2a042,17933788,0,0x0,6
tick,0x7d8294d2a042,17934944,0,0x0,6
tick,0x7d8294d2a042,17936010,0,0x0,6
tick,0x7d8294d2a042,17937171,0,0x0,6
tick,0x7d8294d2a042,17938252,0,0x0,6
tick,0x7d8294d2a042,17939421,0,0x0,6
tick,0x7d8294d2a042,17940481,0,0x0,6
tick,0x7d8294d2a042,17941578,0,0x0,6
tick,0x7d8294d2a042,17942558,0,0x0,6
tick,0x7d8294d2a042,17943616,0,0x0,6
tick,0x7d8294d2a042,17944769,0,0x0,6
tick,0x7d8294d2a042,17945872,0,0x0,6
tick,0x7d8294d2a042,17946951,0,0x0,6
tick,0x7d8294d2a042,17948057,0,0x0,6
tick,0x7d8294d2a042,17949119,0,0x0,6
tick,0x7d8294d2a042,17950318,0,0x0,6
tick,0x7d8294d2a042,17951321,0,0x0,6
tick,0x7d8294d2a042,17952419,0,0x0,6
tick,0x7d8294d2a042,17953481,0,0x0,6
tick,0x7d8294d2a042,17954592,0,0x0,6
tick,0x7d8294d2a042,17955655,0,0x0,6
tick,0x7d8294d2a042,17956826,0,0x0,6
tick,0x7d8294d2a042,17957900,0,0x0,6
tick,0x7d8294d2a042,17958956,0,0x0,6
tick,0x7d8294d2a042,17960054,0,0x0,6
tick,0x7d8294d2a042,17961106,0,0x0,6
tick,0x7d8294d2a042,17962143,0,0x0,6
tick,0x7d8294d2a042,17963198,0,0x0,6
tick,0x7d8294d2a042,17964470,0,0x0,6
tick,0x7d8294d2a042,17965568,0,0x0,6
tick,0x7d8294d2a042,17966632,0,0x0,6
tick,0x7d8294d2a042,17967768,0,0x0,6
tick,0x7d8294d2a042,17968920,0,0x0,6
tick,0x7d8294d2a042,17970058,0,0x0,6
tick,0x7d8294d2a042,17971123,0,0x0,6
tick,0x7d8294d2a042,17972299,0,0x0,6
tick,0x7d8294d2a042,17973449,0,0x0,6
tick,0x7d8294d2a042,17974514,0,0x0,6
tick,0x7d8294d2a042,17975592,0,0x0,6
tick,0x7d8294d2a042,17976813,0,0x0,6
tick,0x7d8294d2a042,17977976,0,0x0,6
tick,0x7d8294d2a042,17979040,0,0x0,6
tick,0x7d8294d2a042,17980193,0,0x0,6
tick,0x7d8294d2a042,17981353,0,0x0,6
tick,0x7d8294d2a042,17982419,0,0x0,6
tick,0x7d8294d1ba9a,17983551,0,0x0,6
tick,0x7d8294d2a042,17984760,0,0x0,6
tick,0x7d8294d2a042,17985906,0,0x0,6
tick,0x7d8294d1ba9a,17986970,0,0x0,6
tick,0x7d8294d2a042,17988139,0,0x0,6
tick,0x7d8294d2a042,17989280,0,0x0,6
tick,0x7d8294d2a042,17990430,0,0x0,6
tick,0x7d8294d2a042,17991594,0,0x0,6
tick,0x7d8294d2a042,17992766,0,0x0,6
tick,0x7d8294d2a042,17993829,0,0x0,6
tick,0x7d8294d2a042,17994894,0,0x0,6
tick,0x7d8294d2a042,17995950,0,0x0,6
tick,0x7d8294d2a042,17997001,0,0x0,6
tick,0x7d8294d2a042,17998053,0,0x0,6
tick,0x7d8294d2a042,17998967,0,0x0,6
tick,0x7d8294d2a042,18000224,0,0x0,6
tick,0x7d8294d2a042,18001300,0,0x0,6
tick,0x7d8294d2a042,18002385,0,0x0,6
tick,0x7d8294d2a042,18003414,0,0x0,6
tick,0x7d8294d2a042,18004540,0,0x0,6
tick,0x7d8294d2a042,18005608,0,0x0,6
tick,0x7d8294d2a042,18006702,0,0x0,6
tick,0x7d8294d2a042,18007665,0,0x0,6
tick,0x7d8294d2a042,18008841,0,0x0,6
tick,0x7d8294d2a042,18009901,0,0x0,6
tick,0x7d8294d2a042,18011000,0,0x0,6
tick,0x7d8294d2a042,18012143,0,0x0,6
tick,0x7d8294d2a042,18013371,0,0x0,6
tick,0x7d8294d2a042,18014478,0,0x0,6
tick,0x7d8294d2a042,18015483,0,0x0,6
tick,0x7d8294d2a042,18016687,0,0x0,6
tick,0x7d8294d2a042,18017930,0,0x0,6
tick,0x7d8294d2a042,18019026,0,0x0,6
tick,0x7d8294d2a042,18020163,0,0x0,6
tick,0x7d8294d2a042,18021313,0,0x0,6
tick,0x7d8294d2a042,18022440,0,0x0,6
tick,0x7d8294d2a042,18023402,0,0x0,6
tick,0x7d8294d2a042,18024610,0,0x0,6
tick,0x7d8294d2a042,18025736,0,0x0,6
tick,0x7d8294d2a042,18026849,0,0x0,6
tick,0x7d8294d2a042,18027931,0,0x0,6
tick,0x7d8294d2a042,18029099,0,0x0,6
tick,0x7d8294d2a042,18030246,0,0x0,6
tick,0x7d8294d2a042,18031411,0,0x0,6
tick,0x7d8294d2a042,18032483,0,0x0,6
tick,0x7d8294d2a042,18033497,0,0x0,6
tick,0x7d8294d2a042,18034648,0,0x0,6
tick,0x7d8294d2a042,18035788,0,0x0,6
tick,0x7d8294d2a042,18036876,0,0x0,6
tick,0x7d8294d2a042,18038014,0,0x0,6
tick,0x7d8294d2a042,18039169,0,0x0,6
tick,0x7d8294d2a042,18040231,0,0x0,6
tick,0x7d8294d2a042,18041383,0,0x0,6
tick,0x7d8294d2a042,18042547,0,0x0,6
tick,0x7d8294d2a042,18043636,0,0x0,6
tick,0x7d8294d2a042,18044825,0,0x0,6
tick,0x7d8294d2a042,18045976,0,0x0,6
tick,0x7d8294d2a042,18047148,0,0x0,6
tick,0x7d8294d2a042,18048205,0,0x0,6
tick,0x7d8294d2a042,18049371,0,0x0,6
tick,0x7d8294d2a042,18050514,0,0x0,6
tick,0x7d8294d2a042,18051636,0,0x0,6
tick,0x7d8294d2a042,18052828,0,0x0,6
tick,0x7d8294d2a042,18053984,0,0x0,6
tick,0x7d8294d2a042,18055137,0,0x0,6
tick,0x7d8294d2a042,18056206,0,0x0,6
tick,0x7d8294d2a042,18057315,0,0x0,6
tick,0x7d8294d2a042,18058373,0,0x0,6
tick,0x7d8294d2a042,18059458,0,0x0,6
tick,0x7d8294d2a042,18060607,0,0x0,6
tick,0x7d8294d2a042,18061677,0,0x0,6
tick,0x7d8294d2a042,18062779,0,0x0,6
tick,0x7d8294d2a042,18063740,0,0x0,6
tick,0x7d8294d2a042,18064896,0,0x0,6
tick,0x7d8294d2a042,18065986,0,0x0,6
tick,0x7d8294d2a042,18067132,0,0x0,6
tick,0x7d8294d2a042,18068260,0,0x0,6
tick,0x7d8294d2a042,18069356,0,0x0,6
tick,0x7d8294d2a042,18070499,0,0x0,6
tick,0x7d8294d2a042,18071569,0,0x0,6
tick,0x7d8294d2a042,18072817,0,0x0,6
tick,0x7d8294d2a042,18073979,0,0x0,6
tick,0x7d8294d2a042,18075055,0,0x0,6
tick,0x7d8294d2a042,18076125,0,0x0,6
tick,0x7d8294d2a042,18077281,0,0x0,6
tick,0x7d8294d2a042,18078523,0,0x0,6
tick,0x7d8294d2a042,18079566,0,0x0,6
tick,0x7d8294d2a042,18080743,0,0x0,6
tick,0x7d8294d2a042,18081900,0,0x0,6
tick,0x7d8294d2a042,18083027,0,0x0,6
tick,0x7d8294d2a042,18084107,0,0x0,6
tick,0x7d8294d2a042,18085254,0,0x0,6
tick,0x7d8294d2a042,18086418,0,0x0,6
tick,0x7d8294d2a042,18087573,0,0x0,6
tick,0x7d8294d2a042,18088765,0,0x0,6
tick,0x7d8294d2a042,18089933,0,0x0,6
tick,0x7d8294d2a042,18091090,0,0x0,6
tick,0x7d8294d2a042,18092096,0,0x0,6
tick,0x7d8294d2a042,18093259,0,0x0,6
tick,0x7d8294d2a042,18094384,0,0x0,6
tick,0x7d8294d2a042,18095586,0,0x0,6
tick,0x7d8294d2a042,18096778,0,0x0,6
tick,0x7d8294d2a042,18097939,0,0x0,6
tick,0x7d8294d2a042,18099119,0,0x0,6
tick,0x7d8294d2a042,18100157,0,0x0,6
tick,0x7d8294d2a042,18101313,0,0x0,6
tick,0x7d8294d2a042,18102467,0,0x0,6
tick,0x7d8294d2a042,18103503,0,0x0,6
tick,0x7d8294d2a042,18104770,0,0x0,6
tick,0x7d8294d2a042,18105849,0,0x0,6
tick,0x7d8294d2a042,18106998,0,0x0,6
tick,0x7d8294d2a042,18108119,0,0x0,6
tick,0x7d8294d2a042,18109192,0,0x0,6
tick,0x7d8294d2a042,18110261,0,0x0,6
tick,0x7d8294d2a042,18111353,0,0x0,6
tick,0x7d8294d2a042,18112353,0,0x0,6
tick,0x7d8294d2a042,18113516,0,0x0,6
tick,0x7d8294d2a042,18114587,0,0x0,6
tick,0x7d8294d2a042,18115652,0,0x0,6
tick,0x7d8294d2a042,18116823,0,0x0,6
tick,0x7d8294d2a042,18117982,0,0x0,6
tick,0x7d8294d2a042,18119100,0,0x0,6
tick,0x64950cfd2e30,18120080,0,0x0,6
tick,0x7d8294d2a042,18121164,0,0x0,6
tick,0x7d8294d2a042,18122381,0,0x0,6
tick,0x7d8294d2a042,18123588,0,0x0,6
tick,0x7d8294d2a042,18124811,0,0x0,6
tick,0x7d8294d2a042,18125985,0,0x0,6
tick,0x7d8294d2a042,18127160,0,0x0,6
tick,0x7d8294d2a042,18128298,0,0x0,6
tick,0x7d8294d2a042,18129412,0,0x0,6
tick,0x7d8294d2a042,18130564,0,0x0,6
tick,0x7d8294d2a042,18131626,0,0x0,6
tick,0x7d8294d2a042,18132838,0,0x0,6
tick,0x7d8294d2a042,18133968,0,0x0,6
tick,0x7d8294d2a042,18135038,0,0x0,6
tick,0x7d8294d2a042,18136130,0,0x0,6
tick,0x7d8294d2a042,18137222,0,0x0,6
tick,0x7d8294d2a042,18138212,0,0x0,6
tick,0x7d8294d2a042,18139371,0,0x0,6
tick,0x7d8294d2a042,18140434,0,0x0,6
tick,0x7d8294d2a042,18141537,0,0x0,6
tick,0x7d8294d2a042,18142642,0,0x0,6
tick,0x7d8294d2a042,18143545,0,0x0,6
tick,0x7d8294d2a042,18144770,0,0x0,6
tick,0x7d8294d2a042,18145959,0,0x0,6
tick,0x7d8294d2a042,18146913,0,0x0,6
tick,0x7d8294d2a042,18148053,0,0x0,6
tick,0x7d8294d2a042,18148993,0,0x0,6
tick,0x7d8294d2a042,18150057,0,0x0,6
tick,0x7d8294d2a042,18151062,0,0x0,6
tick,0x7d8294d2a042,18152223,0,0x0,6
tick,0x7d8294d2a042,18153224,0,0x0,6
tick,0x7d8294d2a042,18154248,0,0x0,6
tick,0x7d8294d2a042,18155327,0,0x0,6
tick,0x7d8294d2a042,18156384,0,0x0,6
tick,0x7d8294d2a042,18157409,0,0x0,6
tick,0x7d8294d2a042,18158493,0,0x0,6
tick,0x7d8294d2a042,18159571,0,0x0,6
tick,0x7d8294d2a042,18160700,0,0x0,6
tick,0x7d8294d2a042,18161710,0,0x0,6
tick,0x7d8294d2a042,18162780,0,0x0,6
tick,0x7d8294d2a042,18163933,0,0x0,6
tick,0x7d8294d2a042,18165010,0,0x0,6
tick,0x7d8294d2a042,18166024,0,0x0,6
tick,0x7d8294d2a042,18167107,0,0x0,6
tick,0x7d8294d2a042,18168253,0,0x0,6
tick,0x7d8294d2a042,18169334,0,0x0,6
tick,0x7d8294d2a042,18170343,0,0x0,6
tick,0x7d8294d2a042,18171426,0,0x0,6
tick,0x7d8294d2a042,18172663,0,0x0,6
tick,0x7d8294d2a042,18173723,0,0x0,6
tick,0x7d8294d1ba9a,18174862,0,0x0,6
tick,0x7d8294d2a042,18175939,0,0x0,6
tick,0x7d8294d2a042,18177091,0,0x0,6
tick,0x7d8294d2a042,18178233,0,0x0,6
tick,0x7d8294d1ba9a,18179358,0,0x0,6
tick,0x7d8294d1ba9a,18180419,0,0x0,6
tick,0x7d8294d2a042,18181593,0,0x0,6
tick,0x7d8294d2a042,18182763,0,0x0,6
tick,0x7d8294d2a042,18183839,0,0x0,6
tick,0x7d8294d2a042,18184969,0,0x0,6
tick,0x7d8294d2a042,18186073,0,0x0,6
tick,0x7d8294d2a042,18187160,0,0x0,6
tick,0x7d8294d2a042,18188200,0,0x0,6
tick,0x7d8294d2a042,18189308,0,0x0,6
tick,0x7d8294d2a042,18190365,0,0x0,6
tick,0x7d8294d2a042,18191506,0,0x0,6
tick,0x7d8294d2a042,18192707,0,0x0,6
tick,0x7d8294d2a042,18193855,0,0x0,6
tick,0x7d8294d2a042,18195018,0,0x0,6
tick,0x7d8294d2a042,18196175,0,0x0,6
tick,0x7d8294d2a042,18197239,0,0x0,6
tick,0x7d8294d2a042,18198391,0,0x0,6
tick,0x7d8294d2a042,18199473,0,0x0,6
tick,0x7d8294d2a042,18200794,0,0x0,6
tick,0x7d8294d2a042,18201905,0,0x0,6
tick,0x7d8294d2a042,18203001,0,0x0,6
tick,0x7d8294d2a042,18204146,0,0x0,6
tick,0x7d8294d2a042,18205287,0,0x0,6
tick,0x7d8294d2a042,18206377,0,0x0,6
tick,0x7d8294d2a042,18207504,0,0x0,6
tick,0x7d8294d2a042,18208733,0,0x0,6
tick,0x7d8294d2a042,18209822,0,0x0,6
tick,0x7d8294d2a042,18210893,0,0x0,6
tick,0x7d8294d2a042,18212140,0,0x0,6
tick,0x7d8294d2a042,18213241,0,0x0,6
tick,0x7d8294d2a042,18214389,0,0x0,6
tick,0x7d8294d2a042,18215482,0,0x0,6
tick,0x7d8294d2a042,18216729,0,0x0,6
tick,0x7d8294d2a042,18217879,0,0x0,6
tick,0x7d8294d2a042,18218959,0,0x0,6
tick,0x7d8294d2a042,18220089,0,0x0,6
tick,0x7d8294d2a042,18221241,0,0x0,6
tick,0x7d8294d2a042,18222395,0,0x0,6
tick,0x7d8294d2a042,18223479,0,0x0,6
tick,0x7d8294d2a042,18224616,0,0x0,6
tick,0x7d8294d2a042,18225709,0,0x0,6
tick,0x7d8294d2a042,18226708,0,0x0,6
tick,0x7d8294d2a042,18227853,0,0x0,6
tick,0x7d8294d2a042,18229006,0,0x0,6
tick,0x7d8294d2a042,18230254,0,0x0,6
tick,0x7d8294d2a042,18231349,0,0x0,6
tick,0x7d8294d2a042,18232549,0,0x0,6
tick,0x7d8294d2a042,18233653,0,0x0,6
tick,0x7d8294d2a042,18234732,0,0x0,6
tick,0x7d8294d2a042,18235796,0,0x0,6
tick,0x7d8294d2a042,18237010,0,0x0,6
tick,0x7d8294d2a042,18238160,0,0x0,6
tick,0x7d8294d2a042,18239249,0,0x0,6
tick,0x7d8294d2a042,18240382,0,0x0,6
tick,0x7d8294d2a042,18241472,0,0x0,6
tick,0x7d8294d2a042,18242627,0,0x0,6
tick,0x7d8294d2a042,18243627,0,0x0,6
tick,0x7d8294d2a042,18244871,0,0x0,6
tick,0x7d8294d2a042,18246015,0,0x0,6
tick,0x7d8294d2a042,18247226,0,0x0,6
tick,0x7d8294d2a042,18248150,0,0x0,6
tick,0x7d8294d2a042,18249247,0,0x0,6
tick,0x7d8294d2a042,18250451,0,0x0,6
tick,0x7d8294d2a042,18251565,0,0x0,6
tick,0x7d8294d2a042,18252685,0,0x0,6
tick,0x7d8294d2a042,18253821,0,0x0,6
tick,0x7d8294d2a042,18255052,0,0x0,6
tick,0x7d8294d2a042,18256125,0,0x0,6
tick,0x7d8294d2a042,18257263,0,0x0,6
tick,0x7d8294d2a042,18258432,0,0x0,6
tick,0x7d8294d2a042,18259554,0,0x0,6
tick,0x7d8294d2a042,18260736,0,0x0,6
tick,0x7d8294d2a042,18261891,0,0x0,6
tick,0x7d8294d2a042,18263042,0,0x0,6
tick,0x7d8294d2a042,18264105,0,0x0,6
tick,0x7d8294d2a042,18265261,0,0x0,6
tick,0x7d8294d2a042,18266407,0,0x0,6
tick,0x7d8294d2a042,18267500,0,0x0,6
tick,0x7d8294d2a042,18268710,0,0x0,6
tick,0x7d8294d2a042,18269867,0,0x0,6
tick,0x7d8294d2a042,18271033,0,0x0,6
tick,0x7d8294d2a042,18272092,0,0x0,6
tick,0x7d8294d2a042,18273260,0,0x0,6
tick,0x7d8294d2a042,18274387,0,0x0,6
tick,0x7d8294d2a042,18275487,0,0x0,6
tick,0x7d8294d2a042,18276610,0,0x0,6
tick,0x7d8294d2a042,18277771,0,0x0,6
tick,0x7d8294d2a042,18278938,0,0x0,6
tick,0x7d8294d2a042,18279866,0,0x0,6
tick,0x7d8294d2a042,18281160,0,0x0,6
tick,0x7d8294d2a042,18282300,0,0x0,6
tick,0x7d8294d2a042,18283455,0,0x0,6
tick,0x7d8294d2a042,18284602,0,0x0,6
tick,0x7d8294d2a042,18285676,0,0x0,6
tick,0x7d8294d2a042,18286838,0,0x0,6
tick,0x7d8294d2a042,18287923,0,0x0,6
tick,0x7d8294d2a042,18289052,0,0x0,6
tick,0x7d8294d2a042,18290142,0,0x0,6
tick,0x7d8294d2a042,18291290,0,0x0,6
tick,0x7d8294d2a042,18292503,0,0x0,6
tick,0x7d8294d2a042,18293604,0,0x0,6
tick,0x7d8294d2a042,18294746,0,0x0,6
tick,0x7d8294d2a042,18295708,0,0x0,6
tick,0x7d8294d2a042,18296950,0,0x0,6
tick,0x7d8294d2a042,18298020,0,0x0,6
tick,0x7d8294d2a042,18299010,0,0x0,6
tick,0x7d8294d2a042,18300084,0,0x0,6
tick,0x7d8294d2a042,18301163,0,0x0,6
tick,0x7d8294d2a042,18302338,0,0x0,6
tick,0x7d8294d2a042,18303424,0,0x0,6
tick,0x7d8294d2a042,18304574,0,0x0,6
tick,0x7d8294d2a042,18305661,0,0x0,6
tick,0x7d8294d2a042,18306733,0,0x0,6
tick,0x7d8294d2a042,18307734,0,0x0,6
tick,0x7d8294d2a042,18308893,0,0x0,6
tick,0x7d8294d1ba9a,18309866,0,0x0,6
tick,0x64950cfd20f4,18310985,0,0x0,6
tick,0x7d8294d2a042,18312074,0,0x0,6
tick,0x7d8294d2a042,18313172,0,0x0,6
tick,0x7d8294d2a042,18314238,0,0x0,6
tick,0x7d8294d2a042,18315419,0,0x0,6
tick,0x7d8294d2a042,18316541,0,0x0,6
tick,0x7d8294d2a042,18317540,0,0x0,6
tick,0x7d8294d2a042,18318716,0,0x0,6
tick,0x7d8294d2a042,18319729,0,0x0,6
tick,0x7d8294d2a042,18320913,0,0x0,6
tick,0x7d8294d2a042,18322074,0,0x0,6
tick,0x7d8294d2a042,18323160,0,0x0,6
tick,0x7d8294d2a042,18324247,0,0x0,6
tick,0x7d8294d2a042,18325321,0,0x0,6
tick,0x7d8294d2a042,18326313,0,0x0,6
tick,0x7d8294d2a042,18327487,0,0x0,6
tick,0x7d8294d2a042,18328520,0,0x0,6
tick,0x7d8294d2a042,18329581,0,0x0,6
tick,0x7d8294d2a042,18330690,0,0x0,6
tick,0x7d8294d2a042,18331645,0,0x0,6
tick,0x7d8294d2a042,18332840,0,0x0,6
tick,0x7d8294d2a042,18333891,0,0x0,6
tick,0x7d8294d2a042,18334960,0,0x0,6
tick,0x7d8294d2a042,18335997,0,0x0,6
tick,0x7d8294d2a042,18337196,0,0x0,6
tick,0x7d8294d2a042,18338243,0,0x0,6
tick,0x7d8294d2a042,18339326,0,0x0,6
tick,0x7d8294d2a042,18340412,0,0x0,6
tick,0x7d8294d2a042,18341506,0,0x0,6
tick,0x7d8294d2a042,18342641,0,0x0,6
tick,0x7d8294d2a042,18343652,0,0x0,6
tick,0x7d8294d2a042,18344869,0,0x0,6
tick,0x7d8294d2a042,18346018,0,0x0,6
tick,0x7d8294d2a042,18347192,0,0x0,6
tick,0x7d8294d2a042,18348312,0,0x0,6
tick,0x7d8294d2a042,18349358,0,0x0,6
tick,0x7d8294d2a042,18350398,0,0x0,6
tick,0x7d8294d2a042,18351460,0,0x0,6
tick,0x7d8294d2a042,18352722,0,0x0,6
tick,0x7d8294d2a042,18353754,0,0x0,6
tick,0x7d8294d2a042,18354756,0,0x0,6
tick,0x7d8294d2a042,18355922,0,0x0,6
tick,0x7d8294d2a042,18357028,0,0x0,6
tick,0x7d8294d2a042,18358004,0,0x0,6
tick,0x7d8294d2a042,18359079,0,0x0,6
tick,0x7d8294d2a042,18360226,0,0x0,6
tick,0x7d8294d2a042,18361323,0,0x0,6
tick,0x7d8294d2a042,18362400,0,0x0,6
tick,0x7d8294d2a042,18363578,0,0x0,6
tick,0x7d8294d2a042,18364771,0,0x0,6
tick,0x7d8294d2a042,18365918,0,0x0,6
tick,0x7d8294d2a042,18366990,0,0x0,6
tick,0x7d8294d2a042,18368144,0,0x0,6
tick,0x7d8294d2a042,18369298,0,0x0,6
tick,0x7d8294d2a042,18370371,0,0x0,6
tick,0x7d8294d2a042,18371578,0,0x0,6
tick,0x7d8294d2a042,18372773,0,0x0,6
tick,0x7d8294d1ba9a,18373892,0,0x0,6
tick,0x7d8294d2a042,18375051,0,0x0,6
tick,0x7d8294d2a042,18376134,0,0x0,6
tick,0x7d8294d2a042,18377291,0,0x0,6
tick,0x7d8294d2a042,18378442,0,0x0,6
tick,0x7d8294d1ba9a,18379581,0,0x0,6
tick,0x7d8294d2a042,18380716,0,0x0,6
tick,0x7d8294d2a042,18381869,0,0x0,6
tick,0x7d8294d2a042,18382943,0,0x0,6
tick,0x7d8294d2a042,18384017,0,0x0,6
tick,0x7d8294d2a042,18385162,0,0x0,6
tick,0x7d8294d2a042,18386292,0,0x0,6
tick,0x7d8294d2a042,18387427,0,0x0,6
tick,0x7d8294d0f727,18388711,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,18389675,0,0x0,6
tick,0x7d8294d2a042,18390744,0,0x0,6
tick,0x7d8294d2a042,18391905,0,0x0,6
tick,0x7d8294d2a042,18392974,0,0x0,6
tick,0x7d8294d2a042,18394059,0,0x0,6
tick,0x7d8294d2a042,18395255,0,0x0,6
tick,0x7d8294d2a042,18396389,0,0x0,6
tick,0x7d8294d2a042,18397465,0,0x0,6
tick,0x7d8294d2a042,18398567,0,0x0,6
tick,0x7d8294d2a042,18399599,0,0x0,6
tick,0x7d8294d2a042,18400819,0,0x0,6
tick,0x7d8294d2a042,18401916,0,0x0,6
tick,0x7d8294d2a042,18403046,0,0x0,6
tick,0x7d8294d2a042,18404200,0,0x0,6
tick,0x7d8294d2a042,18405361,0,0x0,6
tick,0x7d8294d2a042,18406453,0,0x0,6
tick,0x7d8294d2a042,18407633,0,0x0,6
tick,0x7d8294d2a042,18408854,0,0x0,6
tick,0x7d8294d2a042,18410006,0,0x0,6
tick,0x7d8294d2a042,18411190,0,0x0,6
tick,0x7d8294d2a042,18412187,0,0x0,6
tick,0x7d8294d2a042,18413315,0,0x0,6
tick,0x7d8294d2a042,18414394,0,0x0,6
tick,0x7d8294d2a042,18415477,0,0x0,6
tick,0x7d8294d2a042,18416638,0,0x0,6
tick,0x7d8294d2a042,18417709,0,0x0,6
tick,0x7d8294d2a042,18418953,0,0x0,6
tick,0x7d8294d2a042,18420017,0,0x0,6
tick,0x7d8294d2a042,18421162,0,0x0,6
tick,0x7d8294d2a042,18422252,0,0x0,6
tick,0x7d8294d2a042,18423471,0,0x0,6
tick,0x7d8294d2a042,18424603,0,0x0,6
tick,0x7d8294d2a042,18425628,0,0x0,6
tick,0x7d8294d2a042,18426856,0,0x0,6
tick,0x7d8294d2a042,18427933,0,0x0,6
tick,0x7d8294d2a042,18429055,0,0x0,6
tick,0x7d8294d2a042,18430230,0,0x0,6
tick,0x7d8294d2a042,18431397,0,0x0,6
tick,0x7d8294d2a042,18432517,0,0x0,6
tick,0x7d8294d2a042,18433671,0,0x0,6
tick,0x7d8294d2a042,18434826,0,0x0,6
tick,0x7d8294d2a042,18435887,0,0x0,6
tick,0x7d8294d2a042,18437017,0,0x0,6
tick,0x7d8294d2a042,18438145,0,0x0,6
tick,0x7d8294d2a042,18439376,0,0x0,6
tick,0x7d8294d2a042,18440524,0,0x0,6
tick,0x7d8294d2a042,18441659,0,0x0,6
tick,0x7d8294d2a042,18442726,0,0x0,6
tick,0x7d8294d2a042,18443757,0,0x0,6
tick,0x7d8294d2a042,18444925,0,0x0,6
tick,0x7d8294d2a042,18446120,0,0x0,6
tick,0x7d8294d2a042,18447243,0,0x0,6
tick,0x7d8294d2a042,18448294,0,0x0,6
tick,0x7d8294d2a042,18449391,0,0x0,6
tick,0x7d8294d2a042,18450550,0,0x0,6
tick,0x7d8294d2a042,18451568,0,0x0,6
tick,0x7d8294d2a042,18452829,0,0x0,6
tick,0x7d8294d2a042,18453955,0,0x0,6
tick,0x7d8294d2a042,18455126,0,0x0,6
tick,0x7d8294d2a042,18456199,0,0x0,6
tick,0x7d8294d2a042,18457333,0,0x0,6
tick,0x7d8294d2a042,18458519,0,0x0,6
tick,0x7d8294d2a042,18459562,0,0x0,6
tick,0x7d8294d2a042,18460799,0,0x0,6
tick,0x7d8294d2a042,18461964,0,0x0,6
tick,0x7d8294d2a042,18463109,0,0x0,6
tick,0x7d8294d2a042,18464182,0,0x0,6
tick,0x7d8294d2a042,18465350,0,0x0,6
tick,0x7d8294d2a042,18466496,0,0x0,6
tick,0x7d8294d2a042,18467477,0,0x0,6
tick,0x7d8294d2a042,18468691,0,0x0,6
tick,0x7d8294d2a042,18469784,0,0x0,6
tick,0x7d8294d2a042,18471014,0,0x0,6
tick,0x7d8294d2a042,18472086,0,0x0,6
tick,0x7d8294d2a042,18473233,0,0x0,6
tick,0x7d8294d2a042,18474385,0,0x0,6
tick,0x7d8294d2a042,18475497,0,0x0,6
tick,0x7d8294d2a042,18476634,0,0x0,6
tick,0x7d8294d2a042,18477796,0,0x0,6
tick,0x7d8294d2a042,18479026,0,0x0,6
tick,0x7d8294d2a042,18480116,0,0x0,6
tick,0x7d8294d2a042,18481261,0,0x0,6
tick,0x7d8294d2a042,18482347,0,0x0,6
tick,0x7d8294d2a042,18483427,0,0x0,6
tick,0x7d8294d2a042,18484587,0,0x0,6
tick,0x7d8294d2a042,18485581,0,0x0,6
tick,0x7d8294d2a042,18486655,0,0x0,6
tick,0x7d8294d2a042,18487867,0,0x0,6
tick,0x7d8294d2a042,18488974,0,0x0,6
tick,0x7d8294d2a042,18490163,0,0x0,6
tick,0x7d8294d2a042,18491224,0,0x0,6
tick,0x7d8294d2a042,18492290,0,0x0,6
tick,0x7d8294d2a042,18493393,0,0x0,6
tick,0x7d8294d2a042,18494389,0,0x0,6
tick,0x7d8294d2a042,18495438,0,0x0,6
tick,0x7d8294d2a042,18496554,0,0x0,6
tick,0x7d8294d2a042,18497709,0,0x0,6
tick,0x7d8294d2a042,18498886,0,0x0,6
tick,0x7d8294d2a042,18499949,0,0x0,6
tick,0x7d8294d2a042,18501099,0,0x0,6
tick,0x7d8294d2a042,18502245,0,0x0,6
tick,0x7d8294d2a042,18503416,0,0x0,6
tick,0x7d8294d2a042,18504553,0,0x0,6
tick,0x7d8294d2a042,18505545,0,0x0,6
tick,0x7d8294d2a042,18506718,0,0x0,6
tick,0x7d8294d2a042,18507713,0,0x0,6
tick,0x7d8294d1ba9a,18508818,0,0x0,6
tick,0x7d8294d2a042,18509864,0,0x0,6
tick,0x7d8294d2a042,18510965,0,0x0,6
tick,0x7d8294d2a042,18512042,0,0x0,6
tick,0x7d8294d2a042,18513127,0,0x0,6
tick,0x7d8294d2a042,18514205,0,0x0,6
tick,0x7d8294d2a042,18515293,0,0x0,6
tick,0x7d8294d2a042,18516515,0,0x0,6
tick,0x7d8294d2a042,18517591,0,0x0,6
tick,0x7d8294d2a042,18518666,0,0x0,6
tick,0x7d8294d2a042,18519718,0,0x0,6
tick,0x7d8294d2a042,18520875,0,0x0,6
tick,0x7d8294d2a042,18522027,0,0x0,6
tick,0x7d8294d2a042,18523190,0,0x0,6
tick,0x7d8294d2a042,18524262,0,0x0,6
tick,0x7d8294d2a042,18525350,0,0x0,6
tick,0x7d8294d2a042,18526506,0,0x0,6
tick,0x7d8294d2a042,18527548,0,0x0,6
tick,0x7d8294d2a042,18528784,0,0x0,6
tick,0x7d8294d2a042,18529970,0,0x0,6
tick,0x7d8294d2a042,18531144,0,0x0,6
tick,0x7d8294d2a042,18532220,0,0x0,6
tick,0x7d8294d2a042,18533341,0,0x0,6
tick,0x7d8294d2a042,18534493,0,0x0,6
tick,0x7d8294d2a042,18535497,0,0x0,6
tick,0x7d8294d2a042,18536644,0,0x0,6
tick,0x7d8294d2a042,18537599,0,0x0,6
tick,0x7d8294d2a042,18538720,0,0x0,6
tick,0x7d8294d2a042,18539871,0,0x0,6
tick,0x7d8294d2a042,18540901,0,0x0,6
tick,0x7d8294d2a042,18541968,0,0x0,6
tick,0x7d8294d2a042,18543217,0,0x0,6
tick,0x7d8294d2a042,18544337,0,0x0,6
tick,0x7d8294d2a042,18545530,0,0x0,6
tick,0x7d8294d2a042,18546653,0,0x0,6
tick,0x7d8294d2a042,18547808,0,0x0,6
tick,0x7d8294d2a042,18548951,0,0x0,6
tick,0x7d8294d2a042,18549944,0,0x0,6
tick,0x7d8294d2a042,18551110,0,0x0,6
tick,0x7d8294d2a042,18552289,0,0x0,6
tick,0x7d8294d2a042,18553431,0,0x0,6
tick,0x7d8294d2a042,18554487,0,0x0,6
tick,0x7d8294d2a042,18555575,0,0x0,6
tick,0x7d8294d2a042,18556795,0,0x0,6
tick,0x7d8294d2a042,18557952,0,0x0,6
tick,0x7d8294d2a042,18558949,0,0x0,6
tick,0x7d8294d2a042,18560112,0,0x0,6
tick,0x7d8294d2a042,18561273,0,0x0,6
tick,0x7d8294d2a042,18562244,0,0x0,6
tick,0x7d8294d2a042,18563322,0,0x0,6
tick,0x7d8294d2a042,18564559,0,0x0,6
tick,0x7d8294d2a042,18565712,0,0x0,6
tick,0x7d8294d2a042,18566706,0,0x0,6
tick,0x7d8294d2a042,18567872,0,0x0,6
tick,0x7d8294d2a042,18569018,0,0x0,6
tick,0x7d8294d2a042,18570179,0,0x0,6
tick,0x7d8294d2a042,18571198,0,0x0,6
tick,0x7d8294d2a042,18572332,0,0x0,6
tick,0x7d8294d1ba9a,18573386,0,0x0,6
tick,0x7d8294d2a042,18574357,0,0x0,6
tick,0x64950cfd5f41,18575485,0,0x0,6
tick,0x7d8294d2a042,18576528,0,0x0,6
tick,0x7d8294d2a042,18577598,0,0x0,6
tick,0x7d8294d2a042,18578573,0,0x0,6
tick,0x7d8294d2a042,18579661,0,0x0,6
tick,0x7d8294d2a042,18580770,0,0x0,6
tick,0x7d8294d2a042,18581816,0,0x0,6
tick,0x7d8294d2a042,18582790,0,0x0,6
tick,0x7d8294d2a042,18583943,0,0x0,6
tick,0x7d8294d2a042,18585041,0,0x0,6
tick,0x7d8294d2a042,18586034,0,0x0,6
tick,0x7d8294d2a042,18587186,0,0x0,6
tick,0x7d8294d2a042,18588424,0,0x0,6
code-creation,JS,12,18589331,0x64956d815e80,168,Black file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:11:8,0x2c3700853854,*
code-source-info,0x64956d815e80,312,255,255,C36O255,,
tick,0x64950d40b301,18589412,0,0x0,0,0x64950d50cd60,0x64950d8ab642,0x64956d8411f0,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,18590487,0,0x0,6
tick,0x7d8294d2a042,18591580,0,0x0,6
tick,0x7d8294d2a042,18592716,0,0x0,6
tick,0x7d8294d2a042,18593788,0,0x0,6
tick,0x7d8294d2a042,18594784,0,0x0,6
tick,0x7d8294d2a042,18595978,0,0x0,6
tick,0x7d8294d2a042,18597094,0,0x0,6
tick,0x7d8294d2a042,18598174,0,0x0,6
tick,0x7d8294d2a042,18599250,0,0x0,6
tick,0x7d8294d2a042,18600326,0,0x0,6
tick,0x7d8294d2a042,18601491,0,0x0,6
tick,0x7d8294d2a042,18602575,0,0x0,6
tick,0x7d8294d2a042,18603587,0,0x0,6
tick,0x7d8294d2a042,18604757,0,0x0,6
tick,0x7d8294d2a042,18605913,0,0x0,6
tick,0x7d8294d2a042,18607077,0,0x0,6
tick,0x7d8294d2a042,18608168,0,0x0,6
tick,0x7d8294d2a042,18609310,0,0x0,6
tick,0x7d8294d2a042,18610457,0,0x0,6
tick,0x7d8294d2a042,18611574,0,0x0,6
tick,0x7d8294d2a042,18612757,0,0x0,6
tick,0x7d8294d2a042,18613899,0,0x0,6
tick,0x7d8294d2a042,18614989,0,0x0,6
tick,0x7d8294d2a042,18616064,0,0x0,6
tick,0x7d8294d2a042,18617209,0,0x0,6
tick,0x7d8294d2a042,18618444,0,0x0,6
tick,0x7d8294d2a042,18619501,0,0x0,6
tick,0x7d8294d2a042,18620662,0,0x0,6
tick,0x7d8294d2a042,18621825,0,0x0,6
tick,0x7d8294d2a042,18622974,0,0x0,6
tick,0x7d8294d2a042,18624071,0,0x0,6
tick,0x7d8294d2a042,18625200,0,0x0,6
tick,0x7d8294d2a042,18626347,0,0x0,6
tick,0x7d8294d2a042,18627510,0,0x0,6
tick,0x7d8294d2a042,18628653,0,0x0,6
tick,0x7d8294d2a042,18629746,0,0x0,6
tick,0x7d8294d2a042,18630818,0,0x0,6
tick,0x7d8294d2a042,18631899,0,0x0,6
tick,0x7d8294d2a042,18633046,0,0x0,6
tick,0x7d8294d2a042,18634194,0,0x0,6
tick,0x7d8294d2a042,18635371,0,0x0,6
tick,0x7d8294d2a042,18636505,0,0x0,6
tick,0x7d8294d2a042,18637591,0,0x0,6
tick,0x7d8294d2a042,18638753,0,0x0,6
tick,0x7d8294d2a042,18639815,0,0x0,6
tick,0x7d8294d2a042,18640969,0,0x0,6
tick,0x7d8294d2a042,18642126,0,0x0,6
tick,0x7d8294d2a042,18643284,0,0x0,6
tick,0x7d8294d2a042,18644417,0,0x0,6
tick,0x7d8294d2a042,18645518,0,0x0,6
tick,0x7d8294d2a042,18646585,0,0x0,6
tick,0x7d8294d2a042,18647585,0,0x0,6
tick,0x7d8294d2a042,18648796,0,0x0,6
tick,0x7d8294d2a042,18649956,0,0x0,6
tick,0x7d8294d2a042,18651129,0,0x0,6
tick,0x7d8294d2a042,18652201,0,0x0,6
tick,0x7d8294d2a042,18653288,0,0x0,6
tick,0x7d8294d2a042,18654459,0,0x0,6
tick,0x7d8294d2a042,18655589,0,0x0,6
tick,0x7d8294d2a042,18656759,0,0x0,6
tick,0x7d8294d2a042,18657836,0,0x0,6
tick,0x7d8294d2a042,18658982,0,0x0,6
tick,0x7d8294d2a042,18660133,0,0x0,6
tick,0x7d8294d2a042,18661288,0,0x0,6
tick,0x7d8294d2a042,18662461,0,0x0,6
tick,0x7d8294d2a042,18663605,0,0x0,6
tick,0x7d8294d2a042,18664727,0,0x0,6
tick,0x7d8294d2a042,18665906,0,0x0,6
tick,0x7d8294d2a042,18666979,0,0x0,6
tick,0x7d8294d2a042,18668051,0,0x0,6
tick,0x7d8294d2a042,18669213,0,0x0,6
tick,0x7d8294d2a042,18670424,0,0x0,6
tick,0x7d8294d2a042,18671598,0,0x0,6
tick,0x7d8294d2a042,18672747,0,0x0,6
tick,0x7d8294d2a042,18673906,0,0x0,6
tick,0x7d8294d2a042,18675054,0,0x0,6
tick,0x7d8294d2a042,18676046,0,0x0,6
tick,0x7d8294d2a042,18677190,0,0x0,6
tick,0x7d8294d2a042,18678340,0,0x0,6
tick,0x7d8294d2a042,18679578,0,0x0,6
tick,0x7d8294d2a042,18680726,0,0x0,6
tick,0x7d8294d2a042,18681887,0,0x0,6
tick,0x7d8294d2a042,18683052,0,0x0,6
tick,0x7d8294d2a042,18684103,0,0x0,6
tick,0x7d8294d2a042,18685266,0,0x0,6
tick,0x7d8294d2a042,18686426,0,0x0,6
tick,0x7d8294d2a042,18687557,0,0x0,6
tick,0x7d8294d2a042,18688749,0,0x0,6
tick,0x7d8294d2a042,18689901,0,0x0,6
tick,0x7d8294d2a042,18691057,0,0x0,6
tick,0x7d8294d2a042,18692139,0,0x0,6
tick,0x7d8294d2a042,18693267,0,0x0,6
tick,0x7d8294d2a042,18694429,0,0x0,6
tick,0x7d8294d2a042,18695563,0,0x0,6
tick,0x7d8294d2a042,18696739,0,0x0,6
tick,0x7d8294d2a042,18697874,0,0x0,6
tick,0x7d8294d2a042,18699053,0,0x0,6
tick,0x7d8294d2a042,18700122,0,0x0,6
tick,0x7d8294d2a042,18701286,0,0x0,6
tick,0x7d8294d2a042,18702445,0,0x0,6
tick,0x7d8294d2a042,18703567,0,0x0,6
tick,0x7d8294d2a042,18704732,0,0x0,6
tick,0x7d8294d2a042,18705895,0,0x0,6
tick,0x7d8294d2a042,18706992,0,0x0,6
tick,0x7d8294d2a042,18708130,0,0x0,6
tick,0x7d8294d2a042,18709271,0,0x0,6
tick,0x7d8294d2a042,18710424,0,0x0,6
tick,0x7d8294d2a042,18711567,0,0x0,6
tick,0x7d8294d2a042,18712703,0,0x0,6
tick,0x7d8294d2a042,18713885,0,0x0,6
tick,0x7d8294d2a042,18714950,0,0x0,6
tick,0x7d8294d2a042,18716100,0,0x0,6
tick,0x7d8294d2a042,18717175,0,0x0,6
tick,0x7d8294d2a042,18718245,0,0x0,6
tick,0x7d8294d2a042,18719398,0,0x0,6
tick,0x7d8294d2a042,18720673,0,0x0,6
tick,0x7d8294d2a042,18721724,0,0x0,6
tick,0x7d8294d2a042,18722868,0,0x0,6
tick,0x7d8294d2a042,18724084,0,0x0,6
tick,0x7d8294d2a042,18725195,0,0x0,6
tick,0x7d8294d2a042,18726260,0,0x0,6
tick,0x7d8294d2a042,18727412,0,0x0,6
tick,0x7d8294d2a042,18728630,0,0x0,6
tick,0x7d8294d2a042,18729687,0,0x0,6
tick,0x7d8294d2a042,18730797,0,0x0,6
tick,0x7d8294d2a042,18731934,0,0x0,6
tick,0x7d8294d2a042,18733053,0,0x0,6
tick,0x7d8294d2a042,18734212,0,0x0,6
tick,0x7d8294d2a042,18735307,0,0x0,6
tick,0x7d8294d2a042,18736500,0,0x0,6
tick,0x7d8294d2a042,18737579,0,0x0,6
tick,0x7d8294d2a042,18738721,0,0x0,6
tick,0x7d8294d2a042,18739786,0,0x0,6
tick,0x7d8294d2a042,18740995,0,0x0,6
tick,0x7d8294d2a042,18742168,0,0x0,6
tick,0x7d8294d2a042,18743379,0,0x0,6
tick,0x7d8294d2a042,18744386,0,0x0,6
tick,0x7d8294d2a042,18745451,0,0x0,6
tick,0x7d8294d2a042,18746384,0,0x0,6
tick,0x7d8294d2a042,18747475,0,0x0,6
tick,0x7d8294d2a042,18748489,0,0x0,6
tick,0x7d8294d2a042,18749542,0,0x0,6
tick,0x7d8294d2a042,18750599,0,0x0,6
tick,0x7d8294d2a042,18751658,0,0x0,6
tick,0x7d8294d2a042,18752749,0,0x0,6
tick,0x7d8294d2a042,18753808,0,0x0,6
tick,0x7d8294d2a042,18754907,0,0x0,6
tick,0x7d8294d2a042,18755995,0,0x0,6
tick,0x7d8294d2a042,18757064,0,0x0,6
tick,0x7d8294d2a042,18758141,0,0x0,6
tick,0x7d8294d2a042,18759201,0,0x0,6
tick,0x7d8294d2a042,18760389,0,0x0,6
tick,0x7d8294d2a042,18761469,0,0x0,6
tick,0x7d8294d2a042,18762462,0,0x0,6
tick,0x7d8294d2a042,18763572,0,0x0,6
tick,0x7d8294d2a042,18764811,0,0x0,6
tick,0x7d8294d2a042,18765739,0,0x0,6
tick,0x7d8294d2a042,18766815,0,0x0,6
tick,0x7d8294d2a042,18768061,0,0x0,6
tick,0x7d8294d2a042,18769205,0,0x0,6
tick,0x7d8294d2a042,18770210,0,0x0,6
tick,0x7d8294d1ba9a,18771355,0,0x0,6
tick,0x7d8294d2a042,18772580,0,0x0,6
tick,0x7d8294d2a042,18773745,0,0x0,6
tick,0x7d8294d2a042,18774812,0,0x0,6
tick,0x7d8294d1ba9a,18775948,0,0x0,6
tick,0x7d8294d2a042,18777089,0,0x0,6
tick,0x7d8294d2a042,18778251,0,0x0,6
tick,0x7d8294d2a042,18779337,0,0x0,6
tick,0x7d8294d2a042,18780596,0,0x0,6
tick,0x7d8294d2a042,18781756,0,0x0,6
tick,0x7d8294d2a042,18782825,0,0x0,6
tick,0x7d8294d2a042,18783981,0,0x0,6
tick,0x7d8294d2a042,18785143,0,0x0,6
tick,0x7d8294d2a042,18786291,0,0x0,6
tick,0x7d8294d2a042,18787400,0,0x0,6
tick,0x7d8294d2a042,18788578,0,0x0,6
code-creation,JS,12,18788889,0x64956d815f80,168,Red file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/test_rb_tree/test_rb_tree.mjs:9:8,0x2c3700853818,*
code-source-info,0x64956d815f80,312,214,214,C36O214,,
tick,0x7d8294d2a042,18789700,0,0x0,6
tick,0x7d8294d2a042,18790817,0,0x0,6
tick,0x7d8294d2a042,18791918,0,0x0,6
tick,0x7d8294d2a042,18793043,0,0x0,6
tick,0x7d8294d2a042,18794037,0,0x0,6
tick,0x7d8294d2a042,18795036,0,0x0,6
tick,0x7d8294d2a042,18796178,0,0x0,6
tick,0x7d8294d2a042,18797266,0,0x0,6
tick,0x7d8294d2a042,18798363,0,0x0,6
tick,0x7d8294d2a042,18799444,0,0x0,6
tick,0x7d8294d2a042,18800528,0,0x0,6
tick,0x7d8294d2a042,18801587,0,0x0,6
tick,0x7d8294d2a042,18802736,0,0x0,6
tick,0x7d8294d2a042,18803785,0,0x0,6
tick,0x7d8294d2a042,18804959,0,0x0,6
tick,0x7d8294d2a042,18805998,0,0x0,6
tick,0x7d8294d2a042,18807232,0,0x0,6
tick,0x7d8294d2a042,18808342,0,0x0,6
tick,0x7d8294d2a042,18809489,0,0x0,6
tick,0x7d8294d2a042,18810604,0,0x0,6
tick,0x7d8294d2a042,18811603,0,0x0,6
tick,0x7d8294d2a042,18812773,0,0x0,6
tick,0x7d8294d2a042,18813966,0,0x0,6
tick,0x7d8294d2a042,18814998,0,0x0,6
tick,0x7d8294d2a042,18816131,0,0x0,6
tick,0x7d8294d2a042,18817294,0,0x0,6
tick,0x7d8294d2a042,18818317,0,0x0,6
tick,0x7d8294d2a042,18819372,0,0x0,6
tick,0x7d8294d2a042,18820634,0,0x0,6
tick,0x7d8294d2a042,18821820,0,0x0,6
tick,0x7d8294d2a042,18822804,0,0x0,6
tick,0x7d8294d2a042,18823956,0,0x0,6
tick,0x7d8294d2a042,18825101,0,0x0,6
tick,0x7d8294d2a042,18826290,0,0x0,6
tick,0x7d8294d2a042,18827489,0,0x0,6
tick,0x7d8294d2a042,18828569,0,0x0,6
tick,0x7d8294d2a042,18829721,0,0x0,6
tick,0x7d8294d2a042,18830826,0,0x0,6
tick,0x7d8294d2a042,18831881,0,0x0,6
tick,0x7d8294d2a042,18833012,0,0x0,6
tick,0x7d8294d2a042,18834163,0,0x0,6
tick,0x7d8294d2a042,18835387,0,0x0,6
tick,0x7d8294d2a042,18836511,0,0x0,6
tick,0x7d8294d2a042,18837653,0,0x0,6
tick,0x7d8294d2a042,18838756,0,0x0,6
tick,0x7d8294d2a042,18839858,0,0x0,6
tick,0x7d8294d2a042,18840974,0,0x0,6
tick,0x7d8294d2a042,18842143,0,0x0,6
tick,0x7d8294d2a042,18843287,0,0x0,6
tick,0x7d8294d2a042,18844346,0,0x0,6
tick,0x7d8294d2a042,18845510,0,0x0,6
tick,0x7d8294d2a042,18846579,0,0x0,6
tick,0x7d8294d2a042,18847604,0,0x0,6
tick,0x7d8294d2a042,18848838,0,0x0,6
tick,0x7d8294d2a042,18849978,0,0x0,6
tick,0x7d8294d2a042,18851159,0,0x0,6
tick,0x7d8294d2a042,18852202,0,0x0,6
tick,0x7d8294d2a042,18853344,0,0x0,6
tick,0x7d8294d2a042,18854451,0,0x0,6
tick,0x7d8294d2a042,18855606,0,0x0,6
tick,0x7d8294d2a042,18856793,0,0x0,6
tick,0x7d8294d2a042,18857963,0,0x0,6
tick,0x7d8294d2a042,18859119,0,0x0,6
tick,0x7d8294d2a042,18860182,0,0x0,6
tick,0x7d8294d2a042,18861326,0,0x0,6
tick,0x7d8294d2a042,18862428,0,0x0,6
tick,0x7d8294d2a042,18863579,0,0x0,6
tick,0x7d8294d2a042,18864764,0,0x0,6
tick,0x7d8294d2a042,18865918,0,0x0,6
tick,0x7d8294d2a042,18867095,0,0x0,6
tick,0x7d8294d2a042,18868149,0,0x0,6
tick,0x7d8294d2a042,18869292,0,0x0,6
tick,0x7d8294d2a042,18870396,0,0x0,6
tick,0x7d8294d2a042,18871512,0,0x0,6
tick,0x7d8294d2a042,18872686,0,0x0,6
tick,0x7d8294d2a042,18873827,0,0x0,6
tick,0x7d8294d2a042,18874942,0,0x0,6
tick,0x7d8294d2a042,18876036,0,0x0,6
tick,0x7d8294d2a042,18877194,0,0x0,6
tick,0x7d8294d2a042,18878323,0,0x0,6
tick,0x7d8294d2a042,18879372,0,0x0,6
tick,0x7d8294d2a042,18880453,0,0x0,6
tick,0x7d8294d2a042,18881588,0,0x0,6
tick,0x7d8294d2a042,18882764,0,0x0,6
tick,0x7d8294d2a042,18883823,0,0x0,6
tick,0x7d8294d2a042,18884907,0,0x0,6
tick,0x7d8294d2a042,18885977,0,0x0,6
tick,0x7d8294d2a042,18887070,0,0x0,6
tick,0x7d8294d2a042,18888134,0,0x0,6
tick,0x7d8294d2a042,18889246,0,0x0,6
tick,0x7d8294d2a042,18890346,0,0x0,6
tick,0x7d8294d2a042,18891553,0,0x0,6
tick,0x7d8294d2a042,18892707,0,0x0,6
tick,0x7d8294d2a042,18893841,0,0x0,6
tick,0x7d8294d2a042,18894854,0,0x0,6
tick,0x7d8294d2a042,18895932,0,0x0,6
tick,0x7d8294d2a042,18897007,0,0x0,6
tick,0x7d8294d2a042,18898198,0,0x0,6
tick,0x7d8294d2a042,18899291,0,0x0,6
tick,0x7d8294d2a042,18900449,0,0x0,6
tick,0x7d8294d2a042,18901548,0,0x0,6
tick,0x7d8294d2a042,18902731,0,0x0,6
tick,0x7d8294d2a042,18903701,0,0x0,6
tick,0x7d8294d2a042,18904864,0,0x0,6
tick,0x7d8294d2a042,18905989,0,0x0,6
tick,0x7d8294d2a042,18907113,0,0x0,6
tick,0x7d8294d2a042,18908165,0,0x0,6
tick,0x7d8294d2a042,18909285,0,0x0,6
tick,0x7d8294d2a042,18910430,0,0x0,6
tick,0x7d8294d2a042,18911536,0,0x0,6
tick,0x7d8294d2a042,18912738,0,0x0,6
tick,0x7d8294d2a042,18913865,0,0x0,6
tick,0x7d8294d2a042,18914989,0,0x0,6
tick,0x7d8294d2a042,18916094,0,0x0,6
tick,0x7d8294d2a042,18917246,0,0x0,6
tick,0x7d8294d2a042,18918388,0,0x0,6
tick,0x7d8294d2a042,18919562,0,0x0,6
tick,0x7d8294d2a042,18920678,0,0x0,6
tick,0x7d8294d2a042,18921814,0,0x0,6
tick,0x7d8294d2a042,18922935,0,0x0,6
tick,0x7d8294d2a042,18924043,0,0x0,6
tick,0x7d8294d2a042,18925193,0,0x0,6
tick,0x7d8294d1ba9a,18926230,0,0x0,6
tick,0x7d8294d2a042,18927391,0,0x0,6
tick,0x7d8294d2a042,18928644,0,0x0,6
tick,0x7d8294d2a042,18929774,0,0x0,6
tick,0x7d8294d2a042,18930849,0,0x0,6
tick,0x7d8294d2a042,18931985,0,0x0,6
tick,0x7d8294d2a042,18933164,0,0x0,6
tick,0x7d8294d2a042,18934351,0,0x0,6
tick,0x7d8294d2a042,18935398,0,0x0,6
tick,0x7d8294d2a042,18936456,0,0x0,6
tick,0x7d8294d2a042,18937594,0,0x0,6
tick,0x7d8294d2a042,18938712,0,0x0,6
tick,0x7d8294d2a042,18939911,0,0x0,6
tick,0x7d8294d2a042,18941053,0,0x0,6
tick,0x7d8294d2a042,18942190,0,0x0,6
tick,0x7d8294d2a042,18943291,0,0x0,6
tick,0x7d8294d2a042,18944436,0,0x0,6
tick,0x7d8294d2a042,18945628,0,0x0,6
tick,0x7d8294d2a042,18946585,0,0x0,6
tick,0x7d8294d2a042,18947657,0,0x0,6
tick,0x7d8294d2a042,18948809,0,0x0,6
tick,0x7d8294d2a042,18949938,0,0x0,6
tick,0x7d8294d2a042,18951064,0,0x0,6
tick,0x7d8294d2a042,18952145,0,0x0,6
tick,0x7d8294d2a042,18953295,0,0x0,6
tick,0x7d8294d2a042,18954242,0,0x0,6
tick,0x7d8294d2a042,18955313,0,0x0,6
tick,0x7d8294d2a042,18956365,0,0x0,6
tick,0x7d8294d2a042,18957474,0,0x0,6
tick,0x7d8294d2a042,18958561,0,0x0,6
tick,0x7d8294d2a042,18959586,0,0x0,6
tick,0x7d8294d2a042,18960781,0,0x0,6
tick,0x7d8294d2a042,18961941,0,0x0,6
tick,0x7d8294d2a042,18963049,0,0x0,6
tick,0x7d8294d2a042,18964186,0,0x0,6
tick,0x7d8294d2a042,18965380,0,0x0,6
tick,0x7d8294d2a042,18966492,0,0x0,6
tick,0x7d8294d2a042,18967524,0,0x0,6
tick,0x7d8294d2a042,18968646,0,0x0,6
tick,0x7d8294d2a042,18969731,0,0x0,6
tick,0x7d8294d2a042,18970837,0,0x0,6
tick,0x7d8294d2a042,18971924,0,0x0,6
tick,0x7d8294d2a042,18972957,0,0x0,6
tick,0x7d8294d2a042,18974044,0,0x0,6
tick,0x7d8294d2a042,18975100,0,0x0,6
tick,0x7d8294d2a042,18976209,0,0x0,6
tick,0x7d8294d2a042,18977262,0,0x0,6
tick,0x7d8294d2a042,18978332,0,0x0,6
tick,0x7d8294d2a042,18979420,0,0x0,6
tick,0x7d8294d2a042,18980487,0,0x0,6
tick,0x7d8294d2a042,18981564,0,0x0,6
tick,0x7d8294d2a042,18982642,0,0x0,6
tick,0x7d8294d2a042,18983714,0,0x0,6
tick,0x7d8294d2a042,18984903,0,0x0,6
tick,0x7d8294d2a042,18985923,0,0x0,6
tick,0x7d8294d2a042,18987010,0,0x0,6
tick,0x7d8294d2a042,18988140,0,0x0,6
tick,0x7d8294d2a042,18989230,0,0x0,6
tick,0x7d8294d2a042,18990302,0,0x0,6
tick,0x7d8294d2a042,18991477,0,0x0,6
tick,0x7d8294d2a042,18992592,0,0x0,6
tick,0x64950af60d84,18993685,0,0x0,6
tick,0x7d8294d2a042,18994761,0,0x0,6
tick,0x7d8294d2a042,18995836,0,0x0,6
tick,0x64950cfc2940,18996979,0,0x0,6
tick,0x7d8294d2a042,18998136,0,0x0,6
tick,0x7d8294d2a042,18999207,0,0x0,6
tick,0x7d8294d2a042,19000360,0,0x0,6
tick,0x7d8294d1ba9a,19001439,0,0x0,6
tick,0x7d8294d2a042,19002522,0,0x0,6
tick,0x7d8294d2a042,19003634,0,0x0,6
tick,0x7d8294d2a042,19004793,0,0x0,6
tick,0x7d8294d2a042,19005984,0,0x0,6
tick,0x7d8294d2a042,19006979,0,0x0,6
tick,0x7d8294d2a042,19008061,0,0x0,6
tick,0x7d8294d2a042,19009139,0,0x0,6
tick,0x7d8294d2a042,19010211,0,0x0,6
tick,0x7d8294d2a042,19011287,0,0x0,6
tick,0x7d8294d2a042,19012436,0,0x0,6
tick,0x7d8294d0f727,19013792,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,19014602,0,0x0,6
tick,0x7d8294d2a042,19015634,0,0x0,6
tick,0x7d8294d2a042,19016830,0,0x0,6
tick,0x7d8294d2a042,19017957,0,0x0,6
tick,0x7d8294d2a042,19019033,0,0x0,6
tick,0x7d8294d2a042,19020177,0,0x0,6
tick,0x7d8294d2a042,19021286,0,0x0,6
tick,0x7d8294d2a042,19022388,0,0x0,6
tick,0x7d8294d2a042,19023584,0,0x0,6
tick,0x7d8294d2a042,19024749,0,0x0,6
tick,0x7d8294d2a042,19025788,0,0x0,6
tick,0x7d8294d2a042,19026794,0,0x0,6
tick,0x7d8294d2a042,19027970,0,0x0,6
tick,0x7d8294d2a042,19029137,0,0x0,6
tick,0x7d8294d2a042,19030303,0,0x0,6
tick,0x7d8294d2a042,19031396,0,0x0,6
tick,0x7d8294d2a042,19032545,0,0x0,6
tick,0x7d8294d2a042,19033628,0,0x0,6
tick,0x7d8294d2a042,19034681,0,0x0,6
tick,0x7d8294d2a042,19035848,0,0x0,6
tick,0x7d8294d2a042,19036992,0,0x0,6
tick,0x7d8294d2a042,19038158,0,0x0,6
tick,0x7d8294d2a042,19039210,0,0x0,6
tick,0x7d8294d2a042,19040421,0,0x0,6
tick,0x7d8294d2a042,19041518,0,0x0,6
tick,0x7d8294d2a042,19042648,0,0x0,6
tick,0x7d8294d2a042,19043699,0,0x0,6
tick,0x7d8294d2a042,19044880,0,0x0,6
tick,0x7d8294d2a042,19046026,0,0x0,6
tick,0x7d8294d2a042,19047068,0,0x0,6
tick,0x7d8294d2a042,19048203,0,0x0,6
tick,0x7d8294d2a042,19049316,0,0x0,6
tick,0x7d8294d2a042,19050426,0,0x0,6
tick,0x7d8294d2a042,19051583,0,0x0,6
tick,0x7d8294d2a042,19052774,0,0x0,6
tick,0x7d8294d2a042,19053897,0,0x0,6
tick,0x7d8294d2a042,19054945,0,0x0,6
tick,0x7d8294d2a042,19056113,0,0x0,6
tick,0x7d8294d2a042,19057281,0,0x0,6
tick,0x7d8294d2a042,19058375,0,0x0,6
tick,0x7d8294d2a042,19059572,0,0x0,6
tick,0x7d8294d2a042,19060621,0,0x0,6
tick,0x7d8294d2a042,19061708,0,0x0,6
tick,0x7d8294d2a042,19062829,0,0x0,6
tick,0x7d8294d2a042,19064013,0,0x0,6
tick,0x7d8294d2a042,19065156,0,0x0,6
tick,0x7d8294d2a042,19066313,0,0x0,6
tick,0x7d8294d2a042,19067474,0,0x0,6
tick,0x7d8294d2a042,19068560,0,0x0,6
tick,0x7d8294d2a042,19069624,0,0x0,6
tick,0x7d8294d2a042,19070733,0,0x0,6
tick,0x7d8294d2a042,19071755,0,0x0,6
tick,0x7d8294d2a042,19072875,0,0x0,6
tick,0x7d8294d2a042,19074050,0,0x0,6
tick,0x7d8294d2a042,19075187,0,0x0,6
tick,0x7d8294d2a042,19076241,0,0x0,6
tick,0x7d8294d2a042,19077360,0,0x0,6
tick,0x7d8294d2a042,19078497,0,0x0,6
tick,0x7d8294d2a042,19079599,0,0x0,6
tick,0x7d8294d2a042,19080751,0,0x0,6
tick,0x7d8294d2a042,19081925,0,0x0,6
tick,0x7d8294d2a042,19082958,0,0x0,6
tick,0x7d8294d2a042,19084087,0,0x0,6
tick,0x7d8294d2a042,19085227,0,0x0,6
tick,0x7d8294d2a042,19086366,0,0x0,6
tick,0x7d8294d2a042,19087505,0,0x0,6
tick,0x7d8294d2a042,19088664,0,0x0,6
tick,0x7d8294d2a042,19089778,0,0x0,6
tick,0x7d8294d2a042,19090910,0,0x0,6
tick,0x7d8294d2a042,19092013,0,0x0,6
tick,0x7d8294d2a042,19093165,0,0x0,6
tick,0x7d8294d2a042,19094293,0,0x0,6
tick,0x7d8294d2a042,19095476,0,0x0,6
tick,0x7d8294d2a042,19096551,0,0x0,6
tick,0x7d8294d2a042,19097556,0,0x0,6
tick,0x7d8294d2a042,19098732,0,0x0,6
tick,0x7d8294d2a042,19099854,0,0x0,6
tick,0x7d8294d2a042,19100935,0,0x0,6
tick,0x7d8294d2a042,19102067,0,0x0,6
tick,0x7d8294d2a042,19103202,0,0x0,6
tick,0x7d8294d2a042,19104257,0,0x0,6
tick,0x7d8294d2a042,19105367,0,0x0,6
tick,0x7d8294d2a042,19106508,0,0x0,6
tick,0x7d8294d2a042,19107594,0,0x0,6
tick,0x7d8294d2a042,19108794,0,0x0,6
tick,0x7d8294d2a042,19109911,0,0x0,6
tick,0x7d8294d2a042,19111045,0,0x0,6
tick,0x7d8294d2a042,19112136,0,0x0,6
tick,0x7d8294d2a042,19113265,0,0x0,6
tick,0x7d8294d2a042,19114426,0,0x0,6
tick,0x7d8294d2a042,19115546,0,0x0,6
tick,0x7d8294d2a042,19116710,0,0x0,6
tick,0x7d8294d2a042,19117823,0,0x0,6
tick,0x7d8294d2a042,19118959,0,0x0,6
tick,0x7d8294d2a042,19120066,0,0x0,6
tick,0x7d8294d2a042,19121209,0,0x0,6
tick,0x7d8294d2a042,19122354,0,0x0,6
tick,0x7d8294d2a042,19123470,0,0x0,6
tick,0x7d8294d2a042,19124657,0,0x0,6
tick,0x7d8294d2a042,19125788,0,0x0,6
tick,0x7d8294d2a042,19126903,0,0x0,6
tick,0x7d8294d2a042,19128076,0,0x0,6
tick,0x7d8294d2a042,19129193,0,0x0,6
tick,0x7d8294d2a042,19130325,0,0x0,6
tick,0x7d8294d2a042,19131493,0,0x0,6
tick,0x7d8294d2a042,19132596,0,0x0,6
tick,0x7d8294d2a042,19133633,0,0x0,6
tick,0x7d8294d2a042,19134732,0,0x0,6
tick,0x7d8294d2a042,19135885,0,0x0,6
tick,0x7d8294d2a042,19136951,0,0x0,6
tick,0x7d8294d2a042,19138122,0,0x0,6
tick,0x7d8294d2a042,19139208,0,0x0,6
tick,0x7d8294d2a042,19140275,0,0x0,6
tick,0x7d8294d2a042,19141381,0,0x0,6
tick,0x7d8294d2a042,19142495,0,0x0,6
tick,0x7d8294d2a042,19143561,0,0x0,6
tick,0x7d8294d2a042,19144731,0,0x0,6
tick,0x7d8294d2a042,19145893,0,0x0,6
tick,0x7d8294d2a042,19147021,0,0x0,6
tick,0x7d8294d2a042,19148102,0,0x0,6
tick,0x7d8294d2a042,19149248,0,0x0,6
tick,0x7d8294d2a042,19150407,0,0x0,6
tick,0x7d8294d2a042,19151585,0,0x0,6
tick,0x7d8294d2a042,19152741,0,0x0,6
tick,0x7d8294d2a042,19153739,0,0x0,6
tick,0x7d8294d2a042,19154911,0,0x0,6
tick,0x7d8294d2a042,19156081,0,0x0,6
tick,0x7d8294d2a042,19157196,0,0x0,6
tick,0x7d8294d2a042,19158385,0,0x0,6
tick,0x7d8294d2a042,19159518,0,0x0,6
tick,0x7d8294d2a042,19160704,0,0x0,6
tick,0x7d8294d2a042,19161835,0,0x0,6
tick,0x7d8294d2a042,19163022,0,0x0,6
tick,0x7d8294d2a042,19164067,0,0x0,6
tick,0x7d8294d2a042,19165203,0,0x0,6
tick,0x7d8294d2a042,19166294,0,0x0,6
tick,0x7d8294d2a042,19167382,0,0x0,6
tick,0x7d8294d2a042,19168568,0,0x0,6
tick,0x7d8294d2a042,19169653,0,0x0,6
tick,0x7d8294d2a042,19170848,0,0x0,6
tick,0x7d8294d2a042,19171946,0,0x0,6
tick,0x7d8294d2a042,19173100,0,0x0,6
tick,0x7d8294d2a042,19174277,0,0x0,6
tick,0x7d8294d2a042,19175466,0,0x0,6
tick,0x7d8294d2a042,19176555,0,0x0,6
tick,0x7d8294d2a042,19177670,0,0x0,6
tick,0x7d8294d2a042,19178757,0,0x0,6
tick,0x7d8294d2a042,19179861,0,0x0,6
tick,0x7d8294d2a042,19180877,0,0x0,6
tick,0x7d8294d2a042,19182021,0,0x0,6
tick,0x7d8294d2a042,19183014,0,0x0,6
tick,0x7d8294d2a042,19184120,0,0x0,6
tick,0x7d8294d2a042,19185214,0,0x0,6
tick,0x7d8294d2a042,19186294,0,0x0,6
tick,0x7d8294d2a042,19187409,0,0x0,6
tick,0x7d8294d2a042,19188543,0,0x0,6
tick,0x7d8294d2a042,19189643,0,0x0,6
tick,0x7d8294d2a042,19190641,0,0x0,6
tick,0x7d8294d2a042,19191790,0,0x0,6
tick,0x7d8294d2a042,19192860,0,0x0,6
tick,0x7d8294d2a042,19193945,0,0x0,6
tick,0x7d8294d2a042,19194944,0,0x0,6
tick,0x7d8294d2a042,19196101,0,0x0,6
tick,0x7d8294d2a042,19197060,0,0x0,6
tick,0x7d8294d2a042,19198128,0,0x0,6
tick,0x7d8294d2a042,19199286,0,0x0,6
tick,0x7d8294d2a042,19200385,0,0x0,6
tick,0x7d8294d2a042,19201455,0,0x0,6
tick,0x7d8294d2a042,19202563,0,0x0,6
tick,0x7d8294d2a042,19203592,0,0x0,6
tick,0x7d8294d2a042,19204650,0,0x0,6
tick,0x7d8294d2a042,19205728,0,0x0,6
tick,0x7d8294d2a042,19206804,0,0x0,6
tick,0x7d8294d2a042,19207878,0,0x0,6
tick,0x7d8294d2a042,19208952,0,0x0,6
tick,0x7d8294d2a042,19210029,0,0x0,6
tick,0x7d8294d2a042,19211103,0,0x0,6
tick,0x7d8294d2a042,19212181,0,0x0,6
tick,0x7d8294d2a042,19213254,0,0x0,6
tick,0x7d8294d2a042,19214336,0,0x0,6
tick,0x7d8294d2a042,19215494,0,0x0,6
tick,0x7d8294d2a042,19216669,0,0x0,6
tick,0x7d8294d2a042,19217823,0,0x0,6
tick,0x7d8294d2a042,19218791,0,0x0,6
tick,0x7d8294d2a042,19219975,0,0x0,6
tick,0x7d8294d2a042,19221107,0,0x0,6
tick,0x7d8294d2a042,19222255,0,0x0,6
tick,0x7d8294d2a042,19223252,0,0x0,6
tick,0x7d8294d1ba9a,19224337,0,0x0,6
tick,0x7d8294d2a042,19225498,0,0x0,6
tick,0x7d8294d2a042,19226576,0,0x0,6
tick,0x7d8294d1ba9a,19227629,0,0x0,6
tick,0x7d8294d2a042,19228786,0,0x0,6
tick,0x7d8294d2a042,19229946,0,0x0,6
tick,0x7d8294d1ba9a,19231021,0,0x0,6
tick,0x7d8294d2a042,19232114,0,0x0,6
tick,0x7d8294d2a042,19233354,0,0x0,6
tick,0x7d8294d2a042,19234371,0,0x0,6
tick,0x7d8294d2a042,19235681,0,0x0,6
tick,0x7d8294d2a042,19236884,0,0x0,6
tick,0x7d8294d2a042,19238029,0,0x0,6
tick,0x7d8294d2a042,19239226,0,0x0,6
tick,0x7d8294d2a042,19240281,0,0x0,6
tick,0x7d8294d2a042,19241384,0,0x0,6
new,MemoryChunk,0x2c3700580000,262144
new,MemoryChunk,0x2c3700640000,262144
new,MemoryChunk,0x2c3700680000,262144
new,MemoryChunk,0x2c37006c0000,262144
delete,MemoryChunk,0x7d8270086330
delete,MemoryChunk,0x7d82700352d0
delete,MemoryChunk,0x7d827012dd30
delete,MemoryChunk,0x7d827002ca80
tick,0x7d8294d2a042,19242289,0,0x0,6
tick,0x7d8294d2a042,19243405,0,0x0,6
tick,0x7d8294d2a042,19244457,0,0x0,6
tick,0x7d8294d2a042,19245533,0,0x0,6
tick,0x7d8294d2a042,19246677,0,0x0,6
tick,0x7d8294d2a042,19247645,0,0x0,6
tick,0x7d8294d2a042,19248887,0,0x0,6
tick,0x7d8294d2a042,19249954,0,0x0,6
tick,0x7d8294d2a042,19251032,0,0x0,6
tick,0x7d8294d2a042,19252172,0,0x0,6
tick,0x7d8294d2a042,19253307,0,0x0,6
tick,0x7d8294d2a042,19254388,0,0x0,6
tick,0x7d8294d2a042,19255601,0,0x0,6
tick,0x7d8294d2a042,19256752,0,0x0,6
tick,0x7d8294d2a042,19257914,0,0x0,6
tick,0x7d8294d2a042,19258955,0,0x0,6
tick,0x7d8294d2a042,19260116,0,0x0,6
tick,0x7d8294d2a042,19261285,0,0x0,6
tick,0x7d8294d2a042,19262387,0,0x0,6
tick,0x7d8294d2a042,19263560,0,0x0,6
tick,0x7d8294d2a042,19264625,0,0x0,6
tick,0x7d8294d2a042,19265707,0,0x0,6
tick,0x7d8294d2a042,19266788,0,0x0,6
tick,0x7d8294d2a042,19267990,0,0x0,6
tick,0x7d8294d2a042,19269124,0,0x0,6
tick,0x7d8294d2a042,19270221,0,0x0,6
tick,0x7d8294d2a042,19271352,0,0x0,6
tick,0x7d8294d2a042,19272639,0,0x0,6
tick,0x7d8294d2a042,19273786,0,0x0,6
tick,0x7d8294d2a042,19274818,0,0x0,6
tick,0x7d8294d2a042,19275987,0,0x0,6
tick,0x7d8294d2a042,19277146,0,0x0,6
tick,0x7d8294d2a042,19278305,0,0x0,6
tick,0x7d8294d2a042,19279339,0,0x0,6
tick,0x7d8294d2a042,19280557,0,0x0,6
tick,0x7d8294d2a042,19281657,0,0x0,6
tick,0x7d8294d2a042,19282720,0,0x0,6
tick,0x7d8294d2a042,19283902,0,0x0,6
tick,0x7d8294d2a042,19285044,0,0x0,6
tick,0x7d8294d2a042,19286209,0,0x0,6
tick,0x7d8294d2a042,19287242,0,0x0,6
tick,0x7d8294d2a042,19288489,0,0x0,6
tick,0x7d8294d2a042,19289581,0,0x0,6
tick,0x7d8294d2a042,19290554,0,0x0,6
tick,0x7d8294d2a042,19291632,0,0x0,6
tick,0x7d8294d2a042,19292810,0,0x0,6
tick,0x7d8294d2a042,19293931,0,0x0,6
tick,0x7d8294d2a042,19294970,0,0x0,6
tick,0x7d8294d2a042,19296101,0,0x0,6
tick,0x7d8294d2a042,19297226,0,0x0,6
tick,0x7d8294d2a042,19298373,0,0x0,6
tick,0x7d8294d2a042,19299560,0,0x0,6
tick,0x7d8294d2a042,19300699,0,0x0,6
tick,0x7d8294d2a042,19301735,0,0x0,6
tick,0x7d8294d2a042,19302818,0,0x0,6
tick,0x7d8294d2a042,19303929,0,0x0,6
tick,0x7d8294d2a042,19305068,0,0x0,6
tick,0x7d8294d2a042,19306232,0,0x0,6
tick,0x7d8294d2a042,19307338,0,0x0,6
tick,0x7d8294d2a042,19308484,0,0x0,6
tick,0x7d8294d2a042,19309539,0,0x0,6
tick,0x7d8294d2a042,19310694,0,0x0,6
tick,0x7d8294d2a042,19311694,0,0x0,6
tick,0x7d8294d2a042,19312860,0,0x0,6
tick,0x7d8294d2a042,19314000,0,0x0,6
tick,0x7d8294d2a042,19315133,0,0x0,6
tick,0x7d8294d2a042,19316200,0,0x0,6
tick,0x7d8294d2a042,19317318,0,0x0,6
tick,0x7d8294d2a042,19318458,0,0x0,6
tick,0x7d8294d2a042,19319544,0,0x0,6
tick,0x7d8294d2a042,19320736,0,0x0,6
tick,0x7d8294d2a042,19321881,0,0x0,6
tick,0x7d8294d2a042,19322917,0,0x0,6
tick,0x7d8294d2a042,19324036,0,0x0,6
tick,0x7d8294d2a042,19325208,0,0x0,6
tick,0x7d8294d2a042,19326405,0,0x0,6
tick,0x7d8294d2a042,19327534,0,0x0,6
tick,0x7d8294d2a042,19328728,0,0x0,6
tick,0x7d8294d2a042,19329900,0,0x0,6
tick,0x7d8294d2a042,19330995,0,0x0,6
tick,0x7d8294d2a042,19332108,0,0x0,6
tick,0x7d8294d2a042,19333241,0,0x0,6
tick,0x7d8294d2a042,19334387,0,0x0,6
tick,0x7d8294d2a042,19335522,0,0x0,6
tick,0x7d8294d2a042,19336720,0,0x0,6
tick,0x7d8294d2a042,19337850,0,0x0,6
tick,0x7d8294d2a042,19338960,0,0x0,6
tick,0x7d8294d2a042,19340068,0,0x0,6
tick,0x7d8294d2a042,19341236,0,0x0,6
tick,0x7d8294d2a042,19342358,0,0x0,6
tick,0x7d8294d2a042,19343509,0,0x0,6
tick,0x7d8294d2a042,19344677,0,0x0,6
tick,0x7d8294d2a042,19345839,0,0x0,6
tick,0x7d8294d2a042,19346958,0,0x0,6
tick,0x7d8294d2a042,19348080,0,0x0,6
tick,0x7d8294d2a042,19349222,0,0x0,6
tick,0x7d8294d2a042,19350358,0,0x0,6
tick,0x7d8294d2a042,19351507,0,0x0,6
tick,0x7d8294d2a042,19352662,0,0x0,6
tick,0x7d8294d2a042,19353818,0,0x0,6
tick,0x7d8294d2a042,19354926,0,0x0,6
tick,0x7d8294d2a042,19356027,0,0x0,6
tick,0x7d8294d2a042,19357215,0,0x0,6
tick,0x7d8294d2a042,19358333,0,0x0,6
tick,0x7d8294d2a042,19359498,0,0x0,6
tick,0x7d8294d2a042,19360654,0,0x0,6
tick,0x7d8294d2a042,19361789,0,0x0,6
tick,0x7d8294d2a042,19362919,0,0x0,6
tick,0x7d8294d2a042,19364019,0,0x0,6
tick,0x7d8294d2a042,19365188,0,0x0,6
tick,0x7d8294d2a042,19366324,0,0x0,6
tick,0x7d8294d2a042,19367460,0,0x0,6
tick,0x7d8294d2a042,19368536,0,0x0,6
tick,0x7d8294d2a042,19369665,0,0x0,6
tick,0x7d8294d2a042,19370758,0,0x0,6
tick,0x7d8294d2a042,19371887,0,0x0,6
tick,0x7d8294d2a042,19373031,0,0x0,6
tick,0x7d8294d2a042,19374153,0,0x0,6
tick,0x7d8294d2a042,19375275,0,0x0,6
tick,0x7d8294d2a042,19376416,0,0x0,6
tick,0x7d8294d2a042,19377543,0,0x0,6
tick,0x7d8294d2a042,19378660,0,0x0,6
tick,0x7d8294d2a042,19379669,0,0x0,6
tick,0x7d8294d2a042,19380873,0,0x0,6
tick,0x7d8294d2a042,19382016,0,0x0,6
tick,0x7d8294d2a042,19383130,0,0x0,6
tick,0x7d8294d2a042,19384109,0,0x0,6
tick,0x7d8294d2a042,19385184,0,0x0,6
tick,0x7d8294d2a042,19386288,0,0x0,6
tick,0x7d8294d2a042,19387394,0,0x0,6
tick,0x7d8294d2a042,19388456,0,0x0,6
tick,0x7d8294d2a042,19389593,0,0x0,6
tick,0x7d8294d2a042,19390680,0,0x0,6
tick,0x7d8294d2a042,19391896,0,0x0,6
tick,0x7d8294d2a042,19393010,0,0x0,6
tick,0x7d8294d2a042,19394043,0,0x0,6
tick,0x7d8294d2a042,19395119,0,0x0,6
tick,0x7d8294d2a042,19396218,0,0x0,6
tick,0x7d8294d2a042,19397308,0,0x0,6
tick,0x7d8294d2a042,19398450,0,0x0,6
tick,0x7d8294d2a042,19399548,0,0x0,6
tick,0x7d8294d2a042,19400765,0,0x0,6
tick,0x7d8294d2a042,19401894,0,0x0,6
tick,0x7d8294d2a042,19403032,0,0x0,6
tick,0x7d8294d2a042,19404131,0,0x0,6
tick,0x7d8294d2a042,19405228,0,0x0,6
tick,0x7d8294d2a042,19406327,0,0x0,6
tick,0x7d8294d2a042,19407476,0,0x0,6
tick,0x7d8294d2a042,19408586,0,0x0,6
tick,0x7d8294d2a042,19409590,0,0x0,6
tick,0x7d8294d2a042,19410767,0,0x0,6
tick,0x7d8294d2a042,19411820,0,0x0,6
tick,0x7d8294d2a042,19412890,0,0x0,6
tick,0x7d8294d2a042,19413856,0,0x0,6
tick,0x7d8294d2a042,19414930,0,0x0,6
tick,0x7d8294d2a042,19416052,0,0x0,6
tick,0x7d8294d2a042,19417054,0,0x0,6
tick,0x7d8294d2a042,19418127,0,0x0,6
tick,0x7d8294d2a042,19419218,0,0x0,6
tick,0x7d8294d2a042,19420250,0,0x0,6
tick,0x7d8294d2a042,19421369,0,0x0,6
tick,0x7d8294d2a042,19422394,0,0x0,6
tick,0x7d8294d2a042,19423447,0,0x0,6
tick,0x7d8294d2a042,19424549,0,0x0,6
tick,0x7d8294d2a042,19425622,0,0x0,6
tick,0x7d8294d2a042,19426697,0,0x0,6
tick,0x7d8294d2a042,19427773,0,0x0,6
tick,0x7d8294d2a042,19428848,0,0x0,6
tick,0x7d8294d2a042,19429909,0,0x0,6
tick,0x7d8294d2a042,19431006,0,0x0,6
tick,0x7d8294d2a042,19432156,0,0x0,6
tick,0x7d8294d2a042,19433169,0,0x0,6
tick,0x7d8294d2a042,19434241,0,0x0,6
tick,0x7d8294d2a042,19435310,0,0x0,6
tick,0x7d8294d2a042,19436450,0,0x0,6
tick,0x7d8294d2a042,19437530,0,0x0,6
tick,0x7d8294d2a042,19438534,0,0x0,6
tick,0x7d8294d2a042,19439610,0,0x0,6
tick,0x7d8294d2a042,19440702,0,0x0,6
tick,0x7d8294d2a042,19441708,0,0x0,6
tick,0x7d8294d1ba9a,19442781,0,0x0,6
tick,0x7d8294c9855a,19443862,0,0x0,6
tick,0x7d8294d2a042,19444957,0,0x0,6
tick,0x7d8294d1ba9a,19446014,0,0x0,6
tick,0x7d8294d2a042,19447094,0,0x0,6
tick,0x7d8294d2a042,19448175,0,0x0,6
tick,0x7d8294d2a042,19449258,0,0x0,6
tick,0x7d8294d2a042,19450369,0,0x0,6
tick,0x7d8294d2a042,19451416,0,0x0,6
tick,0x7d8294d2a042,19452587,0,0x0,6
tick,0x7d8294d2a042,19453656,0,0x0,6
tick,0x7d8294d2a042,19454729,0,0x0,6
tick,0x7d8294d2a042,19455741,0,0x0,6
tick,0x7d8294d2a042,19456945,0,0x0,6
tick,0x7d8294d2a042,19458160,0,0x0,6
tick,0x7d8294d2a042,19459211,0,0x0,6
tick,0x7d8294d2a042,19460309,0,0x0,6
tick,0x7d8294d2a042,19461384,0,0x0,6
tick,0x7d8294d2a042,19462461,0,0x0,6
tick,0x7d8294d2a042,19463490,0,0x0,6
tick,0x7d8294d2a042,19464590,0,0x0,6
tick,0x7d8294d2a042,19465669,0,0x0,6
tick,0x7d8294d2a042,19466743,0,0x0,6
tick,0x7d8294d2a042,19467881,0,0x0,6
tick,0x7d8294d2a042,19468968,0,0x0,6
tick,0x7d8294d2a042,19470041,0,0x0,6
tick,0x7d8294d2a042,19471120,0,0x0,6
tick,0x7d8294d2a042,19472268,0,0x0,6
tick,0x7d8294d2a042,19473432,0,0x0,6
tick,0x7d8294d2a042,19474510,0,0x0,6
tick,0x7d8294d2a042,19475573,0,0x0,6
tick,0x7d8294d2a042,19476711,0,0x0,6
tick,0x7d8294d2a042,19477783,0,0x0,6
tick,0x7d8294d2a042,19478860,0,0x0,6
tick,0x7d8294d2a042,19479999,0,0x0,6
tick,0x7d8294d2a042,19481142,0,0x0,6
tick,0x7d8294d2a042,19482237,0,0x0,6
tick,0x7d8294d2a042,19483308,0,0x0,6
tick,0x7d8294d2a042,19484556,0,0x0,6
tick,0x7d8294d2a042,19485710,0,0x0,6
tick,0x7d8294d2a042,19486763,0,0x0,6
tick,0x7d8294d2a042,19487895,0,0x0,6
tick,0x7d8294d2a042,19489046,0,0x0,6
tick,0x7d8294d2a042,19490199,0,0x0,6
tick,0x7d8294d2a042,19491277,0,0x0,6
tick,0x7d8294d2a042,19492494,0,0x0,6
tick,0x7d8294d2a042,19493652,0,0x0,6
tick,0x7d8294d2a042,19494730,0,0x0,6
tick,0x7d8294d2a042,19495913,0,0x0,6
tick,0x7d8294d2a042,19497037,0,0x0,6
tick,0x7d8294d2a042,19498182,0,0x0,6
tick,0x7d8294d2a042,19499323,0,0x0,6
tick,0x7d8294d2a042,19500416,0,0x0,6
tick,0x7d8294d2a042,19501579,0,0x0,6
tick,0x7d8294d2a042,19502727,0,0x0,6
tick,0x7d8294d2a042,19503792,0,0x0,6
tick,0x7d8294d2a042,19504862,0,0x0,6
tick,0x7d8294d2a042,19505994,0,0x0,6
tick,0x7d8294d2a042,19507156,0,0x0,6
tick,0x7d8294d2a042,19508246,0,0x0,6
tick,0x7d8294d2a042,19509309,0,0x0,6
tick,0x7d8294d2a042,19510381,0,0x0,6
tick,0x7d8294d2a042,19511483,0,0x0,6
tick,0x7d8294d2a042,19512675,0,0x0,6
tick,0x7d8294d2a042,19513813,0,0x0,6
tick,0x7d8294d2a042,19514954,0,0x0,6
tick,0x7d8294d2a042,19516020,0,0x0,6
tick,0x7d8294d2a042,19517113,0,0x0,6
tick,0x7d8294d2a042,19518252,0,0x0,6
tick,0x7d8294d2a042,19519455,0,0x0,6
tick,0x7d8294d2a042,19520463,0,0x0,6
tick,0x7d8294d2a042,19521542,0,0x0,6
tick,0x7d8294d2a042,19522619,0,0x0,6
tick,0x7d8294d2a042,19523616,0,0x0,6
tick,0x7d8294d2a042,19524818,0,0x0,6
tick,0x7d8294d2a042,19525959,0,0x0,6
tick,0x7d8294d2a042,19527102,0,0x0,6
tick,0x7d8294d2a042,19528115,0,0x0,6
tick,0x7d8294d2a042,19529187,0,0x0,6
tick,0x7d8294d2a042,19530347,0,0x0,6
tick,0x7d8294d2a042,19531438,0,0x0,6
tick,0x7d8294d2a042,19532486,0,0x0,6
tick,0x7d8294d2a042,19533646,0,0x0,6
tick,0x7d8294d2a042,19534820,0,0x0,6
tick,0x7d8294d2a042,19535869,0,0x0,6
tick,0x7d8294d2a042,19537028,0,0x0,6
tick,0x7d8294d2a042,19538166,0,0x0,6
tick,0x7d8294d2a042,19539299,0,0x0,6
tick,0x7d8294d2a042,19540370,0,0x0,6
tick,0x7d8294d2a042,19541444,0,0x0,6
tick,0x7d8294d2a042,19542515,0,0x0,6
tick,0x7d8294d2a042,19543542,0,0x0,6
tick,0x7d8294d2a042,19544713,0,0x0,6
tick,0x7d8294d2a042,19545788,0,0x0,6
tick,0x7d8294d2a042,19546937,0,0x0,6
tick,0x7d8294d2a042,19548004,0,0x0,6
tick,0x7d8294d2a042,19549162,0,0x0,6
tick,0x7d8294d2a042,19550233,0,0x0,6
tick,0x7d8294d2a042,19551440,0,0x0,6
tick,0x7d8294d2a042,19552453,0,0x0,6
tick,0x7d8294d2a042,19553469,0,0x0,6
tick,0x7d8294d2a042,19554541,0,0x0,6
tick,0x7d8294d2a042,19555571,0,0x0,6
tick,0x7d8294d2a042,19556739,0,0x0,6
tick,0x7d8294d2a042,19557882,0,0x0,6
tick,0x7d8294d2a042,19559022,0,0x0,6
tick,0x7d8294d2a042,19560096,0,0x0,6
tick,0x7d8294d2a042,19561211,0,0x0,6
tick,0x7d8294d2a042,19562244,0,0x0,6
tick,0x7d8294d2a042,19563452,0,0x0,6
tick,0x7d8294d2a042,19564470,0,0x0,6
tick,0x7d8294d2a042,19565537,0,0x0,6
tick,0x7d8294d2a042,19566611,0,0x0,6
tick,0x7d8294d2a042,19567576,0,0x0,6
tick,0x7d8294d2a042,19568759,0,0x0,6
tick,0x7d8294d2a042,19569889,0,0x0,6
tick,0x7d8294d2a042,19571034,0,0x0,6
tick,0x7d8294d2a042,19572102,0,0x0,6
tick,0x7d8294d2a042,19573179,0,0x0,6
tick,0x7d8294d2a042,19574329,0,0x0,6
tick,0x7d8294d2a042,19575506,0,0x0,6
tick,0x7d8294d2a042,19576485,0,0x0,6
tick,0x7d8294d2a042,19577557,0,0x0,6
tick,0x7d8294d2a042,19578712,0,0x0,6
tick,0x7d8294d2a042,19579673,0,0x0,6
tick,0x7d8294d2a042,19580744,0,0x0,6
tick,0x7d8294d2a042,19581815,0,0x0,6
tick,0x7d8294d2a042,19582889,0,0x0,6
tick,0x7d8294d2a042,19583967,0,0x0,6
tick,0x7d8294d2a042,19585121,0,0x0,6
tick,0x7d8294d2a042,19586188,0,0x0,6
tick,0x7d8294d2a042,19587263,0,0x0,6
tick,0x7d8294d2a042,19588424,0,0x0,6
tick,0x7d8294d2a042,19589510,0,0x0,6
tick,0x7d8294d2a042,19590583,0,0x0,6
tick,0x7d8294d2a042,19591637,0,0x0,6
tick,0x7d8294d2a042,19592712,0,0x0,6
tick,0x7d8294d2a042,19593792,0,0x0,6
tick,0x7d8294d2a042,19594872,0,0x0,6
tick,0x7d8294d2a042,19595941,0,0x0,6
tick,0x7d8294d2a042,19597025,0,0x0,6
tick,0x7d8294d2a042,19598092,0,0x0,6
tick,0x7d8294d2a042,19599180,0,0x0,6
tick,0x7d8294d1ba9a,19600251,0,0x0,6
tick,0x7d8294d2a042,19601327,0,0x0,6
tick,0x7d8294d2a042,19602408,0,0x0,6
tick,0x7d8294d2a042,19603461,0,0x0,6
tick,0x7d8294d2a042,19604547,0,0x0,6
tick,0x7d8294d2a042,19605622,0,0x0,6
tick,0x7d8294d2a042,19606702,0,0x0,6
tick,0x7d8294d2a042,19607785,0,0x0,6
tick,0x7d8294d2a042,19608867,0,0x0,6
tick,0x7d8294d2a042,19609936,0,0x0,6
tick,0x7d8294d2a042,19611018,0,0x0,6
tick,0x7d8294d2a042,19612089,0,0x0,6
tick,0x7d8294d2a042,19613168,0,0x0,6
tick,0x7d8294d2a042,19614240,0,0x0,6
tick,0x7d8294d2a042,19615312,0,0x0,6
tick,0x7d8294d2a042,19616459,0,0x0,6
tick,0x7d8294d2a042,19617531,0,0x0,6
tick,0x7d8294d2a042,19618604,0,0x0,6
tick,0x7d8294d2a042,19619659,0,0x0,6
tick,0x7d8294d2a042,19620737,0,0x0,6
tick,0x7d8294d2a042,19621839,0,0x0,6
tick,0x7d8294d2a042,19622925,0,0x0,6
tick,0x7d8294d2a042,19624003,0,0x0,6
tick,0x7d8294d2a042,19625094,0,0x0,6
tick,0x7d8294d2a042,19626191,0,0x0,6
tick,0x7d8294d2a042,19627365,0,0x0,6
tick,0x7d8294d2a042,19628547,0,0x0,6
tick,0x7d8294d2a042,19629628,0,0x0,6
tick,0x7d8294d2a042,19630681,0,0x0,6
tick,0x7d8294d2a042,19631734,0,0x0,6
tick,0x7d8294d2a042,19632839,0,0x0,6
tick,0x7d8294d2a042,19633932,0,0x0,6
tick,0x7d8294d2a042,19635017,0,0x0,6
tick,0x7d8294d2a042,19636095,0,0x0,6
tick,0x7d8294d2a042,19637191,0,0x0,6
tick,0x7d8294d2a042,19638276,0,0x0,6
tick,0x7d8294d2a042,19639357,0,0x0,6
tick,0x7d8294d2a042,19640522,0,0x0,6
tick,0x7d8294d2a042,19641618,0,0x0,6
tick,0x7d8294d2a042,19642619,0,0x0,6
tick,0x7d8294d2a042,19643678,0,0x0,6
tick,0x7d8294d2a042,19644832,0,0x0,6
tick,0x7d8294d2a042,19645809,0,0x0,6
tick,0x7d8294d2a042,19646852,0,0x0,6
tick,0x7d8294d2a042,19647909,0,0x0,6
tick,0x7d8294d2a042,19648962,0,0x0,6
tick,0x7d8294d2a042,19650069,0,0x0,6
tick,0x7d8294d2a042,19651155,0,0x0,6
tick,0x7d8294d2a042,19652192,0,0x0,6
tick,0x7d8294d2a042,19653276,0,0x0,6
tick,0x7d8294d2a042,19654359,0,0x0,6
tick,0x7d8294d2a042,19655399,0,0x0,6
tick,0x7d8294d2a042,19656471,0,0x0,6
tick,0x7d8294d2a042,19657544,0,0x0,6
tick,0x7d8294d2a042,19658619,0,0x0,6
tick,0x7d8294d2a042,19659681,0,0x0,6
tick,0x7d8294d2a042,19660754,0,0x0,6
tick,0x7d8294d2a042,19661808,0,0x0,6
tick,0x7d8294d2a042,19662888,0,0x0,6
tick,0x7d8294d2a042,19663965,0,0x0,6
tick,0x7d8294d2a042,19665109,0,0x0,6
tick,0x7d8294d2a042,19666125,0,0x0,6
tick,0x7d8294d2a042,19667210,0,0x0,6
tick,0x7d8294d2a042,19668362,0,0x0,6
tick,0x7d8294d2a042,19669514,0,0x0,6
tick,0x7d8294d2a042,19670595,0,0x0,6
tick,0x7d8294d2a042,19671649,0,0x0,6
tick,0x7d8294d2a042,19672783,0,0x0,6
tick,0x7d8294d2a042,19673867,0,0x0,6
tick,0x7d8294d2a042,19674951,0,0x0,6
tick,0x7d8294d1ba9a,19676029,0,0x0,6
tick,0x64950bc52f27,19677110,0,0x0,6
tick,0x7d8294d2a042,19678192,0,0x0,6
tick,0x7d8294d2a042,19679278,0,0x0,6
tick,0x7d8294d2a042,19680435,0,0x0,6
tick,0x7d8294d2a042,19681521,0,0x0,6
tick,0x7d8294d2a042,19682603,0,0x0,6
tick,0x7d8294d2a042,19683660,0,0x0,6
tick,0x7d8294d2a042,19684788,0,0x0,6
tick,0x7d8294d2a042,19685941,0,0x0,6
tick,0x7d8294d2a042,19686978,0,0x0,6
tick,0x7d8294d2a042,19688053,0,0x0,6
tick,0x7d8294d2a042,19689183,0,0x0,6
tick,0x7d8294d2a042,19690352,0,0x0,6
tick,0x7d8294d2a042,19691462,0,0x0,6
tick,0x7d8294d2a042,19692686,0,0x0,6
tick,0x7d8294d2a042,19693831,0,0x0,6
tick,0x7d8294d2a042,19694908,0,0x0,6
tick,0x7d8294d2a042,19696100,0,0x0,6
tick,0x7d8294d2a042,19697192,0,0x0,6
tick,0x7d8294d2a042,19698341,0,0x0,6
tick,0x7d8294d2a042,19699472,0,0x0,6
tick,0x7d8294d2a042,19700682,0,0x0,6
tick,0x7d8294d2a042,19701806,0,0x0,6
tick,0x7d8294d2a042,19702850,0,0x0,6
tick,0x7d8294d2a042,19704018,0,0x0,6
tick,0x7d8294d2a042,19705184,0,0x0,6
tick,0x7d8294d2a042,19706296,0,0x0,6
tick,0x7d8294d2a042,19707405,0,0x0,6
tick,0x7d8294d2a042,19708521,0,0x0,6
tick,0x7d8294d2a042,19709656,0,0x0,6
tick,0x7d8294d2a042,19710618,0,0x0,6
tick,0x7d8294d2a042,19711740,0,0x0,6
tick,0x7d8294d2a042,19712947,0,0x0,6
tick,0x7d8294d2a042,19714100,0,0x0,6
tick,0x7d8294d2a042,19715150,0,0x0,6
tick,0x7d8294d2a042,19716277,0,0x0,6
tick,0x7d8294d2a042,19717413,0,0x0,6
tick,0x7d8294d2a042,19718494,0,0x0,6
tick,0x7d8294d2a042,19719598,0,0x0,6
tick,0x7d8294d2a042,19720660,0,0x0,6
tick,0x7d8294d2a042,19721756,0,0x0,6
tick,0x7d8294d2a042,19722837,0,0x0,6
tick,0x7d8294d2a042,19724004,0,0x0,6
tick,0x7d8294d2a042,19725169,0,0x0,6
tick,0x7d8294d2a042,19726287,0,0x0,6
tick,0x7d8294d2a042,19727372,0,0x0,6
tick,0x7d8294d2a042,19728530,0,0x0,6
tick,0x7d8294d2a042,19729625,0,0x0,6
tick,0x7d8294d2a042,19730762,0,0x0,6
tick,0x7d8294d2a042,19731831,0,0x0,6
tick,0x7d8294d2a042,19733019,0,0x0,6
tick,0x7d8294d2a042,19734145,0,0x0,6
tick,0x7d8294d2a042,19735266,0,0x0,6
tick,0x7d8294d2a042,19736410,0,0x0,6
tick,0x7d8294d2a042,19737535,0,0x0,6
tick,0x7d8294d2a042,19738676,0,0x0,6
tick,0x7d8294d2a042,19739629,0,0x0,6
tick,0x7d8294d2a042,19740802,0,0x0,6
tick,0x7d8294d2a042,19741939,0,0x0,6
tick,0x7d8294d2a042,19742993,0,0x0,6
tick,0x7d8294d2a042,19744098,0,0x0,6
tick,0x7d8294d2a042,19745252,0,0x0,6
tick,0x7d8294d2a042,19746387,0,0x0,6
tick,0x7d8294d2a042,19747558,0,0x0,6
tick,0x7d8294d2a042,19748693,0,0x0,6
tick,0x7d8294d2a042,19749863,0,0x0,6
tick,0x7d8294d2a042,19750892,0,0x0,6
tick,0x7d8294d2a042,19752081,0,0x0,6
tick,0x7d8294d2a042,19753227,0,0x0,6
tick,0x7d8294d2a042,19754272,0,0x0,6
tick,0x7d8294d2a042,19755348,0,0x0,6
tick,0x7d8294d2a042,19756519,0,0x0,6
tick,0x7d8294d2a042,19757578,0,0x0,6
tick,0x7d8294d2a042,19758589,0,0x0,6
tick,0x7d8294d2a042,19759668,0,0x0,6
tick,0x7d8294d2a042,19760839,0,0x0,6
tick,0x7d8294d2a042,19761962,0,0x0,6
tick,0x7d8294d2a042,19762944,0,0x0,6
tick,0x7d8294d2a042,19764087,0,0x0,6
tick,0x7d8294d2a042,19765246,0,0x0,6
tick,0x7d8294d2a042,19766246,0,0x0,6
tick,0x7d8294d2a042,19767250,0,0x0,6
tick,0x7d8294d2a042,19768462,0,0x0,6
tick,0x7d8294d2a042,19769533,0,0x0,6
tick,0x7d8294d2a042,19770599,0,0x0,6
tick,0x7d8294d2a042,19771668,0,0x0,6
tick,0x7d8294d2a042,19772842,0,0x0,6
tick,0x7d8294d2a042,19773986,0,0x0,6
tick,0x7d8294d2a042,19775094,0,0x0,6
tick,0x7d8294d2a042,19776179,0,0x0,6
tick,0x7d8294d2a042,19777286,0,0x0,6
tick,0x7d8294d2a042,19778465,0,0x0,6
tick,0x7d8294d2a042,19779548,0,0x0,6
tick,0x7d8294d2a042,19780739,0,0x0,6
tick,0x7d8294d2a042,19781871,0,0x0,6
tick,0x7d8294d2a042,19782978,0,0x0,6
tick,0x7d8294d2a042,19784080,0,0x0,6
tick,0x7d8294d2a042,19785271,0,0x0,6
tick,0x7d8294d2a042,19786390,0,0x0,6
tick,0x7d8294d2a042,19787553,0,0x0,6
tick,0x7d8294d2a042,19788594,0,0x0,6
tick,0x7d8294d2a042,19789659,0,0x0,6
tick,0x7d8294d2a042,19790805,0,0x0,6
tick,0x7d8294d2a042,19791904,0,0x0,6
tick,0x7d8294d2a042,19793052,0,0x0,6
tick,0x7d8294d2a042,19794216,0,0x0,6
tick,0x7d8294d2a042,19795301,0,0x0,6
tick,0x7d8294d2a042,19796449,0,0x0,6
tick,0x7d8294d2a042,19797564,0,0x0,6
tick,0x7d8294d2a042,19798709,0,0x0,6
tick,0x7d8294d2a042,19799638,0,0x0,6
tick,0x7d8294d2a042,19800800,0,0x0,6
tick,0x7d8294d2a042,19801993,0,0x0,6
tick,0x7d8294d2a042,19803103,0,0x0,6
tick,0x7d8294d2a042,19804186,0,0x0,6
tick,0x7d8294d2a042,19805280,0,0x0,6
tick,0x7d8294d2a042,19806419,0,0x0,6
tick,0x7d8294d2a042,19807538,0,0x0,6
tick,0x7d8294d2a042,19808686,0,0x0,6
tick,0x7d8294d2a042,19809849,0,0x0,6
tick,0x7d8294d2a042,19810918,0,0x0,6
tick,0x7d8294d2a042,19812089,0,0x0,6
tick,0x7d8294d2a042,19813257,0,0x0,6
tick,0x7d8294d2a042,19814292,0,0x0,6
tick,0x7d8294d2a042,19815468,0,0x0,6
tick,0x7d8294d2a042,19816514,0,0x0,6
tick,0x7d8294d2a042,19817600,0,0x0,6
tick,0x7d8294d2a042,19818602,0,0x0,6
tick,0x7d8294d2a042,19819632,0,0x0,6
tick,0x7d8294d2a042,19820849,0,0x0,6
tick,0x7d8294d2a042,19821985,0,0x0,6
tick,0x7d8294d2a042,19823117,0,0x0,6
tick,0x7d8294d2a042,19824198,0,0x0,6
tick,0x7d8294d2a042,19825291,0,0x0,6
tick,0x7d8294d2a042,19826411,0,0x0,6
tick,0x7d8294d2a042,19827613,0,0x0,6
tick,0x7d8294d2a042,19828766,0,0x0,6
tick,0x7d8294d2a042,19829921,0,0x0,6
tick,0x7d8294d2a042,19830966,0,0x0,6
tick,0x7d8294d2a042,19832033,0,0x0,6
tick,0x7d8294d2a042,19833033,0,0x0,6
tick,0x7d8294d2a042,19834194,0,0x0,6
tick,0x7d8294d2a042,19835349,0,0x0,6
tick,0x7d8294d2a042,19836445,0,0x0,6
tick,0x7d8294d2a042,19837580,0,0x0,6
tick,0x7d8294d2a042,19838662,0,0x0,6
tick,0x7d8294d2a042,19839821,0,0x0,6
tick,0x7d8294d2a042,19840969,0,0x0,6
tick,0x7d8294d2a042,19842095,0,0x0,6
tick,0x7d8294d2a042,19843169,0,0x0,6
tick,0x7d8294d2a042,19844312,0,0x0,6
tick,0x7d8294d2a042,19845390,0,0x0,6
tick,0x7d8294d2a042,19846534,0,0x0,6
tick,0x7d8294d2a042,19847587,0,0x0,6
tick,0x7d8294d2a042,19848764,0,0x0,6
tick,0x7d8294d2a042,19849945,0,0x0,6
tick,0x7d8294d2a042,19850987,0,0x0,6
tick,0x7d8294d2a042,19852058,0,0x0,6
tick,0x7d8294d2a042,19853186,0,0x0,6
tick,0x7d8294d2a042,19854289,0,0x0,6
tick,0x7d8294d2a042,19855461,0,0x0,6
tick,0x7d8294d2a042,19856714,0,0x0,6
tick,0x7d8294d2a042,19857894,0,0x0,6
tick,0x7d8294d2a042,19859063,0,0x0,6
tick,0x7d8294d2a042,19860165,0,0x0,6
tick,0x7d8294d2a042,19861248,0,0x0,6
tick,0x7d8294d2a042,19862233,0,0x0,6
tick,0x7d8294d2a042,19863312,0,0x0,6
tick,0x7d8294d2a042,19864350,0,0x0,6
tick,0x7d8294d2a042,19865452,0,0x0,6
tick,0x7d8294d2a042,19866543,0,0x0,6
tick,0x7d8294d2a042,19867609,0,0x0,6
tick,0x7d8294d2a042,19868771,0,0x0,6
tick,0x7d8294d2a042,19869819,0,0x0,6
tick,0x7d8294d2a042,19870928,0,0x0,6
tick,0x7d8294d2a042,19872040,0,0x0,6
tick,0x7d8294d2a042,19873294,0,0x0,6
tick,0x7d8294d2a042,19874520,0,0x0,6
tick,0x7d8294d2a042,19875667,0,0x0,6
tick,0x7d8294d2a042,19876949,0,0x0,6
tick,0x7d8294d2a042,19878136,0,0x0,6
tick,0x7d8294d2a042,19879108,0,0x0,6
tick,0x7d8294d2a042,19880138,0,0x0,6
tick,0x7d8294d2a042,19881282,0,0x0,6
tick,0x7d8294d2a042,19882258,0,0x0,6
tick,0x7d8294d2a042,19883307,0,0x0,6
tick,0x7d8294d2a042,19884415,0,0x0,6
tick,0x7d8294d2a042,19885428,0,0x0,6
tick,0x7d8294d2a042,19886475,0,0x0,6
tick,0x7d8294d2a042,19887528,0,0x0,6
tick,0x7d8294d2a042,19888608,0,0x0,6
tick,0x7d8294d2a042,19889658,0,0x0,6
tick,0x7d8294d2a042,19890738,0,0x0,6
tick,0x7d8294d2a042,19891811,0,0x0,6
tick,0x7d8294d2a042,19892883,0,0x0,6
tick,0x7d8294d2a042,19893965,0,0x0,6
tick,0x7d8294d2a042,19895020,0,0x0,6
tick,0x7d8294d2a042,19896103,0,0x0,6
tick,0x7d8294d2a042,19897183,0,0x0,6
tick,0x7d8294d2a042,19898255,0,0x0,6
tick,0x7d8294d2a042,19899330,0,0x0,6
tick,0x7d8294d2a042,19900404,0,0x0,6
tick,0x7d8294d2a042,19901487,0,0x0,6
tick,0x7d8294d2a042,19902559,0,0x0,6
tick,0x7d8294d2a042,19903609,0,0x0,6
tick,0x7d8294d2a042,19904687,0,0x0,6
tick,0x7d8294d2a042,19905760,0,0x0,6
tick,0x7d8294d2a042,19906837,0,0x0,6
tick,0x7d8294d2a042,19907908,0,0x0,6
tick,0x7d8294d2a042,19908983,0,0x0,6
tick,0x7d8294d2a042,19910051,0,0x0,6
tick,0x7d8294d2a042,19911136,0,0x0,6
tick,0x7d8294d2a042,19912217,0,0x0,6
tick,0x7d8294d1ba9a,19913287,0,0x0,6
tick,0x7d8294d1ba9a,19914361,0,0x0,6
tick,0x7d8294d2a042,19915409,0,0x0,6
tick,0x7d8294d2a042,19916494,0,0x0,6
tick,0x7d8294d2a042,19917570,0,0x0,6
tick,0x7d8294d2a042,19918653,0,0x0,6
tick,0x7d8294d2a042,19919737,0,0x0,6
tick,0x7d8294d2a042,19920810,0,0x0,6
tick,0x7d8294d2a042,19921886,0,0x0,6
tick,0x7d8294d2a042,19922964,0,0x0,6
tick,0x7d8294d2a042,19924043,0,0x0,6
tick,0x7d8294d2a042,19925118,0,0x0,6
tick,0x7d8294d2a042,19926203,0,0x0,6
tick,0x64950d92782e,19927286,0,0x0,0,0x64956d859221,0x64950d873576
tick,0x64950d907fec,19928358,0,0x0,0,0x64956d841515,0x64956d841662,0x64950d950828,0x64956d8417fb,0x64956d8422b7,0x64956d841a25,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,19929534,0,0x0,6
tick,0x7d8294d2a042,19930530,0,0x0,6
tick,0x7d8294d2a042,19931604,0,0x0,6
tick,0x7d8294d2a042,19932811,0,0x0,6
tick,0x7d8294d2a042,19933868,0,0x0,6
tick,0x7d8294d2a042,19934937,0,0x0,6
tick,0x7d8294d2a042,19936085,0,0x0,6
tick,0x7d8294d2a042,19937250,0,0x0,6
tick,0x7d8294d2a042,19938319,0,0x0,6
tick,0x7d8294d2a042,19939404,0,0x0,6
tick,0x7d8294d2a042,19940608,0,0x0,6
tick,0x7d8294d2a042,19941758,0,0x0,6
tick,0x7d8294d2a042,19942832,0,0x0,6
tick,0x7d8294d2a042,19943964,0,0x0,6
tick,0x7d8294d2a042,19945116,0,0x0,6
tick,0x7d8294d2a042,19946252,0,0x0,6
tick,0x7d8294d2a042,19947325,0,0x0,6
tick,0x7d8294d2a042,19948552,0,0x0,6
tick,0x7d8294d2a042,19949691,0,0x0,6
tick,0x7d8294d2a042,19950761,0,0x0,6
tick,0x7d8294d2a042,19951898,0,0x0,6
tick,0x7d8294d2a042,19953052,0,0x0,6
tick,0x7d8294d2a042,19954192,0,0x0,6
tick,0x7d8294d2a042,19955268,0,0x0,6
tick,0x7d8294d2a042,19956405,0,0x0,6
tick,0x7d8294d2a042,19957570,0,0x0,6
tick,0x7d8294d2a042,19958647,0,0x0,6
tick,0x7d8294d2a042,19959788,0,0x0,6
tick,0x7d8294d2a042,19960925,0,0x0,6
tick,0x7d8294d2a042,19962062,0,0x0,6
tick,0x7d8294d2a042,19963134,0,0x0,6
tick,0x7d8294d2a042,19964272,0,0x0,6
tick,0x7d8294d2a042,19965417,0,0x0,6
tick,0x7d8294d2a042,19966494,0,0x0,6
tick,0x7d8294d2a042,19967559,0,0x0,6
tick,0x7d8294d2a042,19968774,0,0x0,6
tick,0x7d8294d2a042,19969923,0,0x0,6
tick,0x7d8294d2a042,19971065,0,0x0,6
tick,0x7d8294d2a042,19972146,0,0x0,6
tick,0x7d8294d2a042,19973310,0,0x0,6
tick,0x7d8294d2a042,19974378,0,0x0,6
tick,0x7d8294d2a042,19975480,0,0x0,6
tick,0x7d8294d2a042,19976666,0,0x0,6
tick,0x7d8294d2a042,19977810,0,0x0,6
tick,0x7d8294d2a042,19978883,0,0x0,6
tick,0x7d8294d2a042,19979953,0,0x0,6
tick,0x7d8294d2a042,19981035,0,0x0,6
tick,0x7d8294d2a042,19982179,0,0x0,6
tick,0x7d8294d2a042,19983333,0,0x0,6
tick,0x7d8294d2a042,19984410,0,0x0,6
tick,0x7d8294d2a042,19985484,0,0x0,6
tick,0x7d8294d2a042,19986552,0,0x0,6
tick,0x7d8294d2a042,19987516,0,0x0,6
tick,0x7d8294d2a042,19988685,0,0x0,6
tick,0x7d8294d2a042,19989762,0,0x0,6
tick,0x7d8294d2a042,19990901,0,0x0,6
tick,0x7d8294d2a042,19991965,0,0x0,6
tick,0x7d8294d2a042,19993113,0,0x0,6
tick,0x7d8294d2a042,19994207,0,0x0,6
tick,0x7d8294d2a042,19995337,0,0x0,6
tick,0x7d8294d2a042,19996339,0,0x0,6
tick,0x7d8294d2a042,19997490,0,0x0,6
tick,0x7d8294d2a042,19998578,0,0x0,6
tick,0x7d8294d2a042,19999571,0,0x0,6
tick,0x7d8294d2a042,20000768,0,0x0,6
tick,0x7d8294d2a042,20001907,0,0x0,6
tick,0x7d8294d2a042,20003065,0,0x0,6
tick,0x7d8294d2a042,20004059,0,0x0,6
tick,0x7d8294d2a042,20005140,0,0x0,6
tick,0x7d8294d2a042,20006215,0,0x0,6
tick,0x7d8294d2a042,20007372,0,0x0,6
tick,0x7d8294d2a042,20008436,0,0x0,6
tick,0x7d8294d2a042,20009512,0,0x0,6
tick,0x7d8294d2a042,20010604,0,0x0,6
tick,0x7d8294d2a042,20011597,0,0x0,6
tick,0x7d8294d2a042,20012806,0,0x0,6
tick,0x7d8294d2a042,20013952,0,0x0,6
tick,0x7d8294d2a042,20015008,0,0x0,6
tick,0x7d8294d2a042,20016108,0,0x0,6
tick,0x7d8294d2a042,20017175,0,0x0,6
tick,0x7d8294d2a042,20018315,0,0x0,6
tick,0x7d8294d2a042,20019464,0,0x0,6
tick,0x7d8294d2a042,20020607,0,0x0,6
tick,0x7d8294d2a042,20021683,0,0x0,6
tick,0x7d8294d2a042,20022754,0,0x0,6
tick,0x7d8294d2a042,20023897,0,0x0,6
tick,0x7d8294d2a042,20025060,0,0x0,6
tick,0x7d8294d2a042,20026210,0,0x0,6
tick,0x7d8294d2a042,20027341,0,0x0,6
tick,0x7d8294d2a042,20028422,0,0x0,6
tick,0x7d8294d2a042,20029571,0,0x0,6
tick,0x7d8294d2a042,20030638,0,0x0,6
tick,0x7d8294d2a042,20031771,0,0x0,6
tick,0x7d8294d2a042,20032913,0,0x0,6
tick,0x7d8294d2a042,20034054,0,0x0,6
tick,0x7d8294d2a042,20035197,0,0x0,6
tick,0x7d8294d2a042,20036265,0,0x0,6
tick,0x7d8294d2a042,20037352,0,0x0,6
tick,0x7d8294d2a042,20038419,0,0x0,6
tick,0x7d8294d2a042,20039537,0,0x0,6
tick,0x7d8294d2a042,20040739,0,0x0,6
tick,0x7d8294d2a042,20041818,0,0x0,6
tick,0x7d8294d2a042,20042888,0,0x0,6
tick,0x7d8294d2a042,20044031,0,0x0,6
tick,0x7d8294d2a042,20045187,0,0x0,6
tick,0x7d8294d2a042,20046323,0,0x0,6
tick,0x7d8294d2a042,20047474,0,0x0,6
tick,0x7d8294d2a042,20048634,0,0x0,6
tick,0x7d8294d2a042,20049783,0,0x0,6
tick,0x7d8294d2a042,20050912,0,0x0,6
tick,0x7d8294d2a042,20051977,0,0x0,6
tick,0x7d8294d2a042,20053146,0,0x0,6
tick,0x7d8294d2a042,20054235,0,0x0,6
tick,0x7d8294d2a042,20055433,0,0x0,6
tick,0x7d8294d2a042,20056380,0,0x0,6
tick,0x7d8294d2a042,20057457,0,0x0,6
tick,0x7d8294d2a042,20058629,0,0x0,6
tick,0x7d8294d2a042,20059623,0,0x0,6
tick,0x7d8294d2a042,20060826,0,0x0,6
tick,0x7d8294d2a042,20061888,0,0x0,6
tick,0x7d8294d2a042,20063057,0,0x0,6
tick,0x7d8294d2a042,20064112,0,0x0,6
tick,0x7d8294d2a042,20065197,0,0x0,6
tick,0x7d8294d2a042,20066338,0,0x0,6
tick,0x7d8294d2a042,20067483,0,0x0,6
tick,0x7d8294d2a042,20068398,0,0x0,6
tick,0x7d8294d2a042,20069477,0,0x0,6
tick,0x7d8294d2a042,20070581,0,0x0,6
tick,0x7d8294d2a042,20071659,0,0x0,6
tick,0x7d8294d2a042,20072858,0,0x0,6
tick,0x7d8294d2a042,20073931,0,0x0,6
tick,0x7d8294d2a042,20075086,0,0x0,6
tick,0x7d8294d2a042,20076146,0,0x0,6
tick,0x7d8294d2a042,20077233,0,0x0,6
tick,0x7d8294d2a042,20078369,0,0x0,6
tick,0x7d8294d2a042,20079484,0,0x0,6
tick,0x7d8294d2a042,20080658,0,0x0,6
tick,0x7d8294d2a042,20081801,0,0x0,6
tick,0x7d8294d2a042,20082876,0,0x0,6
tick,0x7d8294d2a042,20083945,0,0x0,6
tick,0x7d8294d2a042,20085100,0,0x0,6
tick,0x7d8294d2a042,20086163,0,0x0,6
tick,0x7d8294d2a042,20087304,0,0x0,6
tick,0x7d8294d2a042,20088357,0,0x0,6
tick,0x7d8294d2a042,20089494,0,0x0,6
tick,0x7d8294d2a042,20090540,0,0x0,6
tick,0x7d8294d2a042,20091603,0,0x0,6
tick,0x7d8294d2a042,20092873,0,0x0,6
tick,0x7d8294d2a042,20093890,0,0x0,6
tick,0x7d8294d2a042,20095042,0,0x0,6
tick,0x7d8294d2a042,20096088,0,0x0,6
tick,0x7d8294d2a042,20097220,0,0x0,6
tick,0x7d8294d2a042,20098272,0,0x0,6
tick,0x7d8294d2a042,20099253,0,0x0,6
tick,0x7d8294d2a042,20100286,0,0x0,6
tick,0x7d8294d2a042,20101378,0,0x0,6
tick,0x7d8294d2a042,20102471,0,0x0,6
tick,0x7d8294d2a042,20103502,0,0x0,6
tick,0x7d8294d2a042,20104608,0,0x0,6
tick,0x7d8294d2a042,20105640,0,0x0,6
tick,0x7d8294d2a042,20106696,0,0x0,6
tick,0x7d8294d2a042,20107803,0,0x0,6
tick,0x7d8294d2a042,20108881,0,0x0,6
tick,0x7d8294d2a042,20109952,0,0x0,6
tick,0x7d8294d2a042,20111027,0,0x0,6
tick,0x7d8294d2a042,20112102,0,0x0,6
tick,0x7d8294d2a042,20113179,0,0x0,6
tick,0x7d8294d2a042,20114261,0,0x0,6
tick,0x7d8294d2a042,20115330,0,0x0,6
tick,0x7d8294d2a042,20116483,0,0x0,6
tick,0x7d8294d2a042,20117549,0,0x0,6
tick,0x7d8294d2a042,20118563,0,0x0,6
tick,0x7d8294d2a042,20119637,0,0x0,6
tick,0x7d8294d2a042,20120772,0,0x0,6
tick,0x7d8294d2a042,20121877,0,0x0,6
tick,0x7d8294d2a042,20122856,0,0x0,6
tick,0x7d8294d2a042,20124035,0,0x0,6
tick,0x7d8294d2a042,20125179,0,0x0,6
tick,0x7d8294d2a042,20126215,0,0x0,6
tick,0x7d8294d2a042,20127292,0,0x0,6
tick,0x7d8294d2a042,20128378,0,0x0,6
tick,0x7d8294d2a042,20129533,0,0x0,6
tick,0x7d8294d2a042,20130608,0,0x0,6
tick,0x7d8294d1ba9a,20131814,0,0x0,6
tick,0x7d8294d2a042,20132820,0,0x0,6
tick,0x7d8294d2a042,20133967,0,0x0,6
tick,0x7d8294d2a042,20135127,0,0x0,6
tick,0x7d8294d2a042,20136226,0,0x0,6
tick,0x7d8294d2a042,20137362,0,0x0,6
tick,0x7d8294d2a042,20138544,0,0x0,6
tick,0x7d8294d2a042,20139608,0,0x0,6
tick,0x7d8294d2a042,20140795,0,0x0,6
tick,0x7d8294d2a042,20141931,0,0x0,6
tick,0x7d8294d2a042,20143057,0,0x0,6
tick,0x7d8294d2a042,20144136,0,0x0,6
tick,0x7d8294d0f727,20145539,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,20146408,0,0x0,6
tick,0x7d8294d2a042,20147595,0,0x0,6
tick,0x7d8294d2a042,20148767,0,0x0,6
tick,0x7d8294d2a042,20149908,0,0x0,6
tick,0x7d8294d2a042,20150985,0,0x0,6
tick,0x7d8294d2a042,20152160,0,0x0,6
tick,0x7d8294d2a042,20153313,0,0x0,6
tick,0x7d8294d2a042,20154427,0,0x0,6
tick,0x7d8294d2a042,20155590,0,0x0,6
tick,0x7d8294d2a042,20156799,0,0x0,6
tick,0x7d8294d2a042,20157915,0,0x0,6
tick,0x7d8294d2a042,20158954,0,0x0,6
tick,0x7d8294d2a042,20160126,0,0x0,6
tick,0x7d8294d2a042,20161287,0,0x0,6
tick,0x7d8294d2a042,20162400,0,0x0,6
tick,0x7d8294d2a042,20163561,0,0x0,6
tick,0x7d8294d2a042,20164719,0,0x0,6
tick,0x7d8294d2a042,20165869,0,0x0,6
tick,0x7d8294d2a042,20166845,0,0x0,6
tick,0x7d8294d2a042,20168038,0,0x0,6
tick,0x7d8294d2a042,20169176,0,0x0,6
tick,0x7d8294d2a042,20170341,0,0x0,6
tick,0x7d8294d2a042,20171441,0,0x0,6
tick,0x7d8294d2a042,20172498,0,0x0,6
tick,0x7d8294d2a042,20173614,0,0x0,6
tick,0x7d8294d2a042,20174654,0,0x0,6
tick,0x7d8294d2a042,20175737,0,0x0,6
tick,0x7d8294d2a042,20176764,0,0x0,6
tick,0x7d8294d2a042,20177856,0,0x0,6
tick,0x7d8294d2a042,20178966,0,0x0,6
tick,0x7d8294d2a042,20180108,0,0x0,6
tick,0x7d8294d2a042,20181214,0,0x0,6
tick,0x7d8294d2a042,20182375,0,0x0,6
tick,0x7d8294d2a042,20183526,0,0x0,6
tick,0x7d8294d2a042,20184670,0,0x0,6
tick,0x7d8294d2a042,20185853,0,0x0,6
tick,0x7d8294d2a042,20186896,0,0x0,6
tick,0x7d8294d2a042,20187970,0,0x0,6
tick,0x7d8294d2a042,20189059,0,0x0,6
tick,0x7d8294d2a042,20190227,0,0x0,6
tick,0x7d8294d2a042,20191333,0,0x0,6
tick,0x7d8294d2a042,20192475,0,0x0,6
tick,0x7d8294d2a042,20193544,0,0x0,6
tick,0x7d8294d2a042,20194671,0,0x0,6
tick,0x7d8294d2a042,20195624,0,0x0,6
tick,0x7d8294d2a042,20196883,0,0x0,6
tick,0x7d8294d2a042,20198022,0,0x0,6
tick,0x7d8294d2a042,20199069,0,0x0,6
tick,0x7d8294d2a042,20200138,0,0x0,6
tick,0x7d8294d2a042,20201281,0,0x0,6
tick,0x7d8294d2a042,20202460,0,0x0,6
tick,0x7d8294d2a042,20203561,0,0x0,6
tick,0x7d8294d2a042,20204748,0,0x0,6
tick,0x7d8294d2a042,20205801,0,0x0,6
tick,0x7d8294d2a042,20206883,0,0x0,6
tick,0x7d8294d2a042,20207961,0,0x0,6
tick,0x7d8294d2a042,20209126,0,0x0,6
tick,0x7d8294d2a042,20210250,0,0x0,6
tick,0x7d8294d2a042,20211463,0,0x0,6
tick,0x7d8294d2a042,20212549,0,0x0,6
tick,0x7d8294d2a042,20213620,0,0x0,6
tick,0x7d8294d2a042,20214735,0,0x0,6
tick,0x7d8294d2a042,20215661,0,0x0,6
tick,0x7d8294d2a042,20216875,0,0x0,6
tick,0x7d8294d2a042,20218012,0,0x0,6
tick,0x7d8294d2a042,20219150,0,0x0,6
tick,0x7d8294d2a042,20220212,0,0x0,6
tick,0x7d8294d2a042,20221337,0,0x0,6
tick,0x7d8294d2a042,20222469,0,0x0,6
tick,0x7d8294d2a042,20223600,0,0x0,6
tick,0x7d8294d2a042,20224784,0,0x0,6
tick,0x7d8294d2a042,20225915,0,0x0,6
tick,0x7d8294d2a042,20227062,0,0x0,6
tick,0x7d8294d2a042,20228139,0,0x0,6
tick,0x7d8294d2a042,20229301,0,0x0,6
tick,0x7d8294d2a042,20230446,0,0x0,6
tick,0x7d8294d2a042,20231605,0,0x0,6
tick,0x7d8294d2a042,20232789,0,0x0,6
tick,0x7d8294d2a042,20233928,0,0x0,6
tick,0x7d8294d2a042,20235058,0,0x0,6
tick,0x7d8294d2a042,20236169,0,0x0,6
tick,0x7d8294d2a042,20237301,0,0x0,6
tick,0x7d8294d2a042,20238439,0,0x0,6
tick,0x7d8294d2a042,20239549,0,0x0,6
tick,0x7d8294d2a042,20240748,0,0x0,6
tick,0x7d8294d2a042,20241849,0,0x0,6
tick,0x7d8294d2a042,20243011,0,0x0,6
tick,0x7d8294d2a042,20244110,0,0x0,6
tick,0x7d8294d2a042,20245277,0,0x0,6
tick,0x7d8294d2a042,20246406,0,0x0,6
tick,0x7d8294d2a042,20247548,0,0x0,6
tick,0x7d8294d2a042,20248737,0,0x0,6
tick,0x7d8294d2a042,20249887,0,0x0,6
tick,0x7d8294d2a042,20250996,0,0x0,6
tick,0x7d8294d2a042,20252087,0,0x0,6
tick,0x7d8294d2a042,20253229,0,0x0,6
tick,0x7d8294d2a042,20254394,0,0x0,6
tick,0x7d8294d2a042,20255540,0,0x0,6
tick,0x7d8294d2a042,20256666,0,0x0,6
tick,0x7d8294d2a042,20257828,0,0x0,6
tick,0x7d8294d2a042,20258930,0,0x0,6
tick,0x7d8294d2a042,20260026,0,0x0,6
tick,0x7d8294d2a042,20261173,0,0x0,6
tick,0x7d8294d2a042,20262311,0,0x0,6
tick,0x7d8294d2a042,20263473,0,0x0,6
tick,0x7d8294d2a042,20264568,0,0x0,6
tick,0x7d8294d2a042,20265648,0,0x0,6
tick,0x7d8294d2a042,20266711,0,0x0,6
tick,0x7d8294d2a042,20267776,0,0x0,6
tick,0x7d8294d2a042,20268939,0,0x0,6
tick,0x7d8294d2a042,20270107,0,0x0,6
tick,0x7d8294d2a042,20271220,0,0x0,6
tick,0x7d8294d2a042,20272310,0,0x0,6
tick,0x7d8294d2a042,20273418,0,0x0,6
tick,0x7d8294d2a042,20274571,0,0x0,6
tick,0x7d8294d2a042,20275612,0,0x0,6
tick,0x7d8294d2a042,20276751,0,0x0,6
tick,0x7d8294d2a042,20277885,0,0x0,6
tick,0x7d8294d2a042,20278926,0,0x0,6
tick,0x7d8294d2a042,20279994,0,0x0,6
tick,0x7d8294d2a042,20281073,0,0x0,6
tick,0x7d8294d2a042,20282342,0,0x0,6
tick,0x7d8294d2a042,20283453,0,0x0,6
tick,0x7d8294d2a042,20284535,0,0x0,6
tick,0x7d8294d2a042,20285638,0,0x0,6
tick,0x7d8294d2a042,20286764,0,0x0,6
tick,0x7d8294d2a042,20287750,0,0x0,6
tick,0x7d8294d2a042,20288891,0,0x0,6
tick,0x7d8294d2a042,20290122,0,0x0,6
tick,0x7d8294d2a042,20291239,0,0x0,6
tick,0x7d8294d2a042,20292381,0,0x0,6
tick,0x7d8294d2a042,20293515,0,0x0,6
tick,0x7d8294d2a042,20294679,0,0x0,6
tick,0x7d8294d2a042,20295680,0,0x0,6
tick,0x7d8294d2a042,20296819,0,0x0,6
tick,0x7d8294d2a042,20297971,0,0x0,6
tick,0x7d8294d2a042,20299089,0,0x0,6
tick,0x7d8294d2a042,20300152,0,0x0,6
tick,0x7d8294d2a042,20301276,0,0x0,6
tick,0x7d8294d2a042,20302404,0,0x0,6
tick,0x7d8294d2a042,20303569,0,0x0,6
tick,0x7d8294d2a042,20304734,0,0x0,6
tick,0x7d8294d2a042,20305836,0,0x0,6
tick,0x7d8294d2a042,20306911,0,0x0,6
tick,0x7d8294d2a042,20308093,0,0x0,6
tick,0x7d8294d2a042,20309273,0,0x0,6
tick,0x7d8294d2a042,20310424,0,0x0,6
tick,0x7d8294d2a042,20311581,0,0x0,6
tick,0x7d8294d2a042,20312833,0,0x0,6
tick,0x7d8294d2a042,20313966,0,0x0,6
tick,0x7d8294d2a042,20315110,0,0x0,6
tick,0x7d8294d2a042,20316129,0,0x0,6
tick,0x7d8294d2a042,20317263,0,0x0,6
tick,0x7d8294d2a042,20318225,0,0x0,6
tick,0x7d8294d2a042,20319332,0,0x0,6
tick,0x7d8294d2a042,20320409,0,0x0,6
tick,0x7d8294d2a042,20321590,0,0x0,6
tick,0x7d8294d2a042,20322591,0,0x0,6
tick,0x7d8294d2a042,20323648,0,0x0,6
tick,0x7d8294d2a042,20324816,0,0x0,6
tick,0x7d8294d2a042,20325806,0,0x0,6
tick,0x7d8294d2a042,20326889,0,0x0,6
tick,0x7d8294d2a042,20328026,0,0x0,6
tick,0x7d8294d2a042,20329149,0,0x0,6
tick,0x7d8294d2a042,20330143,0,0x0,6
tick,0x7d8294d2a042,20331217,0,0x0,6
tick,0x7d8294d2a042,20332383,0,0x0,6
tick,0x7d8294d2a042,20333458,0,0x0,6
tick,0x7d8294d2a042,20334472,0,0x0,6
tick,0x7d8294d2a042,20335562,0,0x0,6
tick,0x7d8294d2a042,20336673,0,0x0,6
tick,0x7d8294d2a042,20337778,0,0x0,6
tick,0x7d8294d2a042,20338819,0,0x0,6
tick,0x7d8294d2a042,20339881,0,0x0,6
tick,0x7d8294d2a042,20340893,0,0x0,6
tick,0x7d8294d2a042,20342001,0,0x0,6
tick,0x7d8294d2a042,20343076,0,0x0,6
tick,0x7d8294d2a042,20344161,0,0x0,6
tick,0x7d8294d2a042,20345171,0,0x0,6
tick,0x7d8294d2a042,20346206,0,0x0,6
tick,0x7d8294d2a042,20347283,0,0x0,6
tick,0x7d8294d2a042,20348428,0,0x0,6
tick,0x7d8294d2a042,20349515,0,0x0,6
tick,0x7d8294d2a042,20350503,0,0x0,6
tick,0x7d8294d2a042,20351575,0,0x0,6
tick,0x7d8294d2a042,20352723,0,0x0,6
tick,0x7d8294d2a042,20353795,0,0x0,6
tick,0x7d8294d2a042,20354797,0,0x0,6
tick,0x7d8294d2a042,20355957,0,0x0,6
tick,0x7d8294d2a042,20357105,0,0x0,6
tick,0x7d8294d2a042,20358040,0,0x0,6
tick,0x7d8294d2a042,20359133,0,0x0,6
tick,0x7d8294d2a042,20360300,0,0x0,6
tick,0x7d8294d2a042,20361457,0,0x0,6
tick,0x7d8294d2a042,20362439,0,0x0,6
tick,0x7d8294d2a042,20363508,0,0x0,6
tick,0x7d8294d2a042,20364578,0,0x0,6
tick,0x7d8294d2a042,20365695,0,0x0,6
tick,0x7d8294d2a042,20366811,0,0x0,6
tick,0x7d8294d1ba9a,20367886,0,0x0,6
tick,0x7d8294d2a042,20368966,0,0x0,6
tick,0x7d8294d2a042,20370047,0,0x0,6
tick,0x7d8294d2a042,20371128,0,0x0,6
tick,0x7d8294d2a042,20372212,0,0x0,6
tick,0x7d8294d2a042,20373320,0,0x0,6
tick,0x7d8294d2a042,20374483,0,0x0,6
tick,0x7d8294d2a042,20375556,0,0x0,6
tick,0x7d8294d2a042,20376730,0,0x0,6
tick,0x7d8294d2a042,20377891,0,0x0,6
tick,0x7d8294d2a042,20379015,0,0x0,6
tick,0x7d8294d2a042,20380090,0,0x0,6
tick,0x7d8294d2a042,20381226,0,0x0,6
tick,0x7d8294d1b1e5,20382293,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,20383410,0,0x0,6
tick,0x7d8294d2a042,20384606,0,0x0,6
tick,0x7d8294d2a042,20385767,0,0x0,6
tick,0x7d8294d2a042,20386756,0,0x0,6
tick,0x7d8294d2a042,20387882,0,0x0,6
tick,0x7d8294d2a042,20389031,0,0x0,6
tick,0x7d8294d2a042,20390113,0,0x0,6
tick,0x7d8294d2a042,20391181,0,0x0,6
tick,0x7d8294d2a042,20392340,0,0x0,6
tick,0x7d8294d2a042,20393515,0,0x0,6
tick,0x7d8294d2a042,20394562,0,0x0,6
tick,0x7d8294d2a042,20395642,0,0x0,6
tick,0x7d8294d2a042,20396849,0,0x0,6
tick,0x7d8294d2a042,20397959,0,0x0,6
tick,0x7d8294d2a042,20399042,0,0x0,6
tick,0x7d8294d2a042,20400188,0,0x0,6
tick,0x7d8294d2a042,20401337,0,0x0,6
tick,0x7d8294d2a042,20402479,0,0x0,6
tick,0x7d8294d2a042,20403505,0,0x0,6
tick,0x7d8294d2a042,20404658,0,0x0,6
tick,0x7d8294d2a042,20405810,0,0x0,6
tick,0x7d8294d2a042,20406983,0,0x0,6
tick,0x7d8294d2a042,20408025,0,0x0,6
tick,0x7d8294d2a042,20409185,0,0x0,6
tick,0x7d8294d2a042,20410251,0,0x0,6
tick,0x7d8294d2a042,20411464,0,0x0,6
tick,0x7d8294d2a042,20412476,0,0x0,6
tick,0x7d8294d2a042,20413563,0,0x0,6
tick,0x7d8294d2a042,20414629,0,0x0,6
tick,0x7d8294d2a042,20415641,0,0x0,6
tick,0x7d8294d2a042,20416856,0,0x0,6
tick,0x7d8294d2a042,20417993,0,0x0,6
tick,0x7d8294d2a042,20419125,0,0x0,6
tick,0x7d8294d2a042,20420189,0,0x0,6
tick,0x7d8294d2a042,20421276,0,0x0,6
tick,0x7d8294d2a042,20422417,0,0x0,6
tick,0x7d8294d2a042,20423491,0,0x0,6
tick,0x7d8294d2a042,20424650,0,0x0,6
tick,0x7d8294d2a042,20425723,0,0x0,6
tick,0x7d8294d2a042,20426859,0,0x0,6
tick,0x7d8294d2a042,20427924,0,0x0,6
tick,0x7d8294d2a042,20429071,0,0x0,6
tick,0x7d8294d2a042,20430226,0,0x0,6
tick,0x7d8294d2a042,20431445,0,0x0,6
tick,0x7d8294d2a042,20432446,0,0x0,6
tick,0x7d8294d2a042,20433520,0,0x0,6
tick,0x7d8294d2a042,20434616,0,0x0,6
tick,0x7d8294d2a042,20435605,0,0x0,6
tick,0x7d8294d2a042,20436817,0,0x0,6
tick,0x7d8294d2a042,20437954,0,0x0,6
tick,0x7d8294d2a042,20439096,0,0x0,6
tick,0x7d8294d2a042,20440177,0,0x0,6
tick,0x7d8294d2a042,20441245,0,0x0,6
tick,0x7d8294d2a042,20442380,0,0x0,6
tick,0x7d8294d2a042,20443455,0,0x0,6
tick,0x7d8294d2a042,20444524,0,0x0,6
tick,0x7d8294d2a042,20445681,0,0x0,6
tick,0x7d8294d2a042,20446821,0,0x0,6
tick,0x7d8294d2a042,20447885,0,0x0,6
tick,0x7d8294d2a042,20449027,0,0x0,6
tick,0x7d8294d2a042,20450167,0,0x0,6
tick,0x7d8294d2a042,20451325,0,0x0,6
tick,0x7d8294d2a042,20452389,0,0x0,6
tick,0x7d8294d2a042,20453482,0,0x0,6
tick,0x7d8294d2a042,20454542,0,0x0,6
tick,0x7d8294d2a042,20455562,0,0x0,6
tick,0x7d8294d2a042,20456750,0,0x0,6
tick,0x7d8294d2a042,20457818,0,0x0,6
tick,0x7d8294d2a042,20458967,0,0x0,6
tick,0x7d8294d2a042,20460037,0,0x0,6
tick,0x7d8294d2a042,20461122,0,0x0,6
tick,0x7d8294d2a042,20462260,0,0x0,6
tick,0x7d8294d2a042,20463456,0,0x0,6
tick,0x7d8294d2a042,20464483,0,0x0,6
tick,0x7d8294d2a042,20465557,0,0x0,6
tick,0x7d8294d2a042,20466629,0,0x0,6
tick,0x7d8294d2a042,20467624,0,0x0,6
tick,0x7d8294d2a042,20468833,0,0x0,6
tick,0x7d8294d2a042,20469989,0,0x0,6
tick,0x7d8294d2a042,20471134,0,0x0,6
tick,0x7d8294d2a042,20472185,0,0x0,6
tick,0x7d8294d2a042,20473274,0,0x0,6
tick,0x7d8294d2a042,20474343,0,0x0,6
tick,0x7d8294d2a042,20475509,0,0x0,6
tick,0x7d8294d2a042,20476631,0,0x0,6
tick,0x7d8294d2a042,20477799,0,0x0,6
tick,0x7d8294d2a042,20478940,0,0x0,6
tick,0x7d8294d2a042,20479998,0,0x0,6
tick,0x7d8294d2a042,20481159,0,0x0,6
tick,0x7d8294d2a042,20482230,0,0x0,6
tick,0x7d8294d2a042,20483466,0,0x0,6
tick,0x7d8294d2a042,20484474,0,0x0,6
tick,0x7d8294d2a042,20485531,0,0x0,6
tick,0x7d8294d2a042,20486603,0,0x0,6
tick,0x7d8294d2a042,20487605,0,0x0,6
tick,0x7d8294d2a042,20488796,0,0x0,6
tick,0x7d8294d2a042,20489869,0,0x0,6
tick,0x7d8294d2a042,20491031,0,0x0,6
tick,0x7d8294d2a042,20492083,0,0x0,6
tick,0x7d8294d2a042,20493174,0,0x0,6
tick,0x7d8294d2a042,20494304,0,0x0,6
tick,0x7d8294d2a042,20495467,0,0x0,6
tick,0x7d8294d2a042,20496526,0,0x0,6
tick,0x7d8294d2a042,20497693,0,0x0,6
tick,0x7d8294d2a042,20498836,0,0x0,6
tick,0x7d8294d2a042,20499903,0,0x0,6
tick,0x7d8294d2a042,20501044,0,0x0,6
tick,0x7d8294d2a042,20502210,0,0x0,6
tick,0x7d8294d2a042,20503355,0,0x0,6
tick,0x7d8294d2a042,20504429,0,0x0,6
tick,0x7d8294d2a042,20505572,0,0x0,6
tick,0x7d8294d2a042,20506732,0,0x0,6
tick,0x7d8294d2a042,20507803,0,0x0,6
tick,0x7d8294d2a042,20508957,0,0x0,6
tick,0x7d8294d2a042,20510118,0,0x0,6
tick,0x7d8294d2a042,20511241,0,0x0,6
tick,0x7d8294d2a042,20512325,0,0x0,6
tick,0x7d8294d2a042,20513424,0,0x0,6
tick,0x7d8294d2a042,20514491,0,0x0,6
tick,0x7d8294d2a042,20515499,0,0x0,6
tick,0x7d8294d2a042,20516670,0,0x0,6
tick,0x7d8294d2a042,20517822,0,0x0,6
tick,0x7d8294d2a042,20518890,0,0x0,6
tick,0x7d8294d2a042,20519955,0,0x0,6
tick,0x7d8294d2a042,20521126,0,0x0,6
tick,0x7d8294d2a042,20522089,0,0x0,6
tick,0x7d8294d2a042,20523166,0,0x0,6
tick,0x7d8294d2a042,20524266,0,0x0,6
tick,0x7d8294d2a042,20525341,0,0x0,6
tick,0x7d8294d2a042,20526418,0,0x0,6
tick,0x7d8294d2a042,20527498,0,0x0,6
tick,0x7d8294d2a042,20528705,0,0x0,6
tick,0x7d8294d2a042,20529837,0,0x0,6
tick,0x7d8294d2a042,20530981,0,0x0,6
tick,0x7d8294d2a042,20532050,0,0x0,6
tick,0x7d8294d2a042,20533206,0,0x0,6
tick,0x7d8294d2a042,20534283,0,0x0,6
tick,0x7d8294d2a042,20535464,0,0x0,6
tick,0x7d8294d2a042,20536524,0,0x0,6
tick,0x7d8294d2a042,20537679,0,0x0,6
tick,0x7d8294d2a042,20538857,0,0x0,6
tick,0x7d8294d2a042,20539895,0,0x0,6
tick,0x7d8294d2a042,20541035,0,0x0,6
tick,0x7d8294d2a042,20542129,0,0x0,6
tick,0x7d8294d2a042,20543266,0,0x0,6
tick,0x7d8294d2a042,20544350,0,0x0,6
tick,0x7d8294d2a042,20545473,0,0x0,6
tick,0x7d8294d2a042,20546517,0,0x0,6
tick,0x7d8294d2a042,20547509,0,0x0,6
tick,0x7d8294d2a042,20548704,0,0x0,6
tick,0x7d8294d2a042,20549788,0,0x0,6
tick,0x7d8294d2a042,20550812,0,0x0,6
tick,0x7d8294d2a042,20551948,0,0x0,6
tick,0x7d8294d2a042,20553139,0,0x0,6
tick,0x7d8294d2a042,20554236,0,0x0,6
tick,0x7d8294d2a042,20555463,0,0x0,6
tick,0x7d8294d2a042,20556473,0,0x0,6
tick,0x7d8294d2a042,20557507,0,0x0,6
tick,0x7d8294d2a042,20558595,0,0x0,6
tick,0x7d8294d2a042,20559649,0,0x0,6
tick,0x7d8294d2a042,20560816,0,0x0,6
tick,0x7d8294d2a042,20561904,0,0x0,6
tick,0x7d8294d2a042,20563112,0,0x0,6
tick,0x7d8294d2a042,20564185,0,0x0,6
tick,0x7d8294d2a042,20565289,0,0x0,6
tick,0x7d8294d2a042,20566350,0,0x0,6
tick,0x7d8294d2a042,20567524,0,0x0,6
tick,0x7d8294d2a042,20568726,0,0x0,6
tick,0x7d8294d2a042,20569683,0,0x0,6
tick,0x7d8294d2a042,20570745,0,0x0,6
tick,0x7d8294d2a042,20571797,0,0x0,6
tick,0x7d8294d2a042,20572852,0,0x0,6
tick,0x7d8294d2a042,20573936,0,0x0,6
tick,0x7d8294d2a042,20575029,0,0x0,6
tick,0x7d8294d2a042,20576114,0,0x0,6
tick,0x7d8294d2a042,20577168,0,0x0,6
tick,0x7d8294d2a042,20578225,0,0x0,6
tick,0x7d8294d2a042,20579312,0,0x0,6
tick,0x7d8294d2a042,20580386,0,0x0,6
tick,0x7d8294d2a042,20581466,0,0x0,6
tick,0x7d8294d2a042,20582539,0,0x0,6
tick,0x7d8294d2a042,20583593,0,0x0,6
tick,0x7d8294d2a042,20584676,0,0x0,6
tick,0x7d8294d2a042,20585752,0,0x0,6
tick,0x7d8294d2a042,20586831,0,0x0,6
tick,0x7d8294d2a042,20587907,0,0x0,6
tick,0x7d8294d2a042,20588998,0,0x0,6
tick,0x7d8294d2a042,20590077,0,0x0,6
tick,0x7d8294d2a042,20591144,0,0x0,6
tick,0x7d8294d2a042,20592226,0,0x0,6
tick,0x7d8294d2a042,20593302,0,0x0,6
tick,0x7d8294d2a042,20594374,0,0x0,6
tick,0x7d8294d2a042,20595419,0,0x0,6
tick,0x7d8294d2a042,20596499,0,0x0,6
tick,0x7d8294d2a042,20597547,0,0x0,6
tick,0x7d8294d2a042,20598601,0,0x0,6
tick,0x7d8294d2a042,20599657,0,0x0,6
tick,0x7d8294d2a042,20600710,0,0x0,6
tick,0x7d8294d2a042,20601765,0,0x0,6
tick,0x7d8294d2a042,20602822,0,0x0,6
tick,0x7d8294d2a042,20603876,0,0x0,6
tick,0x7d8294d2a042,20604936,0,0x0,6
tick,0x7d8294d1ba9a,20605988,0,0x0,6
tick,0x7d8294d2a042,20607066,0,0x0,6
tick,0x7d8294d2a042,20608158,0,0x0,6
tick,0x7d8294d2a042,20609229,0,0x0,6
tick,0x7d8294d2a042,20610313,0,0x0,6
tick,0x7d8294d2a042,20611402,0,0x0,6
tick,0x7d8294d2a042,20612480,0,0x0,6
tick,0x7d8294d2a042,20613553,0,0x0,6
tick,0x7d8294d2a042,20614602,0,0x0,6
tick,0x64950d9530cb,20615665,0,0x0,0,0x64950d94ae0c,0x64956d804390
tick,0x7d8294d0f727,20616841,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,20617797,0,0x0,6
tick,0x7d8294d2a042,20618870,0,0x0,6
tick,0x7d8294d2a042,20619945,0,0x0,6
tick,0x7d8294d2a042,20621019,0,0x0,6
tick,0x7d8294d2a042,20622093,0,0x0,6
tick,0x7d8294d2a042,20623236,0,0x0,6
tick,0x7d8294d2a042,20624261,0,0x0,6
tick,0x7d8294d2a042,20625333,0,0x0,6
tick,0x7d8294d2a042,20626406,0,0x0,6
tick,0x7d8294d2a042,20627461,0,0x0,6
tick,0x7d8294d2a042,20628540,0,0x0,6
tick,0x7d8294d2a042,20629618,0,0x0,6
tick,0x7d8294d2a042,20630705,0,0x0,6
tick,0x7d8294d2a042,20631773,0,0x0,6
tick,0x7d8294d2a042,20632848,0,0x0,6
tick,0x7d8294d2a042,20633926,0,0x0,6
tick,0x7d8294d2a042,20635005,0,0x0,6
tick,0x7d8294d2a042,20636080,0,0x0,6
tick,0x7d8294d2a042,20637159,0,0x0,6
tick,0x7d8294d2a042,20638248,0,0x0,6
tick,0x7d8294d2a042,20639323,0,0x0,6
tick,0x7d8294d2a042,20640478,0,0x0,6
tick,0x7d8294d2a042,20641563,0,0x0,6
tick,0x7d8294d2a042,20642644,0,0x0,6
tick,0x7d8294d2a042,20643718,0,0x0,6
tick,0x7d8294d2a042,20644792,0,0x0,6
tick,0x7d8294d2a042,20645868,0,0x0,6
tick,0x7d8294d2a042,20646955,0,0x0,6
tick,0x7d8294d2a042,20648028,0,0x0,6
tick,0x7d8294d2a042,20649103,0,0x0,6
tick,0x7d8294d2a042,20650186,0,0x0,6
tick,0x7d8294d2a042,20651274,0,0x0,6
tick,0x7d8294d2a042,20652430,0,0x0,6
tick,0x7d8294d2a042,20653503,0,0x0,6
tick,0x7d8294d2a042,20654581,0,0x0,6
tick,0x7d8294d2a042,20655637,0,0x0,6
tick,0x7d8294d2a042,20656711,0,0x0,6
tick,0x7d8294d2a042,20657785,0,0x0,6
tick,0x7d8294d2a042,20658867,0,0x0,6
tick,0x7d8294d2a042,20659934,0,0x0,6
tick,0x7d8294d2a042,20661013,0,0x0,6
tick,0x7d8294d2a042,20662093,0,0x0,6
tick,0x7d8294d2a042,20663174,0,0x0,6
tick,0x7d8294d2a042,20664255,0,0x0,6
tick,0x7d8294d2a042,20665346,0,0x0,6
tick,0x7d8294d2a042,20666430,0,0x0,6
tick,0x7d8294d2a042,20667484,0,0x0,6
tick,0x7d8294d2a042,20668566,0,0x0,6
tick,0x7d8294d2a042,20669651,0,0x0,6
tick,0x7d8294d2a042,20670734,0,0x0,6
tick,0x7d8294d2a042,20671807,0,0x0,6
tick,0x7d8294d2a042,20672882,0,0x0,6
tick,0x7d8294d2a042,20673967,0,0x0,6
tick,0x7d8294d2a042,20675047,0,0x0,6
tick,0x7d8294d2a042,20676121,0,0x0,6
tick,0x7d8294d2a042,20677195,0,0x0,6
tick,0x7d8294d2a042,20678284,0,0x0,6
tick,0x7d8294d2a042,20679368,0,0x0,6
tick,0x7d8294d2a042,20680436,0,0x0,6
tick,0x7d8294d2a042,20681516,0,0x0,6
tick,0x7d8294d2a042,20682601,0,0x0,6
tick,0x7d8294d2a042,20683652,0,0x0,6
tick,0x7d8294d2a042,20684732,0,0x0,6
tick,0x7d8294d2a042,20685804,0,0x0,6
tick,0x7d8294d2a042,20686880,0,0x0,6
tick,0x7d8294d2a042,20687955,0,0x0,6
tick,0x7d8294d2a042,20689031,0,0x0,6
tick,0x7d8294d2a042,20690117,0,0x0,6
tick,0x7d8294d2a042,20691194,0,0x0,6
tick,0x7d8294d2a042,20692383,0,0x0,6
tick,0x7d8294d2a042,20693461,0,0x0,6
tick,0x7d8294d2a042,20694544,0,0x0,6
tick,0x7d8294d2a042,20695595,0,0x0,6
tick,0x7d8294d2a042,20696669,0,0x0,6
tick,0x7d8294d2a042,20697749,0,0x0,6
tick,0x7d8294d2a042,20698824,0,0x0,6
tick,0x7d8294d2a042,20699895,0,0x0,6
tick,0x7d8294d2a042,20700967,0,0x0,6
tick,0x7d8294d2a042,20702053,0,0x0,6
tick,0x7d8294d2a042,20703130,0,0x0,6
tick,0x7d8294d2a042,20704211,0,0x0,6
tick,0x7d8294d2a042,20705304,0,0x0,6
tick,0x7d8294d2a042,20706386,0,0x0,6
tick,0x7d8294d2a042,20707425,0,0x0,6
tick,0x7d8294d2a042,20708499,0,0x0,6
tick,0x7d8294d2a042,20709568,0,0x0,6
tick,0x7d8294d2a042,20710666,0,0x0,6
tick,0x7d8294d2a042,20711733,0,0x0,6
tick,0x7d8294d2a042,20712806,0,0x0,6
tick,0x7d8294d2a042,20713880,0,0x0,6
tick,0x7d8294d2a042,20714955,0,0x0,6
tick,0x7d8294d2a042,20716029,0,0x0,6
tick,0x7d8294d2a042,20717103,0,0x0,6
tick,0x7d8294d2a042,20718187,0,0x0,6
tick,0x7d8294d2a042,20719273,0,0x0,6
tick,0x7d8294d2a042,20720414,0,0x0,6
tick,0x7d8294d2a042,20721501,0,0x0,6
tick,0x7d8294d2a042,20722576,0,0x0,6
tick,0x7d8294d2a042,20723632,0,0x0,6
tick,0x7d8294d2a042,20724705,0,0x0,6
tick,0x7d8294d2a042,20725785,0,0x0,6
tick,0x7d8294d2a042,20726871,0,0x0,6
tick,0x7d8294d2a042,20727944,0,0x0,6
tick,0x7d8294d2a042,20729023,0,0x0,6
tick,0x7d8294d2a042,20730102,0,0x0,6
tick,0x7d8294d2a042,20731183,0,0x0,6
tick,0x7d8294d2a042,20732327,0,0x0,6
tick,0x7d8294d2a042,20733407,0,0x0,6
tick,0x7d8294d2a042,20734496,0,0x0,6
tick,0x7d8294d2a042,20735546,0,0x0,6
tick,0x7d8294d2a042,20736621,0,0x0,6
tick,0x7d8294d2a042,20737709,0,0x0,6
tick,0x7d8294d2a042,20738790,0,0x0,6
tick,0x7d8294d2a042,20739862,0,0x0,6
tick,0x7d8294d2a042,20740935,0,0x0,6
tick,0x7d8294d2a042,20742013,0,0x0,6
tick,0x7d8294d2a042,20743100,0,0x0,6
tick,0x7d8294d2a042,20744176,0,0x0,6
tick,0x7d8294d2a042,20745259,0,0x0,6
tick,0x7d8294d2a042,20746337,0,0x0,6
tick,0x7d8294d2a042,20747421,0,0x0,6
tick,0x7d8294d2a042,20748495,0,0x0,6
tick,0x7d8294d2a042,20749579,0,0x0,6
tick,0x7d8294d2a042,20750668,0,0x0,6
tick,0x7d8294d2a042,20751739,0,0x0,6
tick,0x7d8294d2a042,20752813,0,0x0,6
tick,0x7d8294d2a042,20753893,0,0x0,6
tick,0x7d8294d2a042,20754960,0,0x0,6
tick,0x7d8294d2a042,20756035,0,0x0,6
tick,0x7d8294d2a042,20757109,0,0x0,6
tick,0x7d8294d2a042,20758166,0,0x0,6
tick,0x7d8294d2a042,20759219,0,0x0,6
tick,0x7d8294d2a042,20760300,0,0x0,6
tick,0x7d8294d2a042,20761372,0,0x0,6
tick,0x7d8294d2a042,20762510,0,0x0,6
tick,0x7d8294d2a042,20763519,0,0x0,6
tick,0x7d8294d2a042,20764585,0,0x0,6
tick,0x7d8294d2a042,20765666,0,0x0,6
tick,0x7d8294d2a042,20766741,0,0x0,6
tick,0x7d8294d2a042,20767816,0,0x0,6
tick,0x7d8294d2a042,20768898,0,0x0,6
tick,0x7d8294d2a042,20769979,0,0x0,6
tick,0x7d8294d2a042,20771054,0,0x0,6
tick,0x7d8294d2a042,20772129,0,0x0,6
tick,0x7d8294d2a042,20773202,0,0x0,6
tick,0x7d8294d2a042,20774277,0,0x0,6
tick,0x7d8294d2a042,20775352,0,0x0,6
tick,0x7d8294d2a042,20776426,0,0x0,6
tick,0x7d8294d2a042,20777498,0,0x0,6
tick,0x7d8294d2a042,20778580,0,0x0,6
tick,0x7d8294d2a042,20779628,0,0x0,6
tick,0x7d8294d2a042,20780735,0,0x0,6
tick,0x7d8294d2a042,20781791,0,0x0,6
tick,0x7d8294d2a042,20782877,0,0x0,6
tick,0x7d8294d2a042,20783961,0,0x0,6
tick,0x7d8294d2a042,20785063,0,0x0,6
tick,0x7d8294d2a042,20786155,0,0x0,6
tick,0x7d8294d2a042,20787188,0,0x0,6
tick,0x7d8294d2a042,20788255,0,0x0,6
tick,0x7d8294d2a042,20789307,0,0x0,6
tick,0x7d8294d2a042,20790362,0,0x0,6
tick,0x7d8294d2a042,20791378,0,0x0,6
tick,0x7d8294d2a042,20792431,0,0x0,6
tick,0x7d8294d2a042,20793485,0,0x0,6
tick,0x7d8294d2a042,20794547,0,0x0,6
tick,0x7d8294d2a042,20795597,0,0x0,6
tick,0x7d8294d2a042,20796671,0,0x0,6
tick,0x7d8294d2a042,20797711,0,0x0,6
tick,0x7d8294d2a042,20798812,0,0x0,6
tick,0x7d8294d2a042,20799871,0,0x0,6
tick,0x7d8294d2a042,20800942,0,0x0,6
tick,0x7d8294d2a042,20802018,0,0x0,6
tick,0x7d8294d2a042,20803092,0,0x0,6
tick,0x7d8294d2a042,20804168,0,0x0,6
tick,0x7d8294d2a042,20805245,0,0x0,6
tick,0x7d8294d2a042,20806325,0,0x0,6
tick,0x7d8294d2a042,20807415,0,0x0,6
tick,0x7d8294d2a042,20808490,0,0x0,6
tick,0x7d8294d2a042,20809570,0,0x0,6
tick,0x7d8294d2a042,20810649,0,0x0,6
tick,0x7d8294d2a042,20811729,0,0x0,6
tick,0x7d8294d2a042,20812801,0,0x0,6
tick,0x7d8294d2a042,20813879,0,0x0,6
tick,0x7d8294d2a042,20814957,0,0x0,6
tick,0x7d8294d2a042,20816038,0,0x0,6
tick,0x7d8294d2a042,20817110,0,0x0,6
tick,0x7d8294d2a042,20818180,0,0x0,6
tick,0x7d8294d2a042,20819263,0,0x0,6
tick,0x7d8294d2a042,20820341,0,0x0,6
tick,0x7d8294d2a042,20821412,0,0x0,6
tick,0x7d8294d2a042,20822495,0,0x0,6
tick,0x7d8294d2a042,20823549,0,0x0,6
tick,0x7d8294d2a042,20824635,0,0x0,6
tick,0x7d8294d2a042,20825709,0,0x0,6
tick,0x7d8294d2a042,20826783,0,0x0,6
tick,0x7d8294d2a042,20827867,0,0x0,6
tick,0x7d8294d2a042,20828941,0,0x0,6
tick,0x7d8294d2a042,20830012,0,0x0,6
tick,0x7d8294d2a042,20831094,0,0x0,6
tick,0x7d8294d2a042,20832169,0,0x0,6
tick,0x7d8294d2a042,20833245,0,0x0,6
tick,0x7d8294d2a042,20834327,0,0x0,6
tick,0x7d8294d2a042,20835411,0,0x0,6
code-creation,JS,10,20836289,0x64956d816080,816, ext:core/00_infra.js:172:12,0x2c370057fbe8,^
code-source-info,0x64956d816080,4,4678,5413,,,
code-creation,JS,10,20836324,0x64956d8163c0,664,ReadableStreamDefaultReader ext:deno_web/06_streams.js:5444:14,0x2c37001e72d0,^
code-source-info,0x64956d8163c0,21,156474,156853,,,
code-creation,JS,10,20836335,0x64956d816680,1812,ReadableStream ext:deno_web/06_streams.js:5139:14,0x2c37001e6dc4,^
code-source-info,0x64956d816680,21,147718,149385,,,
code-creation,JS,10,20836342,0x64956d816dc0,1124,readableByteStreamControllerCallPullIfNeeded ext:deno_web/06_streams.js:1221:54,0x2c37001e36f0,^
code-source-info,0x64956d816dc0,21,32743,33509,,,
tick,0x7d8294cab1ef,20836489,0,0x0,0,0x64950db6f120,0x64956d8590ff,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,20837572,0,0x0,6
tick,0x7d8294d2a042,20838668,0,0x0,6
tick,0x7d8294d2a042,20839743,0,0x0,6
tick,0x7d8294d2a042,20840818,0,0x0,6
tick,0x7d8294d2a042,20841894,0,0x0,6
tick,0x7d8294d2a042,20842968,0,0x0,6
tick,0x7d8294d2a042,20844110,0,0x0,6
tick,0x7d8294d2a042,20845205,0,0x0,6
tick,0x7d8294d2a042,20846274,0,0x0,6
tick,0x7d8294d2a042,20847363,0,0x0,6
tick,0x7d8294d2a042,20848512,0,0x0,6
tick,0x7d8294d2a042,20849652,0,0x0,6
tick,0x7d8294d2a042,20850724,0,0x0,6
tick,0x7d8294d2a042,20851863,0,0x0,6
tick,0x7d8294d2a042,20853038,0,0x0,6
tick,0x7d8294d2a042,20854096,0,0x0,6
tick,0x7d8294d2a042,20855165,0,0x0,6
tick,0x7d8294d2a042,20856304,0,0x0,6
tick,0x7d8294d2a042,20857479,0,0x0,6
tick,0x7d8294d2a042,20858565,0,0x0,6
tick,0x7d8294d2a042,20859628,0,0x0,6
tick,0x7d8294d2a042,20860851,0,0x0,6
tick,0x7d8294d2a042,20861982,0,0x0,6
tick,0x7d8294d2a042,20863049,0,0x0,6
tick,0x7d8294d2a042,20864208,0,0x0,6
tick,0x7d8294d2a042,20865332,0,0x0,6
tick,0x7d8294d2a042,20866407,0,0x0,6
tick,0x7d8294d2a042,20867499,0,0x0,6
tick,0x7d8294d2a042,20868694,0,0x0,6
tick,0x7d8294d2a042,20869820,0,0x0,6
tick,0x7d8294d2a042,20870903,0,0x0,6
tick,0x7d8294d2a042,20872036,0,0x0,6
tick,0x7d8294d2a042,20873198,0,0x0,6
tick,0x7d8294d2a042,20874259,0,0x0,6
tick,0x7d8294d2a042,20875342,0,0x0,6
tick,0x7d8294d2a042,20876552,0,0x0,6
tick,0x7d8294d2a042,20877704,0,0x0,6
tick,0x7d8294d2a042,20878767,0,0x0,6
tick,0x7d8294d2a042,20879906,0,0x0,6
tick,0x7d8294d2a042,20881067,0,0x0,6
tick,0x7d8294d2a042,20882206,0,0x0,6
tick,0x7d8294d2a042,20883340,0,0x0,6
tick,0x7d8294d2a042,20884424,0,0x0,6
tick,0x7d8294d2a042,20885488,0,0x0,6
tick,0x7d8294d2a042,20886579,0,0x0,6
tick,0x7d8294d2a042,20887581,0,0x0,6
tick,0x7d8294d2a042,20888771,0,0x0,6
tick,0x7d8294d2a042,20889861,0,0x0,6
tick,0x7d8294d2a042,20890987,0,0x0,6
tick,0x7d8294d2a042,20892059,0,0x0,6
tick,0x7d8294d2a042,20893129,0,0x0,6
tick,0x7d8294d2a042,20894272,0,0x0,6
tick,0x7d8294d2a042,20895446,0,0x0,6
tick,0x7d8294d2a042,20896496,0,0x0,6
tick,0x7d8294d2a042,20897705,0,0x0,6
tick,0x7d8294d2a042,20898826,0,0x0,6
tick,0x7d8294d2a042,20899903,0,0x0,6
tick,0x7d8294d2a042,20901061,0,0x0,6
tick,0x7d8294d2a042,20902194,0,0x0,6
tick,0x7d8294d2a042,20903333,0,0x0,6
tick,0x7d8294d2a042,20904408,0,0x0,6
tick,0x7d8294d2a042,20905479,0,0x0,6
tick,0x7d8294d2a042,20906563,0,0x0,6
tick,0x7d8294d2a042,20907568,0,0x0,6
tick,0x7d8294d2a042,20908767,0,0x0,6
tick,0x7d8294d2a042,20909852,0,0x0,6
tick,0x7d8294d2a042,20910976,0,0x0,6
tick,0x7d8294d2a042,20912053,0,0x0,6
tick,0x7d8294d2a042,20913140,0,0x0,6
tick,0x7d8294d2a042,20914266,0,0x0,6
tick,0x7d8294d2a042,20915492,0,0x0,6
tick,0x7d8294d2a042,20916482,0,0x0,6
tick,0x7d8294d2a042,20917504,0,0x0,6
tick,0x7d8294d2a042,20918650,0,0x0,6
tick,0x7d8294d2a042,20919690,0,0x0,6
tick,0x7d8294d2a042,20920853,0,0x0,6
tick,0x7d8294d2a042,20921923,0,0x0,6
tick,0x7d8294d2a042,20923086,0,0x0,6
tick,0x7d8294d2a042,20924133,0,0x0,6
tick,0x7d8294d2a042,20925218,0,0x0,6
tick,0x7d8294d2a042,20926293,0,0x0,6
tick,0x7d8294d2a042,20927431,0,0x0,6
tick,0x7d8294d2a042,20928593,0,0x0,6
tick,0x7d8294d2a042,20929654,0,0x0,6
tick,0x7d8294d2a042,20930798,0,0x0,6
tick,0x7d8294d2a042,20931804,0,0x0,6
tick,0x7d8294d2a042,20932875,0,0x0,6
tick,0x7d8294d2a042,20934023,0,0x0,6
tick,0x7d8294d2a042,20935109,0,0x0,6
tick,0x7d8294d2a042,20936248,0,0x0,6
tick,0x7d8294d2a042,20937393,0,0x0,6
tick,0x7d8294d2a042,20938546,0,0x0,6
tick,0x7d8294d2a042,20939620,0,0x0,6
tick,0x7d8294d2a042,20940612,0,0x0,6
tick,0x7d8294d2a042,20941760,0,0x0,6
tick,0x7d8294d2a042,20942842,0,0x0,6
tick,0x7d8294d2a042,20943984,0,0x0,6
tick,0x7d8294d2a042,20945053,0,0x0,6
tick,0x7d8294d2a042,20946192,0,0x0,6
tick,0x7d8294d2a042,20947341,0,0x0,6
tick,0x7d8294d2a042,20948413,0,0x0,6
tick,0x7d8294d2a042,20949498,0,0x0,6
tick,0x7d8294d2a042,20950498,0,0x0,6
tick,0x7d8294d2a042,20951575,0,0x0,6
tick,0x7d8294d2a042,20952762,0,0x0,6
tick,0x7d8294d2a042,20953916,0,0x0,6
tick,0x7d8294d2a042,20955062,0,0x0,6
tick,0x7d8294d2a042,20956128,0,0x0,6
tick,0x7d8294d2a042,20957207,0,0x0,6
tick,0x7d8294d2a042,20958354,0,0x0,6
tick,0x7d8294d2a042,20959427,0,0x0,6
tick,0x7d8294d2a042,20960563,0,0x0,6
tick,0x7d8294d2a042,20961636,0,0x0,6
tick,0x7d8294d2a042,20962795,0,0x0,6
tick,0x7d8294d2a042,20963855,0,0x0,6
tick,0x7d8294d2a042,20965020,0,0x0,6
tick,0x7d8294d2a042,20966190,0,0x0,6
tick,0x7d8294d2a042,20967244,0,0x0,6
tick,0x7d8294d2a042,20968253,0,0x0,6
tick,0x7d8294d2a042,20969399,0,0x0,6
tick,0x7d8294d2a042,20970410,0,0x0,6
tick,0x7d8294d2a042,20971475,0,0x0,6
tick,0x7d8294d2a042,20972609,0,0x0,6
tick,0x7d8294d2a042,20973779,0,0x0,6
tick,0x7d8294d2a042,20974859,0,0x0,6
tick,0x7d8294d2a042,20975928,0,0x0,6
tick,0x7d8294d2a042,20976986,0,0x0,6
tick,0x7d8294d2a042,20978060,0,0x0,6
tick,0x7d8294d2a042,20979163,0,0x0,6
tick,0x7d8294d2a042,20980304,0,0x0,6
tick,0x7d8294d2a042,20981387,0,0x0,6
tick,0x7d8294d2a042,20982528,0,0x0,6
tick,0x7d8294d2a042,20983550,0,0x0,6
tick,0x7d8294d2a042,20984727,0,0x0,6
tick,0x7d8294d2a042,20985792,0,0x0,6
tick,0x7d8294d2a042,20986940,0,0x0,6
tick,0x7d8294d2a042,20988010,0,0x0,6
tick,0x7d8294d2a042,20989145,0,0x0,6
tick,0x7d8294d2a042,20990298,0,0x0,6
tick,0x7d8294d2a042,20991456,0,0x0,6
tick,0x7d8294d2a042,20992511,0,0x0,6
tick,0x7d8294d2a042,20993508,0,0x0,6
tick,0x7d8294d2a042,20994652,0,0x0,6
tick,0x7d8294d2a042,20995665,0,0x0,6
tick,0x7d8294d2a042,20996746,0,0x0,6
tick,0x7d8294d2a042,20997922,0,0x0,6
tick,0x7d8294d2a042,20999047,0,0x0,6
tick,0x7d8294d2a042,21000095,0,0x0,6
tick,0x7d8294d2a042,21001216,0,0x0,6
tick,0x7d8294d2a042,21002300,0,0x0,6
tick,0x7d8294d2a042,21003462,0,0x0,6
tick,0x7d8294d2a042,21004631,0,0x0,6
tick,0x7d8294d2a042,21005653,0,0x0,6
tick,0x7d8294d2a042,21006731,0,0x0,6
tick,0x7d8294d2a042,21007823,0,0x0,6
tick,0x7d8294d2a042,21008923,0,0x0,6
tick,0x7d8294d2a042,21010017,0,0x0,6
tick,0x7d8294d2a042,21011102,0,0x0,6
tick,0x7d8294d2a042,21012156,0,0x0,6
tick,0x7d8294d2a042,21013432,0,0x0,6
tick,0x7d8294d2a042,21014484,0,0x0,6
tick,0x7d8294d2a042,21015628,0,0x0,6
tick,0x7d8294d2a042,21016900,0,0x0,6
tick,0x7d8294d2a042,21017969,0,0x0,6
tick,0x7d8294d2a042,21019213,0,0x0,6
tick,0x7d8294d2a042,21020290,0,0x0,6
tick,0x7d8294d2a042,21021383,0,0x0,6
tick,0x7d8294d2a042,21022439,0,0x0,6
tick,0x7d8294d2a042,21023626,0,0x0,6
tick,0x7d8294d2a042,21024879,0,0x0,6
tick,0x7d8294d2a042,21025955,0,0x0,6
tick,0x7d8294d2a042,21027051,0,0x0,6
tick,0x7d8294d2a042,21028168,0,0x0,6
tick,0x7d8294d2a042,21029157,0,0x0,6
tick,0x7d8294d2a042,21030244,0,0x0,6
tick,0x7d8294d2a042,21031335,0,0x0,6
tick,0x7d8294d2a042,21032385,0,0x0,6
tick,0x7d8294d2a042,21033470,0,0x0,6
tick,0x7d8294d2a042,21034551,0,0x0,6
tick,0x7d8294d2a042,21035607,0,0x0,6
tick,0x7d8294d2a042,21036696,0,0x0,6
tick,0x7d8294d2a042,21037746,0,0x0,6
tick,0x7d8294d2a042,21038819,0,0x0,6
tick,0x7d8294d2a042,21039923,0,0x0,6
tick,0x7d8294d2a042,21040997,0,0x0,6
tick,0x7d8294d2a042,21042071,0,0x0,6
tick,0x7d8294d2a042,21043147,0,0x0,6
tick,0x7d8294d2a042,21044222,0,0x0,6
tick,0x7d8294d2a042,21045447,0,0x0,6
tick,0x7d8294d2a042,21046456,0,0x0,6
tick,0x7d8294d2a042,21047539,0,0x0,6
tick,0x7d8294d2a042,21048729,0,0x0,6
tick,0x7d8294d2a042,21049741,0,0x0,6
tick,0x7d8294d2a042,21050811,0,0x0,6
tick,0x7d8294d2a042,21051982,0,0x0,6
tick,0x7d8294d2a042,21053151,0,0x0,6
tick,0x7d8294d2a042,21054147,0,0x0,6
tick,0x7d8294d2a042,21055213,0,0x0,6
tick,0x7d8294d2a042,21056337,0,0x0,6
tick,0x7d8294d1ba9a,21057388,0,0x0,6
tick,0x7d8294d2a042,21058465,0,0x0,6
tick,0x7d8294d2a042,21059498,0,0x0,6
tick,0x64950cfc2940,21060521,0,0x0,6
tick,0x7d8294d2a042,21061625,0,0x0,6
tick,0x7d8294d2a042,21062686,0,0x0,6
tick,0x7d8294d1ba9a,21063684,0,0x0,6
tick,0x7d8294d2a042,21064729,0,0x0,6
tick,0x7d8294d2a042,21065804,0,0x0,6
tick,0x7d8294d2a042,21067032,0,0x0,6
tick,0x7d8294d2a042,21068120,0,0x0,6
tick,0x7d8294d2a042,21069192,0,0x0,6
tick,0x7d8294d2a042,21070345,0,0x0,6
tick,0x7d8294d2a042,21071517,0,0x0,6
tick,0x7d8294d2a042,21072663,0,0x0,6
tick,0x7d8294d2a042,21073790,0,0x0,6
tick,0x64950d40a8c0,21074848,0,0x0,0,0x64950d50cd60,0x64950d8ab642,0x64956d8411f0,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,21075986,0,0x0,6
tick,0x7d8294d2a042,21077154,0,0x0,6
tick,0x7d8294d2a042,21078298,0,0x0,6
tick,0x7d8294d2a042,21079376,0,0x0,6
tick,0x7d8294d2a042,21080512,0,0x0,6
tick,0x7d8294d2a042,21081589,0,0x0,6
tick,0x7d8294d2a042,21082656,0,0x0,6
tick,0x7d8294d2a042,21083674,0,0x0,6
tick,0x7d8294d2a042,21084838,0,0x0,6
tick,0x7d8294d2a042,21086016,0,0x0,6
tick,0x7d8294d2a042,21087096,0,0x0,6
tick,0x7d8294d2a042,21088167,0,0x0,6
tick,0x7d8294d2a042,21089258,0,0x0,6
tick,0x7d8294d2a042,21090342,0,0x0,6
tick,0x7d8294d2a042,21091430,0,0x0,6
tick,0x7d8294d2a042,21092543,0,0x0,6
tick,0x7d8294d2a042,21093617,0,0x0,6
tick,0x7d8294d2a042,21094709,0,0x0,6
tick,0x7d8294d2a042,21095691,0,0x0,6
tick,0x7d8294d2a042,21096810,0,0x0,6
tick,0x7d8294d2a042,21097975,0,0x0,6
tick,0x7d8294d2a042,21099148,0,0x0,6
tick,0x7d8294d2a042,21100203,0,0x0,6
tick,0x7d8294d2a042,21101288,0,0x0,6
tick,0x7d8294d2a042,21102447,0,0x0,6
tick,0x7d8294d2a042,21103559,0,0x0,6
tick,0x7d8294d2a042,21104753,0,0x0,6
tick,0x7d8294d2a042,21105894,0,0x0,6
tick,0x7d8294d2a042,21107070,0,0x0,6
tick,0x7d8294d2a042,21108127,0,0x0,6
tick,0x7d8294d2a042,21109283,0,0x0,6
tick,0x7d8294d2a042,21110485,0,0x0,6
tick,0x7d8294d2a042,21111561,0,0x0,6
tick,0x7d8294d2a042,21112735,0,0x0,6
tick,0x7d8294d2a042,21113905,0,0x0,6
tick,0x7d8294d2a042,21115093,0,0x0,6
tick,0x7d8294d2a042,21116142,0,0x0,6
tick,0x7d8294d2a042,21117279,0,0x0,6
tick,0x7d8294d2a042,21118453,0,0x0,6
tick,0x7d8294d2a042,21119558,0,0x0,6
tick,0x7d8294d2a042,21120739,0,0x0,6
tick,0x7d8294d2a042,21121867,0,0x0,6
tick,0x7d8294d2a042,21123054,0,0x0,6
tick,0x7d8294d2a042,21124112,0,0x0,6
tick,0x7d8294d2a042,21125192,0,0x0,6
tick,0x7d8294d2a042,21126284,0,0x0,6
tick,0x7d8294d2a042,21127347,0,0x0,6
tick,0x7d8294d2a042,21128502,0,0x0,6
tick,0x7d8294d2a042,21129667,0,0x0,6
tick,0x7d8294d2a042,21130823,0,0x0,6
tick,0x7d8294d2a042,21131899,0,0x0,6
tick,0x7d8294d2a042,21133068,0,0x0,6
tick,0x7d8294d2a042,21134246,0,0x0,6
tick,0x7d8294d2a042,21135320,0,0x0,6
tick,0x7d8294d2a042,21136398,0,0x0,6
tick,0x7d8294d2a042,21137452,0,0x0,6
tick,0x7d8294d2a042,21138609,0,0x0,6
tick,0x7d8294d2a042,21139624,0,0x0,6
tick,0x7d8294d2a042,21140815,0,0x0,6
tick,0x7d8294d2a042,21141974,0,0x0,6
tick,0x7d8294d2a042,21143127,0,0x0,6
tick,0x7d8294d2a042,21144209,0,0x0,6
tick,0x7d8294d2a042,21145273,0,0x0,6
tick,0x7d8294d2a042,21146415,0,0x0,6
tick,0x7d8294d2a042,21147490,0,0x0,6
tick,0x7d8294d2a042,21148636,0,0x0,6
tick,0x7d8294d2a042,21149769,0,0x0,6
tick,0x7d8294d2a042,21151004,0,0x0,6
tick,0x7d8294d2a042,21152060,0,0x0,6
tick,0x7d8294d2a042,21153235,0,0x0,6
tick,0x7d8294d2a042,21154355,0,0x0,6
tick,0x7d8294d2a042,21155498,0,0x0,6
tick,0x7d8294d2a042,21156696,0,0x0,6
tick,0x7d8294d2a042,21157864,0,0x0,6
tick,0x7d8294d2a042,21159015,0,0x0,6
tick,0x7d8294d2a042,21160095,0,0x0,6
tick,0x7d8294d2a042,21161215,0,0x0,6
tick,0x7d8294d2a042,21162368,0,0x0,6
tick,0x7d8294d2a042,21163504,0,0x0,6
tick,0x7d8294d2a042,21164648,0,0x0,6
tick,0x7d8294d2a042,21165841,0,0x0,6
tick,0x7d8294d2a042,21167018,0,0x0,6
tick,0x7d8294d2a042,21168098,0,0x0,6
tick,0x7d8294d2a042,21169232,0,0x0,6
tick,0x7d8294d2a042,21170273,0,0x0,6
tick,0x7d8294d2a042,21171461,0,0x0,6
tick,0x7d8294d2a042,21172493,0,0x0,6
tick,0x7d8294d2a042,21173577,0,0x0,6
tick,0x7d8294d2a042,21174752,0,0x0,6
tick,0x7d8294d2a042,21175810,0,0x0,6
tick,0x7d8294d2a042,21176979,0,0x0,6
tick,0x7d8294d2a042,21178116,0,0x0,6
tick,0x7d8294d2a042,21179269,0,0x0,6
tick,0x7d8294d2a042,21180392,0,0x0,6
tick,0x7d8294d2a042,21181462,0,0x0,6
tick,0x7d8294d2a042,21182606,0,0x0,6
tick,0x7d8294d2a042,21183657,0,0x0,6
tick,0x7d8294d2a042,21184822,0,0x0,6
tick,0x7d8294d2a042,21185893,0,0x0,6
tick,0x7d8294d2a042,21187028,0,0x0,6
tick,0x7d8294d2a042,21188190,0,0x0,6
tick,0x7d8294d2a042,21189253,0,0x0,6
tick,0x7d8294d2a042,21190344,0,0x0,6
tick,0x7d8294d2a042,21191427,0,0x0,6
tick,0x7d8294d2a042,21192573,0,0x0,6
tick,0x7d8294d2a042,21193630,0,0x0,6
tick,0x7d8294d2a042,21194634,0,0x0,6
tick,0x7d8294d2a042,21195664,0,0x0,6
tick,0x7d8294d2a042,21196920,0,0x0,6
tick,0x7d8294d2a042,21198074,0,0x0,6
tick,0x7d8294d2a042,21199246,0,0x0,6
tick,0x7d8294d2a042,21200307,0,0x0,6
tick,0x7d8294d2a042,21201384,0,0x0,6
tick,0x7d8294d2a042,21202469,0,0x0,6
tick,0x7d8294d2a042,21203509,0,0x0,6
tick,0x7d8294d2a042,21204652,0,0x0,6
tick,0x7d8294d2a042,21205731,0,0x0,6
tick,0x7d8294d2a042,21206876,0,0x0,6
tick,0x7d8294d2a042,21208017,0,0x0,6
tick,0x7d8294d2a042,21209164,0,0x0,6
tick,0x7d8294d2a042,21210336,0,0x0,6
tick,0x7d8294d2a042,21211493,0,0x0,6
tick,0x7d8294d2a042,21212626,0,0x0,6
tick,0x7d8294d2a042,21213781,0,0x0,6
tick,0x7d8294d2a042,21214845,0,0x0,6
tick,0x7d8294d2a042,21215882,0,0x0,6
tick,0x7d8294d2a042,21216981,0,0x0,6
tick,0x7d8294d2a042,21218056,0,0x0,6
tick,0x7d8294d2a042,21219129,0,0x0,6
tick,0x7d8294d2a042,21220199,0,0x0,6
tick,0x7d8294d2a042,21221262,0,0x0,6
tick,0x7d8294d2a042,21222427,0,0x0,6
tick,0x7d8294d2a042,21223548,0,0x0,6
tick,0x7d8294d2a042,21224789,0,0x0,6
tick,0x7d8294d2a042,21225883,0,0x0,6
tick,0x7d8294d2a042,21227047,0,0x0,6
tick,0x7d8294d2a042,21228092,0,0x0,6
tick,0x7d8294d2a042,21229242,0,0x0,6
tick,0x7d8294d2a042,21230400,0,0x0,6
tick,0x7d8294d2a042,21231570,0,0x0,6
tick,0x7d8294d2a042,21232741,0,0x0,6
tick,0x7d8294d2a042,21233895,0,0x0,6
tick,0x7d8294d2a042,21235132,0,0x0,6
tick,0x7d8294d2a042,21236138,0,0x0,6
tick,0x7d8294d2a042,21237303,0,0x0,6
tick,0x7d8294d2a042,21238488,0,0x0,6
tick,0x7d8294d2a042,21239601,0,0x0,6
tick,0x7d8294d2a042,21240824,0,0x0,6
tick,0x7d8294d2a042,21241964,0,0x0,6
tick,0x7d8294d2a042,21243062,0,0x0,6
tick,0x7d8294d2a042,21244073,0,0x0,6
tick,0x7d8294d2a042,21245088,0,0x0,6
tick,0x7d8294d2a042,21246188,0,0x0,6
tick,0x7d8294d2a042,21247259,0,0x0,6
tick,0x7d8294d2a042,21248295,0,0x0,6
tick,0x7d8294d2a042,21249398,0,0x0,6
tick,0x7d8294d2a042,21250428,0,0x0,6
tick,0x7d8294d2a042,21251482,0,0x0,6
tick,0x7d8294d2a042,21252556,0,0x0,6
tick,0x7d8294d2a042,21253635,0,0x0,6
tick,0x7d8294d2a042,21254742,0,0x0,6
tick,0x7d8294d2a042,21255808,0,0x0,6
tick,0x7d8294d2a042,21256880,0,0x0,6
tick,0x7d8294d2a042,21257953,0,0x0,6
tick,0x7d8294d2a042,21259025,0,0x0,6
tick,0x7d8294d2a042,21260082,0,0x0,6
tick,0x7d8294d2a042,21261155,0,0x0,6
tick,0x7d8294d2a042,21262245,0,0x0,6
tick,0x7d8294d2a042,21263317,0,0x0,6
tick,0x7d8294d2a042,21264454,0,0x0,6
tick,0x7d8294d2a042,21265641,0,0x0,6
tick,0x7d8294d2a042,21266615,0,0x0,6
tick,0x7d8294d2a042,21267723,0,0x0,6
tick,0x7d8294d2a042,21268883,0,0x0,6
tick,0x7d8294d2a042,21269887,0,0x0,6
tick,0x7d8294d2a042,21270964,0,0x0,6
tick,0x7d8294d2a042,21272028,0,0x0,6
tick,0x7d8294d1ba9a,21273083,0,0x0,6
tick,0x7d8294d2a042,21274213,0,0x0,6
tick,0x7d8294d2a042,21275266,0,0x0,6
tick,0x7d8294d1ba9a,21276312,0,0x0,6
tick,0x7d8294d2a042,21277377,0,0x0,6
tick,0x7d8294d2a042,21278429,0,0x0,6
tick,0x7d8294d2a042,21279476,0,0x0,6
tick,0x7d8294d2a042,21280535,0,0x0,6
tick,0x7d8294d2a042,21281605,0,0x0,6
tick,0x7d8294d2a042,21282687,0,0x0,6
tick,0x7d8294d2a042,21283637,0,0x0,6
tick,0x7d8294d2a042,21284820,0,0x0,6
tick,0x7d8294d2a042,21285895,0,0x0,6
tick,0x7d8294d2a042,21286992,0,0x0,6
tick,0x7d8294d2a042,21288035,0,0x0,6
tick,0x7d8294d2a042,21289083,0,0x0,6
tick,0x7d8294d107e3,21290145,0,0x0,6
tick,0x7d8294d0f727,21291222,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,21292279,0,0x0,6
tick,0x7d8294d2a042,21293374,0,0x0,6
tick,0x7d8294d2a042,21294460,0,0x0,6
tick,0x7d8294d2a042,21295481,0,0x0,6
tick,0x7d8294d2a042,21296649,0,0x0,6
tick,0x7d8294d2a042,21297816,0,0x0,6
tick,0x7d8294d2a042,21298806,0,0x0,6
tick,0x7d8294d2a042,21299880,0,0x0,6
tick,0x7d8294d2a042,21301022,0,0x0,6
tick,0x7d8294d2a042,21302176,0,0x0,6
tick,0x7d8294d2a042,21303271,0,0x0,6
tick,0x7d8294d2a042,21304396,0,0x0,6
tick,0x7d8294d2a042,21305484,0,0x0,6
tick,0x7d8294d2a042,21306554,0,0x0,6
tick,0x7d8294d2a042,21307574,0,0x0,6
tick,0x7d8294d2a042,21308738,0,0x0,6
tick,0x7d8294d2a042,21309907,0,0x0,6
tick,0x7d8294d2a042,21310979,0,0x0,6
tick,0x7d8294d2a042,21312070,0,0x0,6
tick,0x7d8294d2a042,21313128,0,0x0,6
tick,0x7d8294d2a042,21314231,0,0x0,6
tick,0x7d8294d2a042,21315311,0,0x0,6
tick,0x7d8294d2a042,21316439,0,0x0,6
tick,0x7d8294d2a042,21317507,0,0x0,6
tick,0x7d8294d2a042,21318593,0,0x0,6
tick,0x7d8294d2a042,21319634,0,0x0,6
tick,0x7d8294d2a042,21320803,0,0x0,6
tick,0x7d8294d2a042,21321979,0,0x0,6
tick,0x7d8294d2a042,21323063,0,0x0,6
tick,0x7d8294d2a042,21324142,0,0x0,6
tick,0x7d8294d2a042,21325214,0,0x0,6
tick,0x7d8294d2a042,21326426,0,0x0,6
tick,0x7d8294d2a042,21327562,0,0x0,6
tick,0x7d8294d2a042,21328739,0,0x0,6
tick,0x7d8294d2a042,21329886,0,0x0,6
tick,0x7d8294d2a042,21331046,0,0x0,6
tick,0x7d8294d2a042,21332111,0,0x0,6
tick,0x7d8294d2a042,21333258,0,0x0,6
tick,0x7d8294d2a042,21334425,0,0x0,6
tick,0x7d8294d2a042,21335552,0,0x0,6
tick,0x7d8294d2a042,21336733,0,0x0,6
tick,0x7d8294d2a042,21337886,0,0x0,6
tick,0x7d8294d2a042,21339043,0,0x0,6
tick,0x7d8294d2a042,21340124,0,0x0,6
tick,0x7d8294d2a042,21341265,0,0x0,6
tick,0x7d8294d2a042,21342421,0,0x0,6
tick,0x7d8294d2a042,21343581,0,0x0,6
tick,0x7d8294d2a042,21344755,0,0x0,6
tick,0x7d8294d2a042,21345905,0,0x0,6
tick,0x7d8294d2a042,21347081,0,0x0,6
tick,0x7d8294d2a042,21348162,0,0x0,6
tick,0x7d8294d2a042,21349286,0,0x0,6
tick,0x7d8294d2a042,21350477,0,0x0,6
tick,0x7d8294d2a042,21351545,0,0x0,6
tick,0x7d8294d2a042,21352734,0,0x0,6
tick,0x7d8294d2a042,21353882,0,0x0,6
tick,0x7d8294d2a042,21355054,0,0x0,6
tick,0x7d8294d2a042,21356119,0,0x0,6
tick,0x7d8294d2a042,21357255,0,0x0,6
tick,0x7d8294d2a042,21358411,0,0x0,6
tick,0x7d8294d2a042,21359545,0,0x0,6
tick,0x7d8294d2a042,21360734,0,0x0,6
tick,0x7d8294d2a042,21361886,0,0x0,6
tick,0x7d8294d2a042,21363065,0,0x0,6
tick,0x7d8294d2a042,21364161,0,0x0,6
tick,0x7d8294d2a042,21365265,0,0x0,6
tick,0x7d8294d2a042,21366431,0,0x0,6
tick,0x7d8294d2a042,21367491,0,0x0,6
tick,0x7d8294d2a042,21368726,0,0x0,6
tick,0x7d8294d2a042,21369876,0,0x0,6
tick,0x7d8294d2a042,21371046,0,0x0,6
tick,0x7d8294d2a042,21372104,0,0x0,6
tick,0x7d8294d2a042,21373267,0,0x0,6
tick,0x7d8294d2a042,21374419,0,0x0,6
tick,0x7d8294d2a042,21375543,0,0x0,6
tick,0x7d8294d2a042,21376746,0,0x0,6
tick,0x7d8294d2a042,21377895,0,0x0,6
tick,0x7d8294d2a042,21379063,0,0x0,6
tick,0x7d8294d2a042,21380134,0,0x0,6
tick,0x7d8294d2a042,21381267,0,0x0,6
tick,0x7d8294d2a042,21382422,0,0x0,6
tick,0x7d8294d2a042,21383550,0,0x0,6
tick,0x7d8294d2a042,21384726,0,0x0,6
tick,0x7d8294d2a042,21385799,0,0x0,6
tick,0x7d8294d2a042,21386876,0,0x0,6
tick,0x7d8294d2a042,21387966,0,0x0,6
tick,0x7d8294d2a042,21389107,0,0x0,6
tick,0x7d8294d2a042,21390264,0,0x0,6
tick,0x7d8294d2a042,21391436,0,0x0,6
tick,0x7d8294d2a042,21392506,0,0x0,6
tick,0x7d8294d2a042,21393563,0,0x0,6
tick,0x7d8294d2a042,21394726,0,0x0,6
tick,0x7d8294d2a042,21395811,0,0x0,6
tick,0x7d8294d2a042,21396907,0,0x0,6
tick,0x7d8294d2a042,21398062,0,0x0,6
tick,0x7d8294d2a042,21399260,0,0x0,6
tick,0x7d8294d2a042,21400399,0,0x0,6
tick,0x7d8294d2a042,21401456,0,0x0,6
tick,0x7d8294d2a042,21402624,0,0x0,6
tick,0x7d8294d2a042,21403649,0,0x0,6
tick,0x7d8294d2a042,21404840,0,0x0,6
tick,0x7d8294d2a042,21406006,0,0x0,6
tick,0x7d8294d2a042,21407176,0,0x0,6
tick,0x7d8294d2a042,21408248,0,0x0,6
tick,0x7d8294d2a042,21409334,0,0x0,6
tick,0x7d8294d2a042,21410479,0,0x0,6
tick,0x7d8294d2a042,21411559,0,0x0,6
tick,0x7d8294d2a042,21412740,0,0x0,6
tick,0x7d8294d2a042,21413890,0,0x0,6
tick,0x7d8294d2a042,21415055,0,0x0,6
tick,0x7d8294d2a042,21416126,0,0x0,6
tick,0x7d8294d2a042,21417279,0,0x0,6
tick,0x7d8294d2a042,21418453,0,0x0,6
tick,0x7d8294d2a042,21419517,0,0x0,6
tick,0x7d8294d2a042,21420755,0,0x0,6
tick,0x7d8294d2a042,21421893,0,0x0,6
tick,0x7d8294d2a042,21423048,0,0x0,6
tick,0x7d8294d2a042,21424120,0,0x0,6
tick,0x7d8294d2a042,21425242,0,0x0,6
tick,0x7d8294d2a042,21426387,0,0x0,6
tick,0x7d8294d2a042,21427482,0,0x0,6
tick,0x7d8294d2a042,21428698,0,0x0,6
tick,0x7d8294d2a042,21429830,0,0x0,6
tick,0x7d8294d2a042,21431009,0,0x0,6
tick,0x64950cfc94d1,21432065,0,0x0,6
tick,0x7d8294d2a042,21433135,0,0x0,6
tick,0x7d8294d2a042,21434197,0,0x0,6
tick,0x7d8294d2a042,21435265,0,0x0,6
tick,0x7d8294d2a042,21436338,0,0x0,6
tick,0x7d8294d2a042,21437424,0,0x0,6
tick,0x7d8294d2a042,21438477,0,0x0,6
tick,0x7d8294d2a042,21439577,0,0x0,6
tick,0x7d8294d2a042,21440725,0,0x0,6
tick,0x7d8294d2a042,21441840,0,0x0,6
tick,0x7d8294d2a042,21442992,0,0x0,6
tick,0x7d8294d2a042,21444063,0,0x0,6
tick,0x7d8294d2a042,21445205,0,0x0,6
tick,0x7d8294d2a042,21446298,0,0x0,6
tick,0x7d8294d2a042,21447490,0,0x0,6
tick,0x7d8294d2a042,21448701,0,0x0,6
tick,0x7d8294d2a042,21449852,0,0x0,6
tick,0x7d8294d2a042,21451021,0,0x0,6
tick,0x7d8294d2a042,21452084,0,0x0,6
tick,0x7d8294d2a042,21453243,0,0x0,6
tick,0x7d8294d2a042,21454424,0,0x0,6
tick,0x7d8294d2a042,21455613,0,0x0,6
tick,0x7d8294d2a042,21456777,0,0x0,6
tick,0x7d8294d2a042,21457949,0,0x0,6
tick,0x7d8294d2a042,21459131,0,0x0,6
tick,0x7d8294d2a042,21460247,0,0x0,6
tick,0x7d8294d2a042,21461233,0,0x0,6
tick,0x7d8294d2a042,21462374,0,0x0,6
tick,0x7d8294d2a042,21463319,0,0x0,6
tick,0x7d8294d2a042,21464387,0,0x0,6
tick,0x7d8294d2a042,21465475,0,0x0,6
tick,0x7d8294d2a042,21466581,0,0x0,6
tick,0x7d8294d2a042,21467613,0,0x0,6
tick,0x7d8294d2a042,21468688,0,0x0,6
tick,0x7d8294d2a042,21469747,0,0x0,6
tick,0x7d8294d2a042,21470820,0,0x0,6
tick,0x7d8294d2a042,21471909,0,0x0,6
tick,0x7d8294d2a042,21472982,0,0x0,6
tick,0x7d8294d2a042,21474054,0,0x0,6
tick,0x7d8294d2a042,21475145,0,0x0,6
tick,0x7d8294d2a042,21476213,0,0x0,6
tick,0x7d8294d2a042,21477297,0,0x0,6
tick,0x7d8294d2a042,21478376,0,0x0,6
tick,0x7d8294d2a042,21479413,0,0x0,6
tick,0x7d8294d2a042,21480661,0,0x0,6
tick,0x7d8294d2a042,21481739,0,0x0,6
tick,0x7d8294d2a042,21482814,0,0x0,6
tick,0x7d8294d2a042,21483986,0,0x0,6
tick,0x7d8294d2a042,21485103,0,0x0,6
tick,0x7d8294d2a042,21486196,0,0x0,6
tick,0x7d8294d2a042,21487269,0,0x0,6
tick,0x7d8294d2a042,21488430,0,0x0,6
tick,0x7d8294d2a042,21489490,0,0x0,6
tick,0x7d8294d2a042,21490530,0,0x0,6
tick,0x7d8294d2a042,21491500,0,0x0,6
tick,0x7d8294d2a042,21492650,0,0x0,6
tick,0x7d8294d2a042,21493705,0,0x0,6
tick,0x7d8294d1ba9a,21494755,0,0x0,6
tick,0x7d8294d2a042,21495743,0,0x0,6
tick,0x64950cef486c,21496868,0,0x0,6
tick,0x7d8294d2a042,21497938,0,0x0,6
tick,0x7d8294d2a042,21499019,0,0x0,6
tick,0x7d8294d2a042,21500112,0,0x0,6
tick,0x7d8294d2a042,21501188,0,0x0,6
tick,0x7d8294d2a042,21502334,0,0x0,6
tick,0x7d8294d2a042,21503510,0,0x0,6
tick,0x7d8294d2a042,21504592,0,0x0,6
tick,0x7d8294d2a042,21505769,0,0x0,6
tick,0x7d8294d2a042,21506900,0,0x0,6
tick,0x7d8294d2a042,21507963,0,0x0,6
tick,0x7d8294d2a042,21509049,0,0x0,6
tick,0x7d8294d2a042,21510131,0,0x0,6
tick,0x7d8294d2a042,21511213,0,0x0,6
tick,0x7d8294d2a042,21512271,0,0x0,6
tick,0x7d8294d2a042,21513345,0,0x0,6
tick,0x7d8294d2a042,21514424,0,0x0,6
tick,0x7d8294d2a042,21515476,0,0x0,6
tick,0x7d8294d2a042,21516587,0,0x0,6
tick,0x7d8294d2a042,21517658,0,0x0,6
tick,0x7d8294d2a042,21518842,0,0x0,6
tick,0x7d8294d2a042,21520009,0,0x0,6
tick,0x7d8294d2a042,21521092,0,0x0,6
tick,0x7d8294d2a042,21522265,0,0x0,6
tick,0x7d8294d2a042,21523428,0,0x0,6
tick,0x7d8294d2a042,21524570,0,0x0,6
tick,0x7d8294d2a042,21525652,0,0x0,6
tick,0x7d8294d2a042,21526631,0,0x0,6
tick,0x7d8294d2a042,21527636,0,0x0,6
tick,0x7d8294d2a042,21528850,0,0x0,6
tick,0x7d8294d2a042,21529986,0,0x0,6
tick,0x7d8294d2a042,21531161,0,0x0,6
tick,0x7d8294d2a042,21532199,0,0x0,6
tick,0x7d8294d2a042,21533293,0,0x0,6
tick,0x7d8294d2a042,21534436,0,0x0,6
tick,0x7d8294d2a042,21535578,0,0x0,6
tick,0x7d8294d2a042,21536733,0,0x0,6
tick,0x7d8294d2a042,21537896,0,0x0,6
tick,0x7d8294d2a042,21539096,0,0x0,6
tick,0x7d8294d2a042,21540139,0,0x0,6
tick,0x7d8294d2a042,21541285,0,0x0,6
tick,0x7d8294d2a042,21542466,0,0x0,6
tick,0x7d8294d2a042,21543498,0,0x0,6
tick,0x7d8294d2a042,21544799,0,0x0,6
tick,0x7d8294d2a042,21545968,0,0x0,6
tick,0x7d8294d2a042,21547137,0,0x0,6
tick,0x7d8294d2a042,21548182,0,0x0,6
tick,0x7d8294d2a042,21549323,0,0x0,6
tick,0x7d8294d2a042,21550412,0,0x0,6
tick,0x7d8294d2a042,21551534,0,0x0,6
tick,0x7d8294d2a042,21552695,0,0x0,6
tick,0x7d8294d2a042,21553825,0,0x0,6
tick,0x7d8294d2a042,21555088,0,0x0,6
tick,0x7d8294d2a042,21556125,0,0x0,6
tick,0x7d8294d2a042,21557247,0,0x0,6
tick,0x7d8294d2a042,21558421,0,0x0,6
tick,0x7d8294d2a042,21559548,0,0x0,6
tick,0x7d8294d2a042,21560691,0,0x0,6
tick,0x7d8294d2a042,21561839,0,0x0,6
tick,0x7d8294d2a042,21562933,0,0x0,6
tick,0x7d8294d2a042,21563993,0,0x0,6
tick,0x7d8294d2a042,21565142,0,0x0,6
tick,0x7d8294d2a042,21566353,0,0x0,6
tick,0x7d8294d2a042,21567479,0,0x0,6
tick,0x7d8294d2a042,21568622,0,0x0,6
tick,0x7d8294d2a042,21569682,0,0x0,6
tick,0x7d8294d2a042,21570874,0,0x0,6
tick,0x7d8294d2a042,21571851,0,0x0,6
tick,0x7d8294d2a042,21572970,0,0x0,6
tick,0x7d8294d2a042,21574108,0,0x0,6
tick,0x7d8294d2a042,21575353,0,0x0,6
tick,0x7d8294d2a042,21576473,0,0x0,6
tick,0x7d8294d2a042,21577524,0,0x0,6
tick,0x7d8294d2a042,21578675,0,0x0,6
tick,0x7d8294d2a042,21579643,0,0x0,6
tick,0x7d8294d2a042,21580897,0,0x0,6
tick,0x7d8294d2a042,21582048,0,0x0,6
tick,0x7d8294d2a042,21583207,0,0x0,6
tick,0x7d8294d2a042,21584270,0,0x0,6
tick,0x7d8294d2a042,21585335,0,0x0,6
tick,0x7d8294d2a042,21586498,0,0x0,6
tick,0x7d8294d2a042,21587597,0,0x0,6
tick,0x7d8294d2a042,21588793,0,0x0,6
tick,0x7d8294d2a042,21589923,0,0x0,6
tick,0x7d8294d2a042,21591144,0,0x0,6
tick,0x7d8294d2a042,21592268,0,0x0,6
tick,0x7d8294d2a042,21593320,0,0x0,6
tick,0x7d8294d2a042,21594478,0,0x0,6
tick,0x7d8294d2a042,21595602,0,0x0,6
tick,0x7d8294d2a042,21596785,0,0x0,6
tick,0x7d8294d2a042,21597948,0,0x0,6
tick,0x7d8294d2a042,21599117,0,0x0,6
tick,0x7d8294d2a042,21600166,0,0x0,6
tick,0x7d8294d2a042,21601297,0,0x0,6
tick,0x7d8294d2a042,21602467,0,0x0,6
tick,0x7d8294d2a042,21603563,0,0x0,6
tick,0x7d8294d2a042,21604765,0,0x0,6
tick,0x7d8294d2a042,21605941,0,0x0,6
tick,0x7d8294d2a042,21607100,0,0x0,6
tick,0x7d8294d2a042,21608144,0,0x0,6
tick,0x7d8294d2a042,21609317,0,0x0,6
tick,0x7d8294d2a042,21610440,0,0x0,6
tick,0x7d8294d2a042,21611589,0,0x0,6
tick,0x7d8294d2a042,21612770,0,0x0,6
tick,0x7d8294d2a042,21613914,0,0x0,6
tick,0x7d8294d2a042,21615089,0,0x0,6
tick,0x7d8294d2a042,21616151,0,0x0,6
tick,0x7d8294d2a042,21617281,0,0x0,6
tick,0x7d8294d2a042,21618424,0,0x0,6
tick,0x7d8294d2a042,21619561,0,0x0,6
tick,0x7d8294d2a042,21620728,0,0x0,6
tick,0x7d8294d2a042,21621867,0,0x0,6
tick,0x7d8294d2a042,21623049,0,0x0,6
tick,0x7d8294d2a042,21624087,0,0x0,6
tick,0x7d8294d2a042,21625270,0,0x0,6
tick,0x7d8294d2a042,21626393,0,0x0,6
tick,0x7d8294d2a042,21627497,0,0x0,6
tick,0x7d8294d2a042,21628597,0,0x0,6
tick,0x7d8294d2a042,21629613,0,0x0,6
tick,0x7d8294d2a042,21630755,0,0x0,6
tick,0x7d8294d2a042,21631857,0,0x0,6
tick,0x7d8294d2a042,21633023,0,0x0,6
tick,0x7d8294d2a042,21634164,0,0x0,6
tick,0x7d8294d2a042,21635352,0,0x0,6
tick,0x7d8294d2a042,21636469,0,0x0,6
tick,0x7d8294d2a042,21637488,0,0x0,6
tick,0x7d8294d2a042,21638627,0,0x0,6
tick,0x7d8294d2a042,21639656,0,0x0,6
tick,0x7d8294d2a042,21640869,0,0x0,6
tick,0x7d8294d2a042,21642000,0,0x0,6
tick,0x7d8294d2a042,21643131,0,0x0,6
tick,0x7d8294d2a042,21644214,0,0x0,6
tick,0x7d8294d2a042,21645362,0,0x0,6
tick,0x7d8294d2a042,21646526,0,0x0,6
tick,0x7d8294d2a042,21647587,0,0x0,6
tick,0x7d8294d2a042,21648776,0,0x0,6
tick,0x7d8294d2a042,21649915,0,0x0,6
tick,0x7d8294d2a042,21651029,0,0x0,6
tick,0x7d8294d2a042,21652135,0,0x0,6
tick,0x7d8294d2a042,21653153,0,0x0,6
tick,0x7d8294d2a042,21654298,0,0x0,6
tick,0x7d8294d2a042,21655458,0,0x0,6
tick,0x7d8294d2a042,21656711,0,0x0,6
tick,0x7d8294d2a042,21657936,0,0x0,6
tick,0x7d8294d2a042,21659023,0,0x0,6
tick,0x7d8294d2a042,21660125,0,0x0,6
tick,0x7d8294d2a042,21661291,0,0x0,6
tick,0x7d8294d2a042,21662426,0,0x0,6
tick,0x7d8294d2a042,21663542,0,0x0,6
tick,0x7d8294d2a042,21664721,0,0x0,6
tick,0x7d8294d2a042,21665867,0,0x0,6
tick,0x7d8294d2a042,21666984,0,0x0,6
tick,0x7d8294d2a042,21668105,0,0x0,6
tick,0x7d8294d2a042,21669242,0,0x0,6
tick,0x7d8294d2a042,21670392,0,0x0,6
tick,0x7d8294d2a042,21671552,0,0x0,6
tick,0x7d8294d2a042,21672739,0,0x0,6
tick,0x7d8294d2a042,21673887,0,0x0,6
tick,0x7d8294d2a042,21675016,0,0x0,6
tick,0x7d8294d2a042,21676161,0,0x0,6
tick,0x7d8294d2a042,21677324,0,0x0,6
tick,0x7d8294d2a042,21678460,0,0x0,6
tick,0x7d8294d2a042,21679510,0,0x0,6
tick,0x7d8294d2a042,21680706,0,0x0,6
tick,0x7d8294d2a042,21681887,0,0x0,6
tick,0x7d8294d2a042,21682778,0,0x0,6
tick,0x7d8294d2a042,21683947,0,0x0,6
tick,0x7d8294d2a042,21685161,0,0x0,6
tick,0x7d8294d2a042,21686357,0,0x0,6
tick,0x7d8294d2a042,21687484,0,0x0,6
tick,0x7d8294d2a042,21688720,0,0x0,6
tick,0x7d8294d2a042,21689900,0,0x0,6
tick,0x7d8294d2a042,21690964,0,0x0,6
tick,0x7d8294d2a042,21692164,0,0x0,6
tick,0x7d8294d2a042,21693336,0,0x0,6
tick,0x7d8294d2a042,21694362,0,0x0,6
tick,0x7d8294d2a042,21695389,0,0x0,6
tick,0x7d8294d2a042,21696550,0,0x0,6
tick,0x7d8294d2a042,21697610,0,0x0,6
tick,0x7d8294d2a042,21698629,0,0x0,6
tick,0x7d8294d2a042,21699756,0,0x0,6
tick,0x7d8294d2a042,21700862,0,0x0,6
tick,0x7d8294d2a042,21701943,0,0x0,6
tick,0x7d8294d2a042,21702951,0,0x0,6
tick,0x7d8294d2a042,21704095,0,0x0,6
tick,0x7d8294d2a042,21705203,0,0x0,6
tick,0x7d8294d2a042,21706322,0,0x0,6
tick,0x7d8294d2a042,21707332,0,0x0,6
tick,0x7d8294d2a042,21708616,0,0x0,6
tick,0x7d8294d2a042,21709775,0,0x0,6
tick,0x7d8294d2a042,21710724,0,0x0,6
tick,0x7d8294d2a042,21711933,0,0x0,6
tick,0x7d8294d2a042,21713066,0,0x0,6
tick,0x7d8294d2a042,21714176,0,0x0,6
tick,0x7d8294d2a042,21715187,0,0x0,6
tick,0x7d8294d2a042,21716381,0,0x0,6
tick,0x7d8294d2a042,21717521,0,0x0,6
tick,0x7d8294d2a042,21718474,0,0x0,6
tick,0x7d8294d2a042,21719537,0,0x0,6
tick,0x7d8294d1ba9a,21720698,0,0x0,6
tick,0x7d8294d2a042,21721850,0,0x0,6
tick,0x7d8294d2a042,21723004,0,0x0,6
tick,0x7d8294d2a042,21724092,0,0x0,6
tick,0x7d8294d2a042,21725243,0,0x0,6
tick,0x7d8294d2a042,21726407,0,0x0,6
tick,0x7d8294d2a042,21727504,0,0x0,6
tick,0x7d8294d2a042,21728768,0,0x0,6
tick,0x7d8294d2a042,21729901,0,0x0,6
tick,0x7d8294d2a042,21730979,0,0x0,6
tick,0x7d8294d2a042,21732109,0,0x0,6
tick,0x7d8294d2a042,21733280,0,0x0,6
tick,0x7d8294d2a042,21734437,0,0x0,6
tick,0x7d8294d2a042,21735613,0,0x0,6
tick,0x7d8294d2a042,21736783,0,0x0,6
tick,0x7d8294d2a042,21737794,0,0x0,6
code-creation,JS,12,21738253,0x64956d817240,608,NonEmpty file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:86:14,0x2c3700855fcc,*
code-source-info,0x64956d817240,314,1625,1700,C36O1625C54O1644C102O1667C182O1689C247O1699C273O1625C322O1644,,
tick,0x7d8294d2a042,21738947,0,0x0,6
tick,0x7d8294d2a042,21740083,0,0x0,6
tick,0x7d8294d2a042,21741121,0,0x0,6
tick,0x7d8294d2a042,21742268,0,0x0,6
tick,0x7d8294d2a042,21743320,0,0x0,6
tick,0x7d8294d2a042,21744565,0,0x0,6
tick,0x7d8294d2a042,21745643,0,0x0,6
tick,0x7d8294d2a042,21746651,0,0x0,6
tick,0x7d8294d2a042,21747671,0,0x0,6
tick,0x7d8294d2a042,21748914,0,0x0,6
tick,0x7d8294d2a042,21750000,0,0x0,6
tick,0x7d8294d2a042,21751052,0,0x0,6
tick,0x7d8294d2a042,21752255,0,0x0,6
tick,0x7d8294d2a042,21753347,0,0x0,6
tick,0x7d8294d2a042,21754451,0,0x0,6
tick,0x7d8294d2a042,21755586,0,0x0,6
tick,0x7d8294d2a042,21756786,0,0x0,6
tick,0x7d8294d2a042,21757932,0,0x0,6
tick,0x7d8294d2a042,21758935,0,0x0,6
tick,0x7d8294d2a042,21760144,0,0x0,6
tick,0x7d8294d2a042,21761324,0,0x0,6
tick,0x7d8294d2a042,21762326,0,0x0,6
tick,0x7d8294d2a042,21763526,0,0x0,6
tick,0x7d8294d2a042,21764730,0,0x0,6
tick,0x7d8294d2a042,21765933,0,0x0,6
tick,0x7d8294d2a042,21767019,0,0x0,6
tick,0x7d8294d2a042,21768122,0,0x0,6
tick,0x7d8294d2a042,21769307,0,0x0,6
tick,0x7d8294d2a042,21770474,0,0x0,6
tick,0x7d8294d2a042,21771585,0,0x0,6
tick,0x7d8294d2a042,21772776,0,0x0,6
tick,0x7d8294d2a042,21773990,0,0x0,6
tick,0x7d8294d2a042,21775125,0,0x0,6
tick,0x7d8294d2a042,21776159,0,0x0,6
tick,0x7d8294d2a042,21777275,0,0x0,6
tick,0x7d8294d2a042,21778444,0,0x0,6
tick,0x7d8294d2a042,21779561,0,0x0,6
tick,0x7d8294d2a042,21780726,0,0x0,6
tick,0x7d8294d2a042,21781861,0,0x0,6
tick,0x7d8294d2a042,21783046,0,0x0,6
tick,0x7d8294d2a042,21784111,0,0x0,6
tick,0x7d8294d2a042,21785220,0,0x0,6
tick,0x7d8294d2a042,21786392,0,0x0,6
tick,0x7d8294d2a042,21787562,0,0x0,6
tick,0x7d8294d2a042,21788697,0,0x0,6
tick,0x7d8294d2a042,21789874,0,0x0,6
tick,0x7d8294d2a042,21791032,0,0x0,6
tick,0x7d8294d2a042,21792062,0,0x0,6
tick,0x7d8294d2a042,21793235,0,0x0,6
tick,0x7d8294d2a042,21794390,0,0x0,6
tick,0x7d8294d2a042,21795510,0,0x0,6
tick,0x7d8294d2a042,21796689,0,0x0,6
tick,0x7d8294d2a042,21797865,0,0x0,6
tick,0x7d8294d2a042,21798958,0,0x0,6
tick,0x7d8294d2a042,21800070,0,0x0,6
tick,0x7d8294d2a042,21801175,0,0x0,6
tick,0x7d8294d2a042,21802355,0,0x0,6
tick,0x7d8294d2a042,21803482,0,0x0,6
tick,0x7d8294d2a042,21804604,0,0x0,6
tick,0x7d8294d2a042,21805708,0,0x0,6
tick,0x7d8294d2a042,21806828,0,0x0,6
tick,0x7d8294d2a042,21807892,0,0x0,6
tick,0x7d8294d2a042,21809006,0,0x0,6
tick,0x7d8294d2a042,21810088,0,0x0,6
tick,0x7d8294d2a042,21811293,0,0x0,6
tick,0x7d8294d2a042,21812375,0,0x0,6
tick,0x7d8294d2a042,21813428,0,0x0,6
tick,0x7d8294d2a042,21814581,0,0x0,6
tick,0x7d8294d2a042,21815620,0,0x0,6
tick,0x7d8294d2a042,21816814,0,0x0,6
tick,0x7d8294d2a042,21817964,0,0x0,6
tick,0x7d8294d2a042,21819066,0,0x0,6
tick,0x7d8294d2a042,21820129,0,0x0,6
tick,0x7d8294d2a042,21821254,0,0x0,6
tick,0x7d8294d2a042,21822488,0,0x0,6
tick,0x7d8294d2a042,21823544,0,0x0,6
tick,0x7d8294d2a042,21824778,0,0x0,6
tick,0x7d8294d2a042,21825934,0,0x0,6
tick,0x7d8294d2a042,21827092,0,0x0,6
tick,0x7d8294d2a042,21828140,0,0x0,6
tick,0x7d8294d2a042,21829318,0,0x0,6
tick,0x7d8294d2a042,21830381,0,0x0,6
tick,0x7d8294d2a042,21831551,0,0x0,6
tick,0x7d8294d2a042,21832742,0,0x0,6
tick,0x7d8294d2a042,21833932,0,0x0,6
tick,0x7d8294d2a042,21835078,0,0x0,6
tick,0x7d8294d2a042,21836145,0,0x0,6
tick,0x7d8294d2a042,21837270,0,0x0,6
tick,0x7d8294d2a042,21838449,0,0x0,6
tick,0x7d8294d2a042,21839517,0,0x0,6
tick,0x7d8294d2a042,21840767,0,0x0,6
tick,0x7d8294d2a042,21841918,0,0x0,6
tick,0x7d8294d2a042,21843098,0,0x0,6
tick,0x7d8294d2a042,21844172,0,0x0,6
tick,0x7d8294d2a042,21845332,0,0x0,6
tick,0x7d8294d2a042,21846439,0,0x0,6
tick,0x7d8294d2a042,21847571,0,0x0,6
tick,0x7d8294d2a042,21848730,0,0x0,6
tick,0x7d8294d2a042,21849877,0,0x0,6
tick,0x7d8294d2a042,21851057,0,0x0,6
tick,0x7d8294d2a042,21852091,0,0x0,6
tick,0x7d8294d2a042,21853239,0,0x0,6
tick,0x7d8294d2a042,21854403,0,0x0,6
tick,0x7d8294d2a042,21855563,0,0x0,6
tick,0x7d8294d2a042,21856679,0,0x0,6
tick,0x7d8294d2a042,21857859,0,0x0,6
tick,0x7d8294d2a042,21859010,0,0x0,6
tick,0x7d8294d2a042,21860063,0,0x0,6
tick,0x7d8294d2a042,21861218,0,0x0,6
tick,0x7d8294d2a042,21862340,0,0x0,6
tick,0x7d8294d2a042,21863611,0,0x0,6
tick,0x7d8294d2a042,21864587,0,0x0,6
tick,0x7d8294d2a042,21865647,0,0x0,6
tick,0x7d8294d2a042,21866715,0,0x0,6
tick,0x7d8294d2a042,21867712,0,0x0,6
tick,0x7d8294d2a042,21868805,0,0x0,6
tick,0x7d8294d2a042,21869874,0,0x0,6
tick,0x7d8294d2a042,21870951,0,0x0,6
tick,0x7d8294d2a042,21871981,0,0x0,6
tick,0x7d8294d2a042,21873039,0,0x0,6
tick,0x7d8294d2a042,21874111,0,0x0,6
tick,0x7d8294d2a042,21875173,0,0x0,6
tick,0x7d8294d2a042,21876223,0,0x0,6
tick,0x7d8294d2a042,21877312,0,0x0,6
tick,0x7d8294d2a042,21878368,0,0x0,6
tick,0x7d8294d2a042,21879344,0,0x0,6
tick,0x7d8294d2a042,21880398,0,0x0,6
tick,0x7d8294d2a042,21881452,0,0x0,6
tick,0x7d8294d2a042,21882454,0,0x0,6
tick,0x7d8294d2a042,21883521,0,0x0,6
tick,0x7d8294d2a042,21884653,0,0x0,6
tick,0x7d8294d2a042,21885713,0,0x0,6
tick,0x7d8294d2a042,21886778,0,0x0,6
tick,0x7d8294d2a042,21887884,0,0x0,6
tick,0x7d8294d2a042,21888898,0,0x0,6
tick,0x7d8294d2a042,21889952,0,0x0,6
tick,0x7d8294d2a042,21891019,0,0x0,6
tick,0x7d8294d2a042,21892135,0,0x0,6
tick,0x7d8294d2a042,21893194,0,0x0,6
tick,0x7d8294d2a042,21894265,0,0x0,6
tick,0x7d8294d2a042,21895313,0,0x0,6
tick,0x7d8294d2a042,21896442,0,0x0,6
tick,0x7d8294d2a042,21897445,0,0x0,6
tick,0x7d8294d2a042,21898436,0,0x0,6
tick,0x7d8294d2a042,21899492,0,0x0,6
tick,0x7d8294d2a042,21900534,0,0x0,6
tick,0x7d8294d2a042,21901660,0,0x0,6
tick,0x7d8294d2a042,21902766,0,0x0,6
tick,0x7d8294d2a042,21903701,0,0x0,6
tick,0x7d8294d2a042,21904837,0,0x0,6
tick,0x7d8294d2a042,21905872,0,0x0,6
tick,0x7d8294d2a042,21906889,0,0x0,6
tick,0x7d8294d2a042,21908092,0,0x0,6
tick,0x7d8294d2a042,21909028,0,0x0,6
tick,0x7d8294d2a042,21910074,0,0x0,6
tick,0x7d8294d2a042,21911220,0,0x0,6
tick,0x7d8294d2a042,21912221,0,0x0,6
tick,0x7d8294d2a042,21913321,0,0x0,6
tick,0x7d8294d2a042,21914380,0,0x0,6
tick,0x7d8294d2a042,21915408,0,0x0,6
tick,0x7d8294d2a042,21916476,0,0x0,6
tick,0x7d8294d2a042,21917535,0,0x0,6
tick,0x7d8294d2a042,21918595,0,0x0,6
tick,0x7d8294d2a042,21919716,0,0x0,6
tick,0x7d8294d2a042,21920811,0,0x0,6
tick,0x7d8294d2a042,21921783,0,0x0,6
tick,0x7d8294d2a042,21922845,0,0x0,6
tick,0x7d8294d2a042,21924056,0,0x0,6
tick,0x7d8294d2a042,21925110,0,0x0,6
tick,0x7d8294d2a042,21926035,0,0x0,6
tick,0x7d8294d2a042,21927091,0,0x0,6
tick,0x7d8294d2a042,21928277,0,0x0,6
tick,0x7d8294d2a042,21929365,0,0x0,6
tick,0x7d8294d2a042,21930276,0,0x0,6
tick,0x7d8294d2a042,21931306,0,0x0,6
tick,0x7d8294d2a042,21932475,0,0x0,6
tick,0x7d8294d2a042,21933538,0,0x0,6
tick,0x7d8294d2a042,21934572,0,0x0,6
tick,0x7d8294d2a042,21935596,0,0x0,6
tick,0x7d8294d2a042,21936674,0,0x0,6
tick,0x7d8294d2a042,21937744,0,0x0,6
tick,0x7d8294d2a042,21938804,0,0x0,6
tick,0x7d8294d1ba9a,21939871,0,0x0,6
tick,0x7d8294d2a042,21940965,0,0x0,6
tick,0x7d8294d2a042,21942016,0,0x0,6
tick,0x7d8294d2a042,21943101,0,0x0,6
tick,0x7d8294d2a042,21944202,0,0x0,6
tick,0x7d8294d2a042,21945258,0,0x0,6
tick,0x7d8294d2a042,21946314,0,0x0,6
tick,0x7d8294d2a042,21947377,0,0x0,6
tick,0x7d8294d2a042,21948448,0,0x0,6
tick,0x7d8294d2a042,21949476,0,0x0,6
code-creation,JS,12,21949794,0x64956d817500,968,next file:///home/harm/git/gleam/test/performance/test_rb_tree/build/dev/javascript/prelude.mjs:72:7,0x2c3700855f28,*
code-source-info,0x64956d817500,314,1324,1535,C36O1324C50O1342C84O1362C111O1351C408O1377C470O1399C499O1445C514O1425C534O1431C537O1475C560O1489C622O1505C626O1525C634O1324C683O1351C762O1377C789O1489C821O1362,,
tick,0x7d8294d2a042,21950409,0,0x0,6
tick,0x7d8294d2a042,21951550,0,0x0,6
tick,0x7d8294d2a042,21952623,0,0x0,6
tick,0x7d8294d2a042,21953640,0,0x0,6
tick,0x7d8294d2a042,21954714,0,0x0,6
tick,0x7d8294d2a042,21955888,0,0x0,6
tick,0x7d8294d2a042,21957030,0,0x0,6
tick,0x7d8294d2a042,21958012,0,0x0,6
tick,0x7d8294d2a042,21959085,0,0x0,6
tick,0x7d8294d2a042,21960224,0,0x0,6
tick,0x7d8294d2a042,21961337,0,0x0,6
tick,0x7d8294d2a042,21962317,0,0x0,6
tick,0x7d8294d2a042,21963473,0,0x0,6
tick,0x7d8294d2a042,21964651,0,0x0,6
tick,0x7d8294d2a042,21965802,0,0x0,6
tick,0x7d8294d2a042,21966779,0,0x0,6
tick,0x7d8294d2a042,21968020,0,0x0,6
tick,0x7d8294d2a042,21969115,0,0x0,6
tick,0x7d8294d2a042,21970154,0,0x0,6
tick,0x7d8294d2a042,21971164,0,0x0,6
tick,0x7d8294d2a042,21972303,0,0x0,6
tick,0x7d8294d2a042,21973381,0,0x0,6
tick,0x7d8294d2a042,21974387,0,0x0,6
tick,0x7d8294d2a042,21975414,0,0x0,6
tick,0x7d8294d2a042,21976692,0,0x0,6
tick,0x7d8294d2a042,21977847,0,0x0,6
tick,0x7d8294d2a042,21978817,0,0x0,6
tick,0x7d8294d2a042,21979994,0,0x0,6
tick,0x7d8294d2a042,21981167,0,0x0,6
tick,0x7d8294d2a042,21982123,0,0x0,6
tick,0x7d8294d2a042,21983196,0,0x0,6
tick,0x7d8294d2a042,21984427,0,0x0,6
tick,0x7d8294d2a042,21985490,0,0x0,6
tick,0x7d8294d2a042,21986495,0,0x0,6
tick,0x7d8294d2a042,21987626,0,0x0,6
tick,0x7d8294d2a042,21988799,0,0x0,6
tick,0x7d8294d2a042,21989932,0,0x0,6
tick,0x7d8294d2a042,21990914,0,0x0,6
tick,0x7d8294d2a042,21992046,0,0x0,6
tick,0x7d8294d2a042,21993172,0,0x0,6
tick,0x7d8294d2a042,21994157,0,0x0,6
tick,0x7d8294d2a042,21995228,0,0x0,6
tick,0x7d8294d2a042,21996447,0,0x0,6
tick,0x7d8294d2a042,21997525,0,0x0,6
tick,0x7d8294d2a042,21998526,0,0x0,6
tick,0x7d8294d2a042,21999646,0,0x0,6
tick,0x7d8294d2a042,22000825,0,0x0,6
tick,0x7d8294d2a042,22001975,0,0x0,6
tick,0x7d8294d2a042,22002937,0,0x0,6
tick,0x7d8294d2a042,22004080,0,0x0,6
tick,0x7d8294d2a042,22005206,0,0x0,6
tick,0x7d8294d2a042,22006353,0,0x0,6
tick,0x7d8294d2a042,22007502,0,0x0,6
tick,0x7d8294d2a042,22008604,0,0x0,6
tick,0x7d8294d2a042,22009759,0,0x0,6
tick,0x7d8294d2a042,22010819,0,0x0,6
tick,0x7d8294d2a042,22011905,0,0x0,6
tick,0x7d8294d2a042,22012979,0,0x0,6
tick,0x7d8294d2a042,22014160,0,0x0,6
tick,0x7d8294d2a042,22015282,0,0x0,6
tick,0x7d8294d2a042,22016428,0,0x0,6
tick,0x7d8294d2a042,22017535,0,0x0,6
tick,0x7d8294d2a042,22018632,0,0x0,6
tick,0x7d8294d2a042,22019660,0,0x0,6
tick,0x7d8294d2a042,22020806,0,0x0,6
tick,0x7d8294d2a042,22021946,0,0x0,6
tick,0x7d8294d2a042,22023050,0,0x0,6
tick,0x7d8294d2a042,22024116,0,0x0,6
tick,0x7d8294d2a042,22025229,0,0x0,6
tick,0x7d8294d2a042,22026378,0,0x0,6
tick,0x7d8294d2a042,22027553,0,0x0,6
tick,0x7d8294d2a042,22028637,0,0x0,6
tick,0x7d8294d2a042,22029810,0,0x0,6
tick,0x7d8294d2a042,22030929,0,0x0,6
tick,0x7d8294d2a042,22032030,0,0x0,6
tick,0x7d8294d2a042,22033198,0,0x0,6
tick,0x7d8294d2a042,22034352,0,0x0,6
tick,0x7d8294d2a042,22035464,0,0x0,6
tick,0x7d8294d2a042,22036527,0,0x0,6
tick,0x7d8294d2a042,22037669,0,0x0,6
tick,0x7d8294d2a042,22038757,0,0x0,6
tick,0x7d8294d2a042,22039900,0,0x0,6
tick,0x7d8294d2a042,22041010,0,0x0,6
tick,0x7d8294d2a042,22042161,0,0x0,6
tick,0x7d8294d2a042,22043280,0,0x0,6
tick,0x7d8294d2a042,22044421,0,0x0,6
tick,0x7d8294d2a042,22045520,0,0x0,6
tick,0x7d8294d2a042,22046658,0,0x0,6
tick,0x7d8294d2a042,22047707,0,0x0,6
tick,0x7d8294d2a042,22048855,0,0x0,6
tick,0x7d8294d2a042,22050020,0,0x0,6
tick,0x7d8294d2a042,22051112,0,0x0,6
tick,0x7d8294d2a042,22052173,0,0x0,6
tick,0x7d8294d2a042,22053295,0,0x0,6
tick,0x7d8294d2a042,22054355,0,0x0,6
tick,0x7d8294d2a042,22055495,0,0x0,6
tick,0x7d8294d2a042,22056708,0,0x0,6
tick,0x7d8294d2a042,22057814,0,0x0,6
tick,0x7d8294d2a042,22059005,0,0x0,6
tick,0x7d8294d2a042,22060060,0,0x0,6
tick,0x7d8294d2a042,22061231,0,0x0,6
tick,0x7d8294d2a042,22062366,0,0x0,6
tick,0x7d8294d2a042,22063468,0,0x0,6
tick,0x7d8294d2a042,22064618,0,0x0,6
tick,0x7d8294d2a042,22065611,0,0x0,6
tick,0x7d8294d2a042,22066839,0,0x0,6
tick,0x7d8294d2a042,22067970,0,0x0,6
tick,0x7d8294d2a042,22069010,0,0x0,6
tick,0x7d8294d2a042,22070173,0,0x0,6
tick,0x7d8294d2a042,22071383,0,0x0,6
tick,0x7d8294d2a042,22072511,0,0x0,6
tick,0x7d8294d2a042,22073553,0,0x0,6
tick,0x7d8294d2a042,22074706,0,0x0,6
tick,0x7d8294d2a042,22075683,0,0x0,6
tick,0x7d8294d2a042,22076920,0,0x0,6
tick,0x7d8294d2a042,22078028,0,0x0,6
tick,0x7d8294d2a042,22079109,0,0x0,6
tick,0x7d8294d2a042,22080156,0,0x0,6
tick,0x7d8294d2a042,22081252,0,0x0,6
tick,0x7d8294d2a042,22082348,0,0x0,6
tick,0x7d8294d2a042,22083432,0,0x0,6
tick,0x7d8294d2a042,22084485,0,0x0,6
tick,0x7d8294d2a042,22085568,0,0x0,6
tick,0x7d8294d2a042,22086622,0,0x0,6
tick,0x7d8294d2a042,22087607,0,0x0,6
tick,0x7d8294d2a042,22088826,0,0x0,6
tick,0x7d8294d2a042,22089988,0,0x0,6
tick,0x7d8294d2a042,22091055,0,0x0,6
tick,0x64950ceedf90,22092141,0,0x0,6
tick,0x7d8294d2a042,22093198,0,0x0,6
tick,0x7d8294d2a042,22094252,0,0x0,6
tick,0x7d8294d2a042,22095329,0,0x0,6
tick,0x7d8294d2a042,22096412,0,0x0,6
tick,0x7d8294d2a042,22097494,0,0x0,6
tick,0x7d8294d2a042,22098569,0,0x0,6
tick,0x7d8294d2a042,22099579,0,0x0,6
tick,0x7d8294d2a042,22100767,0,0x0,6
tick,0x64950cf10320,22101856,0,0x0,6
tick,0x7d8294d2a042,22102951,0,0x0,6
tick,0x7d8294d2a042,22104007,0,0x0,6
tick,0x7d8294d2a042,22105093,0,0x0,6
tick,0x7d8294d2a042,22106222,0,0x0,6
tick,0x7d8294d2a042,22107406,0,0x0,6
tick,0x7d8294d2a042,22108531,0,0x0,6
tick,0x7d8294d2a042,22109635,0,0x0,6
tick,0x7d8294d2a042,22110670,0,0x0,6
tick,0x7d8294d2a042,22111704,0,0x0,6
tick,0x7d8294d2a042,22112815,0,0x0,6
tick,0x7d8294d2a042,22113884,0,0x0,6
tick,0x7d8294d2a042,22115004,0,0x0,6
tick,0x7d8294d2a042,22116064,0,0x0,6
tick,0x7d8294d2a042,22117190,0,0x0,6
tick,0x7d8294d2a042,22118303,0,0x0,6
tick,0x7d8294d2a042,22119319,0,0x0,6
tick,0x7d8294d2a042,22120415,0,0x0,6
tick,0x7d8294d2a042,22121434,0,0x0,6
tick,0x7d8294d2a042,22122604,0,0x0,6
tick,0x7d8294d2a042,22123565,0,0x0,6
tick,0x7d8294d2a042,22124617,0,0x0,6
tick,0x7d8294d2a042,22125736,0,0x0,6
tick,0x7d8294d2a042,22126832,0,0x0,6
tick,0x7d8294d2a042,22127906,0,0x0,6
tick,0x7d8294d2a042,22128988,0,0x0,6
tick,0x7d8294d2a042,22130149,0,0x0,6
tick,0x7d8294d2a042,22131220,0,0x0,6
tick,0x7d8294d2a042,22132355,0,0x0,6
tick,0x7d8294d2a042,22133468,0,0x0,6
tick,0x7d8294d2a042,22134461,0,0x0,6
tick,0x7d8294d2a042,22135488,0,0x0,6
tick,0x7d8294d2a042,22136548,0,0x0,6
tick,0x7d8294d2a042,22137624,0,0x0,6
tick,0x7d8294d2a042,22138695,0,0x0,6
tick,0x7d8294d2a042,22139775,0,0x0,6
tick,0x7d8294d2a042,22140848,0,0x0,6
tick,0x7d8294d2a042,22141922,0,0x0,6
tick,0x7d8294d2a042,22142994,0,0x0,6
tick,0x7d8294d2a042,22144153,0,0x0,6
tick,0x7d8294d2a042,22145244,0,0x0,6
tick,0x7d8294d2a042,22146243,0,0x0,6
tick,0x7d8294d2a042,22147315,0,0x0,6
tick,0x7d8294d2a042,22148534,0,0x0,6
tick,0x7d8294d2a042,22149616,0,0x0,6
tick,0x7d8294d2a042,22150615,0,0x0,6
tick,0x7d8294d2a042,22151714,0,0x0,6
tick,0x7d8294d2a042,22152873,0,0x0,6
tick,0x7d8294d2a042,22154055,0,0x0,6
tick,0x7d8294d2a042,22155010,0,0x0,6
tick,0x7d8294d2a042,22156125,0,0x0,6
tick,0x7d8294d2a042,22157192,0,0x0,6
tick,0x7d8294d2a042,22158175,0,0x0,6
tick,0x7d8294d2a042,22159226,0,0x0,6
tick,0x7d8294d2a042,22160361,0,0x0,6
tick,0x7d8294d2a042,22161433,0,0x0,6
tick,0x64950bc52bcb,22162471,0,0x0,6
tick,0x7d8294d29ff4,22163474,0,0x0,6
tick,0x7d8294d2a042,22164612,0,0x0,6
tick,0x7d8294d2a042,22165685,0,0x0,6
tick,0x7d8294d2a042,22166753,0,0x0,6
tick,0x7d8294d2a042,22167757,0,0x0,6
tick,0x7d8294d2a042,22168902,0,0x0,6
tick,0x7d8294d2a042,22170149,0,0x0,6
tick,0x7d8294d2a042,22171296,0,0x0,6
tick,0x7d8294d2a042,22172366,0,0x0,6
tick,0x7d8294d2a042,22173429,0,0x0,6
tick,0x7d8294d0f727,22174738,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,22175501,0,0x0,6
tick,0x7d8294d2a042,22176619,0,0x0,6
tick,0x7d8294d2a042,22177695,0,0x0,6
tick,0x7d8294d2a042,22178699,0,0x0,6
tick,0x7d8294d2a042,22179868,0,0x0,6
tick,0x7d8294d2a042,22180938,0,0x0,6
tick,0x7d8294d2a042,22181937,0,0x0,6
tick,0x7d8294d2a042,22183018,0,0x0,6
tick,0x7d8294d2a042,22184164,0,0x0,6
tick,0x7d8294d2a042,22185314,0,0x0,6
tick,0x7d8294d2a042,22186316,0,0x0,6
tick,0x7d8294d2a042,22187394,0,0x0,6
tick,0x7d8294d2a042,22188600,0,0x0,6
tick,0x7d8294d2a042,22189766,0,0x0,6
tick,0x7d8294d2a042,22190770,0,0x0,6
tick,0x7d8294d2a042,22191917,0,0x0,6
tick,0x7d8294d2a042,22193058,0,0x0,6
tick,0x7d8294d2a042,22194134,0,0x0,6
tick,0x7d8294d2a042,22195145,0,0x0,6
tick,0x7d8294d2a042,22196292,0,0x0,6
tick,0x7d8294d2a042,22197373,0,0x0,6
tick,0x7d8294d2a042,22198460,0,0x0,6
tick,0x7d8294d2a042,22199484,0,0x0,6
tick,0x7d8294d2a042,22200652,0,0x0,6
tick,0x7d8294d2a042,22201817,0,0x0,6
tick,0x7d8294d2a042,22202959,0,0x0,6
tick,0x7d8294d2a042,22203894,0,0x0,6
tick,0x7d8294d2a042,22205032,0,0x0,6
tick,0x7d8294d2a042,22206171,0,0x0,6
tick,0x7d8294d2a042,22207329,0,0x0,6
tick,0x7d8294d2a042,22208470,0,0x0,6
tick,0x7d8294d2a042,22209552,0,0x0,6
tick,0x7d8294d2a042,22210619,0,0x0,6
tick,0x7d8294d2a042,22211619,0,0x0,6
tick,0x7d8294d2a042,22212819,0,0x0,6
tick,0x7d8294d2a042,22213995,0,0x0,6
tick,0x7d8294d2a042,22215055,0,0x0,6
tick,0x7d8294d2a042,22216123,0,0x0,6
tick,0x7d8294d2a042,22217195,0,0x0,6
tick,0x7d8294d2a042,22218348,0,0x0,6
tick,0x7d8294d2a042,22219493,0,0x0,6
tick,0x7d8294d2a042,22220681,0,0x0,6
tick,0x7d8294d2a042,22221820,0,0x0,6
tick,0x7d8294d2a042,22222977,0,0x0,6
tick,0x7d8294d2a042,22224044,0,0x0,6
tick,0x7d8294d2a042,22225207,0,0x0,6
tick,0x7d8294d2a042,22226363,0,0x0,6
tick,0x7d8294d2a042,22227490,0,0x0,6
tick,0x7d8294d2a042,22228659,0,0x0,6
tick,0x7d8294d2a042,22229810,0,0x0,6
tick,0x7d8294d2a042,22230976,0,0x0,6
tick,0x7d8294d2a042,22232045,0,0x0,6
tick,0x7d8294d2a042,22233186,0,0x0,6
tick,0x7d8294d2a042,22234346,0,0x0,6
tick,0x7d8294d2a042,22235512,0,0x0,6
tick,0x7d8294d2a042,22236655,0,0x0,6
tick,0x7d8294d2a042,22237812,0,0x0,6
tick,0x7d8294d2a042,22238966,0,0x0,6
tick,0x7d8294d2a042,22240055,0,0x0,6
tick,0x7d8294d2a042,22241207,0,0x0,6
tick,0x7d8294d2a042,22242297,0,0x0,6
tick,0x7d8294d2a042,22243513,0,0x0,6
tick,0x7d8294d2a042,22244762,0,0x0,6
tick,0x7d8294d2a042,22245853,0,0x0,6
tick,0x7d8294d2a042,22247095,0,0x0,6
tick,0x7d8294d2a042,22248142,0,0x0,6
tick,0x7d8294d2a042,22249263,0,0x0,6
tick,0x7d8294d2a042,22250433,0,0x0,6
tick,0x7d8294d2a042,22251527,0,0x0,6
tick,0x7d8294d2a042,22252742,0,0x0,6
tick,0x7d8294d2a042,22253880,0,0x0,6
tick,0x7d8294d2a042,22254982,0,0x0,6
tick,0x7d8294d2a042,22256107,0,0x0,6
tick,0x7d8294d2a042,22257222,0,0x0,6
tick,0x7d8294d2a042,22258391,0,0x0,6
tick,0x7d8294d2a042,22259493,0,0x0,6
tick,0x7d8294d2a042,22260645,0,0x0,6
tick,0x7d8294d2a042,22261672,0,0x0,6
tick,0x7d8294d2a042,22262860,0,0x0,6
tick,0x7d8294d2a042,22263860,0,0x0,6
tick,0x7d8294d2a042,22264992,0,0x0,6
tick,0x7d8294d2a042,22266203,0,0x0,6
tick,0x7d8294d2a042,22267372,0,0x0,6
tick,0x7d8294d2a042,22268445,0,0x0,6
tick,0x7d8294d2a042,22269474,0,0x0,6
tick,0x7d8294d2a042,22270642,0,0x0,6
tick,0x7d8294d2a042,22271585,0,0x0,6
tick,0x7d8294d2a042,22272849,0,0x0,6
tick,0x7d8294d2a042,22273993,0,0x0,6
tick,0x7d8294d2a042,22275092,0,0x0,6
tick,0x7d8294d2a042,22276101,0,0x0,6
tick,0x7d8294d2a042,22277249,0,0x0,6
tick,0x7d8294d2a042,22278405,0,0x0,6
tick,0x7d8294d2a042,22279466,0,0x0,6
tick,0x7d8294d2a042,22280629,0,0x0,6
tick,0x7d8294d2a042,22281783,0,0x0,6
tick,0x7d8294d2a042,22282988,0,0x0,6
tick,0x7d8294d2a042,22284049,0,0x0,6
tick,0x7d8294d2a042,22285203,0,0x0,6
tick,0x7d8294d2a042,22286297,0,0x0,6
tick,0x7d8294d2a042,22287436,0,0x0,6
tick,0x7d8294d2a042,22288753,0,0x0,6
tick,0x7d8294d2a042,22289840,0,0x0,6
tick,0x7d8294d2a042,22290843,0,0x0,6
tick,0x7d8294d2a042,22292014,0,0x0,6
tick,0x7d8294d2a042,22293121,0,0x0,6
tick,0x7d8294d2a042,22294297,0,0x0,6
tick,0x7d8294d2a042,22295441,0,0x0,6
tick,0x7d8294d2a042,22296542,0,0x0,6
tick,0x7d8294d2a042,22297596,0,0x0,6
tick,0x7d8294d2a042,22298740,0,0x0,6
tick,0x7d8294d2a042,22299876,0,0x0,6
tick,0x7d8294d2a042,22301003,0,0x0,6
tick,0x7d8294d2a042,22302085,0,0x0,6
tick,0x7d8294d2a042,22303216,0,0x0,6
tick,0x7d8294d2a042,22304356,0,0x0,6
tick,0x7d8294d2a042,22305513,0,0x0,6
tick,0x7d8294d2a042,22306674,0,0x0,6
tick,0x7d8294d2a042,22307686,0,0x0,6
tick,0x7d8294d2a042,22308860,0,0x0,6
tick,0x7d8294d2a042,22310053,0,0x0,6
tick,0x7d8294d2a042,22311132,0,0x0,6
tick,0x7d8294d2a042,22312207,0,0x0,6
tick,0x7d8294d2a042,22313263,0,0x0,6
tick,0x7d8294d2a042,22314423,0,0x0,6
tick,0x7d8294d2a042,22315492,0,0x0,6
tick,0x64950cfb62f1,22316645,0,0x0,6
tick,0x7d8294d2a042,22317627,0,0x0,6
tick,0x7d8294d2a042,22318798,0,0x0,6
tick,0x7d8294d2a042,22319872,0,0x0,6
tick,0x7d8294d2a042,22320925,0,0x0,6
tick,0x7d8294d2a042,22322073,0,0x0,6
tick,0x7d8294d2a042,22323226,0,0x0,6
tick,0x7d8294d2a042,22324232,0,0x0,6
tick,0x7d8294d2a042,22325389,0,0x0,6
tick,0x7d8294d2a042,22326452,0,0x0,6
tick,0x7d8294d2a042,22327596,0,0x0,6
tick,0x7d8294d2a042,22328713,0,0x0,6
tick,0x7d8294d2a042,22329875,0,0x0,6
tick,0x7d8294d2a042,22331053,0,0x0,6
tick,0x7d8294d2a042,22332117,0,0x0,6
tick,0x7d8294d2a042,22333140,0,0x0,6
tick,0x7d8294d2a042,22334363,0,0x0,6
tick,0x7d8294d2a042,22335507,0,0x0,6
tick,0x7d8294d2a042,22336671,0,0x0,6
tick,0x7d8294d2a042,22337849,0,0x0,6
tick,0x7d8294d2a042,22338980,0,0x0,6
tick,0x7d8294d2a042,22340030,0,0x0,6
tick,0x7d8294d2a042,22341147,0,0x0,6
tick,0x7d8294d2a042,22342222,0,0x0,6
tick,0x7d8294d2a042,22343337,0,0x0,6
tick,0x7d8294d2a042,22344370,0,0x0,6
tick,0x7d8294d2a042,22345402,0,0x0,6
tick,0x7d8294d2a042,22346566,0,0x0,6
tick,0x7d8294d2a042,22347536,0,0x0,6
tick,0x7d8294d2a042,22348592,0,0x0,6
tick,0x7d8294d2a042,22349658,0,0x0,6
tick,0x7d8294d2a042,22350756,0,0x0,6
tick,0x7d8294d2a042,22351885,0,0x0,6
tick,0x7d8294d2a042,22352874,0,0x0,6
tick,0x7d8294d2a042,22353928,0,0x0,6
tick,0x7d8294d2a042,22354982,0,0x0,6
tick,0x7d8294d2a042,22356038,0,0x0,6
tick,0x7d8294d2a042,22357138,0,0x0,6
tick,0x7d8294d2a042,22358209,0,0x0,6
tick,0x7d8294d2a042,22359282,0,0x0,6
tick,0x7d8294d2a042,22360358,0,0x0,6
tick,0x7d8294d2a042,22361439,0,0x0,6
tick,0x7d8294d2a042,22362494,0,0x0,6
tick,0x7d8294d2a042,22363580,0,0x0,6
tick,0x7d8294d2a042,22364788,0,0x0,6
tick,0x7d8294d2a042,22365794,0,0x0,6
tick,0x7d8294d2a042,22366865,0,0x0,6
tick,0x7d8294d2a042,22368027,0,0x0,6
tick,0x7d8294d2a042,22369169,0,0x0,6
tick,0x7d8294d2a042,22370176,0,0x0,6
tick,0x7d8294d2a042,22371257,0,0x0,6
tick,0x7d8294d2a042,22372416,0,0x0,6
tick,0x7d8294d2a042,22373559,0,0x0,6
tick,0x7d8294d2a042,22374545,0,0x0,6
tick,0x64950cf9fe52,22375613,0,0x0,6
tick,0x7d8294d2a042,22376731,0,0x0,6
tick,0x64950cfb07c6,22377786,0,0x0,6
tick,0x64950ceec9f6,22378796,0,0x0,6
tick,0x7d8294d1ba9a,22379914,0,0x0,6
tick,0x7d8294d2a042,22380975,0,0x0,6
tick,0x7d8294d2a042,22382039,0,0x0,6
tick,0x7d8294d2a042,22383092,0,0x0,6
tick,0x7d8294d2a042,22384132,0,0x0,6
tick,0x7d8294d2a042,22385230,0,0x0,6
tick,0x7d8294d2a042,22386360,0,0x0,6
tick,0x7d8294d2a042,22387547,0,0x0,6
tick,0x7d8294d2a042,22388677,0,0x0,6
tick,0x7d8294d2a042,22389828,0,0x0,6
tick,0x7d8294d2a042,22390917,0,0x0,6
tick,0x7d8294d2a042,22391986,0,0x0,6
tick,0x7d8294d2a042,22393065,0,0x0,6
delete,MemoryChunk,0x7d827014a120
delete,MemoryChunk,0x7d82701390e0
delete,MemoryChunk,0x7d82700841e0
delete,MemoryChunk,0x7d8270113fe0
tick,0x7d8294d0f727,22394482,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,22395218,0,0x0,6
tick,0x7d8294d2a042,22396378,0,0x0,6
tick,0x7d8294d2a042,22397482,0,0x0,6
tick,0x7d8294d2a042,22398444,0,0x0,6
tick,0x7d8294d2a042,22399481,0,0x0,6
tick,0x7d8294d2a042,22400698,0,0x0,6
tick,0x7d8294d2a042,22401753,0,0x0,6
tick,0x7d8294d2a042,22402744,0,0x0,6
tick,0x7d8294d2a042,22403881,0,0x0,6
tick,0x7d8294d2a042,22405057,0,0x0,6
tick,0x7d8294d2a042,22406055,0,0x0,6
tick,0x7d8294d2a042,22407127,0,0x0,6
tick,0x7d8294d2a042,22408277,0,0x0,6
tick,0x7d8294d2a042,22409356,0,0x0,6
tick,0x7d8294d2a042,22410364,0,0x0,6
tick,0x7d8294d2a042,22411490,0,0x0,6
tick,0x7d8294d2a042,22412646,0,0x0,6
tick,0x7d8294d2a042,22413813,0,0x0,6
tick,0x7d8294d2a042,22414807,0,0x0,6
tick,0x7d8294d2a042,22415884,0,0x0,6
tick,0x7d8294d2a042,22417090,0,0x0,6
tick,0x7d8294d2a042,22418202,0,0x0,6
tick,0x7d8294d2a042,22419271,0,0x0,6
tick,0x7d8294d2a042,22420502,0,0x0,6
tick,0x7d8294d2a042,22421570,0,0x0,6
tick,0x7d8294d2a042,22422647,0,0x0,6
tick,0x7d8294d2a042,22423646,0,0x0,6
tick,0x7d8294d2a042,22424854,0,0x0,6
tick,0x7d8294d2a042,22426023,0,0x0,6
tick,0x7d8294d2a042,22427097,0,0x0,6
tick,0x7d8294d2a042,22428174,0,0x0,6
tick,0x7d8294d2a042,22429243,0,0x0,6
tick,0x7d8294d2a042,22430342,0,0x0,6
tick,0x7d8294d2a042,22431413,0,0x0,6
tick,0x7d8294d2a042,22432554,0,0x0,6
tick,0x7d8294d2a042,22433635,0,0x0,6
tick,0x7d8294d2a042,22434725,0,0x0,6
tick,0x7d8294d2a042,22435716,0,0x0,6
tick,0x7d8294d2a042,22436819,0,0x0,6
tick,0x7d8294d2a042,22437982,0,0x0,6
tick,0x7d8294d2a042,22439065,0,0x0,6
tick,0x7d8294d2a042,22440153,0,0x0,6
tick,0x7d8294d2a042,22441223,0,0x0,6
tick,0x7d8294d2a042,22442360,0,0x0,6
tick,0x7d8294d2a042,22443506,0,0x0,6
tick,0x7d8294d2a042,22444603,0,0x0,6
tick,0x7d8294d2a042,22445819,0,0x0,6
tick,0x7d8294d2a042,22446985,0,0x0,6
tick,0x7d8294d2a042,22447986,0,0x0,6
tick,0x7d8294d2a042,22449130,0,0x0,6
tick,0x7d8294d2a042,22450332,0,0x0,6
tick,0x7d8294d2a042,22451485,0,0x0,6
tick,0x7d8294d2a042,22452637,0,0x0,6
tick,0x7d8294d2a042,22453724,0,0x0,6
tick,0x7d8294d2a042,22454957,0,0x0,6
tick,0x7d8294d2a042,22456032,0,0x0,6
tick,0x7d8294d2a042,22457158,0,0x0,6
tick,0x7d8294d2a042,22458310,0,0x0,6
tick,0x7d8294d2a042,22459487,0,0x0,6
tick,0x7d8294d2a042,22460622,0,0x0,6
tick,0x7d8294d2a042,22461781,0,0x0,6
tick,0x7d8294d2a042,22462955,0,0x0,6
tick,0x7d8294d2a042,22464012,0,0x0,6
tick,0x7d8294d2a042,22465171,0,0x0,6
tick,0x7d8294d2a042,22466321,0,0x0,6
tick,0x7d8294d2a042,22467465,0,0x0,6
tick,0x7d8294d2a042,22468631,0,0x0,6
tick,0x7d8294d2a042,22469801,0,0x0,6
tick,0x7d8294d2a042,22470875,0,0x0,6
tick,0x7d8294d2a042,22471933,0,0x0,6
tick,0x7d8294d2a042,22473097,0,0x0,6
tick,0x7d8294d2a042,22474259,0,0x0,6
tick,0x7d8294d2a042,22475444,0,0x0,6
tick,0x7d8294d2a042,22476509,0,0x0,6
tick,0x7d8294d2a042,22477588,0,0x0,6
tick,0x7d8294d2a042,22478765,0,0x0,6
tick,0x7d8294d2a042,22479856,0,0x0,6
tick,0x7d8294d2a042,22481010,0,0x0,6
tick,0x7d8294d2a042,22482156,0,0x0,6
tick,0x7d8294d2a042,22483319,0,0x0,6
tick,0x7d8294d2a042,22484466,0,0x0,6
tick,0x7d8294d2a042,22485536,0,0x0,6
tick,0x7d8294d2a042,22486674,0,0x0,6
tick,0x7d8294d2a042,22487729,0,0x0,6
tick,0x7d8294d2a042,22488837,0,0x0,6
tick,0x7d8294d2a042,22489982,0,0x0,6
tick,0x7d8294d2a042,22491132,0,0x0,6
tick,0x7d8294d2a042,22492226,0,0x0,6
tick,0x7d8294d2a042,22493276,0,0x0,6
tick,0x7d8294d2a042,22494431,0,0x0,6
tick,0x7d8294d2a042,22495558,0,0x0,6
tick,0x7d8294d2a042,22496729,0,0x0,6
tick,0x7d8294d2a042,22497883,0,0x0,6
tick,0x7d8294d2a042,22499059,0,0x0,6
tick,0x7d8294d2a042,22500129,0,0x0,6
tick,0x7d8294d2a042,22501252,0,0x0,6
tick,0x7d8294d2a042,22502414,0,0x0,6
tick,0x7d8294d2a042,22503563,0,0x0,6
tick,0x7d8294d2a042,22504773,0,0x0,6
tick,0x7d8294d2a042,22505871,0,0x0,6
tick,0x7d8294d2a042,22507034,0,0x0,6
tick,0x7d8294d2a042,22508126,0,0x0,6
tick,0x7d8294d2a042,22509203,0,0x0,6
tick,0x7d8294d2a042,22510273,0,0x0,6
tick,0x7d8294d2a042,22511425,0,0x0,6
tick,0x7d8294d2a042,22512562,0,0x0,6
tick,0x7d8294d2a042,22513570,0,0x0,6
tick,0x7d8294d2a042,22514638,0,0x0,6
tick,0x7d8294d2a042,22515785,0,0x0,6
tick,0x7d8294d2a042,22516930,0,0x0,6
tick,0x7d8294d2a042,22518106,0,0x0,6
tick,0x7d8294d2a042,22519173,0,0x0,6
tick,0x7d8294d2a042,22520254,0,0x0,6
tick,0x7d8294d2a042,22521341,0,0x0,6
tick,0x7d8294d2a042,22522411,0,0x0,6
tick,0x7d8294d2a042,22523541,0,0x0,6
tick,0x7d8294d2a042,22524718,0,0x0,6
tick,0x7d8294d2a042,22525872,0,0x0,6
tick,0x7d8294d2a042,22527046,0,0x0,6
tick,0x7d8294d2a042,22528101,0,0x0,6
tick,0x7d8294d2a042,22529198,0,0x0,6
tick,0x7d8294d2a042,22530253,0,0x0,6
tick,0x7d8294d2a042,22531442,0,0x0,6
tick,0x7d8294d2a042,22532528,0,0x0,6
tick,0x7d8294d2a042,22533521,0,0x0,6
tick,0x7d8294d2a042,22534663,0,0x0,6
tick,0x7d8294d2a042,22535791,0,0x0,6
tick,0x7d8294d1ba9a,22536858,0,0x0,6
tick,0x7d8294d2a042,22537913,0,0x0,6
tick,0x7d8294d2a042,22538991,0,0x0,6
tick,0x7d8294d2a042,22540061,0,0x0,6
tick,0x7d8294d2a042,22541153,0,0x0,6
tick,0x7d8294d2a042,22542287,0,0x0,6
tick,0x7d8294d2a042,22543495,0,0x0,6
tick,0x7d8294d2a042,22544534,0,0x0,6
tick,0x7d8294d2a042,22545533,0,0x0,6
tick,0x7d8294d2a042,22546853,0,0x0,6
tick,0x7d8294d2a042,22547922,0,0x0,6
tick,0x7d8294d2a042,22549056,0,0x0,6
tick,0x7d8294d2a042,22550218,0,0x0,6
tick,0x7d8294d2a042,22551382,0,0x0,6
tick,0x7d8294d2a042,22552472,0,0x0,6
tick,0x7d8294d2a042,22553534,0,0x0,6
tick,0x7d8294d2a042,22554763,0,0x0,6
tick,0x7d8294d2a042,22555873,0,0x0,6
tick,0x7d8294d2a042,22556943,0,0x0,6
tick,0x7d8294d2a042,22558060,0,0x0,6
tick,0x7d8294d2a042,22559155,0,0x0,6
tick,0x7d8294d2a042,22560201,0,0x0,6
tick,0x7d8294d2a042,22561324,0,0x0,6
tick,0x7d8294d2a042,22562388,0,0x0,6
tick,0x7d8294d2a042,22563503,0,0x0,6
tick,0x7d8294d2a042,22564586,0,0x0,6
tick,0x7d8294d2a042,22565657,0,0x0,6
tick,0x7d8294d2a042,22566694,0,0x0,6
tick,0x7d8294d2a042,22567864,0,0x0,6
tick,0x7d8294d2a042,22568977,0,0x0,6
tick,0x7d8294d2a042,22569990,0,0x0,6
tick,0x7d8294d2a042,22571080,0,0x0,6
tick,0x7d8294d2a042,22572226,0,0x0,6
tick,0x7d8294d2a042,22573424,0,0x0,6
tick,0x7d8294d2a042,22574445,0,0x0,6
tick,0x7d8294d2a042,22575515,0,0x0,6
tick,0x7d8294d2a042,22576839,0,0x0,6
tick,0x7d8294d2a042,22577843,0,0x0,6
tick,0x7d8294d2a042,22578880,0,0x0,6
tick,0x7d8294d2a042,22579976,0,0x0,6
tick,0x7d8294d2a042,22581065,0,0x0,6
tick,0x7d8294d2a042,22582156,0,0x0,6
tick,0x7d8294d2a042,22583179,0,0x0,6
tick,0x7d8294d2a042,22584252,0,0x0,6
tick,0x7d8294d2a042,22585358,0,0x0,6
tick,0x7d8294d2a042,22586397,0,0x0,6
tick,0x7d8294d2a042,22587494,0,0x0,6
tick,0x7d8294d2a042,22588598,0,0x0,6
tick,0x7d8294d2a042,22589669,0,0x0,6
tick,0x7d8294d2a042,22590746,0,0x0,6
tick,0x7d8294d2a042,22591919,0,0x0,6
tick,0x7d8294d2a042,22592962,0,0x0,6
tick,0x7d8294d2a042,22593982,0,0x0,6
tick,0x7d8294d2a042,22595120,0,0x0,6
tick,0x7d8294d2a042,22596275,0,0x0,6
tick,0x7d8294d2a042,22597415,0,0x0,6
tick,0x7d8294d2a042,22598505,0,0x0,6
tick,0x7d8294d2a042,22599585,0,0x0,6
tick,0x7d8294d2a042,22600782,0,0x0,6
tick,0x7d8294d2a042,22601948,0,0x0,6
tick,0x7d8294d2a042,22603015,0,0x0,6
tick,0x7d8294d2a042,22604182,0,0x0,6
tick,0x64950cfc294b,22605309,0,0x0,6
tick,0x7d8294d2a042,22606394,0,0x0,6
tick,0x7d8294d1ba9a,22607555,0,0x0,6
tick,0x7d8294d2a042,22608747,0,0x0,6
tick,0x7d8294d2a042,22609888,0,0x0,6
tick,0x7d8294d1ba9a,22610962,0,0x0,6
tick,0x7d8294d2a042,22612083,0,0x0,6
tick,0x7d8294d2a042,22613150,0,0x0,6
tick,0x7d8294d2a042,22614131,0,0x0,6
tick,0x7d8294d2a042,22615209,0,0x0,6
tick,0x7d8294d2a042,22616335,0,0x0,6
tick,0x7d8294d2a042,22617418,0,0x0,6
tick,0x7d8294d2a042,22618414,0,0x0,6
tick,0x7d8294d2a042,22619520,0,0x0,6
tick,0x7d8294d2a042,22620625,0,0x0,6
tick,0x7d8294d2a042,22621712,0,0x0,6
tick,0x7d8294d2a042,22622766,0,0x0,6
tick,0x7d8294d2a042,22623851,0,0x0,6
tick,0x7d8294d0f727,22624956,0,0x0,0,0x64956d84130e,0x64956d8419f4,0x64956d841c15,0x64956d858daf,0x64950d873576,0x64956d804390
tick,0x7d8294d2a042,22625985,0,0x0,6
tick,0x7d8294d2a042,22626983,0,0x0,6
tick,0x7d8294d2a042,22628067,0,0x0,6
tick,0x7d8294d2a042,22629139,0,0x0,6
tick,0x7d8294d2a042,22630309,0,0x0,6
tick,0x7d8294d2a042,22631294,0,0x0,6
tick,0x7d8294d2a042,22632509,0,0x0,6
tick,0x7d8294d2a042,22633604,0,0x0,6
tick,0x7d8294d2a042,22634589,0,0x0,6
tick,0x7d8294d2a042,22635702,0,0x0,6
tick,0x7d8294d2a042,22636780,0,0x0,6
tick,0x7d8294d2a042,22637959,0,0x0,6
tick,0x7d8294d2a042,22639014,0,0x0,6
tick,0x7d8294d2a042,22640094,0,0x0,6
tick,0x7d8294d2a042,22641167,0,0x0,6
tick,0x7d8294d2a042,22642250,0,0x0,6
tick,0x7d8294d2a042,22643325,0,0x0,6
tick,0x7d8294d2a042,22644397,0,0x0,6
tick,0x7d8294d2a042,22645552,0,0x0,6
tick,0x7d8294d2a042,22646603,0,0x0,6
tick,0x7d8294d2a042,22647621,0,0x0,6
tick,0x7d8294d2a042,22648825,0,0x0,6
tick,0x7d8294d2a042,22649966,0,0x0,6
tick,0x7d8294d2a042,22651132,0,0x0,6
tick,0x7d8294d2a042,22652204,0,0x0,6
tick,0x7d8294d2a042,22653284,0,0x0,6
tick,0x7d8294d2a042,22654360,0,0x0,6
tick,0x7d8294d2a042,22655467,0,0x0,6
tick,0x7d8294d2a042,22656540,0,0x0,6
tick,0x7d8294d2a042,22657579,0,0x0,6
tick,0x7d8294d2a042,22658758,0,0x0,6
tick,0x7d8294d2a042,22659843,0,0x0,6
tick,0x7d8294d2a042,22660985,0,0x0,6
tick,0x7d8294d2a042,22662146,0,0x0,6
tick,0x7d8294d2a042,22663133,0,0x0,6
tick,0x7d8294d2a042,22664290,0,0x0,6
tick,0x7d8294d2a042,22665348,0,0x0,6
tick,0x7d8294d2a042,22666514,0,0x0,6
tick,0x7d8294d2a042,22667534,0,0x0,6
tick,0x7d8294d2a042,22668729,0,0x0,6
tick,0x7d8294d2a042,22669869,0,0x0,6
tick,0x7d8294d2a042,22671045,0,0x0,6
tick,0x7d8294d2a042,22672124,0,0x0,6
tick,0x7d8294d2a042,22673271,0,0x0,6
tick,0x7d8294d2a042,22674429,0,0x0,6
tick,0x7d8294d2a042,22675595,0,0x0,6
tick,0x7d8294d2a042,22676769,0,0x0,6
tick,0x7d8294d2a042,22677832,0,0x0,6
tick,0x7d8294d2a042,22678970,0,0x0,6
tick,0x7d8294d2a042,22680108,0,0x0,6
tick,0x7d8294d2a042,22681256,0,0x0,6
tick,0x7d8294d2a042,22682419,0,0x0,6
tick,0x7d8294d2a042,22683581,0,0x0,6
tick,0x7d8294d2a042,22684812,0,0x0,6
tick,0x7d8294d2a042,22685946,0,0x0,6
tick,0x7d8294d2a042,22687038,0,0x0,6
tick,0x7d8294d2a042,22688106,0,0x0,6
tick,0x7d8294d2a042,22689183,0,0x0,6
tick,0x7d8294d2a042,22690398,0,0x0,6
tick,0x7d8294d2a042,22691583,0,0x0,6
tick,0x7d8294d2a042,22692731,0,0x0,6
tick,0x7d8294d2a042,22693889,0,0x0,6
tick,0x7d8294d2a042,22695060,0,0x0,6
tick,0x7d8294d2a042,22696135,0,0x0,6
tick,0x7d8294d2a042,22697271,0,0x0,6
tick,0x7d8294d2a042,22698380,0,0x0,6
tick,0x7d8294d2a042,22699569,0,0x0,6
tick,0x7d8294d2a042,22700723,0,0x0,6
tick,0x7d8294d2a042,22701885,0,0x0,6
tick,0x7d8294d2a042,22703058,0,0x0,6
tick,0x7d8294d2a042,22704123,0,0x0,6
tick,0x7d8294d2a042,22705257,0,0x0,6
tick,0x7d8294d2a042,22706408,0,0x0,6
tick,0x7d8294d2a042,22707573,0,0x0,6
tick,0x7d8294d2a042,22708743,0,0x0,6
tick,0x7d8294d2a042,22709915,0,0x0,6
tick,0x7d8294d2a042,22711064,0,0x0,6
tick,0x7d8294d2a042,22712165,0,0x0,6
tick,0x7d8294d2a042,22713277,0,0x0,6
tick,0x7d8294d2a042,22714449,0,0x0,6
tick,0x7d8294d2a042,22715551,0,0x0,6
tick,0x7d8294d2a042,22716714,0,0x0,6
tick,0x7d8294d2a042,22717884,0,0x0,6
tick,0x7d8294d2a042,22719055,0,0x0,6
tick,0x7d8294d2a042,22720150,0,0x0,6
tick,0x7d8294d2a042,22721264,0,0x0,6
tick,0x7d8294d2a042,22722419,0,0x0,6
tick,0x7d8294d2a042,22723570,0,0x0,6
tick,0x7d8294d2a042,22724744,0,0x0,6
tick,0x7d8294d2a042,22725910,0,0x0,6
tick,0x7d8294d2a042,22727076,0,0x0,6
tick,0x7d8294d2a042,22728155,0,0x0,6
tick,0x7d8294d2a042,22729278,0,0x0,6
tick,0x7d8294d2a042,22730435,0,0x0,6
tick,0x7d8294d2a042,22731570,0,0x0,6
tick,0x7d8294d2a042,22732755,0,0x0,6
tick,0x7d8294d2a042,22733860,0,0x0,6
tick,0x7d8294d2a042,22734954,0,0x0,6
tick,0x7d8294d2a042,22736112,0,0x0,6
tick,0x7d8294d2a042,22737231,0,0x0,6
tick,0x7d8294d2a042,22738382,0,0x0,6
tick,0x7d8294d2a042,22739580,0,0x0,6
tick,0x7d8294d2a042,22740778,0,0x0,6
tick,0x7d8294d2a042,22741924,0,0x0,6
tick,0x7d8294d2a042,22743100,0,0x0,6
tick,0x7d8294d2a042,22744099,0,0x0,6
tick,0x7d8294d2a042,22745171,0,0x0,6
tick,0x7d8294d2a042,22746326,0,0x0,6
tick,0x7d8294d2a042,22747563,0,0x0,6
tick,0x7d8294d2a042,22748671,0,0x0,6
tick,0x7d8294d2a042,22749826,0,0x0,6
tick,0x7d8294d2a042,22750993,0,0x0,6
tick,0x7d8294d2a042,22752065,0,0x0,6
tick,0x7d8294d2a042,22753221,0,0x0,6
tick,0x7d8294d2a042,22754385,0,0x0,6
tick,0x7d8294d2a042,22755465,0,0x0,6
tick,0x7d8294d2a042,22756456,0,0x0,6
tick,0x7d8294d2a042,22757523,0,0x0,6
tick,0x7d8294d2a042,22758687,0,0x0,6
tick,0x7d8294d2a042,22759849,0,0x0,6
tick,0x7d8294d2a042,22760934,0,0x0,6
tick,0x7d8294d2a042,22762126,0,0x0,6
tick,0x7d8294d2a042,22763252,0,0x0,6
tick,0x7d8294d2a042,22764315,0,0x0,6
tick,0x7d8294d2a042,22765461,0,0x0,6
tick,0x64950cfb87e2,22766607,0,0x0,6
tick,0x7d8294d98996,22767596,0,0x0,6
tick,0x7d8294d2a042,22768825,0,0x0,6
tick,0x7d8294d2a042,22769973,0,0x0,6
tick,0x7d8294d2a042,22771034,0,0x0,6
tick,0x7d8294d2a042,22772172,0,0x0,6
tick,0x7d8294d2a042,22773185,0,0x0,6
tick,0x7d8294d2a042,22774334,0,0x0,6
tick,0x7d8294d2a042,22775491,0,0x0,6
tick,0x7d8294d2a042,22776599,0,0x0,6
tick,0x7d8294d2a042,22777758,0,0x0,6
tick,0x7d8294d2a042,22778907,0,0x0,6
tick,0x7d8294d2a042,22779959,0,0x0,6
tick,0x7d8294d2a042,22781032,0,0x0,6
tick,0x7d8294d2a042,22782265,0,0x0,6
tick,0x7d8294d2a042,22783467,0,0x0,6
tick,0x7d8294d2a042,22784523,0,0x0,6
tick,0x7d8294d2a042,22785535,0,0x0,6
tick,0x7d8294d2a042,22786694,0,0x0,6
tick,0x7d8294d2a042,22787838,0,0x0,6
tick,0x7d8294d2a042,22788965,0,0x0,6
tick,0x7d8294d2a042,22790014,0,0x0,6
tick,0x7d8294d2a042,22791232,0,0x0,6
tick,0x7d8294d2a042,22792294,0,0x0,6
tick,0x7d8294d2a042,22793402,0,0x0,6
tick,0x7d8294d2a042,22794593,0,0x0,6
tick,0x7d8294d2a042,22795657,0,0x0,6
tick,0x7d8294d2a042,22796705,0,0x0,6
tick,0x7d8294d2a042,22797657,0,0x0,6
tick,0x7d8294d2a042,22798793,0,0x0,6
tick,0x7d8294d2a042,22799933,0,0x0,6
tick,0x7d8294d2a042,22800996,0,0x0,6
tick,0x7d8294d2a042,22801993,0,0x0,6
tick,0x7d8294d2a042,22803067,0,0x0,6
tick,0x7d8294d2a042,22804289,0,0x0,6
tick,0x7d8294d2a042,22805285,0,0x0,6
tick,0x7d8294d2a042,22806235,0,0x0,6
tick,0x7d8294d2a042,22807303,0,0x0,6
tick,0x7d8294d2a042,22808531,0,0x0,6
tick,0x7d8294d2a042,22809588,0,0x0,6
tick,0x7d8294d2a042,22810589,0,0x0,6
tick,0x7d8294d2a042,22811771,0,0x0,6
tick,0x7d8294d2a042,22812864,0,0x0,6
tick,0x7d8294d2a042,22813801,0,0x0,6
tick,0x7d8294d2a042,22814876,0,0x0,6
tick,0x7d8294d2a042,22816093,0,0x0,6
tick,0x7d8294d2a042,22817175,0,0x0,6
tick,0x7d8294d2a042,22818102,0,0x0,6
tick,0x7d8294d2a042,22819172,0,0x0,6
tick,0x7d8294d2a042,22820379,0,0x0,6
tick,0x7d8294d2a042,22821462,0,0x0,6
tick,0x7d8294d2a042,22822468,0,0x0,6
tick,0x7d8294d2a042,22823575,0,0x0,6
tick,0x7d8294d2a042,22824783,0,0x0,6
tick,0x7d8294d1ba9a,22825879,0,0x0,6
tick,0x7d8294d2a042,22826975,0,0x0,6
tick,0x7d8294d1ba9a,22828118,0,0x0,6
tick,0x7d8294d2a042,22829280,0,0x0,6
tick,0x7d8294d1ba9a,22830353,0,0x0,6
tick,0x7d8294d2a042,22831530,0,0x0,6
tick,0x7d8294d2a042,22832754,0,0x0,6
tick,0x7d8294d2a042,22833899,0,0x0,6
tick,0x7d8294d2a042,22834966,0,0x0,6
tick,0x7d8294d2a042,22836168,0,0x0,6
tick,0x7d8294d2a042,22837332,0,0x0,6
tick,0x7d8294d2a042,22838393,0,0x0,6
tick,0x7d8294d2a042,22839568,0,0x0,6
tick,0x7d8294d2a042,22840806,0,0x0,6
tick,0x7d8294d2a042,22841871,0,0x0,6
tick,0x7d8294d2a042,22843021,0,0x0,6
tick,0x7d8294d2a042,22844223,0,0x0,6
code-creation,JS,9,22844857,0x2c3700155210,36,dispatchBeforeUnloadEvent ext:runtime_main/js/99_main.js:525:35,0x2c3700354198,~
code-source-info,0x2c3700155210,305,15384,15484,C0O15391C5O15410C10O15433C24O15429C30O15410C35O15482,,
code-creation,JS,9,22844966,0x2c3700155298,55,dispatchProcessBeforeExitEvent node:process:585:40,0x2c37002a8694,~
script-source,123,node:process,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and Node.js contributors. All rights reserved. MIT license.\n// TODO(petamoriken): enable prefer-primordials for node polyfills\n// deno-lint-ignore-file prefer-primordials\nimport { core\x2C internals } from "ext:core/mod.js";\nimport { initializeDebugEnv } from "ext:deno_node/internal/util/debuglog.ts";\nimport { op_getegid\x2C op_geteuid\x2C op_node_process_kill\x2C op_process_abort } from "ext:core/ops";\nimport { warnNotImplemented } from "ext:deno_node/_utils.ts";\nimport { EventEmitter } from "node:events";\nimport Module from "node:module";\nimport { report } from "ext:deno_node/internal/process/report.ts";\nimport { validateString } from "ext:deno_node/internal/validators.mjs";\nimport { ERR_INVALID_ARG_TYPE\x2C ERR_OUT_OF_RANGE\x2C ERR_UNKNOWN_SIGNAL\x2C errnoException } from "ext:deno_node/internal/errors.ts";\nimport { getOptionValue } from "ext:deno_node/internal/options.ts";\nimport { assert } from "ext:deno_node/_util/asserts.ts";\nimport { join } from "node:path";\nimport { pathFromURL } from "ext:deno_web/00_infra.js";\nimport { arch as arch_\x2C chdir\x2C cwd\x2C env\x2C nextTick as _nextTick\x2C version\x2C versions } from "ext:deno_node/_process/process.ts";\nimport { _exiting } from "ext:deno_node/_process/exiting.ts";\nexport { _nextTick as nextTick\x2C chdir\x2C cwd\x2C env\x2C version\x2C versions };\nimport { createWritableStdioStream\x2C initStdin } from "ext:deno_node/_process/streams.mjs";\nimport { enableNextTick\x2C processTicksAndRejections\x2C runNextTicks } from "ext:deno_node/_next_tick.ts";\nimport { isWindows } from "ext:deno_node/_util/os.ts";\nimport * as io from "ext:deno_io/12_io.js";\nimport * as denoOs from "ext:runtime/30_os.js";\nexport let argv0 = "";\nexport let arch = "";\nexport let platform = "";\nexport let pid = 0;\nlet stdin\x2C stdout\x2C stderr;\nexport { stderr\x2C stdin\x2C stdout };\nimport { getBinding } from "ext:deno_node/internal_binding/mod.ts";\nimport * as constants from "ext:deno_node/internal_binding/constants.ts";\nimport * as uv from "ext:deno_node/internal_binding/uv.ts";\nimport { buildAllowedFlags } from "ext:deno_node/internal/process/per_thread.mjs";\nconst notImplementedEvents = [\n  "multipleResolves"\x2C\n  "worker"\n];\nexport const argv = [\n  ""\x2C\n  ""\n];\n// In Node\x2C `process.exitCode` is initially `undefined` until set.\n// And retains any value as long as it's nullish or number-ish.\nlet ProcessExitCode;\n/** https://nodejs.org/api/process.html#process_process_exit_code */ export const exit = (code)=>{\n  if (code || code === 0) {\n    denoOs.setExitCode(code);\n  } else if (Number.isNaN(code)) {\n    denoOs.setExitCode(1);\n  }\n  ProcessExitCode = denoOs.getExitCode();\n  if (!process._exiting) {\n    process._exiting = true;\n    // FIXME(bartlomieju): this is wrong\x2C we won't be using syscall to exit\n    // and thus the `unload` event will not be emitted to properly trigger "emit"\n    // event on `process`.\n    process.emit("exit"\x2C ProcessExitCode);\n  }\n  // Any valid thing `process.exitCode` set is already held in Deno.exitCode.\n  // At this point\x2C we don't have to pass around Node's raw/string exit value.\n  process.reallyExit(ProcessExitCode);\n};\n/** https://nodejs.org/api/process.html#processumaskmask */ export const umask = ()=>{\n  // Always return the system default umask value.\n  // We don't use Deno.umask here because it has a race\n  // condition bug.\n  // See https://github.com/denoland/deno_std/issues/1893#issuecomment-1032897779\n  return 0o22;\n};\nexport const abort = ()=>{\n  op_process_abort();\n};\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    Object.defineProperty(process\x2C name\x2C {\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\nfunction createWarningObject(warning\x2C type\x2C code\x2C // deno-lint-ignore ban-types\nctor\x2C detail) {\n  assert(typeof warning === "string");\n  // deno-lint-ignore no-explicit-any\n  const warningErr = new Error(warning);\n  warningErr.name = String(type || "Warning");\n  if (code !== undefined) {\n    warningErr.code = code;\n  }\n  if (detail !== undefined) {\n    warningErr.detail = detail;\n  }\n  // @ts-ignore this function is not available in lib.dom.d.ts\n  Error.captureStackTrace(warningErr\x2C ctor || process.emitWarning);\n  return warningErr;\n}\nfunction doEmitWarning(warning) {\n  process.emit("warning"\x2C warning);\n}\n/** https://nodejs.org/api/process.html#process_process_emitwarning_warning_options */ export function emitWarning(warning\x2C type\x2C code\x2C // deno-lint-ignore ban-types\nctor) {\n  let detail;\n  if (type !== null && typeof type === "object" && !Array.isArray(type)) {\n    ctor = type.ctor;\n    code = type.code;\n    if (typeof type.detail === "string") {\n      detail = type.detail;\n    }\n    type = type.type || "Warning";\n  } else if (typeof type === "function") {\n    ctor = type;\n    code = undefined;\n    type = "Warning";\n  }\n  if (type !== undefined) {\n    validateString(type\x2C "type");\n  }\n  if (typeof code === "function") {\n    ctor = code;\n    code = undefined;\n  } else if (code !== undefined) {\n    validateString(code\x2C "code");\n  }\n  if (typeof warning === "string") {\n    warning = createWarningObject(warning\x2C type\x2C code\x2C ctor\x2C detail);\n  } else if (!(warning instanceof Error)) {\n    throw new ERR_INVALID_ARG_TYPE("warning"\x2C [\n      "Error"\x2C\n      "string"\n    ]\x2C warning);\n  }\n  if (warning.name === "DeprecationWarning") {\n    // deno-lint-ignore no-explicit-any\n    if (process.noDeprecation) {\n      return;\n    }\n    // deno-lint-ignore no-explicit-any\n    if (process.throwDeprecation) {\n      // Delay throwing the error to guarantee that all former warnings were\n      // properly logged.\n      return process.nextTick(()=>{\n        throw warning;\n      });\n    }\n  }\n  process.nextTick(doEmitWarning\x2C warning);\n}\nexport function hrtime(time) {\n  const milli = performance.now();\n  const sec = Math.floor(milli / 1000);\n  const nano = Math.floor(milli * 1_000_000 - sec * 1_000_000_000);\n  if (!time) {\n    return [\n      sec\x2C\n      nano\n    ];\n  }\n  const [prevSec\x2C prevNano] = time;\n  return [\n    sec - prevSec\x2C\n    nano - prevNano\n  ];\n}\nhrtime.bigint = function() {\n  const [sec\x2C nano] = hrtime();\n  return BigInt(sec) * 1_000_000_000n + BigInt(nano);\n};\nexport function memoryUsage() {\n  return {\n    ...Deno.memoryUsage()\x2C\n    arrayBuffers: 0\n  };\n}\nmemoryUsage.rss = function() {\n  return memoryUsage().rss;\n};\n// Returns a negative error code than can be recognized by errnoException\nfunction _kill(pid\x2C sig) {\n  // signal 0 does not exist in constants.os.signals\x2C thats why it have to be handled explicitly\n  if (sig === 0) {\n    return op_node_process_kill(pid\x2C 0);\n  }\n  const maybeSignal = Object.entries(constants.os.signals).find(([_\x2C numericCode])=>numericCode === sig);\n  if (!maybeSignal) {\n    return uv.codeMap.get("EINVAL");\n  }\n  return op_node_process_kill(pid\x2C sig);\n}\nexport function dlopen(module\x2C filename\x2C _flags) {\n  // NOTE(bartlomieju): _flags is currently ignored\x2C but we don't warn for it\n  // as it makes DX bad\x2C even though it might not be needed:\n  // https://github.com/denoland/deno/issues/20075\n  Module._extensions[".node"](module\x2C filename);\n  return module;\n}\nexport function kill(pid\x2C sig = "SIGTERM") {\n  if (pid != (pid | 0)) {\n    throw new ERR_INVALID_ARG_TYPE("pid"\x2C "number"\x2C pid);\n  }\n  let err;\n  if (typeof sig === "number") {\n    err = process._kill(pid\x2C sig);\n  } else {\n    if (sig in constants.os.signals) {\n      // @ts-ignore Index previously checked\n      err = process._kill(pid\x2C constants.os.signals[sig]);\n    } else {\n      throw new ERR_UNKNOWN_SIGNAL(sig);\n    }\n  }\n  if (err) {\n    throw errnoException(err\x2C "kill");\n  }\n  return true;\n}\nlet getgid\x2C getuid\x2C getegid\x2C geteuid;\nif (!isWindows) {\n  getgid = ()=>Deno.gid();\n  getuid = ()=>Deno.uid();\n  getegid = ()=>op_getegid();\n  geteuid = ()=>op_geteuid();\n}\nexport { getegid\x2C geteuid\x2C getgid\x2C getuid };\nconst ALLOWED_FLAGS = buildAllowedFlags();\n// deno-lint-ignore no-explicit-any\nfunction uncaughtExceptionHandler(err\x2C origin) {\n  // The origin parameter can be 'unhandledRejection' or 'uncaughtException'\n  // depending on how the uncaught exception was created. In Node.js\x2C\n  // exceptions thrown from the top level of a CommonJS module are reported as\n  // 'uncaughtException'\x2C while exceptions thrown from the top level of an ESM\n  // module are reported as 'unhandledRejection'. Deno does not have a true\n  // CommonJS implementation\x2C so all exceptions thrown from the top level are\n  // reported as 'uncaughtException'.\n  process.emit("uncaughtExceptionMonitor"\x2C err\x2C origin);\n  process.emit("uncaughtException"\x2C err\x2C origin);\n}\nlet execPath = null;\n// The process class needs to be an ES5 class because it can be instantiated\n// in Node without the `new` keyword. It's not a true class in Node. Popular\n// test runners like Jest rely on this.\n// deno-lint-ignore no-explicit-any\nfunction Process() {\n  // deno-lint-ignore no-explicit-any\n  if (!(this instanceof Process)) return new Process();\n  EventEmitter.call(this);\n}\nProcess.prototype = Object.create(EventEmitter.prototype);\n/** https://nodejs.org/api/process.html#processrelease */ Object.defineProperty(Process.prototype\x2C "release"\x2C {\n  get () {\n    return {\n      name: "node"\x2C\n      sourceUrl: `https://nodejs.org/download/release/${version}/node-${version}.tar.gz`\x2C\n      headersUrl: `https://nodejs.org/download/release/${version}/node-${version}-headers.tar.gz`\n    };\n  }\n});\n/** https://nodejs.org/api/process.html#process_process_arch */ Object.defineProperty(Process.prototype\x2C "arch"\x2C {\n  get () {\n    return arch;\n  }\n});\nObject.defineProperty(Process.prototype\x2C "report"\x2C {\n  get () {\n    return report;\n  }\n});\nObject.defineProperty(Process.prototype\x2C "title"\x2C {\n  get () {\n    return "deno";\n  }\x2C\n  set (_value) {\n  // NOTE(bartlomieju): this is a noop. Node.js doesn't guarantee that the\n  // process name will be properly set and visible from other tools anyway.\n  // Might revisit in the future.\n  }\n});\n/**\n * https://nodejs.org/api/process.html#process_process_argv\n * Read permissions are required in order to get the executable route\n */ Process.prototype.argv = argv;\nObject.defineProperty(Process.prototype\x2C "argv0"\x2C {\n  get () {\n    return argv0;\n  }\x2C\n  set (_val) {}\n});\n/** https://nodejs.org/api/process.html#process_process_chdir_directory */ Process.prototype.chdir = chdir;\n/** https://nodejs.org/api/process.html#processconfig */ Process.prototype.config = {\n  target_defaults: {\n    default_configuration: "Release"\n  }\x2C\n  variables: {\n    llvm_version: "0.0"\x2C\n    enable_lto: "false"\n  }\n};\n/** https://nodejs.org/api/process.html#process_process_cwd */ Process.prototype.cwd = cwd;\n/**\n * https://nodejs.org/api/process.html#process_process_env\n * Requires env permissions\n */ Process.prototype.env = env;\n/** https://nodejs.org/api/process.html#process_process_execargv */ Process.prototype.execArgv = [];\n/** https://nodejs.org/api/process.html#process_process_exit_code */ Process.prototype.exit = exit;\n/** https://nodejs.org/api/process.html#processabort */ Process.prototype.abort = abort;\n// Undocumented Node API that is used by `signal-exit` which in turn\n// is used by `node-tap`. It was marked for removal a couple of years\n// ago. See https://github.com/nodejs/node/blob/6a6b3c54022104cc110ab09044a2a0cecb8988e7/lib/internal/bootstrap/node.js#L172\nProcess.prototype.reallyExit = (code)=>{\n  return Deno.exit(code || 0);\n};\nProcess.prototype._exiting = _exiting;\n/** https://nodejs.org/api/process.html#processexitcode_1 */ Object.defineProperty(Process.prototype\x2C "exitCode"\x2C {\n  get () {\n    return ProcessExitCode;\n  }\x2C\n  set (code) {\n    let parsedCode;\n    if (code == null) {\n      parsedCode = 0;\n    } else if (typeof code === "number") {\n      parsedCode = code;\n    } else if (typeof code === "string") {\n      parsedCode = Number(code);\n    } else {\n      throw new ERR_INVALID_ARG_TYPE("code"\x2C "number"\x2C code);\n    }\n    if (!Number.isInteger(parsedCode)) {\n      throw new ERR_OUT_OF_RANGE("code"\x2C "an integer"\x2C parsedCode);\n    }\n    denoOs.setExitCode(parsedCode);\n    ProcessExitCode = code;\n  }\n});\n// Typed as any to avoid importing "module" module for types\nProcess.prototype.mainModule = undefined;\n/** https://nodejs.org/api/process.html#process_process_nexttick_callback_args */ Process.prototype.nextTick = _nextTick;\nProcess.prototype.dlopen = dlopen;\n/** https://nodejs.org/api/process.html#process_process_events */ Process.prototype.on = function(event\x2C // deno-lint-ignore no-explicit-any\nlistener) {\n  if (notImplementedEvents.includes(event)) {\n    warnNotImplemented(`process.on("${event}")`);\n    EventEmitter.prototype.on.call(this\x2C event\x2C listener);\n  } else if (event.startsWith("SIG")) {\n    if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n    // Ignores SIGBREAK if the platform is not windows.\n    } else if (event === "SIGTERM" && Deno.build.os === "windows") {\n    // Ignores SIGTERM on windows.\n    } else {\n      EventEmitter.prototype.on.call(this\x2C event\x2C listener);\n      Deno.addSignalListener(event\x2C listener);\n    }\n  } else {\n    EventEmitter.prototype.on.call(this\x2C event\x2C listener);\n  }\n  return this;\n};\nProcess.prototype.off = function(event\x2C // deno-lint-ignore no-explicit-any\nlistener) {\n  if (notImplementedEvents.includes(event)) {\n    warnNotImplemented(`process.off("${event}")`);\n    EventEmitter.prototype.off.call(this\x2C event\x2C listener);\n  } else if (event.startsWith("SIG")) {\n    if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n    // Ignores SIGBREAK if the platform is not windows.\n    } else if (event === "SIGTERM" && Deno.build.os === "windows") {\n    // Ignores SIGTERM on windows.\n    } else {\n      EventEmitter.prototype.off.call(this\x2C event\x2C listener);\n      Deno.removeSignalListener(event\x2C listener);\n    }\n  } else {\n    EventEmitter.prototype.off.call(this\x2C event\x2C listener);\n  }\n  return this;\n};\nProcess.prototype.emit = function(event\x2C // deno-lint-ignore no-explicit-any\n...args) {\n  if (event.startsWith("SIG")) {\n    if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n    // Ignores SIGBREAK if the platform is not windows.\n    } else {\n      Deno.kill(Deno.pid\x2C event);\n    }\n  } else {\n    return EventEmitter.prototype.emit.call(this\x2C event\x2C ...args);\n  }\n  return true;\n};\nProcess.prototype.prependListener = function(event\x2C // deno-lint-ignore no-explicit-any\nlistener) {\n  if (notImplementedEvents.includes(event)) {\n    warnNotImplemented(`process.prependListener("${event}")`);\n    EventEmitter.prototype.prependListener.call(this\x2C event\x2C listener);\n  } else if (event.startsWith("SIG")) {\n    if (event === "SIGBREAK" && Deno.build.os !== "windows") {\n    // Ignores SIGBREAK if the platform is not windows.\n    } else {\n      EventEmitter.prototype.prependListener.call(this\x2C event\x2C listener);\n      Deno.addSignalListener(event\x2C listener);\n    }\n  } else {\n    EventEmitter.prototype.prependListener.call(this\x2C event\x2C listener);\n  }\n  return this;\n};\n/** https://nodejs.org/api/process.html#process_process_pid */ Object.defineProperty(Process.prototype\x2C "pid"\x2C {\n  get () {\n    return pid;\n  }\n});\n/** https://nodejs.org/api/process.html#processppid */ Object.defineProperty(Process.prototype\x2C "ppid"\x2C {\n  get () {\n    return Deno.ppid;\n  }\n});\n/** https://nodejs.org/api/process.html#process_process_platform */ Object.defineProperty(Process.prototype\x2C "platform"\x2C {\n  get () {\n    return platform;\n  }\n});\n// https://nodejs.org/api/process.html#processsetsourcemapsenabledval\nProcess.prototype.setSourceMapsEnabled = (_val)=>{\n// This is a no-op in Deno. Source maps are always enabled.\n// TODO(@satyarohith): support disabling source maps if needed.\n};\nProcess.prototype.addListener = function(event\x2C // deno-lint-ignore no-explicit-any\nlistener) {\n  if (notImplementedEvents.includes(event)) {\n    warnNotImplemented(`process.addListener("${event}")`);\n  }\n  return this.on(event\x2C listener);\n};\nProcess.prototype.removeListener = function(event\x2C listener) {\n  if (notImplementedEvents.includes(event)) {\n    warnNotImplemented(`process.removeListener("${event}")`);\n  }\n  return this.off(event\x2C listener);\n};\n/**\n * Returns the current high-resolution real time in a [seconds\x2C nanoseconds]\n * tuple.\n *\n * Note: You need to give --allow-hrtime permission to Deno to actually get\n * nanoseconds precision values. If you don't give 'hrtime' permission\x2C the returned\n * values only have milliseconds precision.\n *\n * `time` is an optional parameter that must be the result of a previous process.hrtime() call to diff with the current time.\n *\n * These times are relative to an arbitrary time in the past\x2C and not related to the time of day and therefore not subject to clock drift. The primary use is for measuring performance between intervals.\n * https://nodejs.org/api/process.html#process_process_hrtime_time\n */ Process.prototype.hrtime = hrtime;\n/**\n * @private\n *\n * NodeJS internal\x2C use process.kill instead\n */ Process.prototype._kill = _kill;\n/** https://nodejs.org/api/process.html#processkillpid-signal */ Process.prototype.kill = kill;\nProcess.prototype.memoryUsage = memoryUsage;\n/** https://nodejs.org/api/process.html#process_process_stderr */ Process.prototype.stderr = stderr;\n/** https://nodejs.org/api/process.html#process_process_stdin */ Process.prototype.stdin = stdin;\n/** https://nodejs.org/api/process.html#process_process_stdout */ Process.prototype.stdout = stdout;\n/** https://nodejs.org/api/process.html#process_process_version */ Process.prototype.version = version;\n/** https://nodejs.org/api/process.html#process_process_versions */ Process.prototype.versions = versions;\n/** https://nodejs.org/api/process.html#process_process_emitwarning_warning_options */ Process.prototype.emitWarning = emitWarning;\nProcess.prototype.binding = (name)=>{\n  return getBinding(name);\n};\n/** https://nodejs.org/api/process.html#processumaskmask */ Process.prototype.umask = ()=>{\n  // Always return the system default umask value.\n  // We don't use Deno.umask here because it has a race\n  // condition bug.\n  // See https://github.com/denoland/deno_std/issues/1893#issuecomment-1032897779\n  return 0o22;\n};\n/** This method is removed on Windows */ Process.prototype.getgid = getgid;\n/** This method is removed on Windows */ Process.prototype.getuid = getuid;\n/** This method is removed on Windows */ Process.prototype.getegid = getegid;\n/** This method is removed on Windows */ Process.prototype.geteuid = geteuid;\n// TODO(kt3k): Implement this when we added -e option to node compat mode\nProcess.prototype._eval = undefined;\n/** https://nodejs.org/api/process.html#processexecpath */ Object.defineProperty(Process.prototype\x2C "execPath"\x2C {\n  get () {\n    if (execPath) {\n      return execPath;\n    }\n    execPath = Deno.execPath();\n    return execPath;\n  }\x2C\n  set (path) {\n    execPath = path;\n  }\n});\n/** https://nodejs.org/api/process.html#processuptime */ Process.prototype.uptime = ()=>{\n  return Number((performance.now() / 1000).toFixed(9));\n};\n/** https://nodejs.org/api/process.html#processallowednodeenvironmentflags */ Object.defineProperty(Process.prototype\x2C "allowedNodeEnvironmentFlags"\x2C {\n  get () {\n    return ALLOWED_FLAGS;\n  }\n});\nProcess.prototype.features = {\n  inspector: false\n};\n// TODO(kt3k): Get the value from --no-deprecation flag.\nProcess.prototype.noDeprecation = false;\nif (isWindows) {\n  delete Process.prototype.getgid;\n  delete Process.prototype.getuid;\n  delete Process.prototype.getegid;\n  delete Process.prototype.geteuid;\n}\n/** https://nodejs.org/api/process.html#process_process */ // @ts-ignore TS doesn't work well with ES5 classes\nconst process = new Process();\n/* Set owned property */ process.versions = versions;\nObject.defineProperty(process\x2C Symbol.toStringTag\x2C {\n  enumerable: false\x2C\n  writable: true\x2C\n  configurable: false\x2C\n  value: "process"\n});\naddReadOnlyProcessAlias("noDeprecation"\x2C "--no-deprecation");\naddReadOnlyProcessAlias("throwDeprecation"\x2C "--throw-deprecation");\nexport const removeListener = process.removeListener;\nexport const removeAllListeners = process.removeAllListeners;\nlet unhandledRejectionListenerCount = 0;\nlet rejectionHandledListenerCount = 0;\nlet uncaughtExceptionListenerCount = 0;\nlet beforeExitListenerCount = 0;\nlet exitListenerCount = 0;\nprocess.on("newListener"\x2C (event)=>{\n  switch(event){\n    case "unhandledRejection":\n      unhandledRejectionListenerCount++;\n      break;\n    case "rejectionHandled":\n      rejectionHandledListenerCount++;\n      break;\n    case "uncaughtException":\n      uncaughtExceptionListenerCount++;\n      break;\n    case "beforeExit":\n      beforeExitListenerCount++;\n      break;\n    case "exit":\n      exitListenerCount++;\n      break;\n    default:\n      return;\n  }\n  synchronizeListeners();\n});\nprocess.on("removeListener"\x2C (event)=>{\n  switch(event){\n    case "unhandledRejection":\n      unhandledRejectionListenerCount--;\n      break;\n    case "rejectionHandled":\n      rejectionHandledListenerCount--;\n      break;\n    case "uncaughtException":\n      uncaughtExceptionListenerCount--;\n      break;\n    case "beforeExit":\n      beforeExitListenerCount--;\n      break;\n    case "exit":\n      exitListenerCount--;\n      break;\n    default:\n      return;\n  }\n  synchronizeListeners();\n});\nfunction processOnError(event) {\n  if (process.listenerCount("uncaughtException") > 0) {\n    event.preventDefault();\n  }\n  uncaughtExceptionHandler(event.error\x2C "uncaughtException");\n}\nfunction dispatchProcessBeforeExitEvent() {\n  process.emit("beforeExit"\x2C process.exitCode || 0);\n  processTicksAndRejections();\n  return core.eventLoopHasMoreWork();\n}\nfunction dispatchProcessExitEvent() {\n  if (!process._exiting) {\n    process._exiting = true;\n    process.emit("exit"\x2C process.exitCode || 0);\n  }\n}\nfunction synchronizeListeners() {\n  // Install special "unhandledrejection" handler\x2C that will be called\n  // last.\n  if (unhandledRejectionListenerCount > 0 || uncaughtExceptionListenerCount > 0) {\n    internals.nodeProcessUnhandledRejectionCallback = (event)=>{\n      if (process.listenerCount("unhandledRejection") === 0) {\n        // The Node.js default behavior is to raise an uncaught exception if\n        // an unhandled rejection occurs and there are no unhandledRejection\n        // listeners.\n        event.preventDefault();\n        uncaughtExceptionHandler(event.reason\x2C "unhandledRejection");\n        return;\n      }\n      event.preventDefault();\n      process.emit("unhandledRejection"\x2C event.reason\x2C event.promise);\n    };\n  } else {\n    internals.nodeProcessUnhandledRejectionCallback = undefined;\n  }\n  // Install special "handledrejection" handler\x2C that will be called\n  // last.\n  if (rejectionHandledListenerCount > 0) {\n    internals.nodeProcessRejectionHandledCallback = (event)=>{\n      process.emit("rejectionHandled"\x2C event.reason\x2C event.promise);\n    };\n  } else {\n    internals.nodeProcessRejectionHandledCallback = undefined;\n  }\n  if (uncaughtExceptionListenerCount > 0) {\n    globalThis.addEventListener("error"\x2C processOnError);\n  } else {\n    globalThis.removeEventListener("error"\x2C processOnError);\n  }\n}\n// Overwrites the 1st and 2nd items with getters.\nObject.defineProperty(argv\x2C "0"\x2C {\n  get: ()=>argv0\n});\nObject.defineProperty(argv\x2C "1"\x2C {\n  get: ()=>{\n    if (Deno.mainModule?.startsWith("file:")) {\n      return pathFromURL(new URL(Deno.mainModule));\n    } else {\n      return join(Deno.cwd()\x2C "$deno$node.js");\n    }\n  }\n});\ninternals.dispatchProcessBeforeExitEvent = dispatchProcessBeforeExitEvent;\ninternals.dispatchProcessExitEvent = dispatchProcessExitEvent;\n// Should be called only once\x2C in `runtime/js/99_main.js` when the runtime is\n// bootstrapped.\ninternals.__bootstrapNodeProcess = function(argv0Val\x2C args\x2C denoVersions\x2C nodeDebug\x2C warmup = false) {\n  if (!warmup) {\n    argv0 = argv0Val || "";\n    // Manually concatenate these arrays to avoid triggering the getter\n    for(let i = 0; i < args.length; i++){\n      argv[i + 2] = args[i];\n    }\n    for (const [key\x2C value] of Object.entries(denoVersions)){\n      versions[key] = value;\n    }\n    core.setNextTickCallback(processTicksAndRejections);\n    core.setMacrotaskCallback(runNextTicks);\n    enableNextTick();\n    // Replace stdin if it is not a terminal\n    const newStdin = initStdin();\n    if (newStdin) {\n      stdin = process.stdin = newStdin;\n    }\n    // Replace stdout/stderr if they are not terminals\n    if (!io.stdout.isTerminal()) {\n      /** https://nodejs.org/api/process.html#process_process_stdout */ stdout = process.stdout = createWritableStdioStream(io.stdout\x2C "stdout");\n    }\n    if (!io.stderr.isTerminal()) {\n      /** https://nodejs.org/api/process.html#process_process_stderr */ stderr = process.stderr = createWritableStdioStream(io.stderr\x2C "stderr");\n    }\n    arch = arch_();\n    platform = isWindows ? "win32" : Deno.build.os;\n    pid = Deno.pid;\n    initializeDebugEnv(nodeDebug);\n    delete internals.__bootstrapNodeProcess;\n  } else {\n    // Warmup\x2C assuming stdin/stdout/stderr are all terminals\n    stdin = process.stdin = initStdin(true);\n    /** https://nodejs.org/api/process.html#process_process_stdout */ stdout = process.stdout = createWritableStdioStream(io.stdout\x2C "stdout"\x2C true);\n    /** https://nodejs.org/api/process.html#process_process_stderr */ stderr = process.stderr = createWritableStdioStream(io.stderr\x2C "stderr"\x2C true);\n  }\n};\nexport default process;\n
code-source-info,0x2c3700155298,123,21522,21650,C0O21529C5O21537C16O21564C24O21537C30O21582C36O21582C39O21613C45O21625C50O21625C54O21648,,
code-creation,JS,9,22845743,0x2c3700155324,5,get node:process:318:7,0x2c37002a8f5c,~
code-source-info,0x2c3700155324,123,11636,11672,C0O11645C4O11668,,
code-creation,JS,9,22845806,0x2c37001553a4,253,processTicksAndRejections ext:deno_node/_next_tick.ts:14:42,0x2c37002d2eb8,~
code-source-info,0x2c37001553a4,167,650,2141,C0O661C2O728C7O736C12O736C17O728C24O975C29O1002C35O1034C40O1091C45O1119C80O1162C81O1175C85O1162C89O1195C91O1236C92O1249C98O1258C102O1236C107O1278C109O1319C110O1332C116O1341C122O1350C126O1319C131O1370C133O1411C134O1424C140O1433C146O1442C152O1451C156O1411C161O1471C163O1513C168O1513C198O1823C204O1828C209O1828C213O1987C218O1994C223O1994C229O669C233O2007C239O2012C246O2012C252O2140,,
code-creation,JS,9,22845847,0x2c3700155558,43,shift ext:deno_node/internal/fixed_queue.ts:107:8,0x2c370034672c,~
script-source,274,ext:deno_node/internal/fixed_queue.ts,// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.\n// Copyright Joyent\x2C Inc. and other Node contributors.\nimport { primordials } from "ext:core/mod.js";\nconst { ArrayFrom } = primordials;\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\nconst kSize = 2048;\nconst kMask = kSize - 1;\n// The FixedQueue is implemented as a singly-linked list of fixed-size\n// circular buffers. It looks something like this:\n//\n//  head                                                       tail\n//    |                                                          |\n//    v                                                          v\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\n// +-----------+               +-----------+                  +-----------+\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |                  |  [empty]  |\n// |   item    |               |   item    |       bottom --> |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |    ...    |               |    ...    |                  |    ...    |\n// |   item    |               |   item    |                  |   item    |\n// |   item    |               |   item    |                  |   item    |\n// |  [empty]  | <-- top       |   item    |                  |   item    |\n// |  [empty]  |               |   item    |                  |   item    |\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\n// +-----------+               +-----------+                  +-----------+\n//\n// Or\x2C if there is only one circular buffer\x2C it looks something\n// like either of these:\n//\n//  head   tail                                 head   tail\n//    |     |                                     |     |\n//    v     v                                     v     v\n// +-----------+                               +-----------+\n// |  [null]   |                               |  [null]   |\n// +-----------+                               +-----------+\n// |  [empty]  |                               |   item    |\n// |  [empty]  |                               |   item    |\n// |   item    | <-- bottom            top --> |  [empty]  |\n// |   item    |                               |  [empty]  |\n// |  [empty]  | <-- top            bottom --> |   item    |\n// |  [empty]  |                               |   item    |\n// +-----------+                               +-----------+\n//\n// Adding a value means moving `top` forward by one\x2C removing means\n// moving `bottom` forward by one. After reaching the end\x2C the queue\n// wraps around.\n//\n// When `top === bottom` the current queue is empty and when\n// `top + 1 === bottom` it's full. This wastes a single space of storage\n// but allows much quicker checks.\nclass FixedCircularBuffer {\n  bottom;\n  top;\n  list;\n  next;\n  constructor(){\n    this.bottom = 0;\n    this.top = 0;\n    this.list = ArrayFrom({\n      __proto__: null\x2C\n      length: kSize\n    });\n    this.next = null;\n  }\n  isEmpty() {\n    return this.top === this.bottom;\n  }\n  isFull() {\n    return (this.top + 1 & kMask) === this.bottom;\n  }\n  push(data) {\n    this.list[this.top] = data;\n    this.top = this.top + 1 & kMask;\n  }\n  shift() {\n    const nextItem = this.list[this.bottom];\n    if (nextItem === undefined) {\n      return null;\n    }\n    this.list[this.bottom] = undefined;\n    this.bottom = this.bottom + 1 & kMask;\n    return nextItem;\n  }\n}\nexport class FixedQueue {\n  head;\n  tail;\n  constructor(){\n    this.head = this.tail = new FixedCircularBuffer();\n  }\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n  push(data) {\n    if (this.head.isFull()) {\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\n      // and sets it as the new main queue.\n      this.head = this.head.next = new FixedCircularBuffer();\n    }\n    // deno-lint-ignore prefer-primordials -- `push` is a method of `FixedCircularBuffer`\n    this.head.push(data);\n  }\n  shift() {\n    const tail = this.tail;\n    // deno-lint-ignore prefer-primordials -- `shift` is a method of `FixedCircularBuffer`\n    const next = tail.shift();\n    if (tail.isEmpty() && tail.next !== null) {\n      // If there is another queue\x2C it forms the new tail.\n      this.tail = tail.next;\n    }\n    return next;\n  }\n}\n
code-source-info,0x2c3700155558,274,4280,4597,C0O4307C5O4426C10O4426C15O4448C20O4448C26O4466C32O4565C36O4558C40O4581C42O4593,,
code-creation,JS,9,22846030,0x2c37001555e0,54,shift ext:deno_node/internal/fixed_queue.ts:79:8,0x2c37003464c4,~
code-source-info,0x2c37001555e0,274,3529,3745,C0O3560C5O3570C9O3564C13O3583C15O3619C16O3631C17O3647C22O3657C28O3665C32O3701C36O3708C42O3714C44O3712C47O3694C51O3725C53O3741,,
tick,0x64950d022ec1,22846049,0,0x0,9
code-creation,JS,9,22846062,0x2c370015567c,13,isEmpty ext:deno_node/internal/fixed_queue.ts:69:10,0x2c3700346410,~
code-source-info,0x2c370015567c,274,3320,3365,C0O3341C5O3354C9O3345C12O3361,,
code-creation,JS,9,22846078,0x2c37001556d4,15,isEmpty ext:deno_node/internal/fixed_queue.ts:95:10,0x2c37003466b4,~
code-source-info,0x2c37001556d4,274,3875,3915,C0O3896C5O3901C10O3901C14O3911,,
code-creation,JS,9,22846094,0x2c3700155728,10,setHasTickScheduled ext:core/01_core.js:644:26,0x2c37001cafcc,~
code-source-info,0x2c3700155728,5,16862,16903,C0O16872C5O16872C9O16903,,
code-creation,JS,9,22846110,0x2c3700155778,9,eventLoopHasMoreWork ext:core/01_core.js:726:27,0x2c37001cc058,~
code-source-info,0x2c3700155778,5,20022,20057,C0O20028C5O20028C8O20057,,
code-creation,JS,9,22846129,0x2c37001557d4,32,dispatchUnloadEvent ext:runtime_main/js/99_main.js:531:29,0x2c37003541d4,~
code-source-info,0x2c37001557d4,305,15514,15570,C0O15521C5O15533C10O15551C19O15547C25O15533C31O15569,,
code-creation,JS,9,22846175,0x2c3700155850,49,dispatchProcessExitEvent node:process:590:34,0x2c37002a86d0,~
code-source-info,0x2c3700155850,123,21684,21799,C0O21691C5O21704C11O21720C15O21737C19O21749C22O21757C33O21778C41O21757C48O21798,,
tick,0x64950da9a069,22846221,0,0x0,3
profiler,end
delete,MemoryChunk,0x7d827002ca80
delete,MemoryChunk,0x7d827012dd30
delete,MemoryChunk,0x7d82700352d0
delete,MemoryChunk,0x7d8270086330
delete,MemoryChunk,0x7d827010dd00
delete,MemoryChunk,0x7d8270119e50
delete,MemoryChunk,0x7d8270131d30
delete,MemoryChunk,0x7d8270147fd0
delete,MemoryChunk,0x7d827013de80
delete,MemoryChunk,0x7d827015c280
delete,MemoryChunk,0x7d8270161970
delete,MemoryChunk,0x7d826800df00
delete,MemoryChunk,0x7d8270105cf0
delete,MemoryChunk,0x7d8270163ac0
delete,MemoryChunk,0x7d82700f4700
delete,MemoryChunk,0x7d827014e130
delete,MemoryChunk,0x7d827010fe50
delete,MemoryChunk,0x7d827011bfa0
delete,MemoryChunk,0x7d82680097c0
delete,MemoryChunk,0x7d81fc00cff0
delete,MemoryChunk,0x7d82700feb80
delete,MemoryChunk,0x7d8270143e80
delete,MemoryChunk,0x7d827002ebd0
delete,MemoryChunk,0x7d81fc00aea0
delete,MemoryChunk,0x2c3700000010
delete,MemoryChunk,0x2c3700040010
delete,MemoryChunk,0x2c3700080010
